import{_ as s,c as i,o as e,ag as t}from"./chunks/framework.NZEWNlnP.js";const c=JSON.parse('{"title":"Examples","description":"","frontmatter":{},"headers":[],"relativePath":"examples/index.md","filePath":"examples/index.md"}'),n={name:"examples/index.md"};function l(p,a,h,o,r,k){return e(),i("div",null,[...a[0]||(a[0]=[t(`<h1 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h1><p>This section provides practical examples of using Keep in real-world scenarios. These examples will help you understand how to integrate Keep into your workflow and get the most out of its features.</p><h2 id="available-examples" tabindex="-1">Available Examples <a class="header-anchor" href="#available-examples" aria-label="Permalink to &quot;Available Examples&quot;">​</a></h2><h3 id="laravel-integration" tabindex="-1"><a href="./laravel.html">Laravel Integration</a> <a class="header-anchor" href="#laravel-integration" aria-label="Permalink to &quot;[Laravel Integration](./laravel)&quot;">​</a></h3><p>Learn how to integrate Keep with your Laravel applications, including:</p><ul><li>Service provider setup</li><li>Helper function usage</li><li>Caching strategies</li><li>Development workflow</li></ul><h3 id="ci-cd-workflows" tabindex="-1"><a href="./ci-cd.html">CI/CD Workflows</a> <a class="header-anchor" href="#ci-cd-workflows" aria-label="Permalink to &quot;[CI/CD Workflows](./ci-cd)&quot;">​</a></h3><p>Examples of using Keep in continuous integration and deployment:</p><ul><li>GitHub Actions integration</li><li>Automated secret deployment</li><li>Environment promotion strategies</li><li>Security best practices</li></ul><h3 id="multi-environment-setup" tabindex="-1"><a href="./multi-environment.html">Multi-Environment Setup</a> <a class="header-anchor" href="#multi-environment-setup" aria-label="Permalink to &quot;[Multi-Environment Setup](./multi-environment)&quot;">​</a></h3><p>Best practices for organizing secrets across multiple environments:</p><ul><li>Stage organization strategies</li><li>Vault selection guidelines</li><li>Secret promotion workflows</li><li>Team access patterns</li></ul><h3 id="aws-setup" tabindex="-1"><a href="./aws-setup.html">AWS Setup</a> <a class="header-anchor" href="#aws-setup" aria-label="Permalink to &quot;[AWS Setup](./aws-setup)&quot;">​</a></h3><p>Complete guide to setting up Keep with AWS services:</p><ul><li>IAM roles and permissions</li><li>SSM Parameter Store configuration</li><li>Secrets Manager setup</li><li>Cross-account access patterns</li></ul><h2 id="common-workflows" tabindex="-1">Common Workflows <a class="header-anchor" href="#common-workflows" aria-label="Permalink to &quot;Common Workflows&quot;">​</a></h2><h3 id="development-to-production-flow" tabindex="-1">Development to Production Flow <a class="header-anchor" href="#development-to-production-flow" aria-label="Permalink to &quot;Development to Production Flow&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. Set up local development</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">keep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> configure</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">keep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vault:add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> local</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myapp</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">keep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myapp:development</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> API_KEY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;dev-key-123&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. Set up staging environment  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">keep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vault:add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aws-ssm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> staging-vault</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">keep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> copy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myapp:development</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> staging-vault:staging</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> API_KEY</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3. Promote to production</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">keep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vault:add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aws-secrets</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> prod-vault</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">keep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> copy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> staging-vault:staging</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> prod-vault:production</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> API_KEY</span></span></code></pre></div><h3 id="template-based-configuration" tabindex="-1">Template-Based Configuration <a class="header-anchor" href="#template-based-configuration" aria-label="Permalink to &quot;Template-Based Configuration&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Create template file</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;API_KEY={myapp:API_KEY}&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.env.template</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Generate configuration</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">keep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> template:validate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.env.template</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myapp:production</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">keep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> template:merge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.env.template</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myapp:production</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.env</span></span></code></pre></div><p>Each example includes complete code samples, configuration files, and step-by-step instructions to help you implement similar patterns in your own projects.</p>`,21)])])}const F=s(n,[["render",l]]);export{c as __pageData,F as default};
