{"version":3,"file":"app.D57B9jj6.js","sources":["../../frontend/src/components/Toast.vue","../../frontend/src/components/ToastContainer.vue","../../frontend/src/composables/useKeyboardShortcuts.js","../../frontend/src/App.vue","../../frontend/src/components/VaultStageSelector.vue","../../frontend/src/components/ui/Tooltip.vue","../../frontend/src/components/SecretValue.vue","../../frontend/src/services/api.js","../../frontend/src/composables/useSecrets.js","../../frontend/src/components/SecretDialog.vue","../../frontend/src/components/RenameDialog.vue","../../frontend/src/components/CopyToStageDialog.vue","../../frontend/src/components/HistoryDialog.vue","../../frontend/src/components/DeleteConfirmDialog.vue","../../frontend/src/components/ImportWizard.vue","../../frontend/src/components/ExportModal.vue","../../frontend/src/components/TableActionsMenu.vue","../../frontend/src/composables/useVault.js","../../frontend/src/components/SecretsTable.vue","../../frontend/src/components/SecretActionsMenu.vue","../../frontend/src/components/DiffView.vue","../../frontend/src/components/DeleteConfirmationModal.vue","../../frontend/src/components/SettingsView.vue","../../frontend/src/components/CreateTemplateModal.vue","../../frontend/node_modules/@marijn/find-cluster-break/src/index.js","../../frontend/node_modules/@codemirror/state/dist/index.js","../../frontend/node_modules/style-mod/src/style-mod.js","../../frontend/node_modules/w3c-keyname/index.js","../../frontend/node_modules/crelt/index.js","../../frontend/node_modules/@codemirror/view/dist/index.js","../../frontend/node_modules/@lezer/common/dist/index.js","../../frontend/node_modules/@lezer/highlight/dist/index.js","../../frontend/node_modules/@codemirror/language/dist/index.js","../../frontend/node_modules/@codemirror/autocomplete/dist/index.js","../../frontend/node_modules/@codemirror/commands/dist/index.js","../../frontend/node_modules/@codemirror/search/node_modules/@codemirror/state/dist/index.js","../../frontend/node_modules/@codemirror/search/node_modules/@codemirror/view/dist/index.js","../../frontend/node_modules/@codemirror/search/dist/index.js","../../frontend/src/components/TemplateCodeEditor.vue","../../frontend/src/components/TemplateEditorModal.vue","../../frontend/src/components/TemplateTesterModal.vue","../../frontend/src/components/TemplateProcessorModal.vue","../../frontend/src/components/TemplatesView.vue","../../frontend/src/router.js","../../frontend/src/main.js"],"sourcesContent":["<template>\n  <div\n    :class=\"[\n      'pointer-events-auto relative flex w-full items-center justify-between rounded-lg border p-4 shadow-lg transition-all',\n      variantClasses\n    ]\"\n  >\n    <div class=\"flex items-start space-x-3\">\n      <div v-if=\"icon\" class=\"flex-shrink-0 mt-0.5\">\n        <component :is=\"icon\" class=\"h-5 w-5\" />\n      </div>\n      <div class=\"flex-1\">\n        <div v-if=\"toast.title\" class=\"font-semibold text-sm\">\n          {{ toast.title }}\n        </div>\n        <div v-if=\"toast.description\" class=\"text-sm mt-1 opacity-90\">\n          {{ toast.description }}\n        </div>\n      </div>\n    </div>\n    <button\n      @click=\"$emit('dismiss', toast.id)\"\n      class=\"flex-shrink-0 ml-4 inline-flex rounded-md p-1.5 focus:outline-none focus:ring-2 focus:ring-offset-2 transition-colors hover:bg-accent\"\n    >\n      <svg class=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n      </svg>\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue'\n\nconst props = defineProps({\n  toast: {\n    type: Object,\n    required: true\n  }\n})\n\ndefineEmits(['dismiss'])\n\nconst variantClasses = computed(() => {\n  const variants = {\n    default: 'bg-card border-border text-card-foreground',\n    success: 'bg-green-950 border-green-900 text-green-100',\n    destructive: 'bg-red-950 border-red-900 text-red-100',\n  }\n  return variants[props.toast.variant] || variants.default\n})\n\nconst icon = computed(() => {\n  if (props.toast.variant === 'success') {\n    return {\n      template: `\n        <svg class=\"text-green-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n        </svg>\n      `\n    }\n  }\n  if (props.toast.variant === 'destructive') {\n    return {\n      template: `\n        <svg class=\"text-red-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n        </svg>\n      `\n    }\n  }\n  return null\n})\n</script>","<template>\n  <div class=\"fixed bottom-0 right-0 z-50 p-4 space-y-4 max-w-md w-full pointer-events-none\">\n    <TransitionGroup name=\"toast\" tag=\"div\">\n      <Toast\n        v-for=\"toast in toasts\"\n        :key=\"toast.id\"\n        :toast=\"toast\"\n        @dismiss=\"dismiss\"\n      />\n    </TransitionGroup>\n  </div>\n</template>\n\n<script setup>\nimport { useToast } from '../composables/useToast'\nimport Toast from './Toast.vue'\n\nconst { toasts, dismiss } = useToast()\n</script>\n\n<style scoped>\n.toast-enter-active,\n.toast-leave-active {\n  transition: all 0.3s ease;\n}\n\n.toast-enter-from {\n  transform: translateX(100%);\n  opacity: 0;\n}\n\n.toast-leave-to {\n  transform: translateX(100%);\n  opacity: 0;\n}\n\n.toast-move {\n  transition: transform 0.3s ease;\n}\n</style>","import { onMounted, onUnmounted, ref } from 'vue'\n\n// Global registry for keyboard shortcut handlers\nconst handlers = ref({\n  search: null,\n  closeModal: [],\n  toggleMask: null\n})\n\nexport function useKeyboardShortcuts() {\n  // Register handlers\n  function registerSearchHandler(handler) {\n    handlers.value.search = handler\n  }\n  \n  function registerModalCloseHandler(handler) {\n    handlers.value.closeModal.push(handler)\n    \n    // Return cleanup function\n    return () => {\n      const index = handlers.value.closeModal.indexOf(handler)\n      if (index > -1) {\n        handlers.value.closeModal.splice(index, 1)\n      }\n    }\n  }\n  \n  function registerMaskToggleHandler(handler) {\n    handlers.value.toggleMask = handler\n  }\n  \n  // Global keyboard event handler\n  function handleKeydown(event) {\n    // Check if target is inside a CodeMirror editor\n    const isInCodeMirror = event.target.closest('.cm-editor')\n    \n    // Don't trigger shortcuts when typing in inputs, textareas, or CodeMirror\n    if (event.target.tagName === 'INPUT' || \n        event.target.tagName === 'TEXTAREA' || \n        event.target.tagName === 'SELECT' ||\n        isInCodeMirror) {\n      \n      // ESC should still work to close modals even when in an input or CodeMirror\n      if (event.key === 'Escape') {\n        event.preventDefault()\n        // Call all registered modal close handlers\n        handlers.value.closeModal.forEach(handler => handler())\n      }\n      return\n    }\n    \n    // '/' to focus search\n    if (event.key === '/' && !event.metaKey && !event.ctrlKey) {\n      event.preventDefault()\n      if (handlers.value.search) {\n        handlers.value.search()\n      }\n    }\n    \n    // 'ESC' to close modals\n    if (event.key === 'Escape') {\n      event.preventDefault()\n      // Call all registered modal close handlers\n      handlers.value.closeModal.forEach(handler => handler())\n    }\n    \n    // 'm' to toggle mask/unmask\n    if (event.key === 'm' && !event.metaKey && !event.ctrlKey) {\n      event.preventDefault()\n      if (handlers.value.toggleMask) {\n        handlers.value.toggleMask()\n      }\n    }\n  }\n  \n  // Set up global listener (only once)\n  let isListenerSetup = false\n  \n  function setupGlobalListener() {\n    if (!isListenerSetup) {\n      document.addEventListener('keydown', handleKeydown)\n      isListenerSetup = true\n    }\n  }\n  \n  function teardownGlobalListener() {\n    if (isListenerSetup) {\n      document.removeEventListener('keydown', handleKeydown)\n      isListenerSetup = false\n    }\n  }\n  \n  return {\n    registerSearchHandler,\n    registerModalCloseHandler,\n    registerMaskToggleHandler,\n    setupGlobalListener,\n    teardownGlobalListener\n  }\n}","<template>\n  <div class=\"min-h-screen bg-background text-foreground\">\n    <!-- Toast Notifications -->\n    <ToastContainer />\n    \n    <!-- Navigation Bar -->\n    <nav class=\"border-b border-border\">\n      <div class=\"max-w-full px-4 sm:px-6 lg:px-8\">\n        <div class=\"flex items-center justify-between h-16\">\n          <!-- Logo & Title -->\n          <div class=\"flex items-center w-1/3\">\n<!--            <svg class=\"w-8 h-8 mr-3 text-primary\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">-->\n<!--              <rect x=\"3\" y=\"11\" width=\"18\" height=\"10\" rx=\"2\" ry=\"2\"/>-->\n<!--              <path d=\"M7 11V7a5 5 0 0110 0v4\"/>-->\n<!--            </svg>-->\n            <div class=\"size-9 pl-3 pr-2 rounded bg-muted mr-3 flex items-center justify-center text-primary\">\n              <svg fill=\"none\" height=\"100%\" viewBox=\"0 0 59 70\" width=\"59\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m58.4476 69.14c-10.35 0-23.67-12.33-31.41-22.05-5.13-6.39-7.11-8.91-9.45-11.7l-4.32 4.32v25.29h-12.599982v-64.620005h12.599982v32.580005l31.5-32.580005h7.2l-24.21 24.570005z\" fill=\"currentColor\"/></svg>\n            </div>\n            <span class=\"text-xl font-semibold opacity-75\">{{ appName }} Secrets</span>\n          </div>\n\n          <!-- Pill Navigation -->\n          <div class=\"flex items-center space-x-2 bg-muted rounded-full p-1\">\n            <router-link\n              v-for=\"tab in tabs\"\n              :key=\"tab.id\"\n              :to=\"tab.path\"\n              v-slot=\"{ isActive }\"\n              custom\n            >\n              <button\n                @click=\"$router.push(tab.path)\"\n                :class=\"[\n                  'px-4 py-1.5 rounded-full text-sm font-medium transition-colors',\n                  isActive\n                    ? 'bg-background text-foreground shadow-sm'\n                    : 'text-muted-foreground hover:text-foreground'\n                ]\"\n              >\n                {{ tab.label }}\n              </button>\n            </router-link>\n          </div>\n          <div class=\"w-1/3 text-right\">\n            <a href=\"https://github.com/stechstudio/keep\" target=\"_blank\" class=\"text-white/50 hover:text-white\">Keep v{{ keepVersion }}</a>\n          </div>\n        </div>\n      </div>\n    </nav>\n\n    <!-- Main Content -->\n    <main class=\"max-w-full px-4 sm:px-6 lg:px-8 py-6\">\n      <router-view />\n    </main>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted } from 'vue'\nimport ToastContainer from './components/ToastContainer.vue'\nimport logoUrl from './assets/logo.svg'\nimport { useKeyboardShortcuts } from './composables/useKeyboardShortcuts'\n\nconst tabs = [\n  { id: 'secrets', label: 'Secrets', path: '/secrets' },\n  { id: 'diff', label: 'Compare', path: '/diff' },\n  { id: 'templates', label: 'Templates', path: '/templates' },\n  { id: 'settings', label: 'Settings', path: '/settings' }\n]\n\nconst appName = ref('Keep')\nconst keepVersion = ref('')\n\n// Set up global keyboard shortcuts\nconst { setupGlobalListener, teardownGlobalListener } = useKeyboardShortcuts()\n\nonMounted(async () => {\n  setupGlobalListener()\n  await loadSettings()\n})\n\nonUnmounted(() => {\n  teardownGlobalListener()\n})\n\nasync function loadSettings() {\n  try {\n    const settings = await window.$api.getSettings()\n    appName.value = settings.app_name || 'Keep'\n    keepVersion.value = settings.keep_version || ''\n  } catch (error) {\n    console.error('Failed to load settings:', error)\n  }\n}\n</script>","<template>\n  <div class=\"flex items-center space-x-3\">\n    <!-- Vault Selector - only show if more than one vault -->\n    <div v-if=\"vaults && vaults.length > 1\" class=\"relative\">\n      <button\n        @click=\"vaultOpen = !vaultOpen\"\n        class=\"flex items-center space-x-2 px-3 pl-0 py-1.5 transition-colors\"\n      >\n        <span>{{ vaultDisplay || 'Select Vault' }}</span>\n        <svg class=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\" />\n        </svg>\n      </button>\n      \n      <div v-if=\"vaultOpen\" class=\"absolute top-full mt-1 bg-popover border border-border rounded-md shadow-lg z-10\">\n        <div class=\"py-1\">\n          <button\n            v-for=\"v in vaults\"\n            :key=\"v.slug || v.name || v\"\n            @click=\"selectVault(v.slug || v.name || v)\"\n            :class=\"[\n              'w-full text-left px-3 py-2 text-sm hover:bg-accent transition-colors whitespace-nowrap',\n              vault === (v.slug || v.name || v) ? 'bg-white/10' : ''\n            ]\"\n          >\n            {{ v.display || v }}\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div v-if=\"vaults && vaults.length > 1\" class=\"text-lg text-white/30 font-bold pr-3\">/</div>\n\n    <!-- Stage Selector -->\n    <div class=\"relative\">\n      <button\n        @click=\"stageOpen = !stageOpen\"\n        class=\"flex items-center space-x-2 px-3 pl-0 py-1.5 transition-colors\"\n      >\n        <span>{{ stage || 'Select Stage' }}</span>\n        <svg class=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\" />\n        </svg>\n      </button>\n      \n      <div v-if=\"stageOpen\" class=\"absolute top-full mt-1 w-48 bg-popover border border-border rounded-md shadow-lg z-10\">\n        <div class=\"py-1\">\n          <button\n            v-for=\"s in stages\"\n            :key=\"s\"\n            @click=\"selectStage(s)\"\n            :class=\"[\n              'w-full text-left px-3 py-2 text-sm hover:bg-accent transition-colors',\n              stage === s ? 'bg-white/10' : ''\n            ]\"\n          >\n            {{ s }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue'\n\nconst props = defineProps({\n  vault: String,\n  stage: String,\n  vaults: Array,\n  stages: Array\n})\n\nconst emit = defineEmits(['update:vault', 'update:stage'])\n\nconst vaultOpen = ref(false)\nconst stageOpen = ref(false)\n\n// Get display name for selected vault\nconst vaultDisplay = computed(() => {\n  if (!props.vault) return ''\n  const vaultObj = props.vaults?.find(v => \n    (typeof v === 'object' ? (v.slug || v.name) : v) === props.vault\n  )\n  return vaultObj?.display || props.vault\n})\n\nfunction selectVault(v) {\n  emit('update:vault', v)\n  vaultOpen.value = false\n}\n\nfunction selectStage(s) {\n  emit('update:stage', s)\n  stageOpen.value = false\n}\n\n// Close dropdowns when clicking outside\ndocument.addEventListener('click', (e) => {\n  if (!e.target.closest('.relative')) {\n    vaultOpen.value = false\n    stageOpen.value = false\n  }\n})\n</script>","<template>\n  <div class=\"relative inline-block\">\n    <div\n      @mouseenter=\"showTooltip\"\n      @mouseleave=\"hideTooltip\"\n      @focus=\"showTooltip\"\n      @blur=\"hideTooltip\"\n    >\n      <slot />\n    </div>\n    \n    <Teleport to=\"body\">\n      <Transition\n        enter-active-class=\"transition-opacity duration-150\"\n        enter-from-class=\"opacity-0\"\n        enter-to-class=\"opacity-100\"\n        leave-active-class=\"transition-opacity duration-150\"\n        leave-from-class=\"opacity-100\"\n        leave-to-class=\"opacity-0\"\n      >\n        <div\n          v-if=\"isVisible\"\n          ref=\"tooltipRef\"\n          :style=\"tooltipStyle\"\n          class=\"absolute z-50 px-2 py-1 text-xs font-medium text-popover-foreground bg-popover border border-border rounded-md shadow-md pointer-events-none whitespace-nowrap\"\n        >\n          {{ content }}\n          <div\n            class=\"absolute w-2 h-2 bg-popover border-b border-r border-border transform rotate-45\"\n            :class=\"arrowClass\"\n          />\n        </div>\n      </Transition>\n    </Teleport>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, nextTick } from 'vue'\n\nconst props = defineProps({\n  content: {\n    type: String,\n    required: true\n  },\n  delayDuration: {\n    type: Number,\n    default: 200\n  },\n  side: {\n    type: String,\n    default: 'top',\n    validator: (value) => ['top', 'bottom', 'left', 'right'].includes(value)\n  },\n  sideOffset: {\n    type: Number,\n    default: 8\n  }\n})\n\nconst isVisible = ref(false)\nconst tooltipRef = ref(null)\nconst tooltipStyle = ref({})\nconst triggerElement = ref(null)\nlet showTimeout = null\nlet hideTimeout = null\n\nconst arrowClass = computed(() => {\n  const classes = {\n    top: 'bottom-[-5px] left-1/2 -translate-x-1/2',\n    bottom: 'top-[-5px] left-1/2 -translate-x-1/2 rotate-180',\n    left: 'right-[-5px] top-1/2 -translate-y-1/2 -rotate-45',\n    right: 'left-[-5px] top-1/2 -translate-y-1/2 rotate-[135deg]'\n  }\n  return classes[props.side] || classes.top\n})\n\nfunction showTooltip(event) {\n  clearTimeout(hideTimeout)\n  triggerElement.value = event.currentTarget\n  \n  showTimeout = setTimeout(async () => {\n    isVisible.value = true\n    await nextTick()\n    positionTooltip()\n  }, props.delayDuration)\n}\n\nfunction hideTooltip() {\n  clearTimeout(showTimeout)\n  hideTimeout = setTimeout(() => {\n    isVisible.value = false\n  }, 100)\n}\n\nfunction positionTooltip() {\n  if (!tooltipRef.value || !triggerElement.value) return\n  \n  const trigger = triggerElement.value.getBoundingClientRect()\n  const tooltip = tooltipRef.value.getBoundingClientRect()\n  \n  let top = 0\n  let left = 0\n  \n  switch (props.side) {\n    case 'top':\n      top = trigger.top - tooltip.height - props.sideOffset\n      left = trigger.left + (trigger.width - tooltip.width) / 2\n      break\n    case 'bottom':\n      top = trigger.bottom + props.sideOffset\n      left = trigger.left + (trigger.width - tooltip.width) / 2\n      break\n    case 'left':\n      top = trigger.top + (trigger.height - tooltip.height) / 2\n      left = trigger.left - tooltip.width - props.sideOffset\n      break\n    case 'right':\n      top = trigger.top + (trigger.height - tooltip.height) / 2\n      left = trigger.right + props.sideOffset\n      break\n  }\n  \n  // Ensure tooltip stays within viewport\n  const margin = 8\n  left = Math.max(margin, Math.min(left, window.innerWidth - tooltip.width - margin))\n  top = Math.max(margin, Math.min(top, window.innerHeight - tooltip.height - margin))\n  \n  tooltipStyle.value = {\n    top: `${top}px`,\n    left: `${left}px`\n  }\n}\n</script>","<template>\n  <div class=\"flex items-center space-x-2\">\n    <div class=\"flex items-center opacity-30 group-hover:opacity-100 transition-opacity\">\n      <Tooltip :content=\"masked ? 'Show value' : 'Hide value'\" :delay-duration=\"200\">\n        <button\n            @click=\"$emit('toggle')\"\n            class=\"p-1.5 text-muted-foreground hover:text-foreground hover:bg-muted rounded transition-colors\"\n            :title=\"masked ? 'Show value' : 'Hide value'\"\n        >\n          <svg v-if=\"masked\" class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"/>\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                  d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"/>\n          </svg>\n          <svg v-else class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                  d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\"/>\n          </svg>\n        </button>\n      </Tooltip>\n\n      <Tooltip content=\"Copy Value\" :delay-duration=\"200\">\n        <button\n            @click=\"handleCopyValue({ key: secret.key, value: secret.value, vault, stage })\"\n            class=\"p-1.5 text-muted-foreground hover:text-foreground hover:bg-muted rounded transition-colors\"\n        >\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                  d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"></path>\n          </svg>\n        </button>\n      </Tooltip>\n    </div>\n\n    <div class=\"font-mono text-sm break-all\">\n      {{ displayValue }}\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport {computed} from 'vue'\nimport {maskValue} from '../utils/formatters'\nimport Tooltip from \"@/components/ui/Tooltip.vue\";\nimport {useToast} from '../composables/useToast'\n\nconst toast = useToast()\n\nconst props = defineProps({\n  secret: {\n    type: Object,\n    required: true\n  },\n  value: String,\n  masked: {\n    type: Boolean,\n    default: true\n  }\n})\n\ndefineEmits(['toggle'])\n\nconst displayValue = computed(() => {\n  if (!props.masked) return props.value\n  return maskValue(props.value)\n})\n\nfunction handleCopyValue(data) {\n  if (data.value) {\n    navigator.clipboard.writeText(data.value)\n    toast.success('Copied to clipboard', 'Secret value has been copied to your clipboard')\n  }\n}\n</script>","// API client for Keep server\nclass ApiClient {\n  constructor() {\n    this.baseUrl = ''\n    this.token = window.KEEP_AUTH_TOKEN\n  }\n\n  async request(path, options = {}) {\n    const response = await fetch(`${this.baseUrl}/api${path}`, {\n      ...options,\n      headers: {\n        'X-Auth-Token': this.token,\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n    })\n\n    if (!response.ok) {\n      const error = await response.json().catch(() => ({ error: 'Request failed' }))\n      throw new Error(error.error || `HTTP ${response.status}`)\n    }\n\n    return response.json()\n  }\n\n  // Generic HTTP methods for flexibility\n  async get(path) {\n    return this.request(path)\n  }\n\n  async post(path, body = {}) {\n    return this.request(path, {\n      method: 'POST',\n      body: JSON.stringify(body)\n    })\n  }\n\n  async put(path, body = {}) {\n    return this.request(path, {\n      method: 'PUT', \n      body: JSON.stringify(body)\n    })\n  }\n\n  async delete(path) {\n    return this.request(path, {\n      method: 'DELETE'\n    })\n  }\n\n  // Secrets\n  async listSecrets(vault, stage, unmask = false) {\n    return this.request(`/secrets?vault=${vault}&stage=${stage}&unmask=${unmask}`)\n  }\n\n  async getSecret(key, vault, stage, unmask = false) {\n    return this.request(`/secrets/${encodeURIComponent(key)}?vault=${vault}&stage=${stage}&unmask=${unmask}`)\n  }\n\n  async createSecret(key, value, vault, stage) {\n    return this.request('/secrets', {\n      method: 'POST',\n      body: JSON.stringify({ key, value, vault, stage })\n    })\n  }\n\n  async updateSecret(key, value, vault, stage) {\n    return this.request(`/secrets/${encodeURIComponent(key)}`, {\n      method: 'PUT',\n      body: JSON.stringify({ value, vault, stage })\n    })\n  }\n\n  async deleteSecret(key, vault, stage) {\n    return this.request(`/secrets/${encodeURIComponent(key)}`, {\n      method: 'DELETE',\n      body: JSON.stringify({ vault, stage })\n    })\n  }\n\n  async renameSecret(oldKey, newKey, vault, stage) {\n    return this.request(`/secrets/${encodeURIComponent(oldKey)}/rename`, {\n      method: 'POST',\n      body: JSON.stringify({ newKey, vault, stage })\n    })\n  }\n\n  async copySecretToStage(key, targetStage, targetVault, sourceStage, sourceVault) {\n    return this.request(`/secrets/${encodeURIComponent(key)}/copy-to-stage?vault=${sourceVault}&stage=${sourceStage}`, {\n      method: 'POST',\n      body: JSON.stringify({ targetStage, targetVault })\n    })\n  }\n\n  async searchSecrets(query, vault, stage, unmask = false) {\n    return this.request(`/search?q=${encodeURIComponent(query)}&vault=${vault}&stage=${stage}&unmask=${unmask}`)\n  }\n\n  async getSecretHistory(key, vault, stage, limit = 10, unmask = false) {\n    return this.request(`/secrets/${encodeURIComponent(key)}/history?vault=${vault}&stage=${stage}&limit=${limit}&unmask=${unmask}`)\n  }\n\n  // Settings & Config\n  async getSettings() {\n    return this.request('/settings')\n  }\n\n  async updateSettings(settings) {\n    return this.request('/settings', {\n      method: 'PUT',\n      body: JSON.stringify(settings)\n    })\n  }\n\n  // Vaults & Stages\n  async listVaults() {\n    return this.request('/vaults')\n  }\n\n  async addVault(vault) {\n    return this.request('/vaults', {\n      method: 'POST',\n      body: JSON.stringify(vault)\n    })\n  }\n\n  async updateVault(slug, vault) {\n    return this.request(`/vaults/${slug}`, {\n      method: 'PUT',\n      body: JSON.stringify(vault)\n    })\n  }\n\n  async deleteVault(slug) {\n    return this.request(`/vaults/${slug}`, {\n      method: 'DELETE'\n    })\n  }\n\n  async listStages() {\n    return this.request('/stages')\n  }\n\n  async addStage(stage) {\n    return this.request('/stages', {\n      method: 'POST',\n      body: JSON.stringify({ stage })\n    })\n  }\n\n  async removeStage(stage) {\n    return this.request('/stages', {\n      method: 'DELETE',\n      body: JSON.stringify({ stage })\n    })\n  }\n\n  async verifyVaults() {\n    return this.request('/verify', { method: 'POST' })\n  }\n\n  // Diff & Export\n  async getDiff(stages = null, vaults = null) {\n    let query = '/diff?'\n    if (stages) query += `stages=${stages.join(',')}&`\n    if (vaults) query += `vaults=${vaults.join(',')}`\n    return this.request(query)\n  }\n\n  async exportSecrets(vault, stage, format = 'env') {\n    return this.request('/export', {\n      method: 'POST',\n      body: JSON.stringify({ vault, stage, format })\n    })\n  }\n\n  // Import\n  async analyzeImport({ content, vault, stage, only = null, except = null }) {\n    return this.request('/import/analyze', {\n      method: 'POST',\n      body: JSON.stringify({ content, vault, stage, only, except })\n    })\n  }\n\n  async executeImport({ content, vault, stage, strategy, only = null, except = null, dry_run = false }) {\n    return this.request('/import/execute', {\n      method: 'POST',\n      body: JSON.stringify({ content, vault, stage, strategy, only, except, dry_run })\n    })\n  }\n\n  // Workspace\n  async getWorkspace() {\n    return this.request('/workspace')\n  }\n\n  async updateWorkspace(activeVaults, activeStages) {\n    return this.request('/workspace', {\n      method: 'PUT',\n      body: JSON.stringify({ \n        active_vaults: activeVaults, \n        active_stages: activeStages \n      })\n    })\n  }\n\n  async verifyWorkspace() {\n    return this.request('/workspace/verify', { method: 'POST' })\n  }\n}\n\nexport const api = new ApiClient()","import { ref } from 'vue'\nimport { api } from '../services/api'\n\nexport function useSecrets() {\n  const secrets = ref([])\n  const loading = ref(false)\n  const error = ref(null)\n\n  async function loadSecrets(vault, stage, unmask = false) {\n    loading.value = true\n    error.value = null\n    try {\n      const response = await api.listSecrets(vault, stage, unmask)\n      secrets.value = response.secrets\n      return secrets.value\n    } catch (err) {\n      error.value = err.message\n      secrets.value = []\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  async function createSecret(key, value, vault, stage) {\n    loading.value = true\n    error.value = null\n    try {\n      const response = await api.createSecret(key, value, vault, stage)\n      // Don't call loadSecrets here - let the component handle refresh\n      return response\n    } catch (err) {\n      error.value = err.message\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  async function updateSecret(key, value, vault, stage) {\n    loading.value = true\n    error.value = null\n    try {\n      const response = await api.updateSecret(key, value, vault, stage)\n      // Don't call loadSecrets here - let the component handle refresh\n      return response\n    } catch (err) {\n      error.value = err.message\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  async function deleteSecret(key, vault, stage) {\n    loading.value = true\n    error.value = null\n    try {\n      const response = await api.deleteSecret(key, vault, stage)\n      // Don't call loadSecrets here - let the component handle refresh\n      return response\n    } catch (err) {\n      error.value = err.message\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  async function renameSecret(oldKey, newKey, vault, stage) {\n    loading.value = true\n    error.value = null\n    try {\n      const response = await api.renameSecret(oldKey, newKey, vault, stage)\n      // Don't call loadSecrets here - let the component handle refresh\n      return response\n    } catch (err) {\n      error.value = err.message\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  async function copySecretToStage(key, targetStage, targetVault, sourceStage, sourceVault) {\n    loading.value = true\n    error.value = null\n    try {\n      const response = await api.copySecretToStage(\n        key, targetStage, targetVault, sourceStage, sourceVault\n      )\n      return response\n    } catch (err) {\n      error.value = err.message\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  async function searchSecrets(query, vault, stage, unmask = false) {\n    loading.value = true\n    error.value = null\n    try {\n      const response = await api.searchSecrets(query, vault, stage, unmask)\n      secrets.value = response.secrets\n      return secrets.value\n    } catch (err) {\n      error.value = err.message\n      secrets.value = []\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  async function getSecretHistory(key, vault, stage, limit = 10, unmask = false) {\n    loading.value = true\n    error.value = null\n    try {\n      return await api.getSecretHistory(key, vault, stage, limit, unmask)\n    } catch (err) {\n      error.value = err.message\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  function clearError() {\n    error.value = null\n  }\n\n  return {\n    secrets,\n    loading,\n    error,\n    loadSecrets,\n    createSecret,\n    updateSecret,\n    deleteSecret,\n    renameSecret,\n    copySecretToStage,\n    searchSecrets,\n    getSecretHistory,\n    clearError\n  }\n}","<template>\n  <div class=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\" @click.self=\"$emit('close')\">\n    <div class=\"bg-card border border-border rounded-lg p-6 w-full max-w-md\">\n      <h2 class=\"text-lg font-semibold mb-4\">\n        {{ secret ? 'Edit Secret' : 'Add Secret' }}\n      </h2>\n      \n      <form @submit.prevent=\"save\">\n        <div class=\"space-y-4\">\n          <div>\n            <label class=\"block text-sm font-medium mb-1\">Key</label>\n            <input\n              v-model=\"form.key\"\n              type=\"text\"\n              :disabled=\"!!secret\"\n              :class=\"[\n                'w-full px-3 py-2 bg-input border rounded-md text-sm focus:outline-none focus:ring-2 disabled:opacity-50 disabled:cursor-not-allowed',\n                keyError ? 'border-red-500 focus:ring-red-500' : 'border-border focus:ring-ring'\n              ]\"\n              placeholder=\"SECRET_KEY\"\n              required\n            />\n            <p v-if=\"keyError\" class=\"mt-1 text-xs text-red-500\">{{ keyError }}</p>\n          </div>\n          \n          <div>\n            <label class=\"block text-sm font-medium mb-1\">Value</label>\n            <textarea\n              v-model=\"form.value\"\n              rows=\"4\"\n              class=\"w-full px-3 py-2 bg-input border border-border rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-ring font-mono\"\n              placeholder=\"Secret value...\"\n              required\n            />\n          </div>\n          \n          <div class=\"text-xs text-muted-foreground\">\n            Vault: <span class=\"font-medium\">{{ vault }}</span> • \n            Stage: <span class=\"font-medium\">{{ stage }}</span>\n          </div>\n          \n          <div v-if=\"saveError\" class=\"p-3 bg-red-50 dark:bg-red-950/20 border border-red-200 dark:border-red-900 rounded-md\">\n            <p class=\"text-sm text-red-600 dark:text-red-400\">{{ saveError }}</p>\n          </div>\n        </div>\n        \n        <div class=\"flex justify-end space-x-3 mt-6\">\n          <button\n            type=\"button\"\n            @click=\"$emit('close')\"\n            class=\"px-4 py-2 text-sm font-medium border border-border rounded-md hover:bg-muted transition-colors\"\n          >\n            Cancel\n          </button>\n          <button\n            type=\"submit\"\n            :disabled=\"!validateKey || loading\"\n            class=\"px-4 py-2 text-sm font-medium bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            {{ loading ? 'Saving...' : (secret ? 'Save' : 'Add') }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { reactive, watch, ref, computed } from 'vue'\nimport { useSecrets } from '../composables/useSecrets'\nimport { useToast } from '../composables/useToast'\n\nconst props = defineProps({\n  secret: Object,\n  vault: String,\n  stage: String,\n  initialKey: String\n})\n\nconst emit = defineEmits(['success', 'close'])\n\nconst toast = useToast()\nconst { createSecret, updateSecret } = useSecrets()\n\nconst form = reactive({\n  key: '',\n  value: ''\n})\n\nconst keyError = ref('')\nconst saveError = ref('')\nconst loading = ref(false)\n\n// Validate key on input\nconst validateKey = computed(() => {\n  if (!form.key) {\n    keyError.value = ''\n    return true\n  }\n  \n  // Check for spaces\n  if (form.key.includes(' ')) {\n    keyError.value = 'No spaces allowed'\n    return false\n  }\n  \n  // Check for other invalid characters (basic validation)\n  if (!/^[A-Za-z0-9_\\-/.]+$/.test(form.key)) {\n    keyError.value = 'Only letters, numbers, _, -, /, . allowed'\n    return false\n  }\n  \n  keyError.value = ''\n  return true\n})\n\nwatch(() => props.secret, (newSecret) => {\n  if (newSecret) {\n    form.key = newSecret.key\n    form.value = newSecret.value\n  } else {\n    form.key = props.initialKey || ''\n    form.value = ''\n  }\n}, { immediate: true })\n\nwatch(() => props.initialKey, (newKey) => {\n  if (!props.secret && newKey) {\n    form.key = newKey\n  }\n}, { immediate: true })\n\n// Trigger validation as user types\nwatch(() => form.key, () => {\n  validateKey.value\n})\n\nasync function save() {\n  if (!validateKey.value || loading.value) {\n    return\n  }\n  \n  saveError.value = ''\n  loading.value = true\n  \n  try {\n    if (props.secret) {\n      await updateSecret(form.key, form.value, props.vault, props.stage)\n      toast.success('Secret updated', `Secret '${form.key}' has been updated successfully`)\n    } else {\n      await createSecret(form.key, form.value, props.vault, props.stage)\n      toast.success('Secret created', `Secret '${form.key}' has been created successfully`)\n    }\n    emit('success')\n    emit('close')\n  } catch (error) {\n    // Display error in the modal\n    saveError.value = error.message || 'Failed to save secret'\n    console.error('Failed to save secret:', error)\n  } finally {\n    loading.value = false\n  }\n}\n</script>","<template>\n  <div class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n    <div class=\"bg-card border border-border rounded-lg p-6 w-96 max-w-full\">\n      <h2 class=\"text-lg font-semibold mb-4\">Rename Secret</h2>\n      \n      <div class=\"mb-4\">\n        <label class=\"block text-sm font-medium mb-2\">Current Key</label>\n        <input\n          :value=\"currentKey\"\n          disabled\n          class=\"w-full px-3 py-2 bg-muted border border-border rounded-md text-sm opacity-60\"\n        />\n      </div>\n      \n      <div class=\"mb-6\">\n        <label class=\"block text-sm font-medium mb-2\">New Key</label>\n        <input\n          v-model=\"newKey\"\n          @keyup.enter=\"handleRename\"\n          type=\"text\"\n          placeholder=\"Enter new key name\"\n          :class=\"[\n            'w-full px-3 py-2 bg-input border rounded-md text-sm focus:outline-none focus:ring-2',\n            (keyError || error) ? 'border-red-500 focus:ring-red-500' : 'border-border focus:ring-ring'\n          ]\"\n        />\n        <p v-if=\"keyError\" class=\"mt-1 text-xs text-red-500\">{{ keyError }}</p>\n        <p v-if=\"error && !keyError\" class=\"mt-2 text-sm text-red-500\">{{ error }}</p>\n      </div>\n      \n      <div class=\"flex justify-end space-x-3\">\n        <button\n          @click=\"$emit('close')\"\n          class=\"px-4 py-2 text-sm border border-border rounded-md hover:bg-accent transition-colors\"\n        >\n          Cancel\n        </button>\n        <button\n          @click=\"handleRename\"\n          :disabled=\"!isValid || loading\"\n          class=\"px-4 py-2 text-sm bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          {{ loading ? 'Renaming...' : 'Rename' }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch } from 'vue'\nimport { useSecrets } from '../composables/useSecrets'\nimport { useToast } from '../composables/useToast'\n\nconst props = defineProps({\n  currentKey: {\n    type: String,\n    required: true\n  },\n  vault: {\n    type: String,\n    required: true\n  },\n  stage: {\n    type: String,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['close', 'success'])\n\nconst toast = useToast()\nconst { renameSecret } = useSecrets()\n\nconst newKey = ref(props.currentKey)\nconst keyError = ref('')\nconst error = ref('')\nconst loading = ref(false)\n\n// Validate key on input\nconst validateKey = computed(() => {\n  const key = newKey.value.trim()\n  \n  if (!key) {\n    keyError.value = ''\n    return false\n  }\n  \n  // Check if unchanged\n  if (key === props.currentKey) {\n    keyError.value = ''\n    return false\n  }\n  \n  // Check for spaces\n  if (key.includes(' ')) {\n    keyError.value = 'No spaces allowed'\n    return false\n  }\n  \n  // Check for other invalid characters (same validation as SecretDialog)\n  if (!/^[A-Za-z0-9_\\-/.]+$/.test(key)) {\n    keyError.value = 'Only letters, numbers, _, -, /, . allowed'\n    return false\n  }\n  \n  keyError.value = ''\n  return true\n})\n\nconst isValid = computed(() => {\n  return validateKey.value\n})\n\n// Trigger validation as user types\nwatch(() => newKey.value, () => {\n  validateKey.value\n})\n\nasync function handleRename() {\n  if (!isValid.value || loading.value) return\n  \n  error.value = ''\n  loading.value = true\n  \n  try {\n    await renameSecret(props.currentKey, newKey.value.trim(), props.vault, props.stage)\n    toast.success('Secret renamed', `Secret renamed from '${props.currentKey}' to '${newKey.value.trim()}'`)\n    emit('success')\n    emit('close')\n  } catch (err) {\n    // Display error in the modal\n    error.value = err.message || 'Failed to rename secret'\n    console.error('Failed to rename secret:', err)\n  } finally {\n    loading.value = false\n  }\n}\n</script>","<template>\n  <div class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n    <div class=\"bg-card border border-border rounded-lg p-6 w-96 max-w-full\">\n      <h2 class=\"text-lg font-semibold mb-4\">Copy Secret</h2>\n      \n      <div class=\"mb-4\">\n        <label class=\"block text-sm font-medium mb-2\">Secret Key</label>\n        <input\n          :value=\"secretKey\"\n          disabled\n          class=\"w-full px-3 py-2 bg-muted border border-border rounded-md text-sm opacity-60\"\n        />\n      </div>\n      \n      <div class=\"mb-4\">\n        <label class=\"block text-sm font-medium mb-2\">From</label>\n        <input\n          :value=\"`${currentVault} / ${currentStage}`\"\n          disabled\n          class=\"w-full px-3 py-2 bg-muted border border-border rounded-md text-sm opacity-60\"\n        />\n      </div>\n      \n      <div class=\"mb-6\">\n        <label class=\"block text-sm font-medium mb-2\">Copy To</label>\n        <select\n          v-model=\"targetCombination\"\n          class=\"w-full px-3 py-2 bg-input border border-border rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-ring\"\n        >\n          <option value=\"\">Select destination...</option>\n          <option\n            v-for=\"combo in availableCombinations\"\n            :key=\"combo.key\"\n            :value=\"combo.key\"\n            :disabled=\"combo.key === `${currentVault}:${currentStage}`\"\n          >\n            {{ combo.display }} / {{ combo.stage }}\n          </option>\n        </select>\n      </div>\n      \n      <div class=\"flex justify-end space-x-3\">\n        <button\n          @click=\"$emit('close')\"\n          class=\"px-4 py-2 text-sm border border-border rounded-md hover:bg-accent transition-colors\"\n        >\n          Cancel\n        </button>\n        <button\n          @click=\"handleCopy\"\n          :disabled=\"!targetCombination\"\n          class=\"px-4 py-2 text-sm bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          Copy Secret\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue'\n\nconst props = defineProps({\n  secretKey: {\n    type: String,\n    required: true\n  },\n  currentVault: {\n    type: String,\n    required: true\n  },\n  currentStage: {\n    type: String,\n    required: true\n  },\n  vaults: {\n    type: Array,\n    required: true\n  },\n  stages: {\n    type: Array,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['close', 'copy'])\n\nconst targetCombination = ref('')\n\nconst availableCombinations = computed(() => {\n  const combinations = []\n  for (const vault of props.vaults) {\n    for (const stage of props.stages) {\n      combinations.push({\n        key: `${vault.slug || vault}:${stage}`,\n        vaultSlug: vault.slug || vault,\n        display: vault.display || vault.name || vault,\n        stage: stage\n      })\n    }\n  }\n  return combinations\n})\n\nfunction handleCopy() {\n  if (targetCombination.value) {\n    const [targetVault, targetStage] = targetCombination.value.split(':')\n    emit('copy', { targetVault, targetStage })\n  }\n}\n</script>","<template>\n  <div class=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\" @click.self=\"$emit('close')\">\n    <div class=\"bg-card border border-border rounded-lg p-6 w-full max-w-4xl max-h-[80vh] flex flex-col\">\n      <div class=\"flex items-center justify-between mb-4\">\n        <div>\n          <h2 class=\"text-lg font-semibold\">Secret History</h2>\n          <p class=\"text-sm text-muted-foreground mt-1\">\n            {{ secretKey }} • {{ vault }} / {{ stage }}\n          </p>\n        </div>\n        <button\n          @click=\"$emit('close')\"\n          class=\"p-1 rounded-md hover:bg-muted transition-colors\"\n        >\n          <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"/>\n          </svg>\n        </button>\n      </div>\n      \n      <div v-if=\"loading\" class=\"flex-1 flex items-center justify-center\">\n        <div class=\"text-muted-foreground\">Loading history...</div>\n      </div>\n      \n      <div v-else-if=\"error\" class=\"flex-1 flex items-center justify-center\">\n        <div class=\"text-destructive\">{{ error }}</div>\n      </div>\n      \n      <div v-else-if=\"history.length === 0\" class=\"flex-1 flex items-center justify-center\">\n        <div class=\"text-muted-foreground\">No history found for this secret</div>\n      </div>\n      \n      <div v-else class=\"flex-1 overflow-y-auto\">\n        <table class=\"w-full\">\n          <thead class=\"sticky top-0 bg-card border-b border-border\">\n            <tr>\n              <th class=\"text-left px-4 py-2 text-xs font-medium text-muted-foreground uppercase tracking-wider\">Version</th>\n              <th class=\"text-left px-4 py-2 text-xs font-medium text-muted-foreground uppercase tracking-wider\">\n                <div class=\"flex items-center space-x-2\">\n                  <span>Value</span>\n                  <button\n                    @click=\"toggleUnmask\"\n                    class=\"p-1 rounded hover:bg-accent transition-colors\"\n                    :title=\"unmasked ? 'Hide values' : 'Show values'\"\n                  >\n                    <svg v-if=\"!unmasked\" class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                    </svg>\n                    <svg v-else class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\" />\n                    </svg>\n                  </button>\n                </div>\n              </th>\n              <th class=\"text-left px-4 py-2 text-xs font-medium text-muted-foreground uppercase tracking-wider\">Type</th>\n              <th class=\"text-left px-4 py-2 text-xs font-medium text-muted-foreground uppercase tracking-wider\">Modified</th>\n            </tr>\n          </thead>\n          <tbody class=\"divide-y divide-border\">\n            <tr v-for=\"(entry, index) in history\" :key=\"`${entry.version}-${index}`\" class=\"hover:bg-muted/50 transition-colors\">\n              <td class=\"px-4 py-3 text-sm\">\n                <span class=\"inline-flex items-center px-2 py-1 rounded-md text-xs font-medium\" :class=\"index === 0 ? 'bg-primary/10 text-primary' : 'bg-accent'\">\n                  v{{ entry.version }}\n                </span>\n              </td>\n              <td class=\"px-4 py-3 text-sm\">\n                <span class=\"font-mono break-all\">{{ getMaskedValue(entry.value) }}</span>\n              </td>\n              <td class=\"px-4 py-3 text-sm text-muted-foreground\">\n                {{ entry.dataType }}\n              </td>\n              <td class=\"px-4 py-3\">\n                <div class=\"text-sm\">{{ formatDate(entry.timestamp || entry.modifiedDate) }}</div>\n                <div class=\"text-xs text-muted-foreground/70\">{{ entry.modifiedBy }}</div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      \n      <div class=\"flex justify-between items-center mt-4 pt-4 border-t border-border\">\n        <div class=\"text-sm text-muted-foreground\">\n          Showing {{ history.length }} revision{{ history.length === 1 ? '' : 's' }}\n        </div>\n        <button\n          @click=\"$emit('close')\"\n          class=\"px-4 py-2 text-sm font-medium border border-border rounded-md hover:bg-muted transition-colors\"\n        >\n          Close\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { useSecrets } from '../composables/useSecrets'\nimport { maskValue, formatDate } from '../utils/formatters'\n\nconst props = defineProps({\n  secretKey: {\n    type: String,\n    required: true\n  },\n  vault: {\n    type: String,\n    required: true\n  },\n  stage: {\n    type: String,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['close', 'refresh'])\n\nconst { getSecretHistory } = useSecrets()\nconst history = ref([])\nconst loading = ref(true)\nconst error = ref(null)\nconst unmasked = ref(false)\n\nonMounted(() => {\n  loadHistory()\n})\n\nasync function loadHistory() {\n  loading.value = true\n  error.value = null\n  \n  try {\n    const data = await getSecretHistory(\n      props.secretKey, \n      props.vault, \n      props.stage, \n      20, \n      true  // Always get unmasked values\n    )\n    history.value = data.history || []\n  } catch (err) {\n    console.error('Failed to load history:', err)\n    error.value = err.message || 'Failed to load history'\n  } finally {\n    loading.value = false\n  }\n}\n\nfunction toggleUnmask() {\n  unmasked.value = !unmasked.value\n}\n\nfunction getMaskedValue(value) {\n  if (!value) return '(null)'\n  if (unmasked.value) return value\n  return maskValue(value)\n}\n</script>","<template>\n  <div class=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\" @click.self=\"$emit('close')\">\n    <div class=\"bg-card border border-border rounded-lg p-6 w-full max-w-md\">\n      <div class=\"flex items-start space-x-3\">\n        <div class=\"flex-shrink-0\">\n          <div class=\"h-10 w-10 rounded-full bg-destructive/10 flex items-center justify-center\">\n            <svg class=\"h-6 w-6 text-destructive\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n            </svg>\n          </div>\n        </div>\n        <div class=\"flex-1\">\n          <h3 class=\"text-lg font-semibold\">Delete Secret</h3>\n          <p class=\"mt-2 text-sm text-muted-foreground\">\n            Are you sure you want to delete this secret?\n          </p>\n          <div class=\"mt-3 p-3 bg-muted/50 rounded-md\">\n            <div class=\"text-sm\">\n              <div class=\"font-medium\">{{ secretKey }}</div>\n              <div class=\"text-xs text-muted-foreground mt-1\">\n                {{ vault }} / {{ stage }}\n              </div>\n            </div>\n          </div>\n          <p class=\"mt-3 text-sm text-muted-foreground\">\n            This action cannot be undone.\n          </p>\n          <div v-if=\"error\" class=\"mt-3 p-3 bg-red-50 dark:bg-red-950/20 border border-red-200 dark:border-red-900 rounded-md\">\n            <p class=\"text-sm text-red-600 dark:text-red-400\">{{ error }}</p>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"flex justify-end space-x-3 mt-6\">\n        <button\n          @click=\"$emit('close')\"\n          class=\"px-4 py-2 text-sm font-medium border border-border rounded-md hover:bg-muted transition-colors\"\n        >\n          Cancel\n        </button>\n        <button\n          @click=\"handleDelete\"\n          :disabled=\"loading\"\n          class=\"px-4 py-2 text-sm font-medium bg-destructive text-destructive-foreground rounded-md hover:bg-destructive/90 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          {{ loading ? 'Deleting...' : 'Delete Secret' }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport { useSecrets } from '../composables/useSecrets'\nimport { useToast } from '../composables/useToast'\n\nconst props = defineProps({\n  secretKey: {\n    type: String,\n    required: true\n  },\n  vault: {\n    type: String,\n    required: true\n  },\n  stage: {\n    type: String,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['close', 'success'])\n\nconst toast = useToast()\nconst { deleteSecret } = useSecrets()\n\nconst error = ref('')\nconst loading = ref(false)\n\nasync function handleDelete() {\n  if (loading.value) return\n  \n  error.value = ''\n  loading.value = true\n  \n  try {\n    await deleteSecret(props.secretKey, props.vault, props.stage)\n    toast.success('Secret deleted', `Secret '${props.secretKey}' has been deleted successfully`)\n    emit('success')\n    emit('close')\n  } catch (err) {\n    // Display error in the modal\n    error.value = err.message || 'Failed to delete secret'\n    console.error('Failed to delete secret:', err)\n  } finally {\n    loading.value = false\n  }\n}\n</script>","<template>\n  <!-- Import Wizard Modal -->\n  <div class=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\" @click.self=\"closeWizard\">\n      <div class=\"bg-card border border-border rounded-lg w-full max-w-3xl max-h-[80vh] overflow-hidden flex flex-col\">\n        <!-- Header -->\n        <div class=\"flex items-center justify-between px-6 py-4 border-b border-border\">\n          <h2 class=\"text-lg font-semibold\">Import .env File</h2>\n          <button\n            @click=\"closeWizard\"\n            class=\"p-1 rounded-md hover:bg-muted transition-colors\"\n          >\n            <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"/>\n            </svg>\n          </button>\n        </div>\n\n        <!-- Content -->\n        <div class=\"flex-1 overflow-y-auto px-6 py-4\">\n          <!-- Step 1: Upload -->\n          <div v-if=\"step === 1\" class=\"space-y-4\">\n            <div>\n              <h3 class=\"font-medium mb-2\">Upload or Paste .env Content</h3>\n              <p class=\"text-sm text-muted-foreground mb-4\">\n                Select a .env file from your computer or paste the content directly.\n              </p>\n            </div>\n\n            <!-- File Upload with Drag & Drop -->\n            <div \n              @drop=\"handleDrop\"\n              @dragover.prevent\n              @dragenter.prevent\n              @dragleave=\"isDragging = false\"\n              @dragenter=\"isDragging = true\"\n              :class=\"[\n                'border-2 border-dashed rounded-lg p-6 text-center transition-colors',\n                isDragging ? 'border-primary bg-primary/5' : 'border-border'\n              ]\"\n            >\n              <input\n                type=\"file\"\n                ref=\"fileInput\"\n                @change=\"handleFileUpload\"\n                accept=\".env,.env.*\"\n                class=\"hidden\"\n              />\n              \n              <svg class=\"w-12 h-12 mx-auto mb-4 text-muted-foreground\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\" d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\n              </svg>\n              \n              <p class=\"text-sm font-medium mb-2\">\n                {{ isDragging ? 'Drop file here...' : 'Drag & drop your .env file here' }}\n              </p>\n              \n              <p class=\"text-xs text-muted-foreground mb-4\">or</p>\n              \n              <button\n                @click=\"$refs.fileInput.click()\"\n                class=\"px-4 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors text-sm font-medium\"\n              >\n                Browse Files\n              </button>\n              \n              <p class=\"text-sm text-muted-foreground mt-3\">\n                {{ fileName || 'Supports .env and .env.* files' }}\n              </p>\n            </div>\n\n            <div class=\"text-center text-muted-foreground text-sm\">— OR —</div>\n\n            <!-- Text Input -->\n            <div>\n              <label class=\"block text-sm font-medium mb-2\">Paste .env Content</label>\n              <textarea\n                v-model=\"envContent\"\n                class=\"w-full h-48 px-3 py-2 bg-input border border-border rounded-md text-sm font-mono focus:outline-none focus:ring-2 focus:ring-ring\"\n                placeholder=\"KEY1=value1&#10;KEY2=value2&#10;KEY3=value3\"\n              ></textarea>\n            </div>\n\n            <!-- Filter Options -->\n            <div class=\"space-y-3 pt-4 border-t border-border\">\n              <h4 class=\"text-sm font-medium\">Filter Options (Optional)</h4>\n              <div class=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label class=\"block text-xs text-muted-foreground mb-1\">Only include keys matching</label>\n                  <input\n                    v-model=\"filters.only\"\n                    type=\"text\"\n                    class=\"w-full px-3 py-2 bg-input border border-border rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-ring\"\n                    placeholder=\"e.g., DB_* or APP_*\"\n                  />\n                </div>\n                <div>\n                  <label class=\"block text-xs text-muted-foreground mb-1\">Exclude keys matching</label>\n                  <input\n                    v-model=\"filters.except\"\n                    type=\"text\"\n                    class=\"w-full px-3 py-2 bg-input border border-border rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-ring\"\n                    placeholder=\"e.g., MAIL_* or TEST_*\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Step 2: Preview & Conflicts -->\n          <div v-else-if=\"step === 2\" class=\"space-y-4\">\n            <div>\n              <h3 class=\"font-medium mb-2\">Review Import</h3>\n              <div class=\"flex items-center space-x-6 text-sm\">\n                <span>\n                  <span class=\"font-medium text-green-500\">{{ analysis.new }}</span> new\n                </span>\n                <span>\n                  <span class=\"font-medium text-yellow-500\">{{ analysis.existing }}</span> existing\n                </span>\n                <span>\n                  <span class=\"font-medium text-red-500\">{{ analysis.invalid }}</span> invalid\n                </span>\n                <span>\n                  <span class=\"font-medium text-gray-500\">{{ analysis.empty }}</span> empty\n                </span>\n              </div>\n            </div>\n\n            <!-- Conflict Resolution -->\n            <div v-if=\"analysis.existing > 0\" class=\"border border-yellow-500/20 bg-yellow-500/5 rounded-lg p-4\">\n              <h4 class=\"font-medium text-yellow-500 mb-3\">Conflict Resolution</h4>\n              <div class=\"space-y-2\">\n                <label class=\"flex items-center space-x-2\">\n                  <input\n                    type=\"radio\"\n                    v-model=\"conflictStrategy\"\n                    value=\"skip\"\n                    class=\"text-primary focus:ring-primary\"\n                  />\n                  <span class=\"text-sm\">Skip existing secrets (keep current values)</span>\n                </label>\n                <label class=\"flex items-center space-x-2\">\n                  <input\n                    type=\"radio\"\n                    v-model=\"conflictStrategy\"\n                    value=\"overwrite\"\n                    class=\"text-primary focus:ring-primary\"\n                  />\n                  <span class=\"text-sm\">Overwrite existing secrets (replace with new values)</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Secrets Preview Table -->\n            <div class=\"border border-border rounded-lg overflow-hidden\">\n              <table class=\"w-full text-sm\">\n                <thead class=\"bg-muted\">\n                  <tr>\n                    <th class=\"text-left px-4 py-2 font-medium\">Key</th>\n                    <th class=\"text-left px-4 py-2 font-medium\">Value</th>\n                    <th class=\"text-left px-4 py-2 font-medium\">Status</th>\n                  </tr>\n                </thead>\n                <tbody class=\"divide-y divide-border\">\n                  <tr\n                    v-for=\"secret in analysisSecrets\"\n                    :key=\"secret.key\"\n                    :class=\"{\n                      'opacity-50': secret.status === 'empty' || secret.status === 'invalid'\n                    }\"\n                  >\n                    <td class=\"px-4 py-2 font-mono\">{{ secret.key }}</td>\n                    <td class=\"px-4 py-2 font-mono text-xs break-all\">\n                      {{ secret.value || '(empty)' }}\n                    </td>\n                    <td class=\"px-4 py-2\">\n                      <span\n                        :class=\"[\n                          'px-2 py-1 rounded text-xs font-medium',\n                          getStatusClass(secret.status)\n                        ]\"\n                      >\n                        {{ getStatusLabel(secret.status) }}\n                      </span>\n                      <span v-if=\"secret.error\" class=\"block text-xs text-red-500 mt-1\">\n                        {{ secret.error }}\n                      </span>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n\n            <!-- Dry Run Option -->\n            <div class=\"flex items-center space-x-2\">\n              <input\n                type=\"checkbox\"\n                v-model=\"dryRun\"\n                id=\"dry-run\"\n                class=\"rounded border-border\"\n              />\n              <label for=\"dry-run\" class=\"text-sm\">\n                Dry run (preview what would be imported without making changes)\n              </label>\n            </div>\n          </div>\n\n          <!-- Step 3: Results -->\n          <div v-else-if=\"step === 3\" class=\"space-y-4\">\n            <div>\n              <h3 class=\"font-medium mb-2\">Import {{ dryRun ? 'Preview' : 'Complete' }}</h3>\n              <div class=\"flex items-center space-x-6 text-sm\">\n                <span>\n                  <span class=\"font-medium text-green-500\">{{ importResults.imported }}</span> imported\n                </span>\n                <span>\n                  <span class=\"font-medium text-yellow-500\">{{ importResults.skipped }}</span> skipped\n                </span>\n                <span>\n                  <span class=\"font-medium text-red-500\">{{ importResults.failed }}</span> failed\n                </span>\n              </div>\n            </div>\n\n            <!-- Dry Run Notice -->\n            <div v-if=\"dryRun\" class=\"border border-blue-500/20 bg-blue-500/5 rounded-lg p-4\">\n              <p class=\"text-sm text-blue-500\">\n                This was a dry run. No secrets were actually imported.\n              </p>\n            </div>\n\n            <!-- Errors -->\n            <div v-if=\"importResults.errors && importResults.errors.length > 0\" class=\"border border-red-500/20 bg-red-500/5 rounded-lg p-4\">\n              <h4 class=\"font-medium text-red-500 mb-2\">Errors</h4>\n              <ul class=\"list-disc list-inside space-y-1\">\n                <li v-for=\"(error, index) in importResults.errors\" :key=\"index\" class=\"text-sm text-red-500\">\n                  {{ error }}\n                </li>\n              </ul>\n            </div>\n\n            <!-- Results Table -->\n            <div class=\"border border-border rounded-lg overflow-hidden\">\n              <table class=\"w-full text-sm\">\n                <thead class=\"bg-muted\">\n                  <tr>\n                    <th class=\"text-left px-4 py-2 font-medium\">Key</th>\n                    <th class=\"text-left px-4 py-2 font-medium\">Status</th>\n                    <th class=\"text-left px-4 py-2 font-medium\">Revision</th>\n                  </tr>\n                </thead>\n                <tbody class=\"divide-y divide-border\">\n                  <tr v-for=\"(info, key) in importResults.results\" :key=\"key\">\n                    <td class=\"px-4 py-2 font-mono\">{{ key }}</td>\n                    <td class=\"px-4 py-2\">\n                      <span\n                        :class=\"[\n                          'px-2 py-1 rounded text-xs font-medium',\n                          getResultStatusClass(info.status)\n                        ]\"\n                      >\n                        {{ getResultStatusLabel(info) }}\n                      </span>\n                    </td>\n                    <td class=\"px-4 py-2 text-muted-foreground\">\n                      {{ info.revision || '-' }}\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n\n        <!-- Footer -->\n        <div class=\"flex justify-between items-center px-6 py-4 border-t border-border\">\n          <div>\n            <button\n              v-if=\"step === 2\"\n              @click=\"step--\"\n              class=\"px-4 py-2 text-sm border border-border rounded-md hover:bg-muted transition-colors\"\n            >\n              Back\n            </button>\n          </div>\n          <div class=\"flex space-x-2\">\n            <button\n              @click=\"closeWizard\"\n              class=\"px-4 py-2 text-sm border border-border rounded-md hover:bg-muted transition-colors\"\n            >\n              {{ step === 3 ? 'Close' : 'Cancel' }}\n            </button>\n            <button\n              v-if=\"step === 1\"\n              @click=\"analyzeImport\"\n              :disabled=\"!envContent || analyzing\"\n              class=\"px-4 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors text-sm font-medium disabled:opacity-50\"\n            >\n              {{ analyzing ? 'Analyzing...' : 'Next' }}\n            </button>\n            <button\n              v-else-if=\"step === 2\"\n              @click=\"executeImport\"\n              :disabled=\"importing\"\n              class=\"px-4 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors text-sm font-medium disabled:opacity-50\"\n            >\n              {{ importing ? 'Importing...' : (dryRun ? 'Preview Import' : 'Import') }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue'\nimport { useToast } from '../composables/useToast'\n\nconst props = defineProps({\n  vault: String,\n  stage: String\n})\n\nconst emit = defineEmits(['imported', 'close'])\n\nconst toast = useToast()\n\n// Wizard state\nconst step = ref(1)\n\n// Step 1: Upload\nconst fileName = ref('')\nconst envContent = ref('')\nconst isDragging = ref(false)\nconst filters = ref({\n  only: '',\n  except: ''\n})\n\n// Step 2: Analysis\nconst analyzing = ref(false)\nconst analysis = ref({\n  total: 0,\n  new: 0,\n  existing: 0,\n  invalid: 0,\n  empty: 0,\n  secrets: []\n})\nconst conflictStrategy = ref('skip')\nconst dryRun = ref(false)\n\n// Step 3: Results\nconst importing = ref(false)\nconst importResults = ref({\n  imported: 0,\n  skipped: 0,\n  failed: 0,\n  results: {},\n  errors: []\n})\n\n// Computed\nconst analysisSecrets = computed(() => analysis.value.secrets || [])\n\n// Methods\nfunction handleFileUpload(event) {\n  const file = event.target.files[0]\n  if (!file) return\n  \n  processFile(file)\n}\n\nfunction handleDrop(event) {\n  event.preventDefault()\n  isDragging.value = false\n  \n  const files = event.dataTransfer.files\n  if (files.length === 0) return\n  \n  const file = files[0]\n  \n  // Check if it's an env file\n  if (!file.name.match(/\\.env(\\.|$)/)) {\n    toast.error('Invalid file', 'Please upload a .env file')\n    return\n  }\n  \n  processFile(file)\n}\n\nfunction processFile(file) {\n  fileName.value = file.name\n  \n  const reader = new FileReader()\n  reader.onload = (e) => {\n    envContent.value = e.target.result\n  }\n  reader.onerror = () => {\n    toast.error('Failed to read file', 'Could not read the selected file')\n  }\n  reader.readAsText(file)\n}\n\nasync function analyzeImport() {\n  if (!envContent.value) {\n    toast.error('No content to import', 'Please upload a file or paste content')\n    return\n  }\n  \n  analyzing.value = true\n  \n  try {\n    const response = await window.$api.analyzeImport({\n      content: envContent.value,\n      vault: props.vault,\n      stage: props.stage,\n      only: filters.value.only || null,\n      except: filters.value.except || null\n    })\n    \n    analysis.value = response.analysis\n    step.value = 2\n    \n    // Auto-select strategy based on conflicts\n    if (analysis.value.existing === 0) {\n      conflictStrategy.value = 'skip' // No conflicts, any strategy works\n    }\n  } catch (error) {\n    toast.error('Failed to analyze import', error.message)\n  } finally {\n    analyzing.value = false\n  }\n}\n\nasync function executeImport() {\n  importing.value = true\n  \n  try {\n    const response = await window.$api.executeImport({\n      content: envContent.value,\n      vault: props.vault,\n      stage: props.stage,\n      strategy: conflictStrategy.value,\n      only: filters.value.only || null,\n      except: filters.value.except || null,\n      dry_run: dryRun.value\n    })\n    \n    importResults.value = response\n    step.value = 3\n    \n    if (!dryRun.value && response.imported > 0) {\n      toast.success('Import successful', `Imported ${response.imported} secrets`)\n      emit('imported')\n    }\n  } catch (error) {\n    toast.error('Failed to import', error.message)\n  } finally {\n    importing.value = false\n  }\n}\n\nfunction closeWizard() {\n  step.value = 1\n  fileName.value = ''\n  envContent.value = ''\n  isDragging.value = false\n  emit('close')\n  filters.value = { only: '', except: '' }\n  analysis.value = { total: 0, new: 0, existing: 0, invalid: 0, empty: 0, secrets: [] }\n  conflictStrategy.value = 'skip'\n  dryRun.value = false\n  importResults.value = { imported: 0, skipped: 0, failed: 0, results: {}, errors: [] }\n}\n\nfunction getStatusClass(status) {\n  switch (status) {\n    case 'new': return 'bg-green-500/10 text-green-500'\n    case 'existing': return 'bg-yellow-500/10 text-yellow-500'\n    case 'invalid': return 'bg-red-500/10 text-red-500'\n    case 'empty': return 'bg-gray-500/10 text-gray-500'\n    default: return 'bg-muted text-muted-foreground'\n  }\n}\n\nfunction getStatusLabel(status) {\n  switch (status) {\n    case 'new': return 'New'\n    case 'existing': return 'Exists'\n    case 'invalid': return 'Invalid'\n    case 'empty': return 'Empty'\n    default: return status\n  }\n}\n\nfunction getResultStatusClass(status) {\n  switch (status) {\n    case 'imported':\n    case 'would_import': return 'bg-green-500/10 text-green-500'\n    case 'skipped': return 'bg-yellow-500/10 text-yellow-500'\n    case 'failed': return 'bg-red-500/10 text-red-500'\n    default: return 'bg-muted text-muted-foreground'\n  }\n}\n\nfunction getResultStatusLabel(info) {\n  switch (info.status) {\n    case 'imported': return 'Imported'\n    case 'would_import': return 'Would Import'\n    case 'skipped':\n      switch (info.reason) {\n        case 'empty_value': return 'Skipped (empty)'\n        case 'exists': return 'Skipped (exists)'\n        default: return 'Skipped'\n      }\n    case 'failed':\n      switch (info.reason) {\n        case 'invalid_key': return 'Failed (invalid)'\n        case 'exists': return 'Failed (exists)'\n        case 'vault_error': return 'Failed (error)'\n        default: return 'Failed'\n      }\n    default: return info.status\n  }\n}\n</script>","<template>\n  <div class=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\" @click.self=\"$emit('close')\">\n    <div class=\"bg-card border border-border rounded-lg p-6 w-full max-w-md\">\n      <h2 class=\"text-lg font-semibold mb-4\">Download Secrets</h2>\n      \n      <div class=\"space-y-4\">\n        <!-- Format Selection -->\n        <div>\n          <label class=\"block text-sm font-medium mb-2\">Export Format</label>\n          <div class=\"grid grid-cols-3 gap-2\">\n            <button\n              v-for=\"fmt in formats\"\n              :key=\"fmt.value\"\n              @click=\"selectedFormat = fmt.value\"\n              :class=\"[\n                'p-3 border rounded-md transition-colors',\n                selectedFormat === fmt.value\n                  ? 'border-primary bg-primary/10 text-primary'\n                  : 'border-border hover:bg-muted'\n              ]\"\n            >\n              <div class=\"font-medium\">{{ fmt.label }}</div>\n              <div class=\"text-xs opacity-75 mt-1\">{{ fmt.description }}</div>\n            </button>\n          </div>\n        </div>\n        \n        <!-- Filename -->\n        <div>\n          <label class=\"block text-sm font-medium mb-1\">Filename</label>\n          <input\n            v-model=\"filename\"\n            type=\"text\"\n            class=\"w-full px-3 py-2 bg-input border border-border rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-ring\"\n            :placeholder=\"defaultFilename\"\n          />\n        </div>\n        \n        <!-- Info -->\n        <div class=\"text-xs text-muted-foreground\">\n          <div>Vault: <span class=\"font-medium\">{{ vault }}</span></div>\n          <div>Stage: <span class=\"font-medium\">{{ stage }}</span></div>\n          <div>Secrets: <span class=\"font-medium\">{{ secretCount }}</span></div>\n        </div>\n      </div>\n      \n      <div class=\"flex justify-end space-x-3 mt-6\">\n        <button\n          type=\"button\"\n          @click=\"$emit('close')\"\n          class=\"px-4 py-2 text-sm font-medium border border-border rounded-md hover:bg-muted transition-colors\"\n        >\n          Cancel\n        </button>\n        <button\n          @click=\"downloadSecrets\"\n          :disabled=\"loading\"\n          class=\"px-4 py-2 text-sm font-medium bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors disabled:opacity-50\"\n        >\n          <span v-if=\"!loading\">Download</span>\n          <span v-else>Preparing...</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue'\nimport { useToast } from '../composables/useToast'\nimport { formatDate } from '../utils/formatters'\n\nconst props = defineProps({\n  vault: String,\n  stage: String,\n  secrets: {\n    type: Array,\n    default: () => []\n  }\n})\n\nconst emit = defineEmits(['close'])\n\nconst toast = useToast()\n\nconst loading = ref(false)\nconst selectedFormat = ref('env')\nconst filename = ref('')\n\nconst formats = [\n  {\n    value: 'env',\n    label: '.env',\n    description: 'KEY=value'\n  },\n  {\n    value: 'json',\n    label: 'JSON',\n    description: '{\"key\": \"value\"}'\n  },\n  {\n    value: 'csv',\n    label: 'CSV',\n    description: 'Spreadsheet'\n  }\n]\n\nconst secretCount = computed(() => props.secrets.length)\n\nconst defaultFilename = computed(() => {\n  const timestamp = new Date().toISOString().split('T')[0]\n  return `${props.vault}-${props.stage}-${timestamp}.${selectedFormat.value}`\n})\n\nasync function downloadSecrets() {\n  loading.value = true\n  \n  try {\n    let content = ''\n    const fileName = filename.value || defaultFilename.value\n    \n    switch (selectedFormat.value) {\n      case 'json':\n        const jsonData = {}\n        props.secrets.forEach(secret => {\n          jsonData[secret.key] = secret.value\n        })\n        content = JSON.stringify(jsonData, null, 2)\n        break\n        \n      case 'csv':\n        content = 'Key,Value,Modified\\n'\n        props.secrets.forEach(secret => {\n          const key = escapeCsvField(secret.key)\n          const value = escapeCsvField(secret.value)\n          const modified = escapeCsvField(formatDate(secret.modified))\n          content += `${key},${value},${modified}\\n`\n        })\n        break\n        \n      case 'env':\n      default:\n        props.secrets.forEach(secret => {\n          content += `${secret.key}=${formatEnvValue(secret.value)}\\n`\n        })\n        break\n    }\n    \n    // Create blob and download\n    const blob = new Blob([content], { type: 'text/plain;charset=utf-8' })\n    const url = window.URL.createObjectURL(blob)\n    const link = document.createElement('a')\n    link.href = url\n    link.download = fileName\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n    window.URL.revokeObjectURL(url)\n    \n    toast.success('Export Complete', `Secrets downloaded as ${fileName}`)\n    emit('close')\n  } catch (error) {\n    console.error('Export failed:', error)\n    toast.error('Export Failed', error.message)\n  } finally {\n    loading.value = false\n  }\n}\n\nfunction escapeCsvField(field) {\n  if (typeof field !== 'string') {\n    field = String(field || '')\n  }\n  // If field contains comma, quotes, or newline, wrap in quotes and escape quotes\n  if (/[,\"\\n\\r]/.test(field)) {\n    return '\"' + field.replace(/\"/g, '\"\"') + '\"'\n  }\n  return field\n}\n\nfunction formatEnvValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value || '')\n  }\n  // If value contains newlines or starts/ends with quotes, wrap in quotes\n  if (value.includes('\\n') || value.includes('\"') || value.includes(' ')) {\n    return `\"${value.replace(/\"/g, '\\\\\"')}\"`\n  }\n  return value\n}\n</script>","<template>\n  <div class=\"relative\">\n    <!-- Three-dot menu button - only show if user has some permissions -->\n    <button\n      v-if=\"permissions.read || permissions.write\"\n      @click=\"toggleMenu($event)\"\n      class=\"p-2 rounded hover:bg-muted transition-colors\"\n      title=\"Actions\"\n    >\n      <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\" />\n      </svg>\n    </button>\n    \n    <!-- Dropdown menu -->\n    <div\n      v-if=\"menuOpen\"\n      @click.stop\n      class=\"absolute right-0 mt-2 w-48 bg-popover border border-border rounded-md shadow-lg z-20\"\n    >\n      <div class=\"py-1\">\n        <button\n          v-if=\"permissions.write\"\n          @click=\"showImportWizard = true; menuOpen = false\"\n          class=\"w-full text-left px-4 py-2 text-sm hover:bg-accent transition-colors flex items-center space-x-2\"\n        >\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\n          </svg>\n          <span>Import .env File</span>\n        </button>\n        \n        <button\n          v-if=\"permissions.read\"\n          @click=\"showExportModal = true; menuOpen = false\"\n          class=\"w-full text-left px-4 py-2 text-sm hover:bg-accent transition-colors flex items-center space-x-2\"\n        >\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\" />\n          </svg>\n          <span>Download Secrets</span>\n        </button>\n      </div>\n    </div>\n    \n    <!-- Import Wizard Modal -->\n    <ImportWizard\n      v-if=\"showImportWizard\"\n      :vault=\"vault\"\n      :stage=\"stage\"\n      @imported=\"handleImported\"\n      @close=\"showImportWizard = false\"\n    />\n    \n    <!-- Export Modal -->\n    <ExportModal\n      v-if=\"showExportModal\"\n      :vault=\"vault\"\n      :stage=\"stage\"\n      :secrets=\"secrets\"\n      @close=\"showExportModal = false\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onBeforeUnmount, watch } from 'vue'\nimport ImportWizard from './ImportWizard.vue'\nimport ExportModal from './ExportModal.vue'\n\nconst props = defineProps({\n  vault: String,\n  stage: String,\n  secrets: {\n    type: Array,\n    default: () => []\n  },\n  permissions: {\n    type: Object,\n    default: () => ({ list: true, read: true, write: true, delete: true, history: true })\n  }\n})\n\nconst emit = defineEmits(['imported'])\n\nconst menuOpen = ref(false)\nconst showImportWizard = ref(false)\nconst showExportModal = ref(false)\n\nfunction toggleMenu(event) {\n  event.stopPropagation()\n  menuOpen.value = !menuOpen.value\n}\n\nfunction handleImported() {\n  showImportWizard.value = false\n  emit('imported')\n}\n\nfunction closeMenu() {\n  menuOpen.value = false\n}\n\n// Handle click outside\nfunction handleClickOutside(event) {\n  // Check if click is outside the component\n  const button = event.target.closest('button')\n  const menu = event.target.closest('.absolute.right-0')\n  \n  if (!button && !menu) {\n    closeMenu()\n  }\n}\n\n// Add/remove document listener when menu opens/closes\nwatch(menuOpen, (isOpen) => {\n  if (isOpen) {\n    // Add listener on next tick to avoid immediate close\n    setTimeout(() => {\n      document.addEventListener('click', handleClickOutside)\n    }, 0)\n  } else {\n    document.removeEventListener('click', handleClickOutside)\n  }\n})\n\n// Clean up listener on unmount\nonBeforeUnmount(() => {\n  document.removeEventListener('click', handleClickOutside)\n})\n</script>","import { ref, computed } from 'vue'\nimport { api } from '../services/api'\n\nexport function useVault() {\n  const vaults = ref([])\n  const stages = ref([])\n  const settings = ref({})\n  const loading = ref(false)\n  const error = ref(null)\n\n  const defaultVault = computed(() => \n    vaults.value.find(v => v.isDefault)?.slug || vaults.value[0]?.slug || 'vault'\n  )\n\n  const defaultStage = computed(() => \n    settings.value.default_stage || 'prod'\n  )\n\n  async function loadVaults() {\n    loading.value = true\n    error.value = null\n    try {\n      const response = await api.listVaults()\n      vaults.value = response.vaults\n    } catch (err) {\n      error.value = err.message\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  async function loadStages() {\n    loading.value = true\n    error.value = null\n    try {\n      const response = await api.listStages()\n      stages.value = response.stages\n    } catch (err) {\n      error.value = err.message\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  async function loadSettings() {\n    loading.value = true\n    error.value = null\n    try {\n      settings.value = await api.getSettings()\n    } catch (err) {\n      error.value = err.message\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  async function loadAll() {\n    loading.value = true\n    error.value = null\n    try {\n      const [vaultsRes, stagesRes, settingsRes] = await Promise.all([\n        api.listVaults(),\n        api.listStages(),\n        api.getSettings()\n      ])\n      vaults.value = vaultsRes.vaults\n      stages.value = stagesRes.stages\n      settings.value = settingsRes\n    } catch (err) {\n      error.value = err.message\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  async function verifyVaults() {\n    loading.value = true\n    error.value = null\n    try {\n      return await api.verifyVaults()\n    } catch (err) {\n      error.value = err.message\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  return {\n    vaults,\n    stages,\n    settings,\n    loading,\n    error,\n    defaultVault,\n    defaultStage,\n    loadVaults,\n    loadStages,\n    loadSettings,\n    loadAll,\n    verifyVaults\n  }\n}","<template>\n  <div>\n    <!-- Header with vault/stage selectors on left, search and add button on right -->\n    <div class=\"flex items-center justify-between mb-6\">\n      <!-- Left side: Vault & Stage Selectors -->\n      <div class=\"flex items-center\">\n        <VaultStageSelector \n          v-model:vault=\"vault\"\n          v-model:stage=\"stage\"\n          :vaults=\"vaults\"\n          :stages=\"stages\"\n        />\n      </div>\n      \n      <!-- Right side: Search and Add button -->\n      <div class=\"flex space-x-3\">\n        <button\n            @click=\"unmaskAll = !unmaskAll\"\n            :class=\"[\n              'p-2 text-sm border border-border rounded-md transition-all',\n              unmaskAll ? 'bg-primary text-primary-foreground hover:bg-primary/90' : 'hover:bg-accent'\n            ]\"\n            :title=\"unmaskAll ? 'Hide all values' : 'Show all values'\"\n        >\n          <svg v-if=\"!unmaskAll\" class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"/>\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                  d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"/>\n          </svg>\n          <svg v-else class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                  d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\"/>\n          </svg>\n        </button>\n\n        <div class=\"relative\">\n          <input\n            ref=\"searchInput\"\n            v-model=\"searchQuery\"\n            type=\"text\"\n            placeholder=\"Search by secret key or value...\"\n            class=\"w-64 px-3 py-2 bg-input border border-border rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-ring\"\n          />\n          <svg class=\"absolute right-3 top-2.5 w-4 h-4 text-muted-foreground\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n          </svg>\n        </div>\n        \n        <button\n          v-if=\"permissions.write\"\n          @click=\"showAddDialog = true\"\n          class=\"flex items-center space-x-2 px-4 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors text-sm font-medium\"\n        >\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v16m8-8H4\" />\n          </svg>\n          <span>Add Secret</span>\n        </button>\n        \n        <TableActionsMenu\n          :vault=\"vault\"\n          :stage=\"stage\"\n          :secrets=\"secrets\"\n          :permissions=\"permissions\"\n          @imported=\"loadSecrets\"\n        />\n      </div>\n    </div>\n\n    <!-- Table -->\n    <div class=\"border border-border rounded-lg\">\n      <table class=\"w-full\" :class=\"loading && 'opacity-50 pointer-events-none'\">\n        <thead class=\"bg-muted\">\n          <tr>\n            <th class=\"w-3/12 text-left px-6 py-3 text-xs font-medium text-muted-foreground uppercase tracking-wider rounded-tl-lg\">Key</th>\n            <th class=\"w-6/12 text-left px-6 py-3 text-xs font-medium text-muted-foreground uppercase tracking-wider\">Value</th>\n            <th class=\"w-2/12 text-left px-6 py-3 text-xs font-medium text-muted-foreground uppercase tracking-wider\" title=\"Times shown in your local timezone\">Modified</th>\n            <th class=\"relative px-6 py-3 rounded-tr-lg\"><span class=\"sr-only\">Actions</span></th>\n          </tr>\n        </thead>\n        <tbody class=\"divide-y divide-border\">\n          <tr v-for=\"secret in secrets\" :key=\"secret.key\" class=\"group hover:bg-muted/30 transition-colors\">\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n              {{ secret.key }}\n            </td>\n            <td class=\"px-6 py-4 text-sm\">\n              <SecretValue\n                :secret=\"secret\"\n                :value=\"secret.value\" \n                :masked=\"!unmaskAll && !unmaskedKeys.has(secret.key)\" \n                @toggle=\"toggleMask(secret.key)\" \n              />\n            </td>\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-muted-foreground\">\n              {{ formatDate(secret.modified) }}\n            </td>\n            <td class=\"px-6 py-4 whitespace-nowrap text-right text-sm\">\n              <div class=\"flex items-center justify-end opacity-30 group-hover:opacity-100 transition-opacity\">\n                <Tooltip v-if=\"permissions.write\" content=\"Edit\" :delay-duration=\"200\">\n                  <button\n                    @click=\"editSecret({ key: secret.key, value: secret.value, vault, stage })\"\n                    class=\"p-1.5 text-muted-foreground hover:text-foreground hover:bg-muted rounded transition-colors\"\n                  >\n                    <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"></path>\n                    </svg>\n                  </button>\n                </Tooltip>\n                <Tooltip v-if=\"permissions.write\" content=\"Rename\" :delay-duration=\"200\">\n                  <button\n                    @click=\"showRenameDialog({ key: secret.key, value: secret.value, vault, stage })\"\n                    class=\"p-1.5 text-muted-foreground hover:text-foreground hover:bg-muted rounded transition-colors\"\n                  >\n                    <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"></path>\n                    </svg>\n                  </button>\n                </Tooltip>\n<!--                <Tooltip content=\"Copy Value\" :delay-duration=\"200\">-->\n<!--                  <button-->\n<!--                    @click=\"handleCopyValue({ key: secret.key, value: secret.value, vault, stage })\"-->\n<!--                    class=\"p-1.5 text-muted-foreground hover:text-foreground hover:bg-muted rounded transition-colors\"-->\n<!--                  >-->\n<!--                    <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">-->\n<!--                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"></path>-->\n<!--                    </svg>-->\n<!--                  </button>-->\n<!--                </Tooltip>-->\n                <Tooltip v-if=\"permissions.write\" content=\"Copy to Stage\" :delay-duration=\"200\">\n                  <button\n                    @click=\"showCopyToStageDialog({ key: secret.key, value: secret.value, vault, stage })\"\n                    class=\"p-1.5 text-muted-foreground hover:text-foreground hover:bg-muted rounded transition-colors\"\n                  >\n                    <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4\"></path>\n                    </svg>\n                  </button>\n                </Tooltip>\n                <Tooltip v-if=\"permissions.history\" content=\"History\" :delay-duration=\"200\">\n                  <button\n                    @click=\"showHistoryDialog({ key: secret.key, vault, stage })\"\n                    class=\"p-1.5 text-muted-foreground hover:text-foreground hover:bg-muted rounded transition-colors\"\n                  >\n                    <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                    </svg>\n                  </button>\n                </Tooltip>\n                <Tooltip v-if=\"permissions.delete\" content=\"Delete\" :delay-duration=\"200\">\n                  <button\n                    @click=\"showDeleteDialog({ key: secret.key, vault, stage })\"\n                    class=\"p-1.5 text-muted-foreground hover:text-destructive hover:bg-destructive/10 rounded transition-colors\"\n                  >\n                    <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\n                    </svg>\n                  </button>\n                </Tooltip>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div v-if=\"!loading && secrets.length === 0\" class=\"p-8 text-center text-muted-foreground\">\n        No secrets found\n      </div>\n    </div>\n\n    <!-- Add/Edit Dialog -->\n    <SecretDialog\n      v-if=\"showAddDialog || editingSecret\"\n      :secret=\"editingSecret\"\n      :vault=\"editingSecret ? editingSecret.vault : vault\"\n      :stage=\"editingSecret ? editingSecret.stage : stage\"\n      @success=\"handleSecretSaveSuccess\"\n      @close=\"closeDialog\"\n    />\n    \n    <!-- Rename Dialog -->\n    <RenameDialog\n      v-if=\"renamingSecret\"\n      :currentKey=\"renamingSecret.key\"\n      :vault=\"vault\"\n      :stage=\"stage\"\n      @success=\"handleRenameSuccess\"\n      @close=\"renamingSecret = null\"\n    />\n    \n    <!-- Copy to Stage Dialog -->\n    <CopyToStageDialog\n      v-if=\"copyingSecret\"\n      :secretKey=\"copyingSecret.key\"\n      :currentVault=\"vault\"\n      :currentStage=\"stage\"\n      :vaults=\"vaults\"\n      :stages=\"stages\"\n      @copy=\"handleCopyToStage\"\n      @close=\"copyingSecret = null\"\n    />\n    \n    <!-- History Dialog -->\n    <HistoryDialog\n      v-if=\"historySecret\"\n      :secretKey=\"historySecret.key\"\n      :vault=\"vault\"\n      :stage=\"stage\"\n      @refresh=\"loadSecrets\"\n      @close=\"historySecret = null\"\n    />\n    \n    <!-- Delete Confirm Dialog -->\n    <DeleteConfirmDialog\n      v-if=\"deletingSecret\"\n      :secretKey=\"deletingSecret.key\"\n      :vault=\"vault\"\n      :stage=\"stage\"\n      @success=\"handleDeleteSuccess\"\n      @close=\"deletingSecret = null\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted, watch, computed } from 'vue'\nimport VaultStageSelector from './VaultStageSelector.vue'\nimport SecretValue from './SecretValue.vue'\nimport SecretDialog from './SecretDialog.vue'\nimport RenameDialog from './RenameDialog.vue'\nimport CopyToStageDialog from './CopyToStageDialog.vue'\nimport HistoryDialog from './HistoryDialog.vue'\nimport DeleteConfirmDialog from './DeleteConfirmDialog.vue'\nimport TableActionsMenu from './TableActionsMenu.vue'\nimport Tooltip from './ui/Tooltip.vue'\nimport { useToast } from '../composables/useToast'\nimport { useVault } from '../composables/useVault'\nimport { useSecrets } from '../composables/useSecrets'\nimport { useKeyboardShortcuts } from '../composables/useKeyboardShortcuts'\nimport { formatDate } from '../utils/formatters'\n\nconst emit = defineEmits(['refresh'])\nconst toast = useToast()\nconst { vaults, stages, settings, loadAll: loadVaultData } = useVault()\nconst { secrets: allSecrets, loading, loadSecrets: fetchSecrets, copySecretToStage } = useSecrets()\nconst { registerSearchHandler, registerModalCloseHandler, registerMaskToggleHandler } = useKeyboardShortcuts()\n\nconst vault = ref(localStorage.getItem('keep.secrets.vault') || '')\nconst stage = ref(localStorage.getItem('keep.secrets.stage') || '')\nconst searchQuery = ref('')\nconst searchInput = ref(null)\nconst unmaskAll = ref(false)\nconst unmaskedKeys = ref(new Set())\nconst showAddDialog = ref(false)\nconst editingSecret = ref(null)\nconst renamingSecret = ref(null)\nconst copyingSecret = ref(null)\nconst historySecret = ref(null)\nconst deletingSecret = ref(null)\n\n// Filter secrets client-side based on search query\nconst secrets = computed(() => {\n  if (!searchQuery.value) {\n    return allSecrets.value\n  }\n  \n  const query = searchQuery.value.toLowerCase()\n  return allSecrets.value.filter(secret => {\n    // Search in both key name and value\n    const keyMatches = secret.key.toLowerCase().includes(query)\n    const valueMatches = secret.value && secret.value.toLowerCase().includes(query)\n    return keyMatches || valueMatches\n  })\n})\n\n// Get permissions for current vault and stage\nconst permissions = computed(() => {\n  const currentVault = vaults.value.find(v => v.slug === vault.value)\n  if (!currentVault || !currentVault.permissions || !stage.value) {\n    // If no permissions are cached, assume full permissions for backward compatibility\n    return { list: true, read: true, write: true, delete: true, history: true }\n  }\n  \n  const stagePerms = currentVault.permissions[stage.value] || []\n  return {\n    list: stagePerms.includes('list'),\n    read: stagePerms.includes('read'),\n    write: stagePerms.includes('write'),\n    delete: stagePerms.includes('delete'),\n    history: stagePerms.includes('history')\n  }\n})\n\n// Keyboard shortcut cleanup functions\nlet cleanupModalHandler = null\n\nonMounted(async () => {\n  await loadVaultsAndStages()\n  await loadSecrets()\n  \n  // Register keyboard shortcut handlers\n  registerSearchHandler(() => {\n    if (searchInput.value) {\n      searchInput.value.focus()\n    }\n  })\n  \n  // Register modal close handlers for all dialogs\n  cleanupModalHandler = registerModalCloseHandler(() => {\n    showAddDialog.value = false\n    editingSecret.value = null\n    renamingSecret.value = null\n    copyingSecret.value = null\n    historySecret.value = null\n    deletingSecret.value = null\n  })\n  \n  // Register mask toggle handler\n  registerMaskToggleHandler(() => {\n    unmaskAll.value = !unmaskAll.value\n  })\n})\n\nonUnmounted(() => {\n  // Clean up modal handler\n  if (cleanupModalHandler) {\n    cleanupModalHandler()\n  }\n})\n\nwatch(() => [vault.value, stage.value], () => {\n  // Save to localStorage\n  if (vault.value) localStorage.setItem('keep.secrets.vault', vault.value)\n  if (stage.value) localStorage.setItem('keep.secrets.stage', stage.value)\n  \n  loadSecrets()\n})\n\nasync function loadVaultsAndStages() {\n  try {\n    await loadVaultData()\n    \n    // Set defaults only if no saved value\n    if (!vault.value) {\n      const defaultVault = settings.value.default_vault\n      if (defaultVault) {\n        vault.value = defaultVault\n        localStorage.setItem('keep.secrets.vault', vault.value)\n      } else if (vaults.value.length > 0) {\n        vault.value = vaults.value[0].slug || vaults.value[0]\n        localStorage.setItem('keep.secrets.vault', vault.value)\n      }\n    }\n    if (!stage.value && stages.value.length) {\n      stage.value = stages.value[0]\n      localStorage.setItem('keep.secrets.stage', stage.value)\n    }\n  } catch (error) {\n    // Failed to load vaults and stages\n  }\n}\n\nasync function loadSecrets() {\n  if (!vault.value || !stage.value) return\n  \n  try {\n    // Always load all secrets - filtering is done client-side\n    await fetchSecrets(vault.value, stage.value, true)\n  } catch (error) {\n    // Failed to load secrets\n  }\n}\n\nfunction toggleMask(key) {\n  if (unmaskedKeys.value.has(key)) {\n    unmaskedKeys.value.delete(key)\n  } else {\n    unmaskedKeys.value.add(key)\n  }\n}\n\nfunction editSecret(data) {\n  editingSecret.value = data\n}\n\nasync function handleSecretSaveSuccess() {\n  closeDialog()\n  await loadSecrets()\n}\n\nfunction showRenameDialog(data) {\n  renamingSecret.value = data\n}\n\nfunction showCopyToStageDialog(data) {\n  copyingSecret.value = data\n}\n\nfunction showHistoryDialog(data) {\n  historySecret.value = data\n}\n\nfunction showDeleteDialog(data) {\n  deletingSecret.value = data\n}\n\nfunction handleCopyValue(data) {\n  if (data.value) {\n    navigator.clipboard.writeText(data.value)\n    toast.success('Copied to clipboard', 'Secret value has been copied to your clipboard')\n  }\n}\n\nasync function handleDeleteSuccess() {\n  deletingSecret.value = null\n  await loadSecrets()\n}\n\nasync function handleRenameSuccess() {\n  renamingSecret.value = null\n  await loadSecrets()\n}\n\nasync function handleCopyToStage({ targetVault, targetStage }) {\n  try {\n    await copySecretToStage(\n      copyingSecret.value.key, \n      targetStage, \n      targetVault, \n      copyingSecret.value.stage,\n      copyingSecret.value.vault\n    )\n    toast.success('Secret copied', `Secret '${copyingSecret.value.key}' copied to ${targetVault}:${targetStage}`)\n    copyingSecret.value = null\n  } catch (error) {\n    console.error('Failed to copy secret:', error)\n    toast.error('Failed to copy secret', error.message)\n  }\n}\n\nfunction closeDialog() {\n  showAddDialog.value = false\n  editingSecret.value = null\n}\n</script>","<template>\n  <div class=\"relative inline-block text-left\">\n    <button\n      ref=\"buttonRef\"\n      @click=\"toggleMenu\"\n      :class=\"['p-1 rounded hover:bg-black/20 transition-colors', buttonClass]\"\n    >\n      <svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n        <path d=\"M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z\"/>\n      </svg>\n    </button>\n    \n    <Teleport to=\"body\" v-if=\"isOpen\">\n      <div\n        :style=\"menuStyle\"\n        class=\"absolute w-48 bg-popover border border-border rounded-md shadow-lg z-50\"\n      >\n        <div class=\"py-1 flex flex-col\">\n          <button\n            v-if=\"showEdit\"\n            @click=\"handleEdit\"\n            class=\"w-full text-left px-4 py-2 text-sm hover:bg-accent transition-colors\"\n          >\n            Edit\n          </button>\n          <button\n            v-if=\"showRename\"\n            @click=\"handleRename\"\n            class=\"w-full text-left px-4 py-2 text-sm hover:bg-accent transition-colors\"\n          >\n            Rename\n          </button>\n          <button\n            v-if=\"showCreate\"\n            @click=\"handleCreate\"\n            class=\"w-full text-left px-4 py-2 text-sm hover:bg-accent transition-colors\"\n          >\n            Create\n          </button>\n          <button\n            v-if=\"showCopyValue\"\n            @click=\"handleCopyValue\"\n            class=\"w-full text-left px-4 py-2 text-sm hover:bg-accent transition-colors\"\n          >\n            Copy Value\n          </button>\n          <button\n            v-if=\"showCopyTo\"\n            @click=\"handleCopyTo\"\n            class=\"w-full text-left px-4 py-2 text-sm hover:bg-accent transition-colors\"\n          >\n            Copy To...\n          </button>\n          <button\n            v-if=\"showHistory\"\n            @click=\"handleHistory\"\n            class=\"w-full text-left px-4 py-2 text-sm hover:bg-accent transition-colors\"\n          >\n            History\n          </button>\n          <button\n            v-if=\"showDelete\"\n            @click=\"handleDelete\"\n            class=\"w-full text-left px-4 py-2 text-sm text-destructive hover:bg-accent transition-colors\"\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </Teleport>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted } from 'vue'\n\nconst props = defineProps({\n  secretKey: {\n    type: String,\n    required: true\n  },\n  secretValue: {\n    type: String,\n    default: null\n  },\n  vault: {\n    type: String,\n    required: true\n  },\n  stage: {\n    type: String,\n    required: true\n  },\n  showEdit: {\n    type: Boolean,\n    default: true\n  },\n  showRename: {\n    type: Boolean,\n    default: true\n  },\n  showCreate: {\n    type: Boolean,\n    default: false\n  },\n  showCopyValue: {\n    type: Boolean,\n    default: true\n  },\n  showCopyTo: {\n    type: Boolean,\n    default: true\n  },\n  showDelete: {\n    type: Boolean,\n    default: true\n  },\n  showHistory: {\n    type: Boolean,\n    default: true\n  },\n  buttonClass: {\n    type: String,\n    default: ''\n  }\n})\n\nconst emit = defineEmits(['edit', 'rename', 'create', 'copyValue', 'copyTo', 'delete', 'history', 'refresh'])\n\nconst isOpen = ref(false)\nconst menuStyle = ref({})\nconst buttonRef = ref(null)\n\nfunction toggleMenu(event) {\n  event.stopPropagation()\n  \n  if (isOpen.value) {\n    isOpen.value = false\n  } else {\n    // Close any other open menus by dispatching a custom event\n    document.dispatchEvent(new CustomEvent('close-all-menus'))\n    \n    const button = event.currentTarget\n    const rect = button.getBoundingClientRect()\n    \n    // Menu dimensions\n    const menuWidth = 192 // 192px = 48rem (w-48)\n    // Calculate approximate menu height based on visible items (40px per item + 8px padding)\n    const visibleItems = [\n      props.showEdit, props.showRename, props.showCreate,\n      props.showCopyValue, props.showCopyTo, props.showHistory, props.showDelete\n    ].filter(Boolean).length\n    const menuHeight = (visibleItems * 40) + 8\n    \n    // Calculate position with scroll offset (for absolute positioning)\n    let left = rect.right - menuWidth\n    let top = rect.bottom + 4 + window.scrollY\n    \n    // Check if menu would go below viewport\n    const wouldGoBelow = rect.bottom + menuHeight > window.innerHeight\n    \n    // If near bottom of viewport, position above the button\n    if (wouldGoBelow && rect.top > menuHeight) {\n      top = rect.top - menuHeight + 16 + window.scrollY  // +16 instead of -4 to reduce gap\n    }\n    \n    // Ensure menu doesn't go off left edge\n    if (left < 0) {\n      left = rect.left\n    }\n    \n    menuStyle.value = {\n      left: `${left}px`,\n      top: `${top}px`\n    }\n    \n    // Small delay to prevent immediate closing\n    setTimeout(() => {\n      isOpen.value = true\n    }, 0)\n  }\n}\n\nfunction handleEdit() {\n  emit('edit', { key: props.secretKey, value: props.secretValue, vault: props.vault, stage: props.stage })\n  isOpen.value = false\n}\n\nfunction handleRename() {\n  emit('rename', { key: props.secretKey, value: props.secretValue, vault: props.vault, stage: props.stage })\n  isOpen.value = false\n}\n\nfunction handleCreate() {\n  emit('create', { key: props.secretKey, vault: props.vault, stage: props.stage })\n  isOpen.value = false\n}\n\nfunction handleCopyValue() {\n  if (props.secretValue) {\n    navigator.clipboard.writeText(props.secretValue)\n  }\n  emit('copyValue', { key: props.secretKey, vault: props.vault, stage: props.stage })\n  isOpen.value = false\n}\n\nfunction handleCopyTo() {\n  emit('copyTo', { key: props.secretKey, value: props.secretValue, vault: props.vault, stage: props.stage })\n  isOpen.value = false\n}\n\nfunction handleHistory() {\n  emit('history', { key: props.secretKey, vault: props.vault, stage: props.stage })\n  isOpen.value = false\n}\n\nfunction handleDelete() {\n  emit('delete', { key: props.secretKey, vault: props.vault, stage: props.stage })\n  isOpen.value = false\n}\n\n// Close menu when clicking outside\nfunction handleClickOutside(event) {\n  if (isOpen.value && buttonRef.value && !buttonRef.value.contains(event.target)) {\n    isOpen.value = false\n  }\n}\n\n// Close this menu when another menu opens\nfunction handleCloseAllMenus() {\n  isOpen.value = false\n}\n\n// Close menu when scrolling (since position becomes stale)\nfunction handleScroll() {\n  if (isOpen.value) {\n    isOpen.value = false\n  }\n}\n\nonMounted(() => {\n  document.addEventListener('click', handleClickOutside)\n  document.addEventListener('close-all-menus', handleCloseAllMenus)\n  window.addEventListener('scroll', handleScroll, true) // Use capture to catch all scroll events\n})\n\nonUnmounted(() => {\n  document.removeEventListener('click', handleClickOutside)\n  document.removeEventListener('close-all-menus', handleCloseAllMenus)\n  window.removeEventListener('scroll', handleScroll, true)\n})\n</script>","<template>\n  <div>\n    <!-- Controls -->\n    <div class=\"mb-6 flex justify-between\">\n      <div class=\"flex items-center space-x-4\">\n        <!-- Combined Vault/Stage Dropdown -->\n        <div class=\"relative\">\n          <button\n              @click=\"showCombinationsDropdown = !showCombinationsDropdown\"\n              class=\"flex items-center space-x-2 px-3 py-2 bg-input border border-border rounded-md text-sm hover:bg-accent transition-colors\"\n          >\n            <span v-if=\"availableVaults.length > 1\">Toggle Vaults / Stages ({{ selectedCombinations.length }}/{{ availableCombinations.length }})</span>\n            <span v-else>Toggle Stages ({{ selectedCombinations.length }}/{{ availableCombinations.length }})</span>\n            <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"/>\n            </svg>\n          </button>\n\n          <div v-if=\"showCombinationsDropdown\" class=\"absolute top-full left-0 mt-1 bg-popover border border-border rounded-md shadow-lg z-20\">\n            <div class=\"p-2 space-y-1 max-h-96 overflow-y-auto\" style=\"min-width: max-content;\">\n              <label\n                  v-for=\"combo in availableCombinations\"\n                  :key=\"combo.key\"\n                  class=\"flex items-center px-2 py-1.5 hover:bg-accent rounded cursor-pointer whitespace-nowrap\"\n              >\n                <input\n                    type=\"checkbox\"\n                    :value=\"combo.key\"\n                    v-model=\"selectedCombinations\"\n                    class=\"mr-3 rounded border-border bg-input text-primary focus:ring-2 focus:ring-ring\"\n                />\n                <span class=\"text-sm\">\n                  <span v-if=\"availableVaults.length > 1\">{{ combo.vaultDisplay }} ({{ combo.vault }})</span>\n                  <span v-if=\"availableVaults.length > 1\" class=\"mx-2 text-muted-foreground\">/</span>\n                  <strong>{{ combo.stage }}</strong>\n                </span>\n              </label>\n            </div>\n          </div>\n        </div>\n\n        <!-- Quick Actions -->\n        <div class=\"flex items-center space-x-2 text-sm\">\n          <button\n              @click=\"selectAll\"\n              class=\"text-muted-foreground hover:text-foreground transition-colors\"\n          >\n            Select All\n          </button>\n          <span class=\"text-muted-foreground\">|</span>\n          <button\n              @click=\"selectNone\"\n              class=\"text-muted-foreground hover:text-foreground transition-colors\"\n          >\n            Clear All\n          </button>\n        </div>\n      </div>\n\n      <!-- Right side controls -->\n      <div class=\"flex space-x-2\">\n        <button\n            @click=\"toggleRowColors\"\n            :class=\"[\n              'p-2 text-sm border border-border rounded-md transition-all',\n              showRowColors ? 'bg-primary text-primary-foreground hover:bg-primary/90' : 'hover:bg-accent'\n            ]\"\n            title=\"Toggle row highlighting\">\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01\" />\n          </svg>\n        </button>\n        <button\n            @click=\"unmaskAll = !unmaskAll\"\n            :class=\"[\n              'p-2 text-sm border border-border rounded-md transition-all',\n              unmaskAll ? 'bg-primary text-primary-foreground hover:bg-primary/90' : 'hover:bg-accent'\n            ]\"\n            :title=\"unmaskAll ? 'Hide all values' : 'Show all values'\"\n        >\n          <svg v-if=\"!unmaskAll\" class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"/>\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                  d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"/>\n          </svg>\n          <svg v-else class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                  d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\"/>\n          </svg>\n        </button>\n\n        <!-- Search field -->\n        <div class=\"relative\">\n          <input\n            ref=\"searchInput\"\n            v-model=\"searchQuery\"\n            type=\"text\"\n            placeholder=\"Search by key or value...\"\n            class=\"w-64 px-3 py-2 bg-input border border-border rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-ring\"\n          />\n          <svg class=\"absolute right-3 top-2.5 w-4 h-4 text-muted-foreground\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n          </svg>\n        </div>\n\n      </div>\n    </div>\n\n    <!-- Loading State -->\n    <div v-if=\"loading\" class=\"text-center py-12\">\n      <div class=\"inline-flex items-center space-x-2 text-muted-foreground\">\n        <div class=\"animate-spin rounded-full h-5 w-5 border-2 border-primary border-t-transparent\"></div>\n        <span>Loading comparison matrix...</span>\n      </div>\n    </div>\n\n    <!-- Diff Matrix -->\n    <div v-else-if=\"diffMatrix && Object.keys(diffMatrix).length > 0\" class=\"border border-border rounded-lg overflow-y-visible overflow-x-auto\">\n      <table class=\"w-full\">\n        <thead class=\"bg-muted sticky top-0 z-10\">\n        <tr>\n          <th class=\"text-left px-4 py-3 text-xs font-medium text-muted-foreground uppercase tracking-wider sticky left-0 bg-muted z-20 min-w-[200px]\">\n            Secret Key\n          </th>\n          <th\n              v-for=\"column in activeColumns\"\n              :key=\"column\"\n              class=\"px-4 py-3 text-xs font-medium text-muted-foreground uppercase tracking-wider text-center border-l border-border min-w-[80px]\"\n          >\n            <div class=\"flex flex-col\">\n              <span class=\"font-semibold\">{{ column.vault }}</span>\n              <span class=\"text-[10px] opacity-75\">{{ column.stage }}</span>\n            </div>\n          </th>\n        </tr>\n        </thead>\n        <tbody class=\"divide-y divide-border\">\n        <tr v-for=\"key in sortedKeys\" :key=\"key\" :class=\"getRowClass(key)\">\n          <td class=\"sticky left-0 z-10 border-r border-border p-0\">\n            <div class=\"bg-background\">\n              <div class=\"px-4 py-3 flex items-center space-x-2\" :class=\"getRowClass(key)\">\n                <span class=\"font-mono text-sm font-medium\">{{ key }}</span>\n                <button\n                    @click=\"toggleRowMask(key)\"\n                    class=\"p-1 rounded hover:bg-muted transition-colors\"\n                    :title=\"unmaskedRows.has(key) ? 'Hide values' : 'Show values'\"\n                >\n                  <svg v-if=\"!unmaskedRows.has(key)\" class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"/>\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                          d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"/>\n                  </svg>\n                  <svg v-else class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                          d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\"/>\n                  </svg>\n                </button>\n              </div>\n            </div>\n          </td>\n          <td\n              v-for=\"column in activeColumns\"\n              :key=\"`${key}-${column.vault}-${column.stage}`\"\n              class=\"px-4 py-3 text-left border-l border-border relative group\"\n              :class=\"getCellClass(key, column.vault, column.stage)\"\n          >\n            <div v-if=\"getSecretValue(key, column.vault, column.stage)\" class=\"flex items-center justify-between\">\n                <span class=\"font-mono text-sm break-all\">\n                  {{ getMaskedValue(key, column.vault, column.stage) }}\n                </span>\n              <SecretActionsMenu\n                :secretKey=\"key\"\n                :secretValue=\"getSecretValue(key, column.vault, column.stage)\"\n                :vault=\"column.vault\"\n                :stage=\"column.stage\"\n                :showRename=\"false\"\n                :buttonClass=\"'opacity-0 group-hover:opacity-100'\"\n                @edit=\"editSecret\"\n                @copyValue=\"handleCopyValue\"\n                @copyTo=\"showCopyToStageDialog\"\n                @history=\"showHistoryDialog\"\n                @delete=\"showDeleteDialog\"\n                @refresh=\"loadDiff\"\n              />\n            </div>\n            <div v-else class=\"flex items-center justify-between\">\n              <span class=\"text-muted-foreground text-sm\">—</span>\n              <SecretActionsMenu\n                :secretKey=\"key\"\n                :secretValue=\"null\"\n                :vault=\"column.vault\"\n                :stage=\"column.stage\"\n                :showEdit=\"false\"\n                :showRename=\"false\"\n                :showCreate=\"true\"\n                :showCopyValue=\"false\"\n                :showCopyTo=\"false\"\n                :showDelete=\"false\"\n                :showHistory=\"false\"\n                :buttonClass=\"'opacity-0 group-hover:opacity-100'\"\n                @create=\"createSecret\"\n              />\n            </div>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <!-- Empty State -->\n    <div v-else-if=\"!loading && diffMatrix !== null && Object.keys(diffMatrix).length === 0\" class=\"text-center py-12 text-muted-foreground\">\n      <svg class=\"mx-auto h-12 w-12 mb-4 opacity-50\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"/>\n      </svg>\n      <p>No secrets found in the selected vaults and stages</p>\n    </div>\n\n    <!-- No Selection State -->\n    <div v-else-if=\"!loading && selectedCombinations.length === 0\" class=\"text-center py-12 text-muted-foreground\">\n      <svg class=\"mx-auto h-12 w-12 mb-4 opacity-50\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"/>\n      </svg>\n      <p class=\"text-lg font-medium mb-2\">Select Vault/Stage Combinations</p>\n      <p class=\"text-sm\">Use the dropdown above to select at least one vault/stage combination</p>\n    </div>\n\n    <!-- Edit Secret Dialog -->\n    <SecretDialog\n      v-if=\"editingSecret\"\n      :secret=\"editingSecret.isNew ? null : editingSecret\"\n      :vault=\"editingSecret.vault\"\n      :stage=\"editingSecret.stage\"\n      :initialKey=\"editingSecret.isNew ? editingSecret.key : undefined\"\n      @success=\"handleSecretSaveSuccess\"\n      @close=\"editingSecret = null\"\n    />\n\n    <!-- Copy To Stage Modal -->\n    <div v-if=\"copyingSecret\" class=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\" @click.self=\"copyingSecret = null\">\n      <div class=\"bg-card border border-border rounded-lg p-6 w-full max-w-md\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h2 class=\"text-lg font-semibold\">Copy Secret</h2>\n          <button\n              @click=\"copyingSecret = null\"\n              class=\"p-1 rounded-md hover:bg-muted transition-colors\"\n          >\n            <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"/>\n            </svg>\n          </button>\n        </div>\n        <div class=\"space-y-4\">\n          <div>\n            <label class=\"block text-sm font-medium mb-1\">Key</label>\n            <input\n                type=\"text\"\n                :value=\"copyingSecret?.key\"\n                disabled\n                class=\"w-full px-3 py-2 bg-input border border-border rounded-md text-sm opacity-50\"\n            />\n          </div>\n          <div>\n            <label class=\"block text-sm font-medium mb-1\">From</label>\n            <input\n                type=\"text\"\n                :value=\"`${copyingSecret?.vault} / ${copyingSecret?.stage}`\"\n                disabled\n                class=\"w-full px-3 py-2 bg-input border border-border rounded-md text-sm opacity-50\"\n            />\n          </div>\n          <div>\n            <label class=\"block text-sm font-medium mb-1\">Copy To</label>\n            <select v-model=\"copyTarget\" class=\"w-full px-3 py-2 bg-input border border-border rounded-md text-sm\">\n              <option value=\"\">Select destination...</option>\n              <option\n                  v-for=\"combo in availableCombinations\"\n                  :key=\"combo.key\"\n                  :value=\"combo.key\"\n                  :disabled=\"combo.key === `${copyingSecret?.vault}:${copyingSecret?.stage}`\"\n              >\n                {{ combo.vaultDisplay }} / {{ combo.stage }}\n              </option>\n            </select>\n          </div>\n        </div>\n        <div class=\"flex justify-end space-x-2 mt-6\">\n          <button\n              @click=\"copyingSecret = null; copyTarget = ''\"\n              class=\"px-4 py-2 text-sm border border-border rounded-md hover:bg-muted transition-colors\"\n          >\n            Cancel\n          </button>\n          <button\n              @click=\"executeCopy\"\n              :disabled=\"!copyTarget\"\n              class=\"px-4 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors text-sm font-medium disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            Copy Secret\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Rename Dialog -->\n    <RenameDialog\n      v-if=\"renamingSecret\"\n      :currentKey=\"renamingSecret.key\"\n      :vault=\"renamingSecret.vault\"\n      :stage=\"renamingSecret.stage\"\n      @success=\"handleRenameSuccess\"\n      @close=\"renamingSecret = null\"\n    />\n    \n    <!-- Copy to Stage Dialog -->\n    <CopyToStageDialog\n      v-if=\"copyingSecretStage\"\n      :secretKey=\"copyingSecretStage.key\"\n      :currentVault=\"copyingSecretStage.vault\"\n      :currentStage=\"copyingSecretStage.stage\"\n      :vaults=\"availableVaults\"\n      :stages=\"availableStages\"\n      @copy=\"handleCopyToStage\"\n      @close=\"copyingSecretStage = null\"\n    />\n    \n    <!-- History Dialog -->\n    <HistoryDialog\n      v-if=\"historySecret\"\n      :secretKey=\"historySecret.key\"\n      :vault=\"historySecret.vault\"\n      :stage=\"historySecret.stage\"\n      @refresh=\"loadDiff\"\n      @close=\"historySecret = null\"\n    />\n    \n    <!-- Delete Confirm Dialog -->\n    <DeleteConfirmDialog\n      v-if=\"deletingSecret\"\n      :secretKey=\"deletingSecret.key\"\n      :vault=\"deletingSecret.vault\"\n      :stage=\"deletingSecret.stage\"\n      @success=\"handleDeleteSuccess\"\n      @close=\"deletingSecret = null\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport {ref, computed, onMounted, onUnmounted, watch} from 'vue'\nimport {useToast} from '../composables/useToast'\nimport {useVault} from '../composables/useVault'\nimport {useSecrets} from '../composables/useSecrets'\nimport {useKeyboardShortcuts} from '../composables/useKeyboardShortcuts'\nimport {maskValue} from '../utils/formatters'\nimport SecretActionsMenu from './SecretActionsMenu.vue'\nimport SecretDialog from './SecretDialog.vue'\nimport RenameDialog from './RenameDialog.vue'\nimport CopyToStageDialog from './CopyToStageDialog.vue'\nimport HistoryDialog from './HistoryDialog.vue'\nimport DeleteConfirmDialog from './DeleteConfirmDialog.vue'\n\nconst toast = useToast()\nconst { vaults: availableVaults, stages: availableStages, loadAll: loadVaultData } = useVault()\nconst { copySecretToStage } = useSecrets()\nconst { registerSearchHandler, registerModalCloseHandler, registerMaskToggleHandler } = useKeyboardShortcuts()\n\n// State\nconst selectedCombinations = ref([])\nconst availableCombinations = ref([])\nconst fullDiffMatrix = ref(null) // Store all data from server\nconst loading = ref(false)\nconst unmaskAll = ref(false)\nconst unmaskedRows = ref(new Set())\nconst showCombinationsDropdown = ref(false)\nconst activeCellMenu = ref(null)\nconst menuPosition = ref(null)\nconst activeMenuData = ref(null)\nconst editingSecret = ref(null)\nconst renamingSecret = ref(null)\nconst copyingSecretStage = ref(null)\nconst copyingSecret = ref(null)\nconst copyTarget = ref('')\nconst historySecret = ref(null)\nconst deletingSecret = ref(null)\nconst searchQuery = ref('')\nconst searchInput = ref(null)\nconst showRowColors = ref(localStorage.getItem('keep.diff.showColors') !== 'false') // Default true\n\n// Toggle row colors and persist preference\nfunction toggleRowColors() {\n  showRowColors.value = !showRowColors.value\n  localStorage.setItem('keep.diff.showColors', showRowColors.value.toString())\n}\n\n// Computed columns based on selected combinations\nconst activeColumns = computed(() => {\n  return selectedCombinations.value.map(key => {\n    const [vault, stage] = key.split(':')\n    // Find the vault display name\n    const vaultObj = availableVaults.value.find(v => (v.slug || v.name || v) === vault)\n    const vaultDisplay = vaultObj?.name || vaultObj?.display || vault\n    return {vault, stage, vaultDisplay}\n  })\n})\n\n// Save selections when they change\nwatch(selectedCombinations, (newVal) => {\n  localStorage.setItem('keep.diff.selections', JSON.stringify(newVal))\n}, {deep: true})\n\n// Filter the diff matrix based on selected combinations and search query\nconst diffMatrix = computed(() => {\n  if (!fullDiffMatrix.value) return {}\n  if (selectedCombinations.value.length === 0) return {}\n\n  const query = searchQuery.value.toLowerCase().trim()\n  const filteredDiff = {}\n  \n  for (const [key, vaultData] of Object.entries(fullDiffMatrix.value)) {\n    let hasSelectedCombination = false\n    const filteredVaultData = {}\n    \n    // Check if key matches search query\n    let matchesSearch = !query || key.toLowerCase().includes(query)\n\n    for (const [vault, stageData] of Object.entries(vaultData)) {\n      const filteredStageData = {}\n      for (const [stage, value] of Object.entries(stageData)) {\n        if (selectedCombinations.value.includes(`${vault}:${stage}`)) {\n          filteredStageData[stage] = value\n          hasSelectedCombination = true\n          \n          // Check if value matches search query (only for visible columns)\n          if (!matchesSearch && query && value) {\n            matchesSearch = value.toLowerCase().includes(query)\n          }\n        }\n      }\n      if (Object.keys(filteredStageData).length > 0) {\n        filteredVaultData[vault] = filteredStageData\n      }\n    }\n\n    // Only include if it has selected combinations AND matches search\n    if (hasSelectedCombination && matchesSearch) {\n      filteredDiff[key] = filteredVaultData\n    }\n  }\n\n  return filteredDiff\n})\n\n// Get sorted keys for display\nconst sortedKeys = computed(() => {\n  return Object.keys(diffMatrix.value).sort((a, b) => a.localeCompare(b))\n})\n\n// Get the status of a secret row\nfunction getRowStatus(key) {\n  if (!diffMatrix.value[key]) return 'incomplete'\n\n  const values = []\n  let totalExpected = activeColumns.value.length\n  let totalFound = 0\n\n  for (const column of activeColumns.value) {\n    const value = getSecretValue(key, column.vault, column.stage)\n    if (value !== null && value !== undefined) {\n      values.push(value)\n      totalFound++\n    }\n  }\n\n  // If not present in all combinations, it's incomplete\n  if (totalFound < totalExpected) {\n    return 'incomplete'\n  }\n\n  // If all values are identical, it's identical\n  if (new Set(values).size === 1) {\n    return 'identical'\n  }\n\n  // Otherwise, it's different\n  return 'different'\n}\n\n// Get the CSS class for a row based on its status\nfunction getRowClass(key) {\n  if (!showRowColors.value) return ''\n  const status = getRowStatus(key)\n  switch (status) {\n    case 'incomplete':\n      return 'bg-red-500/40'\n    case 'identical':\n      return 'bg-green-500/40'\n    case 'different':\n      return 'bg-yellow-500/40'\n    default:\n      return ''\n  }\n}\n\n\n// Close dropdowns when clicking outside\n// Keyboard shortcut cleanup functions\nlet cleanupModalHandler = null\n\nonMounted(() => {\n  document.addEventListener('click', handleClickOutside)\n  loadInitialData()\n  \n  // Register keyboard shortcut handlers\n  registerSearchHandler(() => {\n    if (searchInput.value) {\n      searchInput.value.focus()\n    }\n  })\n  \n  // Register modal close handlers for all dialogs\n  cleanupModalHandler = registerModalCloseHandler(() => {\n    editingSecret.value = null\n    renamingSecret.value = null\n    copyingSecret.value = null\n    historySecret.value = null\n    deletingSecret.value = null\n  })\n  \n  // Register mask toggle handler\n  registerMaskToggleHandler(() => {\n    unmaskAll.value = !unmaskAll.value\n  })\n})\n\nonUnmounted(() => {\n  document.removeEventListener('click', handleClickOutside)\n  // Clean up modal handler\n  if (cleanupModalHandler) {\n    cleanupModalHandler()\n  }\n})\n\nfunction handleClickOutside(e) {\n  if (!e.target.closest('.relative')) {\n    showCombinationsDropdown.value = false\n  }\n  // Close menu if clicking outside of it\n  if (activeCellMenu.value && !e.target.closest('[data-menu-key]')) {\n    activeCellMenu.value = null\n    menuPosition.value = null\n    activeMenuData.value = null\n  }\n}\n\nasync function loadInitialData() {\n  try {\n    await loadVaultData()\n\n    // Build all combinations\n    availableCombinations.value = []\n    for (const vault of availableVaults.value) {\n      for (const stage of availableStages.value) {\n        const vaultSlug = vault.slug || vault.name || vault\n        availableCombinations.value.push({\n          key: `${vaultSlug}:${stage}`,\n          vault: vaultSlug,\n          vaultDisplay: vault.display || vault,\n          stage: stage\n        })\n      }\n    }\n\n    // Load saved selections or select all by default\n    const savedSelections = localStorage.getItem('keep.diff.selections')\n    if (savedSelections) {\n      try {\n        const saved = JSON.parse(savedSelections)\n        // Only use saved selections that are still valid\n        selectedCombinations.value = saved.filter(s =>\n            availableCombinations.value.some(c => c.key === s)\n        )\n      } catch (e) {\n        // If parsing fails, select all\n        selectedCombinations.value = availableCombinations.value.map(c => c.key)\n      }\n    } else {\n      // Select all by default\n      selectedCombinations.value = availableCombinations.value.map(c => c.key)\n    }\n\n    // Load diff automatically\n    await loadDiff()\n  } catch (error) {\n    console.error('Failed to load initial data:', error)\n    toast.error('Failed to load data', error.message)\n  }\n}\n\nasync function loadDiff() {\n  // Load ALL vaults and stages from the server once\n  const vaults = availableVaults.value.map(v => v.slug || v.name || v)\n  const stages = [...availableStages.value]\n\n  loading.value = true\n\n  try {\n    const data = await window.$api.getDiff(stages, vaults)\n    fullDiffMatrix.value = data.diff || {}\n  } catch (error) {\n    console.error('Failed to load diff:', error)\n    toast.error('Failed to load comparison', error.message)\n    fullDiffMatrix.value = {}\n  } finally {\n    loading.value = false\n  }\n}\n\nfunction getSecretValue(key, vault, stage) {\n  if (!diffMatrix.value[key]) return null\n  if (!diffMatrix.value[key][vault]) return null\n  return diffMatrix.value[key][vault][stage] || null\n}\n\nfunction getCellClass(key, vault, stage) {\n  const value = getSecretValue(key, vault, stage)\n  if (!value) return 'bg-muted/30'\n  return ''\n}\n\nfunction toggleRowMask(key) {\n  if (unmaskedRows.value.has(key)) {\n    unmaskedRows.value.delete(key)\n  } else {\n    unmaskedRows.value.add(key)\n  }\n}\n\nfunction getMaskedValue(key, vault, stage) {\n  const value = getSecretValue(key, vault, stage)\n  if (!value) return ''\n\n  // Check if row is unmasked or global unmask is on\n  if (unmaskAll.value || unmaskedRows.value.has(key)) {\n    return value\n  }\n\n  return maskValue(value, '•')\n}\n\n// Cell menu functionality is now handled by SecretActionsMenu component\n\nfunction createSecret(data) {\n  editingSecret.value = {key: data.key, vault: data.vault, stage: data.stage, value: '', isNew: true}\n}\n\nfunction editSecret(data) {\n  editingSecret.value = {key: data.key, vault: data.vault, stage: data.stage, value: data.value}\n}\n\nfunction showCopyToStageDialog(data) {\n  copyingSecretStage.value = {key: data.key, vault: data.vault, stage: data.stage, value: data.value}\n}\n\nfunction showHistoryDialog(data) {\n  historySecret.value = {key: data.key, vault: data.vault, stage: data.stage}\n}\n\nfunction showDeleteDialog(data) {\n  deletingSecret.value = {key: data.key, vault: data.vault, stage: data.stage}\n}\n\nfunction handleCopyValue(data) {\n  toast.success('Copied to clipboard', 'Secret value has been copied to your clipboard')\n}\n\nasync function handleDeleteSuccess() {\n  await loadDiff()\n  deletingSecret.value = null\n}\n\nfunction copyToStage(key, vault, stage) {\n  copyingSecret.value = {key, vault, stage, value: getSecretValue(key, vault, stage)}\n}\n\n// Delete secret is now handled by SecretActionsMenu component\n\nasync function handleSecretSaveSuccess() {\n  editingSecret.value = null\n  await loadDiff()\n}\n\nasync function executeCopy() {\n  if (!copyingSecret.value || !copyTarget.value) return\n\n  const [targetVault, targetStage] = copyTarget.value.split(':')\n\n  try {\n    await copySecretToStage(\n        copyingSecret.value.key,\n        targetStage,\n        targetVault,\n        copyingSecret.value.stage,\n        copyingSecret.value.vault\n    )\n    toast.success('Secret copied', `Copied '${copyingSecret.value.key}' to ${targetVault}:${targetStage}`)\n    copyingSecret.value = null\n    copyTarget.value = ''\n    await loadDiff()\n  } catch (error) {\n    toast.error('Copy failed', error.message)\n  }\n}\n\nfunction selectAll() {\n  selectedCombinations.value = availableCombinations.value.map(c => c.key)\n}\n\nfunction selectNone() {\n  selectedCombinations.value = []\n}\n\nasync function handleCopyToStage({ targetVault, targetStage }) {\n  try {\n    await copySecretToStage(\n      copyingSecretStage.value.key, \n      targetStage, \n      targetVault, \n      copyingSecretStage.value.stage,\n      copyingSecretStage.value.vault\n    )\n    toast.success('Secret copied', `Secret '${copyingSecretStage.value.key}' copied to ${targetVault}:${targetStage}`)\n    copyingSecretStage.value = null\n    await loadDiff()\n  } catch (error) {\n    console.error('Failed to copy secret:', error)\n    toast.error('Failed to copy secret', error.message)\n  }\n}\n\nasync function handleRenameSuccess() {\n  await loadDiff()\n  renamingSecret.value = null\n}\n\n</script>","<template>\n  <Teleport to=\"body\">\n    <div v-if=\"isOpen\" class=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\" @click.self=\"cancel\">\n      <div class=\"bg-card border border-border rounded-lg p-6 w-full max-w-md\">\n        <div class=\"flex items-start space-x-3 mb-4\">\n          <div class=\"flex-shrink-0 w-10 h-10 rounded-full bg-destructive/10 flex items-center justify-center\">\n            <svg class=\"w-5 h-5 text-destructive\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n            </svg>\n          </div>\n          <div class=\"flex-1\">\n            <h3 class=\"text-lg font-semibold mb-2\">{{ title }}</h3>\n            <p class=\"text-sm text-muted-foreground\">{{ message }}</p>\n          </div>\n        </div>\n        \n        <div class=\"flex justify-end space-x-2 mt-6\">\n          <button\n            @click=\"cancel\"\n            class=\"px-4 py-2 border border-border rounded-md hover:bg-muted transition-colors text-sm font-medium\"\n          >\n            Cancel\n          </button>\n          <button\n            @click=\"confirm\"\n            class=\"px-4 py-2 bg-destructive text-destructive-foreground rounded-md hover:bg-destructive/90 transition-colors text-sm font-medium\"\n          >\n            {{ confirmText }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </Teleport>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\n\nconst props = defineProps({\n  title: {\n    type: String,\n    default: 'Confirm Deletion'\n  },\n  message: {\n    type: String,\n    required: true\n  },\n  confirmText: {\n    type: String,\n    default: 'Delete'\n  }\n})\n\nconst emit = defineEmits(['confirm', 'cancel'])\n\nconst isOpen = ref(false)\n\nfunction open() {\n  isOpen.value = true\n}\n\nfunction confirm() {\n  emit('confirm')\n  isOpen.value = false\n}\n\nfunction cancel() {\n  emit('cancel')\n  isOpen.value = false\n}\n\ndefineExpose({\n  open,\n  close: cancel\n})\n</script>","<template>\n  <div class=\"flex gap-6 mx-auto max-w-5xl\">\n    <!-- Left Sidebar Navigation -->\n    <div class=\"w-48 flex-shrink-0\">\n      <div class=\"space-y-1\">\n        <button\n          v-for=\"tab in tabs\"\n          :key=\"tab.id\"\n          @click=\"activeTab = tab.id\"\n          :class=\"[\n            'w-full px-4 py-2 rounded-md text-sm font-medium transition-colors text-left',\n            activeTab === tab.id\n              ? 'bg-muted text-foreground'\n              : 'text-muted-foreground hover:text-foreground hover:bg-muted/50'\n          ]\"\n        >\n          {{ tab.label }}\n        </button>\n      </div>\n    </div>\n\n    <!-- Main Content Area -->\n    <div class=\"flex-1\">\n      <!-- General Settings -->\n      <div v-if=\"activeTab === 'general'\" class=\"space-y-6\">\n        <div>\n          <h1 class=\"text-2xl font-semibold mb-2\">General Settings</h1>\n          <p class=\"text-sm text-muted-foreground\">Configure your Keep application settings</p>\n        </div>\n\n        <div class=\"border border-border rounded-lg p-6 space-y-4\">\n          <div>\n            <label class=\"block text-sm font-medium mb-2\">Application Name</label>\n            <input\n              v-model=\"settings.appName\"\n              type=\"text\"\n              class=\"w-full px-3 py-2 bg-input border border-border rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-ring\"\n              placeholder=\"MyApp\"\n            />\n            <p class=\"text-xs text-muted-foreground mt-1\">The name of your application</p>\n          </div>\n\n          <div>\n            <label class=\"block text-sm font-medium mb-2\">Namespace</label>\n            <input\n              v-model=\"settings.namespace\"\n              type=\"text\"\n              class=\"w-full px-3 py-2 bg-input border border-border rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-ring\"\n              placeholder=\"my-app\"\n            />\n            <p class=\"text-xs text-muted-foreground mt-1\">All secrets will be organized under this namespace</p>\n          </div>\n\n          <div>\n            <label class=\"block text-sm font-medium mb-2\">Default Vault</label>\n            <select \n              v-model=\"settings.defaultVault\"\n              class=\"w-full px-3 py-2 bg-input border border-border rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-ring\"\n            >\n              <option value=\"\">Select default vault...</option>\n              <option v-for=\"vault in vaults\" :key=\"vault.slug\" :value=\"vault.slug\">\n                {{ vault.name }}\n              </option>\n            </select>\n            <p class=\"text-xs text-muted-foreground mt-1\">The default vault to use when none is specified</p>\n          </div>\n\n          <div>\n            <label class=\"block text-sm font-medium mb-2\">Template Directory</label>\n            <input\n              v-model=\"settings.templatePath\"\n              type=\"text\"\n              class=\"w-full px-3 py-2 bg-input border border-border rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-ring\"\n              placeholder=\"env\"\n            />\n            <p class=\"text-xs text-muted-foreground mt-1\">Directory where .env template files are stored</p>\n          </div>\n\n          <div class=\"pt-4 flex justify-end\">\n            <button\n              @click=\"saveGeneralSettings\"\n              class=\"px-4 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors text-sm font-medium\"\n            >\n              Save Changes\n            </button>\n          </div>\n        </div>\n\n        <!-- Server Information -->\n        <div>\n          <h2 class=\"text-lg font-medium mb-4\">Server Information</h2>\n          <div class=\"border border-border rounded-lg p-4 space-y-2 text-sm\">\n            <div class=\"flex items-center justify-between\">\n              <span class=\"text-muted-foreground\">Server URL</span>\n              <span class=\"font-mono\">{{ serverUrl }}</span>\n            </div>\n            <div class=\"flex items-center justify-between\">\n              <span class=\"text-muted-foreground\">Keep Version</span>\n              <span class=\"font-mono\">{{ keepVersion }}</span>\n            </div>\n            <div class=\"flex items-center justify-between\">\n              <span class=\"text-muted-foreground\">Authentication</span>\n              <span class=\"text-green-500\">Token Active</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Vaults Settings -->\n      <div v-if=\"activeTab === 'vaults'\" class=\"space-y-6\">\n        <div>\n          <h1 class=\"text-2xl font-semibold mb-2\">Vault Configuration</h1>\n          <p class=\"text-sm text-muted-foreground\">Manage your vault connections and settings</p>\n        </div>\n\n        <!-- Vault List -->\n        <div class=\"space-y-3\">\n          <div \n            v-for=\"vault in vaults\" \n            :key=\"vault.slug\"\n            class=\"border border-border rounded-lg p-4\"\n          >\n            <div class=\"flex items-start justify-between\">\n              <div class=\"flex-1\">\n                <div class=\"flex items-center space-x-3 mb-2\">\n                  <h3 class=\"font-medium\">{{ vault.name }}</h3>\n                  <span v-if=\"vault.isDefault\" class=\"px-2 py-0.5 bg-primary/10 text-primary text-xs rounded-full\">\n                    Default\n                  </span>\n                </div>\n                <div class=\"space-y-1 text-sm text-muted-foreground\">\n                  <p>Driver: <span class=\"font-mono\">{{ vault.driver }}</span></p>\n                  <p>Slug: <span class=\"font-mono\">{{ vault.slug }}</span></p>\n                  <p v-if=\"vault.scope\">Scope: <span class=\"font-mono\">{{ vault.scope }}</span></p>\n                </div>\n              </div>\n              <div class=\"flex items-center space-x-2\">\n                <button\n                  @click=\"editVault(vault)\"\n                  class=\"p-2 rounded-md hover:bg-muted transition-colors\"\n                >\n                  <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                  </svg>\n                </button>\n                <button\n                  @click=\"deleteVault(vault)\"\n                  class=\"p-2 rounded-md hover:bg-muted transition-colors text-destructive\"\n                >\n                  <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                  </svg>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Add Vault Button -->\n        <div class=\"flex justify-between items-center pt-4\">\n          <button\n            @click=\"openAddVaultModal()\"\n            class=\"px-4 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors text-sm font-medium\"\n          >\n            Add New Vault\n          </button>\n          <button\n            @click=\"verifyAllVaults\"\n            :disabled=\"verifying\"\n            class=\"px-4 py-2 border border-border rounded-md hover:bg-muted transition-colors text-sm font-medium disabled:opacity-50\"\n          >\n            {{ verifying ? 'Verifying...' : 'Verify All Vaults' }}\n          </button>\n        </div>\n      </div>\n\n      <!-- Stages Settings -->\n      <div v-if=\"activeTab === 'stages'\" class=\"space-y-6\">\n        <div>\n          <h1 class=\"text-2xl font-semibold mb-2\">Stage Configuration</h1>\n          <p class=\"text-sm text-muted-foreground\">Manage your deployment stages and environments</p>\n        </div>\n\n        <div class=\"border border-border rounded-lg p-4\">\n          <div class=\"space-y-2\">\n            <div \n              v-for=\"stage in stages\" \n              :key=\"stage\"\n              class=\"flex items-center justify-between py-3 border-b border-border last:border-0\"\n            >\n              <span class=\"font-medium\">{{ stage }}</span>\n              <button\n                @click=\"removeStage(stage)\"\n                class=\"p-2 rounded-md hover:bg-muted transition-colors text-destructive\"\n              >\n                <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n          \n          <div class=\"flex items-center space-x-2 mt-4 pt-4 border-t border-border\">\n            <input\n              v-model=\"newStage\"\n              @keyup.enter=\"addStage\"\n              type=\"text\"\n              placeholder=\"Enter new stage name...\"\n              class=\"flex-1 px-3 py-2 bg-input border border-border rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-ring\"\n            />\n            <button\n              @click=\"addStage\"\n              :disabled=\"!newStage\"\n              class=\"px-4 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors text-sm font-medium disabled:opacity-50\"\n            >\n              Add Stage\n            </button>\n          </div>\n        </div>\n\n        <div class=\"bg-muted/30 rounded-lg p-4 text-sm text-muted-foreground\">\n          <p class=\"font-medium mb-1\">About Stages</p>\n          <p>Stages represent different deployment environments for your secrets. Common stages include development, staging, and production. System stages (local, staging, production) cannot be removed.</p>\n        </div>\n      </div>\n\n      <!-- Workspace Settings -->\n      <div v-if=\"activeTab === 'workspace'\" class=\"space-y-6\">\n        <div>\n          <h1 class=\"text-2xl font-semibold mb-2\">Workspace Configuration</h1>\n          <p class=\"text-sm text-muted-foreground\">Personalize your Keep experience by selecting which vaults and stages you work with</p>\n        </div>\n\n        <div class=\"border border-border rounded-lg p-6 space-y-6\">\n          <!-- Active Vaults Selection -->\n          <div>\n            <label class=\"block text-sm font-medium mb-3\">Active Vaults</label>\n            <p class=\"text-xs text-muted-foreground mb-3\">Select which vaults to include in your workspace</p>\n            <div class=\"space-y-2\">\n              <div v-for=\"vault in availableVaults\" :key=\"vault\" class=\"flex items-center space-x-2\">\n                <input\n                  :id=\"`vault-${vault}`\"\n                  type=\"checkbox\"\n                  :value=\"vault\"\n                  v-model=\"workspaceForm.activeVaults\"\n                  class=\"rounded border-border\"\n                />\n                <label :for=\"`vault-${vault}`\" class=\"text-sm cursor-pointer\">\n                  {{ getVaultDisplayName(vault) }}\n                </label>\n              </div>\n            </div>\n            <div v-if=\"workspaceForm.activeVaults.length === 0\" class=\"text-xs text-destructive mt-2\">\n              At least one vault must be selected\n            </div>\n          </div>\n\n          <!-- Active Stages Selection -->\n          <div>\n            <label class=\"block text-sm font-medium mb-3\">Active Stages</label>\n            <p class=\"text-xs text-muted-foreground mb-3\">Select which stages to include in your workspace</p>\n            <div class=\"space-y-2\">\n              <div v-for=\"stage in availableStages\" :key=\"stage\" class=\"flex items-center space-x-2\">\n                <input\n                  :id=\"`stage-${stage}`\"\n                  type=\"checkbox\"\n                  :value=\"stage\"\n                  v-model=\"workspaceForm.activeStages\"\n                  class=\"rounded border-border\"\n                />\n                <label :for=\"`stage-${stage}`\" class=\"text-sm cursor-pointer\">{{ stage }}</label>\n              </div>\n            </div>\n            <div v-if=\"workspaceForm.activeStages.length === 0\" class=\"text-xs text-destructive mt-2\">\n              At least one stage must be selected\n            </div>\n          </div>\n\n          <div class=\"pt-4 flex justify-between items-center\">\n            <button\n              @click=\"resetWorkspace\"\n              class=\"px-4 py-2 border border-border rounded-md hover:bg-muted transition-colors text-sm font-medium\"\n            >\n              Reset to All\n            </button>\n            <div class=\"space-x-2\">\n              <button\n                @click=\"verifyWorkspace\"\n                :disabled=\"verifyingWorkspace\"\n                class=\"px-4 py-2 border border-border rounded-md hover:bg-muted transition-colors text-sm font-medium disabled:opacity-50\"\n              >\n                {{ verifyingWorkspace ? 'Verifying...' : 'Test Permissions' }}\n              </button>\n              <button\n                @click=\"saveWorkspace\"\n                :disabled=\"workspaceForm.activeVaults.length === 0 || workspaceForm.activeStages.length === 0\"\n                class=\"px-4 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors text-sm font-medium disabled:opacity-50\"\n              >\n                Save Workspace\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- Workspace Info -->\n        <div class=\"bg-muted/30 rounded-lg p-4 text-sm text-muted-foreground\">\n          <p class=\"font-medium mb-1\">About Workspace Configuration</p>\n          <p>Your workspace configuration is stored locally and not shared with your team. This allows each developer to customize their view to only show the vaults and stages they have access to and work with regularly.</p>\n          <p class=\"mt-2\">Changes to your workspace will immediately affect which secrets are visible throughout the Keep UI.</p>\n        </div>\n\n        <!-- Current Workspace Summary -->\n        <div v-if=\"workspaceCreatedAt\">\n          <h2 class=\"text-lg font-medium mb-4\">Current Workspace</h2>\n          <div class=\"border border-border rounded-lg p-4 space-y-2 text-sm\">\n            <div class=\"flex items-center justify-between\">\n              <span class=\"text-muted-foreground\">Active Vaults</span>\n              <span>{{ workspaceForm.activeVaults.length }} of {{ availableVaults.length }}</span>\n            </div>\n            <div class=\"flex items-center justify-between\">\n              <span class=\"text-muted-foreground\">Active Stages</span>\n              <span>{{ workspaceForm.activeStages.length }} of {{ availableStages.length }}</span>\n            </div>\n            <div class=\"flex items-center justify-between\">\n              <span class=\"text-muted-foreground\">Created</span>\n              <span>{{ formatDate(workspaceCreatedAt) }}</span>\n            </div>\n            <div v-if=\"workspaceUpdatedAt\" class=\"flex items-center justify-between\">\n              <span class=\"text-muted-foreground\">Last Updated</span>\n              <span>{{ formatDate(workspaceUpdatedAt) }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Add/Edit Vault Modal -->\n  <div v-if=\"showVaultModal\" class=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\" @click.self=\"closeVaultModal\">\n    <div class=\"bg-card border border-border rounded-lg p-6 w-full max-w-md\">\n      <h2 class=\"text-lg font-semibold mb-4\">{{ editingVault ? 'Edit Vault' : 'Add New Vault' }}</h2>\n      \n      <div class=\"space-y-4\">\n        <div>\n          <label class=\"block text-sm font-medium mb-1\">Driver</label>\n          <select \n            v-model=\"vaultForm.driver\"\n            @change=\"onDriverChange\"\n            class=\"w-full px-3 py-2 bg-input border border-border rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-ring\"\n            :disabled=\"!!editingVault\"\n          >\n            <option value=\"\">Select driver...</option>\n            <option value=\"secretsmanager\">AWS Secrets Manager</option>\n            <option value=\"ssm\">AWS SSM Parameter Store</option>\n            <option value=\"test\">Test Vault</option>\n          </select>\n          <p class=\"text-xs text-muted-foreground mt-1\">{{ editingVault ? 'Driver cannot be changed after creation' : 'Select the backend vault type' }}</p>\n        </div>\n\n        <div v-if=\"vaultForm.driver || editingVault\">\n          <label class=\"block text-sm font-medium mb-1\">Name</label>\n          <input\n            v-model=\"vaultForm.name\"\n            type=\"text\"\n            class=\"w-full px-3 py-2 bg-input border border-border rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-ring\"\n            :placeholder=\"getDriverDefaults(vaultForm.driver).name\"\n          />\n          <p class=\"text-xs text-muted-foreground mt-1\">Friendly display name for this vault</p>\n        </div>\n\n        <div v-if=\"vaultForm.driver || editingVault\">\n          <label class=\"block text-sm font-medium mb-1\">Slug</label>\n          <input\n            v-model=\"vaultForm.slug\"\n            type=\"text\"\n            class=\"w-full px-3 py-2 bg-input border border-border rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-ring\"\n            :placeholder=\"getDriverDefaults(vaultForm.driver).slug\"\n            :disabled=\"!!editingVault\"\n          />\n          <p class=\"text-xs text-muted-foreground mt-1\">{{ editingVault ? 'Slug cannot be changed after creation' : 'Unique identifier for this vault' }}</p>\n        </div>\n\n        <div v-if=\"(vaultForm.driver === 'ssm' || vaultForm.driver === 'secretsmanager') || (editingVault && ['ssm', 'secretsmanager'].includes(editingVault.driver))\">\n          <label class=\"block text-sm font-medium mb-1\">Scope (optional)</label>\n          <input\n            v-model=\"vaultForm.scope\"\n            type=\"text\"\n            class=\"w-full px-3 py-2 bg-input border border-border rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-ring\"\n            placeholder=\"app2\"\n          />\n          <p class=\"text-xs text-muted-foreground mt-1\">Optional scope to isolate secrets within your namespace.</p>\n        </div>\n\n        <div v-if=\"vaultForm.driver || editingVault\" class=\"flex items-center space-x-2\">\n          <input\n            v-model=\"vaultForm.isDefault\"\n            type=\"checkbox\"\n            id=\"vault-default\"\n            class=\"rounded border-border\"\n          />\n          <label for=\"vault-default\" class=\"text-sm\">Set as default vault</label>\n        </div>\n      </div>\n\n      <div class=\"flex justify-end space-x-2 mt-6\">\n        <button\n          @click=\"closeVaultModal\"\n          class=\"px-4 py-2 text-sm border border-border rounded-md hover:bg-muted transition-colors\"\n        >\n          Cancel\n        </button>\n        <button\n          @click=\"saveVault\"\n          class=\"px-4 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors text-sm font-medium\"\n        >\n          {{ editingVault ? 'Save Changes' : 'Add Vault' }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Verification Results Modal -->\n  <div v-if=\"showVerificationModal\" class=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\" @click.self=\"showVerificationModal = false\">\n    <div class=\"bg-card border border-border rounded-lg p-6 w-full max-w-2xl max-h-[80vh] overflow-y-auto\">\n      <div class=\"flex items-center justify-between mb-4\">\n        <h2 class=\"text-lg font-semibold\">Vault Verification Results</h2>\n        <button\n          @click=\"showVerificationModal = false\"\n          class=\"p-1 rounded-md hover:bg-muted transition-colors\"\n        >\n          <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"/>\n          </svg>\n        </button>\n      </div>\n\n      <div v-if=\"verificationResults\" class=\"space-y-4\">\n        <div v-for=\"(stageResults, vaultName) in verificationResults\" :key=\"vaultName\" \n             class=\"border border-border rounded-lg p-4\">\n          <h3 class=\"font-medium mb-3\">{{ getVaultDisplayName(vaultName) }}</h3>\n          \n          <!-- Show results for each stage -->\n          <div v-for=\"(result, stageName) in stageResults\" :key=\"stageName\" class=\"mb-3 last:mb-0\">\n            <div class=\"flex items-center justify-between mb-2\">\n              <span class=\"text-sm\">{{ stageName }}</span>\n              <span :class=\"[\n                'px-2 py-1 rounded text-xs font-medium',\n                result.success ? 'bg-green-500/10 text-green-500' : 'bg-destructive/10 text-destructive'\n              ]\">\n                {{ result.success ? 'Connected' : 'Failed' }}\n              </span>\n            </div>\n            \n            <div v-if=\"result.success && result.permissions\" class=\"bg-gray-500/10 gap-2 grid grid-cols-5 px-3 py-1.5 rounded-md text-sm\">\n              <div v-for=\"(status, permission) in result.permissions\" :key=\"permission\"\n                   class=\"flex items-center space-x-2\">\n                <svg v-if=\"status\" class=\"w-4 h-4 text-green-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"/>\n                </svg>\n                <svg v-else class=\"w-4 h-4 text-destructive\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"/>\n                </svg>\n                <span :class=\"status ? 'text-muted-foreground' : 'text-destructive'\">\n                  {{ permission }}\n                </span>\n              </div>\n            </div>\n            \n            <div v-else-if=\"result.error\" class=\"text-sm text-destructive ml-4\">\n              {{ result.error }}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div v-else class=\"text-center py-8 text-muted-foreground\">\n        <div class=\"animate-spin h-8 w-8 border-2 border-primary border-t-transparent rounded-full mx-auto mb-4\"></div>\n        Verifying vaults...\n      </div>\n\n      <div class=\"flex justify-end mt-6\">\n        <button\n          @click=\"showVerificationModal = false\"\n          class=\"px-4 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors text-sm font-medium\"\n        >\n          Close\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Delete Stage Confirmation Modal -->\n  <DeleteConfirmationModal\n    ref=\"deleteStageModal\"\n    title=\"Delete Stage\"\n    :message=\"`Are you sure you want to remove the stage '${stageToDelete}'?`\"\n    confirmText=\"Remove Stage\"\n    @confirm=\"confirmDeleteStage\"\n  />\n\n  <!-- Delete Vault Confirmation Modal -->\n  <DeleteConfirmationModal\n    ref=\"deleteVaultModal\"\n    title=\"Delete Vault\"\n    :message=\"`Are you sure you want to delete the vault '${vaultToDelete?.name}'?`\"\n    confirmText=\"Delete Vault\"\n    @confirm=\"confirmDeleteVault\"\n  />\n</template>\n\n<script setup>\nimport { ref, onMounted, computed } from 'vue'\nimport { useToast } from '../composables/useToast'\nimport DeleteConfirmationModal from './DeleteConfirmationModal.vue'\n\nconst toast = useToast()\n\n// Navigation\nconst tabs = [\n  { id: 'general', label: 'General' },\n  { id: 'vaults', label: 'Vaults' },\n  { id: 'stages', label: 'Stages' },\n  { id: 'workspace', label: 'Workspace' }\n]\nconst activeTab = ref('general')\n\n// General settings\nconst settings = ref({\n  appName: '',\n  namespace: '',\n  defaultVault: '',\n  templatePath: ''\n})\nconst keepVersion = ref('1.0.0-beta')\n\n// Vaults\nconst vaults = ref([])\nconst showVaultModal = ref(false)\nconst editingVault = ref(null)\nconst vaultForm = ref({\n  name: '',\n  slug: '',\n  driver: '',\n  scope: '',\n  isDefault: false\n})\nconst verifying = ref(false)\nconst showVerificationModal = ref(false)\nconst verificationResults = ref(null)\nconst vaultToDelete = ref(null)\nconst deleteVaultModal = ref(null)\n\n// Stages\nconst stages = ref([])\nconst newStage = ref('')\nconst stageToDelete = ref('')\nconst deleteStageModal = ref(null)\nconst serverUrl = computed(() => typeof window !== 'undefined' ? window.location.origin : '')\n\n// Workspace\nconst workspaceForm = ref({\n  activeVaults: [],\n  activeStages: []\n})\nconst availableVaults = ref([])\nconst availableStages = ref([])\nconst workspaceCreatedAt = ref(null)\nconst workspaceUpdatedAt = ref(null)\nconst verifyingWorkspace = ref(false)\n\n// Helper functions\nfunction getVaultDisplayName(slug) {\n  const vault = vaults.value.find(v => v.slug === slug)\n  return vault ? `${vault.name} (${vault.slug})` : slug\n}\n\nfunction getDriverDefaults(driver) {\n  const defaults = {\n    secretsmanager: { name: 'AWS Secrets Manager', slug: 'aws-secrets' },\n    ssm: { name: 'AWS SSM Parameter Store', slug: 'aws-ssm' },\n    test: { name: 'Test Vault', slug: 'test' }\n  }\n  return defaults[driver] || { name: '', slug: '' }\n}\n\nfunction onDriverChange() {\n  if (!editingVault.value && vaultForm.value.driver) {\n    const defaults = getDriverDefaults(vaultForm.value.driver)\n    if (!vaultForm.value.name) {\n      vaultForm.value.name = defaults.name\n    }\n    if (!vaultForm.value.slug) {\n      vaultForm.value.slug = defaults.slug\n    }\n  }\n}\n\n// Lifecycle\nonMounted(async () => {\n  await loadSettings()\n  await loadVaults()\n  await loadStages()\n  await loadWorkspace()\n})\n\n// General Settings Functions\nasync function loadSettings() {\n  try {\n    const data = await window.$api.getSettings()\n    settings.value.appName = data.app_name || 'MyApp'\n    settings.value.namespace = data.namespace || ''\n    settings.value.defaultVault = data.default_vault || ''\n    settings.value.templatePath = data.template_path || 'env'\n    keepVersion.value = data.keep_version || '1.0.0-beta'\n  } catch (error) {\n    console.error('Failed to load settings:', error)\n    toast.error('Failed to load settings', error.message)\n  }\n}\n\nasync function saveGeneralSettings() {\n  try {\n    await window.$api.updateSettings({\n      app_name: settings.value.appName,\n      namespace: settings.value.namespace,\n      default_vault: settings.value.defaultVault,\n      template_path: settings.value.templatePath\n    })\n    toast.success('Settings saved', 'Your changes have been saved successfully')\n  } catch (error) {\n    toast.error('Failed to save settings', error.message)\n  }\n}\n\n// Vault Functions\nasync function loadVaults() {\n  try {\n    const data = await window.$api.listVaults()\n    vaults.value = data.vaults || []\n  } catch (error) {\n    console.error('Failed to load vaults:', error)\n    toast.error('Failed to load vaults', error.message)\n  }\n}\n\nfunction editVault(vault) {\n  editingVault.value = vault\n  vaultForm.value = {\n    name: vault.name,\n    slug: vault.slug,\n    driver: vault.driver,\n    scope: vault.scope || '',\n    isDefault: vault.isDefault || false\n  }\n  showVaultModal.value = true\n}\n\nfunction deleteVault(vault) {\n  vaultToDelete.value = vault\n  deleteVaultModal.value.open()\n}\n\nasync function confirmDeleteVault() {\n  if (!vaultToDelete.value) return\n  \n  try {\n    await window.$api.deleteVault(vaultToDelete.value.slug)\n    vaults.value = vaults.value.filter(v => v.slug !== vaultToDelete.value.slug)\n    toast.success('Vault deleted', `Vault \"${vaultToDelete.value.name}\" has been deleted`)\n  } catch (error) {\n    toast.error('Failed to delete vault', error.message)\n  } finally {\n    vaultToDelete.value = null\n  }\n}\n\nfunction openAddVaultModal() {\n  editingVault.value = null\n  vaultForm.value = {\n    name: '',\n    slug: '',\n    driver: '',\n    scope: '',\n    isDefault: false\n  }\n  showVaultModal.value = true\n}\n\nfunction closeVaultModal() {\n  showVaultModal.value = false\n  editingVault.value = null\n  vaultForm.value = {\n    name: '',\n    slug: '',\n    driver: '',\n    scope: '',\n    isDefault: false\n  }\n}\n\nasync function saveVault() {\n  try {\n    if (editingVault.value) {\n      await window.$api.updateVault(editingVault.value.slug, vaultForm.value)\n      const index = vaults.value.findIndex(v => v.slug === editingVault.value.slug)\n      if (index !== -1) {\n        vaults.value[index] = { ...vaultForm.value }\n      }\n      toast.success('Vault updated', `Vault \"${vaultForm.value.name}\" has been updated`)\n    } else {\n      await window.$api.addVault(vaultForm.value)\n      vaults.value.push({ ...vaultForm.value })\n      toast.success('Vault added', `Vault \"${vaultForm.value.name}\" has been added`)\n    }\n    closeVaultModal()\n  } catch (error) {\n    toast.error('Failed to save vault', error.message)\n  }\n}\n\nasync function verifyAllVaults() {\n  verifying.value = true\n  showVerificationModal.value = true\n  verificationResults.value = null\n  \n  try {\n    const data = await window.$api.verifyVaults()\n    const results = data.results || {}\n    \n    // Results now come with permissions from backend, organized by vault and stage\n    verificationResults.value = results\n    \n    // Check if any vault/stage combination failed\n    const failedVaults = []\n    for (const [vaultName, stageResults] of Object.entries(results)) {\n      for (const [stageName, result] of Object.entries(stageResults)) {\n        if (!result.success) {\n          failedVaults.push(`${vaultName}:${stageName}`)\n        }\n      }\n    }\n    if (failedVaults.length === 0) {\n      toast.success('All vaults verified', 'All vaults are properly configured and accessible')\n    } else {\n      toast.error('Verification failed', `${failedVaults.length} vault/stage combination(s) failed verification`)\n    }\n    \n    // Reload vaults to get updated permissions\n    await loadVaults()\n  } catch (error) {\n    toast.error('Failed to verify vaults', error.message)\n    showVerificationModal.value = false\n  } finally {\n    verifying.value = false\n  }\n}\n\n// Stage Functions\nasync function loadStages() {\n  try {\n    const data = await window.$api.listStages()\n    stages.value = data.stages || []\n  } catch (error) {\n    console.error('Failed to load stages:', error)\n    toast.error('Failed to load stages', error.message)\n  }\n}\n\nasync function addStage() {\n  if (!newStage.value) return\n  \n  if (stages.value.includes(newStage.value)) {\n    toast.error('Stage exists', `Stage \"${newStage.value}\" already exists`)\n    return\n  }\n  \n  try {\n    await window.$api.addStage(newStage.value)\n    stages.value.push(newStage.value)\n    toast.success('Stage added', `Stage \"${newStage.value}\" has been added`)\n    newStage.value = ''\n    \n    // Reload vaults to get updated permissions for the new stage\n    await loadVaults()\n  } catch (error) {\n    toast.error('Failed to add stage', error.message)\n  }\n}\n\nfunction removeStage(stage) {\n  stageToDelete.value = stage\n  deleteStageModal.value.open()\n}\n\nasync function confirmDeleteStage() {\n  if (!stageToDelete.value) return\n  \n  try {\n    await window.$api.removeStage(stageToDelete.value)\n    const index = stages.value.indexOf(stageToDelete.value)\n    if (index > -1) {\n      stages.value.splice(index, 1)\n      toast.success('Stage removed', `Stage \"${stageToDelete.value}\" has been removed`)\n    }\n  } catch (error) {\n    toast.error('Failed to remove stage', error.message)\n  } finally {\n    stageToDelete.value = ''\n  }\n}\n\n// Workspace Functions\nasync function loadWorkspace() {\n  try {\n    const data = await window.$api.getWorkspace()\n    workspaceForm.value.activeVaults = data.active_vaults || []\n    workspaceForm.value.activeStages = data.active_stages || []\n    availableVaults.value = data.available_vaults || []\n    availableStages.value = data.available_stages || []\n    workspaceCreatedAt.value = data.created_at\n    workspaceUpdatedAt.value = data.updated_at\n  } catch (error) {\n    console.error('Failed to load workspace:', error)\n    toast.error('Failed to load workspace', error.message)\n  }\n}\n\nasync function saveWorkspace() {\n  if (workspaceForm.value.activeVaults.length === 0) {\n    toast.error('Invalid workspace', 'At least one vault must be selected')\n    return\n  }\n  \n  if (workspaceForm.value.activeStages.length === 0) {\n    toast.error('Invalid workspace', 'At least one stage must be selected')\n    return\n  }\n  \n  try {\n    const result = await window.$api.updateWorkspace(\n      workspaceForm.value.activeVaults,\n      workspaceForm.value.activeStages\n    )\n    \n    if (result.success) {\n      workspaceUpdatedAt.value = result.workspace.updated_at\n      toast.success('Workspace saved', 'Your workspace configuration has been updated')\n      \n      // Reload vaults and stages to reflect the filtered workspace\n      await loadVaults()\n      await loadStages()\n    }\n  } catch (error) {\n    toast.error('Failed to save workspace', error.message)\n  }\n}\n\nfunction resetWorkspace() {\n  workspaceForm.value.activeVaults = [...availableVaults.value]\n  workspaceForm.value.activeStages = [...availableStages.value]\n}\n\nasync function verifyWorkspace() {\n  verifyingWorkspace.value = true\n  showVerificationModal.value = true\n  verificationResults.value = null\n  \n  try {\n    const data = await window.$api.verifyWorkspace()\n    verificationResults.value = data.results || {}\n    \n    // Check if any vault/stage combination failed\n    const failedCombos = []\n    for (const [vaultName, stageResults] of Object.entries(data.results)) {\n      for (const [stageName, result] of Object.entries(stageResults)) {\n        if (!result.success) {\n          failedCombos.push(`${vaultName}:${stageName}`)\n        }\n      }\n    }\n    \n    if (failedCombos.length === 0) {\n      toast.success('Workspace verified', 'All selected vault/stage combinations are accessible')\n    } else {\n      toast.warning('Verification complete', `${failedCombos.length} vault/stage combination(s) are not accessible`)\n    }\n  } catch (error) {\n    toast.error('Failed to verify workspace', error.message)\n    showVerificationModal.value = false\n  } finally {\n    verifyingWorkspace.value = false\n  }\n}\n\nfunction formatDate(dateString) {\n  if (!dateString) return 'Never'\n  const date = new Date(dateString)\n  return date.toLocaleDateString() + ' ' + date.toLocaleTimeString()\n}\n</script>","<template>\n  <div class=\"fixed inset-0 z-50 overflow-y-auto\">\n    <div class=\"flex items-center justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:p-0\">\n      <!-- Background overlay -->\n      <div class=\"fixed inset-0 transition-opacity\">\n        <div class=\"absolute inset-0 bg-black opacity-75\"></div>\n      </div>\n\n      <!-- Modal content -->\n      <div class=\"relative inline-block w-full max-w-2xl px-6 py-5 overflow-hidden text-left align-middle transition-all transform bg-background rounded-lg shadow-xl\">\n        <!-- Header -->\n        <div class=\"flex items-center justify-between mb-4\">\n          <h2 class=\"text-xl font-semibold\">Add Template</h2>\n          <button\n            @click=\"$emit('close')\"\n            class=\"p-1 rounded hover:bg-muted transition-colors\"\n          >\n            <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n            </svg>\n          </button>\n        </div>\n\n        <!-- Stage Selection -->\n        <div class=\"space-y-4\">\n          <div>\n            <select\n              v-model=\"selectedStage\"\n              @change=\"checkExistingTemplate\"\n              class=\"w-full px-3 py-2 border border-border rounded-md bg-background focus:ring-2 focus:ring-primary focus:border-transparent text-sm\"\n            >\n              <option value=\"\">Select a stage</option>\n              <option v-for=\"stage in stages\" :key=\"stage\" :value=\"stage\">\n                {{ stage }}\n              </option>\n            </select>\n          </div>\n\n          <!-- Template exists warning -->\n          <div v-if=\"templateExists\" class=\"bg-red-500/5 border border-red-500/20 rounded-md p-3\">\n            <div class=\"flex items-center gap-2\">\n              <svg class=\"w-5 h-5 text-red-500/80 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n              </svg>\n              <div>\n                <p class=\"text-sm font-medium\">Template already exists</p>\n                <p class=\"text-sm text-muted-foreground\">{{ selectedStage }}.env already exists. You can edit it from the templates list.</p>\n              </div>\n            </div>\n          </div>\n\n          <!-- Preview Section -->\n          <div v-if=\"preview && !templateExists\" class=\"space-y-2\">\n            <label class=\"block text-sm font-medium\">Preview</label>\n            <div class=\"relative\">\n              <pre class=\"bg-muted/50 rounded-md p-3 text-sm font-mono overflow-x-auto max-h-64 overflow-y-auto\">{{ preview }}</pre>\n              <button\n                v-if=\"preview\"\n                @click=\"copyPreview\"\n                class=\"absolute top-2 right-2 p-1.5 bg-background border border-border rounded hover:bg-muted transition-colors\"\n                title=\"Copy to clipboard\"\n              >\n                <svg v-if=\"!copied\" class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3\"></path>\n                </svg>\n                <svg v-else class=\"w-4 h-4 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path>\n                </svg>\n              </button>\n            </div>\n          </div>\n\n          <!-- Error Display -->\n          <div v-if=\"error\" class=\"bg-destructive/10 border border-destructive/20 rounded-md p-3\">\n            <div class=\"flex items-center gap-2\">\n              <svg class=\"w-5 h-5 text-destructive flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n              </svg>\n              <p class=\"text-sm\">{{ error }}</p>\n            </div>\n          </div>\n        </div>\n\n        <!-- Footer -->\n        <div class=\"flex justify-end gap-3 mt-6\">\n          <button\n            @click=\"$emit('close')\"\n            class=\"px-4 py-2 text-sm border border-border rounded-md hover:bg-muted transition-colors\"\n          >\n            Cancel\n          </button>\n          <button\n            v-if=\"!preview && selectedStage && !templateExists\"\n            @click=\"generatePreview\"\n            :disabled=\"generatingPreview\"\n            class=\"px-4 py-2 text-sm bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors disabled:opacity-50\"\n          >\n            {{ generatingPreview ? 'Generating...' : 'Generate Preview' }}\n          </button>\n          <button\n            v-if=\"preview && !templateExists\"\n            @click=\"createTemplate\"\n            :disabled=\"creating\"\n            class=\"px-4 py-2 text-sm bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors disabled:opacity-50\"\n          >\n            {{ creating ? 'Adding...' : 'Add Template' }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch } from 'vue'\nimport { useToast } from '../composables/useToast'\n\nconst emit = defineEmits(['close', 'created'])\nconst { showToast } = useToast()\n\nconst stages = ref([])\nconst selectedStage = ref('')\nconst preview = ref('')\nconst error = ref('')\nconst generatingPreview = ref(false)\nconst creating = ref(false)\nconst templateExists = ref(false)\nconst copied = ref(false)\n\nonMounted(async () => {\n  await loadStages()\n})\n\nasync function loadStages() {\n  try {\n    const settings = await window.$api.getSettings()\n    stages.value = settings.stages || []\n  } catch (err) {\n    error.value = 'Failed to load stages'\n    console.error('Failed to load stages:', err)\n  }\n}\n\nasync function checkExistingTemplate() {\n  if (!selectedStage.value) {\n    templateExists.value = false\n    return\n  }\n\n  try {\n    const response = await window.$api.get('/templates')\n    const templates = response.templates || []\n    templateExists.value = templates.some(t => t.stage === selectedStage.value)\n    \n    if (templateExists.value) {\n      preview.value = ''\n      error.value = ''\n    }\n  } catch (err) {\n    console.error('Failed to check existing templates:', err)\n  }\n}\n\nasync function generatePreview() {\n  if (!selectedStage.value) {\n    error.value = 'Please select a stage'\n    return\n  }\n\n  error.value = ''\n  generatingPreview.value = true\n\n  try {\n    const response = await window.$api.post('/templates/generate', {\n      stage: selectedStage.value,\n      vaults: [] // Empty array means use all vaults\n    })\n    \n    preview.value = response.content || ''\n  } catch (err) {\n    error.value = err.message || 'Failed to generate template preview'\n    preview.value = ''\n  } finally {\n    generatingPreview.value = false\n  }\n}\n\nasync function createTemplate() {\n  if (!selectedStage.value || !preview.value) {\n    return\n  }\n\n  error.value = ''\n  creating.value = true\n\n  try {\n    const response = await window.$api.post('/templates/create', {\n      stage: selectedStage.value,\n      vaults: [] // Empty array means use all vaults\n    })\n    \n    showToast(`Template created: ${response.filename}`, 'success')\n    emit('created', response)\n  } catch (err) {\n    error.value = err.message || 'Failed to create template'\n  } finally {\n    creating.value = false\n  }\n}\n\nasync function copyPreview() {\n  try {\n    await navigator.clipboard.writeText(preview.value)\n    copied.value = true\n    setTimeout(() => {\n      copied.value = false\n    }, 2000)\n  } catch (err) {\n    showToast('Failed to copy to clipboard', 'error')\n  }\n}\n\n// Reset preview when stage changes\nwatch(selectedStage, () => {\n  preview.value = ''\n  error.value = ''\n})\n</script>","// These are filled with ranges (rangeFrom[i] up to but not including\n// rangeTo[i]) of code points that count as extending characters.\nlet rangeFrom = [], rangeTo = []\n\n;(() => {\n  // Compressed representation of the Grapheme_Cluster_Break=Extend\n  // information from\n  // http://www.unicode.org/Public/16.0.0/ucd/auxiliary/GraphemeBreakProperty.txt.\n  // Each pair of elements represents a range, as an offet from the\n  // previous range and a length. Numbers are in base-36, with the empty\n  // string being a shorthand for 1.\n  let numbers = \"lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o\".split(\",\").map(s => s ? parseInt(s, 36) : 1)\n  for (let i = 0, n = 0; i < numbers.length; i++)\n    (i % 2 ? rangeTo : rangeFrom).push(n = n + numbers[i])\n})()\n\nexport function isExtendingChar(code) {\n  if (code < 768) return false\n  for (let from = 0, to = rangeFrom.length;;) {\n    let mid = (from + to) >> 1\n    if (code < rangeFrom[mid]) to = mid\n    else if (code >= rangeTo[mid]) from = mid + 1\n    else return true\n    if (from == to) return false\n  }\n}\n\nfunction isRegionalIndicator(code) {\n  return code >= 0x1F1E6 && code <= 0x1F1FF\n}\n\nfunction check(code) {\n  for (let i = 0; i < rangeFrom.length; i++) {\n    if (rangeTo[i] > code) return rangeFrom[i] <= code\n  }\n  return false\n}\n\nconst ZWJ = 0x200d\n\nexport function findClusterBreak(str, pos, forward = true, includeExtending = true) {\n  return (forward ? nextClusterBreak : prevClusterBreak)(str, pos, includeExtending)\n}\n\nfunction nextClusterBreak(str, pos, includeExtending) {\n  if (pos == str.length) return pos\n  // If pos is in the middle of a surrogate pair, move to its start\n  if (pos && surrogateLow(str.charCodeAt(pos)) && surrogateHigh(str.charCodeAt(pos - 1))) pos--\n  let prev = codePointAt(str, pos)\n  pos += codePointSize(prev)\n  while (pos < str.length) {\n    let next = codePointAt(str, pos)\n    if (prev == ZWJ || next == ZWJ || includeExtending && isExtendingChar(next)) {\n      pos += codePointSize(next)\n      prev = next\n    } else if (isRegionalIndicator(next)) {\n      let countBefore = 0, i = pos - 2\n      while (i >= 0 && isRegionalIndicator(codePointAt(str, i))) { countBefore++; i -= 2 }\n      if (countBefore % 2 == 0) break\n      else pos += 2\n    } else {\n      break\n    }\n  }\n  return pos\n}\n\nfunction prevClusterBreak(str, pos, includeExtending) {\n  while (pos > 0) {\n    let found = nextClusterBreak(str, pos - 2, includeExtending)\n    if (found < pos) return found\n    pos--\n  }\n  return 0\n}\n\nfunction codePointAt(str, pos) {\n  let code0 = str.charCodeAt(pos)\n  if (!surrogateHigh(code0) || pos + 1 == str.length) return code0\n  let code1 = str.charCodeAt(pos + 1)\n  if (!surrogateLow(code1)) return code0\n  return ((code0 - 0xd800) << 10) + (code1 - 0xdc00) + 0x10000\n}\n\nfunction surrogateLow(ch) { return ch >= 0xDC00 && ch < 0xE000 }\nfunction surrogateHigh(ch) { return ch >= 0xD800 && ch < 0xDC00 }\nfunction codePointSize(code) { return code < 0x10000 ? 1 : 2 }\n","import { findClusterBreak as findClusterBreak$1 } from '@marijn/find-cluster-break';\n\n/**\nThe data structure for documents. @nonabstract\n*/\nclass Text {\n    /**\n    Get the line description around the given position.\n    */\n    lineAt(pos) {\n        if (pos < 0 || pos > this.length)\n            throw new RangeError(`Invalid position ${pos} in document of length ${this.length}`);\n        return this.lineInner(pos, false, 1, 0);\n    }\n    /**\n    Get the description for the given (1-based) line number.\n    */\n    line(n) {\n        if (n < 1 || n > this.lines)\n            throw new RangeError(`Invalid line number ${n} in ${this.lines}-line document`);\n        return this.lineInner(n, true, 1, 0);\n    }\n    /**\n    Replace a range of the text with the given content.\n    */\n    replace(from, to, text) {\n        [from, to] = clip(this, from, to);\n        let parts = [];\n        this.decompose(0, from, parts, 2 /* Open.To */);\n        if (text.length)\n            text.decompose(0, text.length, parts, 1 /* Open.From */ | 2 /* Open.To */);\n        this.decompose(to, this.length, parts, 1 /* Open.From */);\n        return TextNode.from(parts, this.length - (to - from) + text.length);\n    }\n    /**\n    Append another document to this one.\n    */\n    append(other) {\n        return this.replace(this.length, this.length, other);\n    }\n    /**\n    Retrieve the text between the given points.\n    */\n    slice(from, to = this.length) {\n        [from, to] = clip(this, from, to);\n        let parts = [];\n        this.decompose(from, to, parts, 0);\n        return TextNode.from(parts, to - from);\n    }\n    /**\n    Test whether this text is equal to another instance.\n    */\n    eq(other) {\n        if (other == this)\n            return true;\n        if (other.length != this.length || other.lines != this.lines)\n            return false;\n        let start = this.scanIdentical(other, 1), end = this.length - this.scanIdentical(other, -1);\n        let a = new RawTextCursor(this), b = new RawTextCursor(other);\n        for (let skip = start, pos = start;;) {\n            a.next(skip);\n            b.next(skip);\n            skip = 0;\n            if (a.lineBreak != b.lineBreak || a.done != b.done || a.value != b.value)\n                return false;\n            pos += a.value.length;\n            if (a.done || pos >= end)\n                return true;\n        }\n    }\n    /**\n    Iterate over the text. When `dir` is `-1`, iteration happens\n    from end to start. This will return lines and the breaks between\n    them as separate strings.\n    */\n    iter(dir = 1) { return new RawTextCursor(this, dir); }\n    /**\n    Iterate over a range of the text. When `from` > `to`, the\n    iterator will run in reverse.\n    */\n    iterRange(from, to = this.length) { return new PartialTextCursor(this, from, to); }\n    /**\n    Return a cursor that iterates over the given range of lines,\n    _without_ returning the line breaks between, and yielding empty\n    strings for empty lines.\n    \n    When `from` and `to` are given, they should be 1-based line numbers.\n    */\n    iterLines(from, to) {\n        let inner;\n        if (from == null) {\n            inner = this.iter();\n        }\n        else {\n            if (to == null)\n                to = this.lines + 1;\n            let start = this.line(from).from;\n            inner = this.iterRange(start, Math.max(start, to == this.lines + 1 ? this.length : to <= 1 ? 0 : this.line(to - 1).to));\n        }\n        return new LineCursor(inner);\n    }\n    /**\n    Return the document as a string, using newline characters to\n    separate lines.\n    */\n    toString() { return this.sliceString(0); }\n    /**\n    Convert the document to an array of lines (which can be\n    deserialized again via [`Text.of`](https://codemirror.net/6/docs/ref/#state.Text^of)).\n    */\n    toJSON() {\n        let lines = [];\n        this.flatten(lines);\n        return lines;\n    }\n    /**\n    @internal\n    */\n    constructor() { }\n    /**\n    Create a `Text` instance for the given array of lines.\n    */\n    static of(text) {\n        if (text.length == 0)\n            throw new RangeError(\"A document must have at least one line\");\n        if (text.length == 1 && !text[0])\n            return Text.empty;\n        return text.length <= 32 /* Tree.Branch */ ? new TextLeaf(text) : TextNode.from(TextLeaf.split(text, []));\n    }\n}\n// Leaves store an array of line strings. There are always line breaks\n// between these strings. Leaves are limited in size and have to be\n// contained in TextNode instances for bigger documents.\nclass TextLeaf extends Text {\n    constructor(text, length = textLength(text)) {\n        super();\n        this.text = text;\n        this.length = length;\n    }\n    get lines() { return this.text.length; }\n    get children() { return null; }\n    lineInner(target, isLine, line, offset) {\n        for (let i = 0;; i++) {\n            let string = this.text[i], end = offset + string.length;\n            if ((isLine ? line : end) >= target)\n                return new Line(offset, end, line, string);\n            offset = end + 1;\n            line++;\n        }\n    }\n    decompose(from, to, target, open) {\n        let text = from <= 0 && to >= this.length ? this\n            : new TextLeaf(sliceText(this.text, from, to), Math.min(to, this.length) - Math.max(0, from));\n        if (open & 1 /* Open.From */) {\n            let prev = target.pop();\n            let joined = appendText(text.text, prev.text.slice(), 0, text.length);\n            if (joined.length <= 32 /* Tree.Branch */) {\n                target.push(new TextLeaf(joined, prev.length + text.length));\n            }\n            else {\n                let mid = joined.length >> 1;\n                target.push(new TextLeaf(joined.slice(0, mid)), new TextLeaf(joined.slice(mid)));\n            }\n        }\n        else {\n            target.push(text);\n        }\n    }\n    replace(from, to, text) {\n        if (!(text instanceof TextLeaf))\n            return super.replace(from, to, text);\n        [from, to] = clip(this, from, to);\n        let lines = appendText(this.text, appendText(text.text, sliceText(this.text, 0, from)), to);\n        let newLen = this.length + text.length - (to - from);\n        if (lines.length <= 32 /* Tree.Branch */)\n            return new TextLeaf(lines, newLen);\n        return TextNode.from(TextLeaf.split(lines, []), newLen);\n    }\n    sliceString(from, to = this.length, lineSep = \"\\n\") {\n        [from, to] = clip(this, from, to);\n        let result = \"\";\n        for (let pos = 0, i = 0; pos <= to && i < this.text.length; i++) {\n            let line = this.text[i], end = pos + line.length;\n            if (pos > from && i)\n                result += lineSep;\n            if (from < end && to > pos)\n                result += line.slice(Math.max(0, from - pos), to - pos);\n            pos = end + 1;\n        }\n        return result;\n    }\n    flatten(target) {\n        for (let line of this.text)\n            target.push(line);\n    }\n    scanIdentical() { return 0; }\n    static split(text, target) {\n        let part = [], len = -1;\n        for (let line of text) {\n            part.push(line);\n            len += line.length + 1;\n            if (part.length == 32 /* Tree.Branch */) {\n                target.push(new TextLeaf(part, len));\n                part = [];\n                len = -1;\n            }\n        }\n        if (len > -1)\n            target.push(new TextLeaf(part, len));\n        return target;\n    }\n}\n// Nodes provide the tree structure of the `Text` type. They store a\n// number of other nodes or leaves, taking care to balance themselves\n// on changes. There are implied line breaks _between_ the children of\n// a node (but not before the first or after the last child).\nclass TextNode extends Text {\n    constructor(children, length) {\n        super();\n        this.children = children;\n        this.length = length;\n        this.lines = 0;\n        for (let child of children)\n            this.lines += child.lines;\n    }\n    lineInner(target, isLine, line, offset) {\n        for (let i = 0;; i++) {\n            let child = this.children[i], end = offset + child.length, endLine = line + child.lines - 1;\n            if ((isLine ? endLine : end) >= target)\n                return child.lineInner(target, isLine, line, offset);\n            offset = end + 1;\n            line = endLine + 1;\n        }\n    }\n    decompose(from, to, target, open) {\n        for (let i = 0, pos = 0; pos <= to && i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (from <= end && to >= pos) {\n                let childOpen = open & ((pos <= from ? 1 /* Open.From */ : 0) | (end >= to ? 2 /* Open.To */ : 0));\n                if (pos >= from && end <= to && !childOpen)\n                    target.push(child);\n                else\n                    child.decompose(from - pos, to - pos, target, childOpen);\n            }\n            pos = end + 1;\n        }\n    }\n    replace(from, to, text) {\n        [from, to] = clip(this, from, to);\n        if (text.lines < this.lines)\n            for (let i = 0, pos = 0; i < this.children.length; i++) {\n                let child = this.children[i], end = pos + child.length;\n                // Fast path: if the change only affects one child and the\n                // child's size remains in the acceptable range, only update\n                // that child\n                if (from >= pos && to <= end) {\n                    let updated = child.replace(from - pos, to - pos, text);\n                    let totalLines = this.lines - child.lines + updated.lines;\n                    if (updated.lines < (totalLines >> (5 /* Tree.BranchShift */ - 1)) &&\n                        updated.lines > (totalLines >> (5 /* Tree.BranchShift */ + 1))) {\n                        let copy = this.children.slice();\n                        copy[i] = updated;\n                        return new TextNode(copy, this.length - (to - from) + text.length);\n                    }\n                    return super.replace(pos, end, updated);\n                }\n                pos = end + 1;\n            }\n        return super.replace(from, to, text);\n    }\n    sliceString(from, to = this.length, lineSep = \"\\n\") {\n        [from, to] = clip(this, from, to);\n        let result = \"\";\n        for (let i = 0, pos = 0; i < this.children.length && pos <= to; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (pos > from && i)\n                result += lineSep;\n            if (from < end && to > pos)\n                result += child.sliceString(from - pos, to - pos, lineSep);\n            pos = end + 1;\n        }\n        return result;\n    }\n    flatten(target) {\n        for (let child of this.children)\n            child.flatten(target);\n    }\n    scanIdentical(other, dir) {\n        if (!(other instanceof TextNode))\n            return 0;\n        let length = 0;\n        let [iA, iB, eA, eB] = dir > 0 ? [0, 0, this.children.length, other.children.length]\n            : [this.children.length - 1, other.children.length - 1, -1, -1];\n        for (;; iA += dir, iB += dir) {\n            if (iA == eA || iB == eB)\n                return length;\n            let chA = this.children[iA], chB = other.children[iB];\n            if (chA != chB)\n                return length + chA.scanIdentical(chB, dir);\n            length += chA.length + 1;\n        }\n    }\n    static from(children, length = children.reduce((l, ch) => l + ch.length + 1, -1)) {\n        let lines = 0;\n        for (let ch of children)\n            lines += ch.lines;\n        if (lines < 32 /* Tree.Branch */) {\n            let flat = [];\n            for (let ch of children)\n                ch.flatten(flat);\n            return new TextLeaf(flat, length);\n        }\n        let chunk = Math.max(32 /* Tree.Branch */, lines >> 5 /* Tree.BranchShift */), maxChunk = chunk << 1, minChunk = chunk >> 1;\n        let chunked = [], currentLines = 0, currentLen = -1, currentChunk = [];\n        function add(child) {\n            let last;\n            if (child.lines > maxChunk && child instanceof TextNode) {\n                for (let node of child.children)\n                    add(node);\n            }\n            else if (child.lines > minChunk && (currentLines > minChunk || !currentLines)) {\n                flush();\n                chunked.push(child);\n            }\n            else if (child instanceof TextLeaf && currentLines &&\n                (last = currentChunk[currentChunk.length - 1]) instanceof TextLeaf &&\n                child.lines + last.lines <= 32 /* Tree.Branch */) {\n                currentLines += child.lines;\n                currentLen += child.length + 1;\n                currentChunk[currentChunk.length - 1] = new TextLeaf(last.text.concat(child.text), last.length + 1 + child.length);\n            }\n            else {\n                if (currentLines + child.lines > chunk)\n                    flush();\n                currentLines += child.lines;\n                currentLen += child.length + 1;\n                currentChunk.push(child);\n            }\n        }\n        function flush() {\n            if (currentLines == 0)\n                return;\n            chunked.push(currentChunk.length == 1 ? currentChunk[0] : TextNode.from(currentChunk, currentLen));\n            currentLen = -1;\n            currentLines = currentChunk.length = 0;\n        }\n        for (let child of children)\n            add(child);\n        flush();\n        return chunked.length == 1 ? chunked[0] : new TextNode(chunked, length);\n    }\n}\nText.empty = /*@__PURE__*/new TextLeaf([\"\"], 0);\nfunction textLength(text) {\n    let length = -1;\n    for (let line of text)\n        length += line.length + 1;\n    return length;\n}\nfunction appendText(text, target, from = 0, to = 1e9) {\n    for (let pos = 0, i = 0, first = true; i < text.length && pos <= to; i++) {\n        let line = text[i], end = pos + line.length;\n        if (end >= from) {\n            if (end > to)\n                line = line.slice(0, to - pos);\n            if (pos < from)\n                line = line.slice(from - pos);\n            if (first) {\n                target[target.length - 1] += line;\n                first = false;\n            }\n            else\n                target.push(line);\n        }\n        pos = end + 1;\n    }\n    return target;\n}\nfunction sliceText(text, from, to) {\n    return appendText(text, [\"\"], from, to);\n}\nclass RawTextCursor {\n    constructor(text, dir = 1) {\n        this.dir = dir;\n        this.done = false;\n        this.lineBreak = false;\n        this.value = \"\";\n        this.nodes = [text];\n        this.offsets = [dir > 0 ? 1 : (text instanceof TextLeaf ? text.text.length : text.children.length) << 1];\n    }\n    nextInner(skip, dir) {\n        this.done = this.lineBreak = false;\n        for (;;) {\n            let last = this.nodes.length - 1;\n            let top = this.nodes[last], offsetValue = this.offsets[last], offset = offsetValue >> 1;\n            let size = top instanceof TextLeaf ? top.text.length : top.children.length;\n            if (offset == (dir > 0 ? size : 0)) {\n                if (last == 0) {\n                    this.done = true;\n                    this.value = \"\";\n                    return this;\n                }\n                if (dir > 0)\n                    this.offsets[last - 1]++;\n                this.nodes.pop();\n                this.offsets.pop();\n            }\n            else if ((offsetValue & 1) == (dir > 0 ? 0 : 1)) {\n                this.offsets[last] += dir;\n                if (skip == 0) {\n                    this.lineBreak = true;\n                    this.value = \"\\n\";\n                    return this;\n                }\n                skip--;\n            }\n            else if (top instanceof TextLeaf) {\n                // Move to the next string\n                let next = top.text[offset + (dir < 0 ? -1 : 0)];\n                this.offsets[last] += dir;\n                if (next.length > Math.max(0, skip)) {\n                    this.value = skip == 0 ? next : dir > 0 ? next.slice(skip) : next.slice(0, next.length - skip);\n                    return this;\n                }\n                skip -= next.length;\n            }\n            else {\n                let next = top.children[offset + (dir < 0 ? -1 : 0)];\n                if (skip > next.length) {\n                    skip -= next.length;\n                    this.offsets[last] += dir;\n                }\n                else {\n                    if (dir < 0)\n                        this.offsets[last]--;\n                    this.nodes.push(next);\n                    this.offsets.push(dir > 0 ? 1 : (next instanceof TextLeaf ? next.text.length : next.children.length) << 1);\n                }\n            }\n        }\n    }\n    next(skip = 0) {\n        if (skip < 0) {\n            this.nextInner(-skip, (-this.dir));\n            skip = this.value.length;\n        }\n        return this.nextInner(skip, this.dir);\n    }\n}\nclass PartialTextCursor {\n    constructor(text, start, end) {\n        this.value = \"\";\n        this.done = false;\n        this.cursor = new RawTextCursor(text, start > end ? -1 : 1);\n        this.pos = start > end ? text.length : 0;\n        this.from = Math.min(start, end);\n        this.to = Math.max(start, end);\n    }\n    nextInner(skip, dir) {\n        if (dir < 0 ? this.pos <= this.from : this.pos >= this.to) {\n            this.value = \"\";\n            this.done = true;\n            return this;\n        }\n        skip += Math.max(0, dir < 0 ? this.pos - this.to : this.from - this.pos);\n        let limit = dir < 0 ? this.pos - this.from : this.to - this.pos;\n        if (skip > limit)\n            skip = limit;\n        limit -= skip;\n        let { value } = this.cursor.next(skip);\n        this.pos += (value.length + skip) * dir;\n        this.value = value.length <= limit ? value : dir < 0 ? value.slice(value.length - limit) : value.slice(0, limit);\n        this.done = !this.value;\n        return this;\n    }\n    next(skip = 0) {\n        if (skip < 0)\n            skip = Math.max(skip, this.from - this.pos);\n        else if (skip > 0)\n            skip = Math.min(skip, this.to - this.pos);\n        return this.nextInner(skip, this.cursor.dir);\n    }\n    get lineBreak() { return this.cursor.lineBreak && this.value != \"\"; }\n}\nclass LineCursor {\n    constructor(inner) {\n        this.inner = inner;\n        this.afterBreak = true;\n        this.value = \"\";\n        this.done = false;\n    }\n    next(skip = 0) {\n        let { done, lineBreak, value } = this.inner.next(skip);\n        if (done && this.afterBreak) {\n            this.value = \"\";\n            this.afterBreak = false;\n        }\n        else if (done) {\n            this.done = true;\n            this.value = \"\";\n        }\n        else if (lineBreak) {\n            if (this.afterBreak) {\n                this.value = \"\";\n            }\n            else {\n                this.afterBreak = true;\n                this.next();\n            }\n        }\n        else {\n            this.value = value;\n            this.afterBreak = false;\n        }\n        return this;\n    }\n    get lineBreak() { return false; }\n}\nif (typeof Symbol != \"undefined\") {\n    Text.prototype[Symbol.iterator] = function () { return this.iter(); };\n    RawTextCursor.prototype[Symbol.iterator] = PartialTextCursor.prototype[Symbol.iterator] =\n        LineCursor.prototype[Symbol.iterator] = function () { return this; };\n}\n/**\nThis type describes a line in the document. It is created\non-demand when lines are [queried](https://codemirror.net/6/docs/ref/#state.Text.lineAt).\n*/\nclass Line {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The position of the start of the line.\n    */\n    from, \n    /**\n    The position at the end of the line (_before_ the line break,\n    or at the end of document for the last line).\n    */\n    to, \n    /**\n    This line's line number (1-based).\n    */\n    number, \n    /**\n    The line's content.\n    */\n    text) {\n        this.from = from;\n        this.to = to;\n        this.number = number;\n        this.text = text;\n    }\n    /**\n    The length of the line (not including any line break after it).\n    */\n    get length() { return this.to - this.from; }\n}\nfunction clip(text, from, to) {\n    from = Math.max(0, Math.min(text.length, from));\n    return [from, Math.max(from, Math.min(text.length, to))];\n}\n\n/**\nReturns a next grapheme cluster break _after_ (not equal to)\n`pos`, if `forward` is true, or before otherwise. Returns `pos`\nitself if no further cluster break is available in the string.\nMoves across surrogate pairs, extending characters (when\n`includeExtending` is true), characters joined with zero-width\njoiners, and flag emoji.\n*/\nfunction findClusterBreak(str, pos, forward = true, includeExtending = true) {\n    return findClusterBreak$1(str, pos, forward, includeExtending);\n}\nfunction surrogateLow(ch) { return ch >= 0xDC00 && ch < 0xE000; }\nfunction surrogateHigh(ch) { return ch >= 0xD800 && ch < 0xDC00; }\n/**\nFind the code point at the given position in a string (like the\n[`codePointAt`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt)\nstring method).\n*/\nfunction codePointAt(str, pos) {\n    let code0 = str.charCodeAt(pos);\n    if (!surrogateHigh(code0) || pos + 1 == str.length)\n        return code0;\n    let code1 = str.charCodeAt(pos + 1);\n    if (!surrogateLow(code1))\n        return code0;\n    return ((code0 - 0xd800) << 10) + (code1 - 0xdc00) + 0x10000;\n}\n/**\nGiven a Unicode codepoint, return the JavaScript string that\nrespresents it (like\n[`String.fromCodePoint`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)).\n*/\nfunction fromCodePoint(code) {\n    if (code <= 0xffff)\n        return String.fromCharCode(code);\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xd800, (code & 1023) + 0xdc00);\n}\n/**\nThe amount of positions a character takes up in a JavaScript string.\n*/\nfunction codePointSize(code) { return code < 0x10000 ? 1 : 2; }\n\nconst DefaultSplit = /\\r\\n?|\\n/;\n/**\nDistinguishes different ways in which positions can be mapped.\n*/\nvar MapMode = /*@__PURE__*/(function (MapMode) {\n    /**\n    Map a position to a valid new position, even when its context\n    was deleted.\n    */\n    MapMode[MapMode[\"Simple\"] = 0] = \"Simple\";\n    /**\n    Return null if deletion happens across the position.\n    */\n    MapMode[MapMode[\"TrackDel\"] = 1] = \"TrackDel\";\n    /**\n    Return null if the character _before_ the position is deleted.\n    */\n    MapMode[MapMode[\"TrackBefore\"] = 2] = \"TrackBefore\";\n    /**\n    Return null if the character _after_ the position is deleted.\n    */\n    MapMode[MapMode[\"TrackAfter\"] = 3] = \"TrackAfter\";\nreturn MapMode})(MapMode || (MapMode = {}));\n/**\nA change description is a variant of [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet)\nthat doesn't store the inserted text. As such, it can't be\napplied, but is cheaper to store and manipulate.\n*/\nclass ChangeDesc {\n    // Sections are encoded as pairs of integers. The first is the\n    // length in the current document, and the second is -1 for\n    // unaffected sections, and the length of the replacement content\n    // otherwise. So an insertion would be (0, n>0), a deletion (n>0,\n    // 0), and a replacement two positive numbers.\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    sections) {\n        this.sections = sections;\n    }\n    /**\n    The length of the document before the change.\n    */\n    get length() {\n        let result = 0;\n        for (let i = 0; i < this.sections.length; i += 2)\n            result += this.sections[i];\n        return result;\n    }\n    /**\n    The length of the document after the change.\n    */\n    get newLength() {\n        let result = 0;\n        for (let i = 0; i < this.sections.length; i += 2) {\n            let ins = this.sections[i + 1];\n            result += ins < 0 ? this.sections[i] : ins;\n        }\n        return result;\n    }\n    /**\n    False when there are actual changes in this set.\n    */\n    get empty() { return this.sections.length == 0 || this.sections.length == 2 && this.sections[1] < 0; }\n    /**\n    Iterate over the unchanged parts left by these changes. `posA`\n    provides the position of the range in the old document, `posB`\n    the new position in the changed document.\n    */\n    iterGaps(f) {\n        for (let i = 0, posA = 0, posB = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            if (ins < 0) {\n                f(posA, posB, len);\n                posB += len;\n            }\n            else {\n                posB += ins;\n            }\n            posA += len;\n        }\n    }\n    /**\n    Iterate over the ranges changed by these changes. (See\n    [`ChangeSet.iterChanges`](https://codemirror.net/6/docs/ref/#state.ChangeSet.iterChanges) for a\n    variant that also provides you with the inserted text.)\n    `fromA`/`toA` provides the extent of the change in the starting\n    document, `fromB`/`toB` the extent of the replacement in the\n    changed document.\n    \n    When `individual` is true, adjacent changes (which are kept\n    separate for [position mapping](https://codemirror.net/6/docs/ref/#state.ChangeDesc.mapPos)) are\n    reported separately.\n    */\n    iterChangedRanges(f, individual = false) {\n        iterChanges(this, f, individual);\n    }\n    /**\n    Get a description of the inverted form of these changes.\n    */\n    get invertedDesc() {\n        let sections = [];\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            if (ins < 0)\n                sections.push(len, ins);\n            else\n                sections.push(ins, len);\n        }\n        return new ChangeDesc(sections);\n    }\n    /**\n    Compute the combined effect of applying another set of changes\n    after this one. The length of the document after this set should\n    match the length before `other`.\n    */\n    composeDesc(other) { return this.empty ? other : other.empty ? this : composeSets(this, other); }\n    /**\n    Map this description, which should start with the same document\n    as `other`, over another set of changes, so that it can be\n    applied after it. When `before` is true, map as if the changes\n    in `this` happened before the ones in `other`.\n    */\n    mapDesc(other, before = false) { return other.empty ? this : mapSet(this, other, before); }\n    mapPos(pos, assoc = -1, mode = MapMode.Simple) {\n        let posA = 0, posB = 0;\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++], endA = posA + len;\n            if (ins < 0) {\n                if (endA > pos)\n                    return posB + (pos - posA);\n                posB += len;\n            }\n            else {\n                if (mode != MapMode.Simple && endA >= pos &&\n                    (mode == MapMode.TrackDel && posA < pos && endA > pos ||\n                        mode == MapMode.TrackBefore && posA < pos ||\n                        mode == MapMode.TrackAfter && endA > pos))\n                    return null;\n                if (endA > pos || endA == pos && assoc < 0 && !len)\n                    return pos == posA || assoc < 0 ? posB : posB + ins;\n                posB += ins;\n            }\n            posA = endA;\n        }\n        if (pos > posA)\n            throw new RangeError(`Position ${pos} is out of range for changeset of length ${posA}`);\n        return posB;\n    }\n    /**\n    Check whether these changes touch a given range. When one of the\n    changes entirely covers the range, the string `\"cover\"` is\n    returned.\n    */\n    touchesRange(from, to = from) {\n        for (let i = 0, pos = 0; i < this.sections.length && pos <= to;) {\n            let len = this.sections[i++], ins = this.sections[i++], end = pos + len;\n            if (ins >= 0 && pos <= to && end >= from)\n                return pos < from && end > to ? \"cover\" : true;\n            pos = end;\n        }\n        return false;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let result = \"\";\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            result += (result ? \" \" : \"\") + len + (ins >= 0 ? \":\" + ins : \"\");\n        }\n        return result;\n    }\n    /**\n    Serialize this change desc to a JSON-representable value.\n    */\n    toJSON() { return this.sections; }\n    /**\n    Create a change desc from its JSON representation (as produced\n    by [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeDesc.toJSON).\n    */\n    static fromJSON(json) {\n        if (!Array.isArray(json) || json.length % 2 || json.some(a => typeof a != \"number\"))\n            throw new RangeError(\"Invalid JSON representation of ChangeDesc\");\n        return new ChangeDesc(json);\n    }\n    /**\n    @internal\n    */\n    static create(sections) { return new ChangeDesc(sections); }\n}\n/**\nA change set represents a group of modifications to a document. It\nstores the document length, and can only be applied to documents\nwith exactly that length.\n*/\nclass ChangeSet extends ChangeDesc {\n    constructor(sections, \n    /**\n    @internal\n    */\n    inserted) {\n        super(sections);\n        this.inserted = inserted;\n    }\n    /**\n    Apply the changes to a document, returning the modified\n    document.\n    */\n    apply(doc) {\n        if (this.length != doc.length)\n            throw new RangeError(\"Applying change set to a document with the wrong length\");\n        iterChanges(this, (fromA, toA, fromB, _toB, text) => doc = doc.replace(fromB, fromB + (toA - fromA), text), false);\n        return doc;\n    }\n    mapDesc(other, before = false) { return mapSet(this, other, before, true); }\n    /**\n    Given the document as it existed _before_ the changes, return a\n    change set that represents the inverse of this set, which could\n    be used to go from the document created by the changes back to\n    the document as it existed before the changes.\n    */\n    invert(doc) {\n        let sections = this.sections.slice(), inserted = [];\n        for (let i = 0, pos = 0; i < sections.length; i += 2) {\n            let len = sections[i], ins = sections[i + 1];\n            if (ins >= 0) {\n                sections[i] = ins;\n                sections[i + 1] = len;\n                let index = i >> 1;\n                while (inserted.length < index)\n                    inserted.push(Text.empty);\n                inserted.push(len ? doc.slice(pos, pos + len) : Text.empty);\n            }\n            pos += len;\n        }\n        return new ChangeSet(sections, inserted);\n    }\n    /**\n    Combine two subsequent change sets into a single set. `other`\n    must start in the document produced by `this`. If `this` goes\n    `docA` → `docB` and `other` represents `docB` → `docC`, the\n    returned value will represent the change `docA` → `docC`.\n    */\n    compose(other) { return this.empty ? other : other.empty ? this : composeSets(this, other, true); }\n    /**\n    Given another change set starting in the same document, maps this\n    change set over the other, producing a new change set that can be\n    applied to the document produced by applying `other`. When\n    `before` is `true`, order changes as if `this` comes before\n    `other`, otherwise (the default) treat `other` as coming first.\n    \n    Given two changes `A` and `B`, `A.compose(B.map(A))` and\n    `B.compose(A.map(B, true))` will produce the same document. This\n    provides a basic form of [operational\n    transformation](https://en.wikipedia.org/wiki/Operational_transformation),\n    and can be used for collaborative editing.\n    */\n    map(other, before = false) { return other.empty ? this : mapSet(this, other, before, true); }\n    /**\n    Iterate over the changed ranges in the document, calling `f` for\n    each, with the range in the original document (`fromA`-`toA`)\n    and the range that replaces it in the new document\n    (`fromB`-`toB`).\n    \n    When `individual` is true, adjacent changes are reported\n    separately.\n    */\n    iterChanges(f, individual = false) {\n        iterChanges(this, f, individual);\n    }\n    /**\n    Get a [change description](https://codemirror.net/6/docs/ref/#state.ChangeDesc) for this change\n    set.\n    */\n    get desc() { return ChangeDesc.create(this.sections); }\n    /**\n    @internal\n    */\n    filter(ranges) {\n        let resultSections = [], resultInserted = [], filteredSections = [];\n        let iter = new SectionIter(this);\n        done: for (let i = 0, pos = 0;;) {\n            let next = i == ranges.length ? 1e9 : ranges[i++];\n            while (pos < next || pos == next && iter.len == 0) {\n                if (iter.done)\n                    break done;\n                let len = Math.min(iter.len, next - pos);\n                addSection(filteredSections, len, -1);\n                let ins = iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0;\n                addSection(resultSections, len, ins);\n                if (ins > 0)\n                    addInsert(resultInserted, resultSections, iter.text);\n                iter.forward(len);\n                pos += len;\n            }\n            let end = ranges[i++];\n            while (pos < end) {\n                if (iter.done)\n                    break done;\n                let len = Math.min(iter.len, end - pos);\n                addSection(resultSections, len, -1);\n                addSection(filteredSections, len, iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0);\n                iter.forward(len);\n                pos += len;\n            }\n        }\n        return { changes: new ChangeSet(resultSections, resultInserted),\n            filtered: ChangeDesc.create(filteredSections) };\n    }\n    /**\n    Serialize this change set to a JSON-representable value.\n    */\n    toJSON() {\n        let parts = [];\n        for (let i = 0; i < this.sections.length; i += 2) {\n            let len = this.sections[i], ins = this.sections[i + 1];\n            if (ins < 0)\n                parts.push(len);\n            else if (ins == 0)\n                parts.push([len]);\n            else\n                parts.push([len].concat(this.inserted[i >> 1].toJSON()));\n        }\n        return parts;\n    }\n    /**\n    Create a change set for the given changes, for a document of the\n    given length, using `lineSep` as line separator.\n    */\n    static of(changes, length, lineSep) {\n        let sections = [], inserted = [], pos = 0;\n        let total = null;\n        function flush(force = false) {\n            if (!force && !sections.length)\n                return;\n            if (pos < length)\n                addSection(sections, length - pos, -1);\n            let set = new ChangeSet(sections, inserted);\n            total = total ? total.compose(set.map(total)) : set;\n            sections = [];\n            inserted = [];\n            pos = 0;\n        }\n        function process(spec) {\n            if (Array.isArray(spec)) {\n                for (let sub of spec)\n                    process(sub);\n            }\n            else if (spec instanceof ChangeSet) {\n                if (spec.length != length)\n                    throw new RangeError(`Mismatched change set length (got ${spec.length}, expected ${length})`);\n                flush();\n                total = total ? total.compose(spec.map(total)) : spec;\n            }\n            else {\n                let { from, to = from, insert } = spec;\n                if (from > to || from < 0 || to > length)\n                    throw new RangeError(`Invalid change range ${from} to ${to} (in doc of length ${length})`);\n                let insText = !insert ? Text.empty : typeof insert == \"string\" ? Text.of(insert.split(lineSep || DefaultSplit)) : insert;\n                let insLen = insText.length;\n                if (from == to && insLen == 0)\n                    return;\n                if (from < pos)\n                    flush();\n                if (from > pos)\n                    addSection(sections, from - pos, -1);\n                addSection(sections, to - from, insLen);\n                addInsert(inserted, sections, insText);\n                pos = to;\n            }\n        }\n        process(changes);\n        flush(!total);\n        return total;\n    }\n    /**\n    Create an empty changeset of the given length.\n    */\n    static empty(length) {\n        return new ChangeSet(length ? [length, -1] : [], []);\n    }\n    /**\n    Create a changeset from its JSON representation (as produced by\n    [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeSet.toJSON).\n    */\n    static fromJSON(json) {\n        if (!Array.isArray(json))\n            throw new RangeError(\"Invalid JSON representation of ChangeSet\");\n        let sections = [], inserted = [];\n        for (let i = 0; i < json.length; i++) {\n            let part = json[i];\n            if (typeof part == \"number\") {\n                sections.push(part, -1);\n            }\n            else if (!Array.isArray(part) || typeof part[0] != \"number\" || part.some((e, i) => i && typeof e != \"string\")) {\n                throw new RangeError(\"Invalid JSON representation of ChangeSet\");\n            }\n            else if (part.length == 1) {\n                sections.push(part[0], 0);\n            }\n            else {\n                while (inserted.length < i)\n                    inserted.push(Text.empty);\n                inserted[i] = Text.of(part.slice(1));\n                sections.push(part[0], inserted[i].length);\n            }\n        }\n        return new ChangeSet(sections, inserted);\n    }\n    /**\n    @internal\n    */\n    static createSet(sections, inserted) {\n        return new ChangeSet(sections, inserted);\n    }\n}\nfunction addSection(sections, len, ins, forceJoin = false) {\n    if (len == 0 && ins <= 0)\n        return;\n    let last = sections.length - 2;\n    if (last >= 0 && ins <= 0 && ins == sections[last + 1])\n        sections[last] += len;\n    else if (last >= 0 && len == 0 && sections[last] == 0)\n        sections[last + 1] += ins;\n    else if (forceJoin) {\n        sections[last] += len;\n        sections[last + 1] += ins;\n    }\n    else\n        sections.push(len, ins);\n}\nfunction addInsert(values, sections, value) {\n    if (value.length == 0)\n        return;\n    let index = (sections.length - 2) >> 1;\n    if (index < values.length) {\n        values[values.length - 1] = values[values.length - 1].append(value);\n    }\n    else {\n        while (values.length < index)\n            values.push(Text.empty);\n        values.push(value);\n    }\n}\nfunction iterChanges(desc, f, individual) {\n    let inserted = desc.inserted;\n    for (let posA = 0, posB = 0, i = 0; i < desc.sections.length;) {\n        let len = desc.sections[i++], ins = desc.sections[i++];\n        if (ins < 0) {\n            posA += len;\n            posB += len;\n        }\n        else {\n            let endA = posA, endB = posB, text = Text.empty;\n            for (;;) {\n                endA += len;\n                endB += ins;\n                if (ins && inserted)\n                    text = text.append(inserted[(i - 2) >> 1]);\n                if (individual || i == desc.sections.length || desc.sections[i + 1] < 0)\n                    break;\n                len = desc.sections[i++];\n                ins = desc.sections[i++];\n            }\n            f(posA, endA, posB, endB, text);\n            posA = endA;\n            posB = endB;\n        }\n    }\n}\nfunction mapSet(setA, setB, before, mkSet = false) {\n    // Produce a copy of setA that applies to the document after setB\n    // has been applied (assuming both start at the same document).\n    let sections = [], insert = mkSet ? [] : null;\n    let a = new SectionIter(setA), b = new SectionIter(setB);\n    // Iterate over both sets in parallel. inserted tracks, for changes\n    // in A that have to be processed piece-by-piece, whether their\n    // content has been inserted already, and refers to the section\n    // index.\n    for (let inserted = -1;;) {\n        if (a.done && b.len || b.done && a.len) {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n        else if (a.ins == -1 && b.ins == -1) {\n            // Move across ranges skipped by both sets.\n            let len = Math.min(a.len, b.len);\n            addSection(sections, len, -1);\n            a.forward(len);\n            b.forward(len);\n        }\n        else if (b.ins >= 0 && (a.ins < 0 || inserted == a.i || a.off == 0 && (b.len < a.len || b.len == a.len && !before))) {\n            // If there's a change in B that comes before the next change in\n            // A (ordered by start pos, then len, then before flag), skip\n            // that (and process any changes in A it covers).\n            let len = b.len;\n            addSection(sections, b.ins, -1);\n            while (len) {\n                let piece = Math.min(a.len, len);\n                if (a.ins >= 0 && inserted < a.i && a.len <= piece) {\n                    addSection(sections, 0, a.ins);\n                    if (insert)\n                        addInsert(insert, sections, a.text);\n                    inserted = a.i;\n                }\n                a.forward(piece);\n                len -= piece;\n            }\n            b.next();\n        }\n        else if (a.ins >= 0) {\n            // Process the part of a change in A up to the start of the next\n            // non-deletion change in B (if overlapping).\n            let len = 0, left = a.len;\n            while (left) {\n                if (b.ins == -1) {\n                    let piece = Math.min(left, b.len);\n                    len += piece;\n                    left -= piece;\n                    b.forward(piece);\n                }\n                else if (b.ins == 0 && b.len < left) {\n                    left -= b.len;\n                    b.next();\n                }\n                else {\n                    break;\n                }\n            }\n            addSection(sections, len, inserted < a.i ? a.ins : 0);\n            if (insert && inserted < a.i)\n                addInsert(insert, sections, a.text);\n            inserted = a.i;\n            a.forward(a.len - left);\n        }\n        else if (a.done && b.done) {\n            return insert ? ChangeSet.createSet(sections, insert) : ChangeDesc.create(sections);\n        }\n        else {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n    }\n}\nfunction composeSets(setA, setB, mkSet = false) {\n    let sections = [];\n    let insert = mkSet ? [] : null;\n    let a = new SectionIter(setA), b = new SectionIter(setB);\n    for (let open = false;;) {\n        if (a.done && b.done) {\n            return insert ? ChangeSet.createSet(sections, insert) : ChangeDesc.create(sections);\n        }\n        else if (a.ins == 0) { // Deletion in A\n            addSection(sections, a.len, 0, open);\n            a.next();\n        }\n        else if (b.len == 0 && !b.done) { // Insertion in B\n            addSection(sections, 0, b.ins, open);\n            if (insert)\n                addInsert(insert, sections, b.text);\n            b.next();\n        }\n        else if (a.done || b.done) {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n        else {\n            let len = Math.min(a.len2, b.len), sectionLen = sections.length;\n            if (a.ins == -1) {\n                let insB = b.ins == -1 ? -1 : b.off ? 0 : b.ins;\n                addSection(sections, len, insB, open);\n                if (insert && insB)\n                    addInsert(insert, sections, b.text);\n            }\n            else if (b.ins == -1) {\n                addSection(sections, a.off ? 0 : a.len, len, open);\n                if (insert)\n                    addInsert(insert, sections, a.textBit(len));\n            }\n            else {\n                addSection(sections, a.off ? 0 : a.len, b.off ? 0 : b.ins, open);\n                if (insert && !b.off)\n                    addInsert(insert, sections, b.text);\n            }\n            open = (a.ins > len || b.ins >= 0 && b.len > len) && (open || sections.length > sectionLen);\n            a.forward2(len);\n            b.forward(len);\n        }\n    }\n}\nclass SectionIter {\n    constructor(set) {\n        this.set = set;\n        this.i = 0;\n        this.next();\n    }\n    next() {\n        let { sections } = this.set;\n        if (this.i < sections.length) {\n            this.len = sections[this.i++];\n            this.ins = sections[this.i++];\n        }\n        else {\n            this.len = 0;\n            this.ins = -2;\n        }\n        this.off = 0;\n    }\n    get done() { return this.ins == -2; }\n    get len2() { return this.ins < 0 ? this.len : this.ins; }\n    get text() {\n        let { inserted } = this.set, index = (this.i - 2) >> 1;\n        return index >= inserted.length ? Text.empty : inserted[index];\n    }\n    textBit(len) {\n        let { inserted } = this.set, index = (this.i - 2) >> 1;\n        return index >= inserted.length && !len ? Text.empty\n            : inserted[index].slice(this.off, len == null ? undefined : this.off + len);\n    }\n    forward(len) {\n        if (len == this.len)\n            this.next();\n        else {\n            this.len -= len;\n            this.off += len;\n        }\n    }\n    forward2(len) {\n        if (this.ins == -1)\n            this.forward(len);\n        else if (len == this.ins)\n            this.next();\n        else {\n            this.ins -= len;\n            this.off += len;\n        }\n    }\n}\n\n/**\nA single selection range. When\n[`allowMultipleSelections`](https://codemirror.net/6/docs/ref/#state.EditorState^allowMultipleSelections)\nis enabled, a [selection](https://codemirror.net/6/docs/ref/#state.EditorSelection) may hold\nmultiple ranges. By default, selections hold exactly one range.\n*/\nclass SelectionRange {\n    constructor(\n    /**\n    The lower boundary of the range.\n    */\n    from, \n    /**\n    The upper boundary of the range.\n    */\n    to, flags) {\n        this.from = from;\n        this.to = to;\n        this.flags = flags;\n    }\n    /**\n    The anchor of the range—the side that doesn't move when you\n    extend it.\n    */\n    get anchor() { return this.flags & 32 /* RangeFlag.Inverted */ ? this.to : this.from; }\n    /**\n    The head of the range, which is moved when the range is\n    [extended](https://codemirror.net/6/docs/ref/#state.SelectionRange.extend).\n    */\n    get head() { return this.flags & 32 /* RangeFlag.Inverted */ ? this.from : this.to; }\n    /**\n    True when `anchor` and `head` are at the same position.\n    */\n    get empty() { return this.from == this.to; }\n    /**\n    If this is a cursor that is explicitly associated with the\n    character on one of its sides, this returns the side. -1 means\n    the character before its position, 1 the character after, and 0\n    means no association.\n    */\n    get assoc() { return this.flags & 8 /* RangeFlag.AssocBefore */ ? -1 : this.flags & 16 /* RangeFlag.AssocAfter */ ? 1 : 0; }\n    /**\n    The bidirectional text level associated with this cursor, if\n    any.\n    */\n    get bidiLevel() {\n        let level = this.flags & 7 /* RangeFlag.BidiLevelMask */;\n        return level == 7 ? null : level;\n    }\n    /**\n    The goal column (stored vertical offset) associated with a\n    cursor. This is used to preserve the vertical position when\n    [moving](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) across\n    lines of different length.\n    */\n    get goalColumn() {\n        let value = this.flags >> 6 /* RangeFlag.GoalColumnOffset */;\n        return value == 16777215 /* RangeFlag.NoGoalColumn */ ? undefined : value;\n    }\n    /**\n    Map this range through a change, producing a valid range in the\n    updated document.\n    */\n    map(change, assoc = -1) {\n        let from, to;\n        if (this.empty) {\n            from = to = change.mapPos(this.from, assoc);\n        }\n        else {\n            from = change.mapPos(this.from, 1);\n            to = change.mapPos(this.to, -1);\n        }\n        return from == this.from && to == this.to ? this : new SelectionRange(from, to, this.flags);\n    }\n    /**\n    Extend this range to cover at least `from` to `to`.\n    */\n    extend(from, to = from) {\n        if (from <= this.anchor && to >= this.anchor)\n            return EditorSelection.range(from, to);\n        let head = Math.abs(from - this.anchor) > Math.abs(to - this.anchor) ? from : to;\n        return EditorSelection.range(this.anchor, head);\n    }\n    /**\n    Compare this range to another range.\n    */\n    eq(other, includeAssoc = false) {\n        return this.anchor == other.anchor && this.head == other.head &&\n            (!includeAssoc || !this.empty || this.assoc == other.assoc);\n    }\n    /**\n    Return a JSON-serializable object representing the range.\n    */\n    toJSON() { return { anchor: this.anchor, head: this.head }; }\n    /**\n    Convert a JSON representation of a range to a `SelectionRange`\n    instance.\n    */\n    static fromJSON(json) {\n        if (!json || typeof json.anchor != \"number\" || typeof json.head != \"number\")\n            throw new RangeError(\"Invalid JSON representation for SelectionRange\");\n        return EditorSelection.range(json.anchor, json.head);\n    }\n    /**\n    @internal\n    */\n    static create(from, to, flags) {\n        return new SelectionRange(from, to, flags);\n    }\n}\n/**\nAn editor selection holds one or more selection ranges.\n*/\nclass EditorSelection {\n    constructor(\n    /**\n    The ranges in the selection, sorted by position. Ranges cannot\n    overlap (but they may touch, if they aren't empty).\n    */\n    ranges, \n    /**\n    The index of the _main_ range in the selection (which is\n    usually the range that was added last).\n    */\n    mainIndex) {\n        this.ranges = ranges;\n        this.mainIndex = mainIndex;\n    }\n    /**\n    Map a selection through a change. Used to adjust the selection\n    position for changes.\n    */\n    map(change, assoc = -1) {\n        if (change.empty)\n            return this;\n        return EditorSelection.create(this.ranges.map(r => r.map(change, assoc)), this.mainIndex);\n    }\n    /**\n    Compare this selection to another selection. By default, ranges\n    are compared only by position. When `includeAssoc` is true,\n    cursor ranges must also have the same\n    [`assoc`](https://codemirror.net/6/docs/ref/#state.SelectionRange.assoc) value.\n    */\n    eq(other, includeAssoc = false) {\n        if (this.ranges.length != other.ranges.length ||\n            this.mainIndex != other.mainIndex)\n            return false;\n        for (let i = 0; i < this.ranges.length; i++)\n            if (!this.ranges[i].eq(other.ranges[i], includeAssoc))\n                return false;\n        return true;\n    }\n    /**\n    Get the primary selection range. Usually, you should make sure\n    your code applies to _all_ ranges, by using methods like\n    [`changeByRange`](https://codemirror.net/6/docs/ref/#state.EditorState.changeByRange).\n    */\n    get main() { return this.ranges[this.mainIndex]; }\n    /**\n    Make sure the selection only has one range. Returns a selection\n    holding only the main range from this selection.\n    */\n    asSingle() {\n        return this.ranges.length == 1 ? this : new EditorSelection([this.main], 0);\n    }\n    /**\n    Extend this selection with an extra range.\n    */\n    addRange(range, main = true) {\n        return EditorSelection.create([range].concat(this.ranges), main ? 0 : this.mainIndex + 1);\n    }\n    /**\n    Replace a given range with another range, and then normalize the\n    selection to merge and sort ranges if necessary.\n    */\n    replaceRange(range, which = this.mainIndex) {\n        let ranges = this.ranges.slice();\n        ranges[which] = range;\n        return EditorSelection.create(ranges, this.mainIndex);\n    }\n    /**\n    Convert this selection to an object that can be serialized to\n    JSON.\n    */\n    toJSON() {\n        return { ranges: this.ranges.map(r => r.toJSON()), main: this.mainIndex };\n    }\n    /**\n    Create a selection from a JSON representation.\n    */\n    static fromJSON(json) {\n        if (!json || !Array.isArray(json.ranges) || typeof json.main != \"number\" || json.main >= json.ranges.length)\n            throw new RangeError(\"Invalid JSON representation for EditorSelection\");\n        return new EditorSelection(json.ranges.map((r) => SelectionRange.fromJSON(r)), json.main);\n    }\n    /**\n    Create a selection holding a single range.\n    */\n    static single(anchor, head = anchor) {\n        return new EditorSelection([EditorSelection.range(anchor, head)], 0);\n    }\n    /**\n    Sort and merge the given set of ranges, creating a valid\n    selection.\n    */\n    static create(ranges, mainIndex = 0) {\n        if (ranges.length == 0)\n            throw new RangeError(\"A selection needs at least one range\");\n        for (let pos = 0, i = 0; i < ranges.length; i++) {\n            let range = ranges[i];\n            if (range.empty ? range.from <= pos : range.from < pos)\n                return EditorSelection.normalized(ranges.slice(), mainIndex);\n            pos = range.to;\n        }\n        return new EditorSelection(ranges, mainIndex);\n    }\n    /**\n    Create a cursor selection range at the given position. You can\n    safely ignore the optional arguments in most situations.\n    */\n    static cursor(pos, assoc = 0, bidiLevel, goalColumn) {\n        return SelectionRange.create(pos, pos, (assoc == 0 ? 0 : assoc < 0 ? 8 /* RangeFlag.AssocBefore */ : 16 /* RangeFlag.AssocAfter */) |\n            (bidiLevel == null ? 7 : Math.min(6, bidiLevel)) |\n            ((goalColumn !== null && goalColumn !== void 0 ? goalColumn : 16777215 /* RangeFlag.NoGoalColumn */) << 6 /* RangeFlag.GoalColumnOffset */));\n    }\n    /**\n    Create a selection range.\n    */\n    static range(anchor, head, goalColumn, bidiLevel) {\n        let flags = ((goalColumn !== null && goalColumn !== void 0 ? goalColumn : 16777215 /* RangeFlag.NoGoalColumn */) << 6 /* RangeFlag.GoalColumnOffset */) |\n            (bidiLevel == null ? 7 : Math.min(6, bidiLevel));\n        return head < anchor ? SelectionRange.create(head, anchor, 32 /* RangeFlag.Inverted */ | 16 /* RangeFlag.AssocAfter */ | flags)\n            : SelectionRange.create(anchor, head, (head > anchor ? 8 /* RangeFlag.AssocBefore */ : 0) | flags);\n    }\n    /**\n    @internal\n    */\n    static normalized(ranges, mainIndex = 0) {\n        let main = ranges[mainIndex];\n        ranges.sort((a, b) => a.from - b.from);\n        mainIndex = ranges.indexOf(main);\n        for (let i = 1; i < ranges.length; i++) {\n            let range = ranges[i], prev = ranges[i - 1];\n            if (range.empty ? range.from <= prev.to : range.from < prev.to) {\n                let from = prev.from, to = Math.max(range.to, prev.to);\n                if (i <= mainIndex)\n                    mainIndex--;\n                ranges.splice(--i, 2, range.anchor > range.head ? EditorSelection.range(to, from) : EditorSelection.range(from, to));\n            }\n        }\n        return new EditorSelection(ranges, mainIndex);\n    }\n}\nfunction checkSelection(selection, docLength) {\n    for (let range of selection.ranges)\n        if (range.to > docLength)\n            throw new RangeError(\"Selection points outside of document\");\n}\n\nlet nextID = 0;\n/**\nA facet is a labeled value that is associated with an editor\nstate. It takes inputs from any number of extensions, and combines\nthose into a single output value.\n\nExamples of uses of facets are the [tab\nsize](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize), [editor\nattributes](https://codemirror.net/6/docs/ref/#view.EditorView^editorAttributes), and [update\nlisteners](https://codemirror.net/6/docs/ref/#view.EditorView^updateListener).\n\nNote that `Facet` instances can be used anywhere where\n[`FacetReader`](https://codemirror.net/6/docs/ref/#state.FacetReader) is expected.\n*/\nclass Facet {\n    constructor(\n    /**\n    @internal\n    */\n    combine, \n    /**\n    @internal\n    */\n    compareInput, \n    /**\n    @internal\n    */\n    compare, isStatic, enables) {\n        this.combine = combine;\n        this.compareInput = compareInput;\n        this.compare = compare;\n        this.isStatic = isStatic;\n        /**\n        @internal\n        */\n        this.id = nextID++;\n        this.default = combine([]);\n        this.extensions = typeof enables == \"function\" ? enables(this) : enables;\n    }\n    /**\n    Returns a facet reader for this facet, which can be used to\n    [read](https://codemirror.net/6/docs/ref/#state.EditorState.facet) it but not to define values for it.\n    */\n    get reader() { return this; }\n    /**\n    Define a new facet.\n    */\n    static define(config = {}) {\n        return new Facet(config.combine || ((a) => a), config.compareInput || ((a, b) => a === b), config.compare || (!config.combine ? sameArray : (a, b) => a === b), !!config.static, config.enables);\n    }\n    /**\n    Returns an extension that adds the given value to this facet.\n    */\n    of(value) {\n        return new FacetProvider([], this, 0 /* Provider.Static */, value);\n    }\n    /**\n    Create an extension that computes a value for the facet from a\n    state. You must take care to declare the parts of the state that\n    this value depends on, since your function is only called again\n    for a new state when one of those parts changed.\n    \n    In cases where your value depends only on a single field, you'll\n    want to use the [`from`](https://codemirror.net/6/docs/ref/#state.Facet.from) method instead.\n    */\n    compute(deps, get) {\n        if (this.isStatic)\n            throw new Error(\"Can't compute a static facet\");\n        return new FacetProvider(deps, this, 1 /* Provider.Single */, get);\n    }\n    /**\n    Create an extension that computes zero or more values for this\n    facet from a state.\n    */\n    computeN(deps, get) {\n        if (this.isStatic)\n            throw new Error(\"Can't compute a static facet\");\n        return new FacetProvider(deps, this, 2 /* Provider.Multi */, get);\n    }\n    from(field, get) {\n        if (!get)\n            get = x => x;\n        return this.compute([field], state => get(state.field(field)));\n    }\n}\nfunction sameArray(a, b) {\n    return a == b || a.length == b.length && a.every((e, i) => e === b[i]);\n}\nclass FacetProvider {\n    constructor(dependencies, facet, type, value) {\n        this.dependencies = dependencies;\n        this.facet = facet;\n        this.type = type;\n        this.value = value;\n        this.id = nextID++;\n    }\n    dynamicSlot(addresses) {\n        var _a;\n        let getter = this.value;\n        let compare = this.facet.compareInput;\n        let id = this.id, idx = addresses[id] >> 1, multi = this.type == 2 /* Provider.Multi */;\n        let depDoc = false, depSel = false, depAddrs = [];\n        for (let dep of this.dependencies) {\n            if (dep == \"doc\")\n                depDoc = true;\n            else if (dep == \"selection\")\n                depSel = true;\n            else if ((((_a = addresses[dep.id]) !== null && _a !== void 0 ? _a : 1) & 1) == 0)\n                depAddrs.push(addresses[dep.id]);\n        }\n        return {\n            create(state) {\n                state.values[idx] = getter(state);\n                return 1 /* SlotStatus.Changed */;\n            },\n            update(state, tr) {\n                if ((depDoc && tr.docChanged) || (depSel && (tr.docChanged || tr.selection)) || ensureAll(state, depAddrs)) {\n                    let newVal = getter(state);\n                    if (multi ? !compareArray(newVal, state.values[idx], compare) : !compare(newVal, state.values[idx])) {\n                        state.values[idx] = newVal;\n                        return 1 /* SlotStatus.Changed */;\n                    }\n                }\n                return 0;\n            },\n            reconfigure: (state, oldState) => {\n                let newVal, oldAddr = oldState.config.address[id];\n                if (oldAddr != null) {\n                    let oldVal = getAddr(oldState, oldAddr);\n                    if (this.dependencies.every(dep => {\n                        return dep instanceof Facet ? oldState.facet(dep) === state.facet(dep) :\n                            dep instanceof StateField ? oldState.field(dep, false) == state.field(dep, false) : true;\n                    }) || (multi ? compareArray(newVal = getter(state), oldVal, compare) : compare(newVal = getter(state), oldVal))) {\n                        state.values[idx] = oldVal;\n                        return 0;\n                    }\n                }\n                else {\n                    newVal = getter(state);\n                }\n                state.values[idx] = newVal;\n                return 1 /* SlotStatus.Changed */;\n            }\n        };\n    }\n}\nfunction compareArray(a, b, compare) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!compare(a[i], b[i]))\n            return false;\n    return true;\n}\nfunction ensureAll(state, addrs) {\n    let changed = false;\n    for (let addr of addrs)\n        if (ensureAddr(state, addr) & 1 /* SlotStatus.Changed */)\n            changed = true;\n    return changed;\n}\nfunction dynamicFacetSlot(addresses, facet, providers) {\n    let providerAddrs = providers.map(p => addresses[p.id]);\n    let providerTypes = providers.map(p => p.type);\n    let dynamic = providerAddrs.filter(p => !(p & 1));\n    let idx = addresses[facet.id] >> 1;\n    function get(state) {\n        let values = [];\n        for (let i = 0; i < providerAddrs.length; i++) {\n            let value = getAddr(state, providerAddrs[i]);\n            if (providerTypes[i] == 2 /* Provider.Multi */)\n                for (let val of value)\n                    values.push(val);\n            else\n                values.push(value);\n        }\n        return facet.combine(values);\n    }\n    return {\n        create(state) {\n            for (let addr of providerAddrs)\n                ensureAddr(state, addr);\n            state.values[idx] = get(state);\n            return 1 /* SlotStatus.Changed */;\n        },\n        update(state, tr) {\n            if (!ensureAll(state, dynamic))\n                return 0;\n            let value = get(state);\n            if (facet.compare(value, state.values[idx]))\n                return 0;\n            state.values[idx] = value;\n            return 1 /* SlotStatus.Changed */;\n        },\n        reconfigure(state, oldState) {\n            let depChanged = ensureAll(state, providerAddrs);\n            let oldProviders = oldState.config.facets[facet.id], oldValue = oldState.facet(facet);\n            if (oldProviders && !depChanged && sameArray(providers, oldProviders)) {\n                state.values[idx] = oldValue;\n                return 0;\n            }\n            let value = get(state);\n            if (facet.compare(value, oldValue)) {\n                state.values[idx] = oldValue;\n                return 0;\n            }\n            state.values[idx] = value;\n            return 1 /* SlotStatus.Changed */;\n        }\n    };\n}\nconst initField = /*@__PURE__*/Facet.define({ static: true });\n/**\nFields can store additional information in an editor state, and\nkeep it in sync with the rest of the state.\n*/\nclass StateField {\n    constructor(\n    /**\n    @internal\n    */\n    id, createF, updateF, compareF, \n    /**\n    @internal\n    */\n    spec) {\n        this.id = id;\n        this.createF = createF;\n        this.updateF = updateF;\n        this.compareF = compareF;\n        this.spec = spec;\n        /**\n        @internal\n        */\n        this.provides = undefined;\n    }\n    /**\n    Define a state field.\n    */\n    static define(config) {\n        let field = new StateField(nextID++, config.create, config.update, config.compare || ((a, b) => a === b), config);\n        if (config.provide)\n            field.provides = config.provide(field);\n        return field;\n    }\n    create(state) {\n        let init = state.facet(initField).find(i => i.field == this);\n        return ((init === null || init === void 0 ? void 0 : init.create) || this.createF)(state);\n    }\n    /**\n    @internal\n    */\n    slot(addresses) {\n        let idx = addresses[this.id] >> 1;\n        return {\n            create: (state) => {\n                state.values[idx] = this.create(state);\n                return 1 /* SlotStatus.Changed */;\n            },\n            update: (state, tr) => {\n                let oldVal = state.values[idx];\n                let value = this.updateF(oldVal, tr);\n                if (this.compareF(oldVal, value))\n                    return 0;\n                state.values[idx] = value;\n                return 1 /* SlotStatus.Changed */;\n            },\n            reconfigure: (state, oldState) => {\n                let init = state.facet(initField), oldInit = oldState.facet(initField), reInit;\n                if ((reInit = init.find(i => i.field == this)) && reInit != oldInit.find(i => i.field == this)) {\n                    state.values[idx] = reInit.create(state);\n                    return 1 /* SlotStatus.Changed */;\n                }\n                if (oldState.config.address[this.id] != null) {\n                    state.values[idx] = oldState.field(this);\n                    return 0;\n                }\n                state.values[idx] = this.create(state);\n                return 1 /* SlotStatus.Changed */;\n            }\n        };\n    }\n    /**\n    Returns an extension that enables this field and overrides the\n    way it is initialized. Can be useful when you need to provide a\n    non-default starting value for the field.\n    */\n    init(create) {\n        return [this, initField.of({ field: this, create })];\n    }\n    /**\n    State field instances can be used as\n    [`Extension`](https://codemirror.net/6/docs/ref/#state.Extension) values to enable the field in a\n    given state.\n    */\n    get extension() { return this; }\n}\nconst Prec_ = { lowest: 4, low: 3, default: 2, high: 1, highest: 0 };\nfunction prec(value) {\n    return (ext) => new PrecExtension(ext, value);\n}\n/**\nBy default extensions are registered in the order they are found\nin the flattened form of nested array that was provided.\nIndividual extension values can be assigned a precedence to\noverride this. Extensions that do not have a precedence set get\nthe precedence of the nearest parent with a precedence, or\n[`default`](https://codemirror.net/6/docs/ref/#state.Prec.default) if there is no such parent. The\nfinal ordering of extensions is determined by first sorting by\nprecedence and then by order within each precedence.\n*/\nconst Prec = {\n    /**\n    The highest precedence level, for extensions that should end up\n    near the start of the precedence ordering.\n    */\n    highest: /*@__PURE__*/prec(Prec_.highest),\n    /**\n    A higher-than-default precedence, for extensions that should\n    come before those with default precedence.\n    */\n    high: /*@__PURE__*/prec(Prec_.high),\n    /**\n    The default precedence, which is also used for extensions\n    without an explicit precedence.\n    */\n    default: /*@__PURE__*/prec(Prec_.default),\n    /**\n    A lower-than-default precedence.\n    */\n    low: /*@__PURE__*/prec(Prec_.low),\n    /**\n    The lowest precedence level. Meant for things that should end up\n    near the end of the extension order.\n    */\n    lowest: /*@__PURE__*/prec(Prec_.lowest)\n};\nclass PrecExtension {\n    constructor(inner, prec) {\n        this.inner = inner;\n        this.prec = prec;\n    }\n}\n/**\nExtension compartments can be used to make a configuration\ndynamic. By [wrapping](https://codemirror.net/6/docs/ref/#state.Compartment.of) part of your\nconfiguration in a compartment, you can later\n[replace](https://codemirror.net/6/docs/ref/#state.Compartment.reconfigure) that part through a\ntransaction.\n*/\nclass Compartment {\n    /**\n    Create an instance of this compartment to add to your [state\n    configuration](https://codemirror.net/6/docs/ref/#state.EditorStateConfig.extensions).\n    */\n    of(ext) { return new CompartmentInstance(this, ext); }\n    /**\n    Create an [effect](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) that\n    reconfigures this compartment.\n    */\n    reconfigure(content) {\n        return Compartment.reconfigure.of({ compartment: this, extension: content });\n    }\n    /**\n    Get the current content of the compartment in the state, or\n    `undefined` if it isn't present.\n    */\n    get(state) {\n        return state.config.compartments.get(this);\n    }\n}\nclass CompartmentInstance {\n    constructor(compartment, inner) {\n        this.compartment = compartment;\n        this.inner = inner;\n    }\n}\nclass Configuration {\n    constructor(base, compartments, dynamicSlots, address, staticValues, facets) {\n        this.base = base;\n        this.compartments = compartments;\n        this.dynamicSlots = dynamicSlots;\n        this.address = address;\n        this.staticValues = staticValues;\n        this.facets = facets;\n        this.statusTemplate = [];\n        while (this.statusTemplate.length < dynamicSlots.length)\n            this.statusTemplate.push(0 /* SlotStatus.Unresolved */);\n    }\n    staticFacet(facet) {\n        let addr = this.address[facet.id];\n        return addr == null ? facet.default : this.staticValues[addr >> 1];\n    }\n    static resolve(base, compartments, oldState) {\n        let fields = [];\n        let facets = Object.create(null);\n        let newCompartments = new Map();\n        for (let ext of flatten(base, compartments, newCompartments)) {\n            if (ext instanceof StateField)\n                fields.push(ext);\n            else\n                (facets[ext.facet.id] || (facets[ext.facet.id] = [])).push(ext);\n        }\n        let address = Object.create(null);\n        let staticValues = [];\n        let dynamicSlots = [];\n        for (let field of fields) {\n            address[field.id] = dynamicSlots.length << 1;\n            dynamicSlots.push(a => field.slot(a));\n        }\n        let oldFacets = oldState === null || oldState === void 0 ? void 0 : oldState.config.facets;\n        for (let id in facets) {\n            let providers = facets[id], facet = providers[0].facet;\n            let oldProviders = oldFacets && oldFacets[id] || [];\n            if (providers.every(p => p.type == 0 /* Provider.Static */)) {\n                address[facet.id] = (staticValues.length << 1) | 1;\n                if (sameArray(oldProviders, providers)) {\n                    staticValues.push(oldState.facet(facet));\n                }\n                else {\n                    let value = facet.combine(providers.map(p => p.value));\n                    staticValues.push(oldState && facet.compare(value, oldState.facet(facet)) ? oldState.facet(facet) : value);\n                }\n            }\n            else {\n                for (let p of providers) {\n                    if (p.type == 0 /* Provider.Static */) {\n                        address[p.id] = (staticValues.length << 1) | 1;\n                        staticValues.push(p.value);\n                    }\n                    else {\n                        address[p.id] = dynamicSlots.length << 1;\n                        dynamicSlots.push(a => p.dynamicSlot(a));\n                    }\n                }\n                address[facet.id] = dynamicSlots.length << 1;\n                dynamicSlots.push(a => dynamicFacetSlot(a, facet, providers));\n            }\n        }\n        let dynamic = dynamicSlots.map(f => f(address));\n        return new Configuration(base, newCompartments, dynamic, address, staticValues, facets);\n    }\n}\nfunction flatten(extension, compartments, newCompartments) {\n    let result = [[], [], [], [], []];\n    let seen = new Map();\n    function inner(ext, prec) {\n        let known = seen.get(ext);\n        if (known != null) {\n            if (known <= prec)\n                return;\n            let found = result[known].indexOf(ext);\n            if (found > -1)\n                result[known].splice(found, 1);\n            if (ext instanceof CompartmentInstance)\n                newCompartments.delete(ext.compartment);\n        }\n        seen.set(ext, prec);\n        if (Array.isArray(ext)) {\n            for (let e of ext)\n                inner(e, prec);\n        }\n        else if (ext instanceof CompartmentInstance) {\n            if (newCompartments.has(ext.compartment))\n                throw new RangeError(`Duplicate use of compartment in extensions`);\n            let content = compartments.get(ext.compartment) || ext.inner;\n            newCompartments.set(ext.compartment, content);\n            inner(content, prec);\n        }\n        else if (ext instanceof PrecExtension) {\n            inner(ext.inner, ext.prec);\n        }\n        else if (ext instanceof StateField) {\n            result[prec].push(ext);\n            if (ext.provides)\n                inner(ext.provides, prec);\n        }\n        else if (ext instanceof FacetProvider) {\n            result[prec].push(ext);\n            if (ext.facet.extensions)\n                inner(ext.facet.extensions, Prec_.default);\n        }\n        else {\n            let content = ext.extension;\n            if (!content)\n                throw new Error(`Unrecognized extension value in extension set (${ext}). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks.`);\n            inner(content, prec);\n        }\n    }\n    inner(extension, Prec_.default);\n    return result.reduce((a, b) => a.concat(b));\n}\nfunction ensureAddr(state, addr) {\n    if (addr & 1)\n        return 2 /* SlotStatus.Computed */;\n    let idx = addr >> 1;\n    let status = state.status[idx];\n    if (status == 4 /* SlotStatus.Computing */)\n        throw new Error(\"Cyclic dependency between fields and/or facets\");\n    if (status & 2 /* SlotStatus.Computed */)\n        return status;\n    state.status[idx] = 4 /* SlotStatus.Computing */;\n    let changed = state.computeSlot(state, state.config.dynamicSlots[idx]);\n    return state.status[idx] = 2 /* SlotStatus.Computed */ | changed;\n}\nfunction getAddr(state, addr) {\n    return addr & 1 ? state.config.staticValues[addr >> 1] : state.values[addr >> 1];\n}\n\nconst languageData = /*@__PURE__*/Facet.define();\nconst allowMultipleSelections = /*@__PURE__*/Facet.define({\n    combine: values => values.some(v => v),\n    static: true\n});\nconst lineSeparator = /*@__PURE__*/Facet.define({\n    combine: values => values.length ? values[0] : undefined,\n    static: true\n});\nconst changeFilter = /*@__PURE__*/Facet.define();\nconst transactionFilter = /*@__PURE__*/Facet.define();\nconst transactionExtender = /*@__PURE__*/Facet.define();\nconst readOnly = /*@__PURE__*/Facet.define({\n    combine: values => values.length ? values[0] : false\n});\n\n/**\nAnnotations are tagged values that are used to add metadata to\ntransactions in an extensible way. They should be used to model\nthings that effect the entire transaction (such as its [time\nstamp](https://codemirror.net/6/docs/ref/#state.Transaction^time) or information about its\n[origin](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent)). For effects that happen\n_alongside_ the other changes made by the transaction, [state\neffects](https://codemirror.net/6/docs/ref/#state.StateEffect) are more appropriate.\n*/\nclass Annotation {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The annotation type.\n    */\n    type, \n    /**\n    The value of this annotation.\n    */\n    value) {\n        this.type = type;\n        this.value = value;\n    }\n    /**\n    Define a new type of annotation.\n    */\n    static define() { return new AnnotationType(); }\n}\n/**\nMarker that identifies a type of [annotation](https://codemirror.net/6/docs/ref/#state.Annotation).\n*/\nclass AnnotationType {\n    /**\n    Create an instance of this annotation.\n    */\n    of(value) { return new Annotation(this, value); }\n}\n/**\nRepresentation of a type of state effect. Defined with\n[`StateEffect.define`](https://codemirror.net/6/docs/ref/#state.StateEffect^define).\n*/\nclass StateEffectType {\n    /**\n    @internal\n    */\n    constructor(\n    // The `any` types in these function types are there to work\n    // around TypeScript issue #37631, where the type guard on\n    // `StateEffect.is` mysteriously stops working when these properly\n    // have type `Value`.\n    /**\n    @internal\n    */\n    map) {\n        this.map = map;\n    }\n    /**\n    Create a [state effect](https://codemirror.net/6/docs/ref/#state.StateEffect) instance of this\n    type.\n    */\n    of(value) { return new StateEffect(this, value); }\n}\n/**\nState effects can be used to represent additional effects\nassociated with a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction.effects). They\nare often useful to model changes to custom [state\nfields](https://codemirror.net/6/docs/ref/#state.StateField), when those changes aren't implicit in\ndocument or selection changes.\n*/\nclass StateEffect {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    type, \n    /**\n    The value of this effect.\n    */\n    value) {\n        this.type = type;\n        this.value = value;\n    }\n    /**\n    Map this effect through a position mapping. Will return\n    `undefined` when that ends up deleting the effect.\n    */\n    map(mapping) {\n        let mapped = this.type.map(this.value, mapping);\n        return mapped === undefined ? undefined : mapped == this.value ? this : new StateEffect(this.type, mapped);\n    }\n    /**\n    Tells you whether this effect object is of a given\n    [type](https://codemirror.net/6/docs/ref/#state.StateEffectType).\n    */\n    is(type) { return this.type == type; }\n    /**\n    Define a new effect type. The type parameter indicates the type\n    of values that his effect holds. It should be a type that\n    doesn't include `undefined`, since that is used in\n    [mapping](https://codemirror.net/6/docs/ref/#state.StateEffect.map) to indicate that an effect is\n    removed.\n    */\n    static define(spec = {}) {\n        return new StateEffectType(spec.map || (v => v));\n    }\n    /**\n    Map an array of effects through a change set.\n    */\n    static mapEffects(effects, mapping) {\n        if (!effects.length)\n            return effects;\n        let result = [];\n        for (let effect of effects) {\n            let mapped = effect.map(mapping);\n            if (mapped)\n                result.push(mapped);\n        }\n        return result;\n    }\n}\n/**\nThis effect can be used to reconfigure the root extensions of\nthe editor. Doing this will discard any extensions\n[appended](https://codemirror.net/6/docs/ref/#state.StateEffect^appendConfig), but does not reset\nthe content of [reconfigured](https://codemirror.net/6/docs/ref/#state.Compartment.reconfigure)\ncompartments.\n*/\nStateEffect.reconfigure = /*@__PURE__*/StateEffect.define();\n/**\nAppend extensions to the top-level configuration of the editor.\n*/\nStateEffect.appendConfig = /*@__PURE__*/StateEffect.define();\n/**\nChanges to the editor state are grouped into transactions.\nTypically, a user action creates a single transaction, which may\ncontain any number of document changes, may change the selection,\nor have other effects. Create a transaction by calling\n[`EditorState.update`](https://codemirror.net/6/docs/ref/#state.EditorState.update), or immediately\ndispatch one by calling\n[`EditorView.dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch).\n*/\nclass Transaction {\n    constructor(\n    /**\n    The state from which the transaction starts.\n    */\n    startState, \n    /**\n    The document changes made by this transaction.\n    */\n    changes, \n    /**\n    The selection set by this transaction, or undefined if it\n    doesn't explicitly set a selection.\n    */\n    selection, \n    /**\n    The effects added to the transaction.\n    */\n    effects, \n    /**\n    @internal\n    */\n    annotations, \n    /**\n    Whether the selection should be scrolled into view after this\n    transaction is dispatched.\n    */\n    scrollIntoView) {\n        this.startState = startState;\n        this.changes = changes;\n        this.selection = selection;\n        this.effects = effects;\n        this.annotations = annotations;\n        this.scrollIntoView = scrollIntoView;\n        /**\n        @internal\n        */\n        this._doc = null;\n        /**\n        @internal\n        */\n        this._state = null;\n        if (selection)\n            checkSelection(selection, changes.newLength);\n        if (!annotations.some((a) => a.type == Transaction.time))\n            this.annotations = annotations.concat(Transaction.time.of(Date.now()));\n    }\n    /**\n    @internal\n    */\n    static create(startState, changes, selection, effects, annotations, scrollIntoView) {\n        return new Transaction(startState, changes, selection, effects, annotations, scrollIntoView);\n    }\n    /**\n    The new document produced by the transaction. Contrary to\n    [`.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state)`.doc`, accessing this won't\n    force the entire new state to be computed right away, so it is\n    recommended that [transaction\n    filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) use this getter\n    when they need to look at the new document.\n    */\n    get newDoc() {\n        return this._doc || (this._doc = this.changes.apply(this.startState.doc));\n    }\n    /**\n    The new selection produced by the transaction. If\n    [`this.selection`](https://codemirror.net/6/docs/ref/#state.Transaction.selection) is undefined,\n    this will [map](https://codemirror.net/6/docs/ref/#state.EditorSelection.map) the start state's\n    current selection through the changes made by the transaction.\n    */\n    get newSelection() {\n        return this.selection || this.startState.selection.map(this.changes);\n    }\n    /**\n    The new state created by the transaction. Computed on demand\n    (but retained for subsequent access), so it is recommended not to\n    access it in [transaction\n    filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) when possible.\n    */\n    get state() {\n        if (!this._state)\n            this.startState.applyTransaction(this);\n        return this._state;\n    }\n    /**\n    Get the value of the given annotation type, if any.\n    */\n    annotation(type) {\n        for (let ann of this.annotations)\n            if (ann.type == type)\n                return ann.value;\n        return undefined;\n    }\n    /**\n    Indicates whether the transaction changed the document.\n    */\n    get docChanged() { return !this.changes.empty; }\n    /**\n    Indicates whether this transaction reconfigures the state\n    (through a [configuration compartment](https://codemirror.net/6/docs/ref/#state.Compartment) or\n    with a top-level configuration\n    [effect](https://codemirror.net/6/docs/ref/#state.StateEffect^reconfigure).\n    */\n    get reconfigured() { return this.startState.config != this.state.config; }\n    /**\n    Returns true if the transaction has a [user\n    event](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent) annotation that is equal to\n    or more specific than `event`. For example, if the transaction\n    has `\"select.pointer\"` as user event, `\"select\"` and\n    `\"select.pointer\"` will match it.\n    */\n    isUserEvent(event) {\n        let e = this.annotation(Transaction.userEvent);\n        return !!(e && (e == event || e.length > event.length && e.slice(0, event.length) == event && e[event.length] == \".\"));\n    }\n}\n/**\nAnnotation used to store transaction timestamps. Automatically\nadded to every transaction, holding `Date.now()`.\n*/\nTransaction.time = /*@__PURE__*/Annotation.define();\n/**\nAnnotation used to associate a transaction with a user interface\nevent. Holds a string identifying the event, using a\ndot-separated format to support attaching more specific\ninformation. The events used by the core libraries are:\n\n - `\"input\"` when content is entered\n   - `\"input.type\"` for typed input\n     - `\"input.type.compose\"` for composition\n   - `\"input.paste\"` for pasted input\n   - `\"input.drop\"` when adding content with drag-and-drop\n   - `\"input.complete\"` when autocompleting\n - `\"delete\"` when the user deletes content\n   - `\"delete.selection\"` when deleting the selection\n   - `\"delete.forward\"` when deleting forward from the selection\n   - `\"delete.backward\"` when deleting backward from the selection\n   - `\"delete.cut\"` when cutting to the clipboard\n - `\"move\"` when content is moved\n   - `\"move.drop\"` when content is moved within the editor through drag-and-drop\n - `\"select\"` when explicitly changing the selection\n   - `\"select.pointer\"` when selecting with a mouse or other pointing device\n - `\"undo\"` and `\"redo\"` for history actions\n\nUse [`isUserEvent`](https://codemirror.net/6/docs/ref/#state.Transaction.isUserEvent) to check\nwhether the annotation matches a given event.\n*/\nTransaction.userEvent = /*@__PURE__*/Annotation.define();\n/**\nAnnotation indicating whether a transaction should be added to\nthe undo history or not.\n*/\nTransaction.addToHistory = /*@__PURE__*/Annotation.define();\n/**\nAnnotation indicating (when present and true) that a transaction\nrepresents a change made by some other actor, not the user. This\nis used, for example, to tag other people's changes in\ncollaborative editing.\n*/\nTransaction.remote = /*@__PURE__*/Annotation.define();\nfunction joinRanges(a, b) {\n    let result = [];\n    for (let iA = 0, iB = 0;;) {\n        let from, to;\n        if (iA < a.length && (iB == b.length || b[iB] >= a[iA])) {\n            from = a[iA++];\n            to = a[iA++];\n        }\n        else if (iB < b.length) {\n            from = b[iB++];\n            to = b[iB++];\n        }\n        else\n            return result;\n        if (!result.length || result[result.length - 1] < from)\n            result.push(from, to);\n        else if (result[result.length - 1] < to)\n            result[result.length - 1] = to;\n    }\n}\nfunction mergeTransaction(a, b, sequential) {\n    var _a;\n    let mapForA, mapForB, changes;\n    if (sequential) {\n        mapForA = b.changes;\n        mapForB = ChangeSet.empty(b.changes.length);\n        changes = a.changes.compose(b.changes);\n    }\n    else {\n        mapForA = b.changes.map(a.changes);\n        mapForB = a.changes.mapDesc(b.changes, true);\n        changes = a.changes.compose(mapForA);\n    }\n    return {\n        changes,\n        selection: b.selection ? b.selection.map(mapForB) : (_a = a.selection) === null || _a === void 0 ? void 0 : _a.map(mapForA),\n        effects: StateEffect.mapEffects(a.effects, mapForA).concat(StateEffect.mapEffects(b.effects, mapForB)),\n        annotations: a.annotations.length ? a.annotations.concat(b.annotations) : b.annotations,\n        scrollIntoView: a.scrollIntoView || b.scrollIntoView\n    };\n}\nfunction resolveTransactionInner(state, spec, docSize) {\n    let sel = spec.selection, annotations = asArray(spec.annotations);\n    if (spec.userEvent)\n        annotations = annotations.concat(Transaction.userEvent.of(spec.userEvent));\n    return {\n        changes: spec.changes instanceof ChangeSet ? spec.changes\n            : ChangeSet.of(spec.changes || [], docSize, state.facet(lineSeparator)),\n        selection: sel && (sel instanceof EditorSelection ? sel : EditorSelection.single(sel.anchor, sel.head)),\n        effects: asArray(spec.effects),\n        annotations,\n        scrollIntoView: !!spec.scrollIntoView\n    };\n}\nfunction resolveTransaction(state, specs, filter) {\n    let s = resolveTransactionInner(state, specs.length ? specs[0] : {}, state.doc.length);\n    if (specs.length && specs[0].filter === false)\n        filter = false;\n    for (let i = 1; i < specs.length; i++) {\n        if (specs[i].filter === false)\n            filter = false;\n        let seq = !!specs[i].sequential;\n        s = mergeTransaction(s, resolveTransactionInner(state, specs[i], seq ? s.changes.newLength : state.doc.length), seq);\n    }\n    let tr = Transaction.create(state, s.changes, s.selection, s.effects, s.annotations, s.scrollIntoView);\n    return extendTransaction(filter ? filterTransaction(tr) : tr);\n}\n// Finish a transaction by applying filters if necessary.\nfunction filterTransaction(tr) {\n    let state = tr.startState;\n    // Change filters\n    let result = true;\n    for (let filter of state.facet(changeFilter)) {\n        let value = filter(tr);\n        if (value === false) {\n            result = false;\n            break;\n        }\n        if (Array.isArray(value))\n            result = result === true ? value : joinRanges(result, value);\n    }\n    if (result !== true) {\n        let changes, back;\n        if (result === false) {\n            back = tr.changes.invertedDesc;\n            changes = ChangeSet.empty(state.doc.length);\n        }\n        else {\n            let filtered = tr.changes.filter(result);\n            changes = filtered.changes;\n            back = filtered.filtered.mapDesc(filtered.changes).invertedDesc;\n        }\n        tr = Transaction.create(state, changes, tr.selection && tr.selection.map(back), StateEffect.mapEffects(tr.effects, back), tr.annotations, tr.scrollIntoView);\n    }\n    // Transaction filters\n    let filters = state.facet(transactionFilter);\n    for (let i = filters.length - 1; i >= 0; i--) {\n        let filtered = filters[i](tr);\n        if (filtered instanceof Transaction)\n            tr = filtered;\n        else if (Array.isArray(filtered) && filtered.length == 1 && filtered[0] instanceof Transaction)\n            tr = filtered[0];\n        else\n            tr = resolveTransaction(state, asArray(filtered), false);\n    }\n    return tr;\n}\nfunction extendTransaction(tr) {\n    let state = tr.startState, extenders = state.facet(transactionExtender), spec = tr;\n    for (let i = extenders.length - 1; i >= 0; i--) {\n        let extension = extenders[i](tr);\n        if (extension && Object.keys(extension).length)\n            spec = mergeTransaction(spec, resolveTransactionInner(state, extension, tr.changes.newLength), true);\n    }\n    return spec == tr ? tr : Transaction.create(state, tr.changes, tr.selection, spec.effects, spec.annotations, spec.scrollIntoView);\n}\nconst none = [];\nfunction asArray(value) {\n    return value == null ? none : Array.isArray(value) ? value : [value];\n}\n\n/**\nThe categories produced by a [character\ncategorizer](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer). These are used\ndo things like selecting by word.\n*/\nvar CharCategory = /*@__PURE__*/(function (CharCategory) {\n    /**\n    Word characters.\n    */\n    CharCategory[CharCategory[\"Word\"] = 0] = \"Word\";\n    /**\n    Whitespace.\n    */\n    CharCategory[CharCategory[\"Space\"] = 1] = \"Space\";\n    /**\n    Anything else.\n    */\n    CharCategory[CharCategory[\"Other\"] = 2] = \"Other\";\nreturn CharCategory})(CharCategory || (CharCategory = {}));\nconst nonASCIISingleCaseWordChar = /[\\u00df\\u0587\\u0590-\\u05f4\\u0600-\\u06ff\\u3040-\\u309f\\u30a0-\\u30ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\uac00-\\ud7af]/;\nlet wordChar;\ntry {\n    wordChar = /*@__PURE__*/new RegExp(\"[\\\\p{Alphabetic}\\\\p{Number}_]\", \"u\");\n}\ncatch (_) { }\nfunction hasWordChar(str) {\n    if (wordChar)\n        return wordChar.test(str);\n    for (let i = 0; i < str.length; i++) {\n        let ch = str[i];\n        if (/\\w/.test(ch) || ch > \"\\x80\" && (ch.toUpperCase() != ch.toLowerCase() || nonASCIISingleCaseWordChar.test(ch)))\n            return true;\n    }\n    return false;\n}\nfunction makeCategorizer(wordChars) {\n    return (char) => {\n        if (!/\\S/.test(char))\n            return CharCategory.Space;\n        if (hasWordChar(char))\n            return CharCategory.Word;\n        for (let i = 0; i < wordChars.length; i++)\n            if (char.indexOf(wordChars[i]) > -1)\n                return CharCategory.Word;\n        return CharCategory.Other;\n    };\n}\n\n/**\nThe editor state class is a persistent (immutable) data structure.\nTo update a state, you [create](https://codemirror.net/6/docs/ref/#state.EditorState.update) a\n[transaction](https://codemirror.net/6/docs/ref/#state.Transaction), which produces a _new_ state\ninstance, without modifying the original object.\n\nAs such, _never_ mutate properties of a state directly. That'll\njust break things.\n*/\nclass EditorState {\n    constructor(\n    /**\n    @internal\n    */\n    config, \n    /**\n    The current document.\n    */\n    doc, \n    /**\n    The current selection.\n    */\n    selection, \n    /**\n    @internal\n    */\n    values, computeSlot, tr) {\n        this.config = config;\n        this.doc = doc;\n        this.selection = selection;\n        this.values = values;\n        this.status = config.statusTemplate.slice();\n        this.computeSlot = computeSlot;\n        // Fill in the computed state immediately, so that further queries\n        // for it made during the update return this state\n        if (tr)\n            tr._state = this;\n        for (let i = 0; i < this.config.dynamicSlots.length; i++)\n            ensureAddr(this, i << 1);\n        this.computeSlot = null;\n    }\n    field(field, require = true) {\n        let addr = this.config.address[field.id];\n        if (addr == null) {\n            if (require)\n                throw new RangeError(\"Field is not present in this state\");\n            return undefined;\n        }\n        ensureAddr(this, addr);\n        return getAddr(this, addr);\n    }\n    /**\n    Create a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction) that updates this\n    state. Any number of [transaction specs](https://codemirror.net/6/docs/ref/#state.TransactionSpec)\n    can be passed. Unless\n    [`sequential`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.sequential) is set, the\n    [changes](https://codemirror.net/6/docs/ref/#state.TransactionSpec.changes) (if any) of each spec\n    are assumed to start in the _current_ document (not the document\n    produced by previous specs), and its\n    [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) and\n    [effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) are assumed to refer\n    to the document created by its _own_ changes. The resulting\n    transaction contains the combined effect of all the different\n    specs. For [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection), later\n    specs take precedence over earlier ones.\n    */\n    update(...specs) {\n        return resolveTransaction(this, specs, true);\n    }\n    /**\n    @internal\n    */\n    applyTransaction(tr) {\n        let conf = this.config, { base, compartments } = conf;\n        for (let effect of tr.effects) {\n            if (effect.is(Compartment.reconfigure)) {\n                if (conf) {\n                    compartments = new Map;\n                    conf.compartments.forEach((val, key) => compartments.set(key, val));\n                    conf = null;\n                }\n                compartments.set(effect.value.compartment, effect.value.extension);\n            }\n            else if (effect.is(StateEffect.reconfigure)) {\n                conf = null;\n                base = effect.value;\n            }\n            else if (effect.is(StateEffect.appendConfig)) {\n                conf = null;\n                base = asArray(base).concat(effect.value);\n            }\n        }\n        let startValues;\n        if (!conf) {\n            conf = Configuration.resolve(base, compartments, this);\n            let intermediateState = new EditorState(conf, this.doc, this.selection, conf.dynamicSlots.map(() => null), (state, slot) => slot.reconfigure(state, this), null);\n            startValues = intermediateState.values;\n        }\n        else {\n            startValues = tr.startState.values.slice();\n        }\n        let selection = tr.startState.facet(allowMultipleSelections) ? tr.newSelection : tr.newSelection.asSingle();\n        new EditorState(conf, tr.newDoc, selection, startValues, (state, slot) => slot.update(state, tr), tr);\n    }\n    /**\n    Create a [transaction spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec) that\n    replaces every selection range with the given content.\n    */\n    replaceSelection(text) {\n        if (typeof text == \"string\")\n            text = this.toText(text);\n        return this.changeByRange(range => ({ changes: { from: range.from, to: range.to, insert: text },\n            range: EditorSelection.cursor(range.from + text.length) }));\n    }\n    /**\n    Create a set of changes and a new selection by running the given\n    function for each range in the active selection. The function\n    can return an optional set of changes (in the coordinate space\n    of the start document), plus an updated range (in the coordinate\n    space of the document produced by the call's own changes). This\n    method will merge all the changes and ranges into a single\n    changeset and selection, and return it as a [transaction\n    spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec), which can be passed to\n    [`update`](https://codemirror.net/6/docs/ref/#state.EditorState.update).\n    */\n    changeByRange(f) {\n        let sel = this.selection;\n        let result1 = f(sel.ranges[0]);\n        let changes = this.changes(result1.changes), ranges = [result1.range];\n        let effects = asArray(result1.effects);\n        for (let i = 1; i < sel.ranges.length; i++) {\n            let result = f(sel.ranges[i]);\n            let newChanges = this.changes(result.changes), newMapped = newChanges.map(changes);\n            for (let j = 0; j < i; j++)\n                ranges[j] = ranges[j].map(newMapped);\n            let mapBy = changes.mapDesc(newChanges, true);\n            ranges.push(result.range.map(mapBy));\n            changes = changes.compose(newMapped);\n            effects = StateEffect.mapEffects(effects, newMapped).concat(StateEffect.mapEffects(asArray(result.effects), mapBy));\n        }\n        return {\n            changes,\n            selection: EditorSelection.create(ranges, sel.mainIndex),\n            effects\n        };\n    }\n    /**\n    Create a [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet) from the given change\n    description, taking the state's document length and line\n    separator into account.\n    */\n    changes(spec = []) {\n        if (spec instanceof ChangeSet)\n            return spec;\n        return ChangeSet.of(spec, this.doc.length, this.facet(EditorState.lineSeparator));\n    }\n    /**\n    Using the state's [line\n    separator](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator), create a\n    [`Text`](https://codemirror.net/6/docs/ref/#state.Text) instance from the given string.\n    */\n    toText(string) {\n        return Text.of(string.split(this.facet(EditorState.lineSeparator) || DefaultSplit));\n    }\n    /**\n    Return the given range of the document as a string.\n    */\n    sliceDoc(from = 0, to = this.doc.length) {\n        return this.doc.sliceString(from, to, this.lineBreak);\n    }\n    /**\n    Get the value of a state [facet](https://codemirror.net/6/docs/ref/#state.Facet).\n    */\n    facet(facet) {\n        let addr = this.config.address[facet.id];\n        if (addr == null)\n            return facet.default;\n        ensureAddr(this, addr);\n        return getAddr(this, addr);\n    }\n    /**\n    Convert this state to a JSON-serializable object. When custom\n    fields should be serialized, you can pass them in as an object\n    mapping property names (in the resulting object, which should\n    not use `doc` or `selection`) to fields.\n    */\n    toJSON(fields) {\n        let result = {\n            doc: this.sliceDoc(),\n            selection: this.selection.toJSON()\n        };\n        if (fields)\n            for (let prop in fields) {\n                let value = fields[prop];\n                if (value instanceof StateField && this.config.address[value.id] != null)\n                    result[prop] = value.spec.toJSON(this.field(fields[prop]), this);\n            }\n        return result;\n    }\n    /**\n    Deserialize a state from its JSON representation. When custom\n    fields should be deserialized, pass the same object you passed\n    to [`toJSON`](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) when serializing as\n    third argument.\n    */\n    static fromJSON(json, config = {}, fields) {\n        if (!json || typeof json.doc != \"string\")\n            throw new RangeError(\"Invalid JSON representation for EditorState\");\n        let fieldInit = [];\n        if (fields)\n            for (let prop in fields) {\n                if (Object.prototype.hasOwnProperty.call(json, prop)) {\n                    let field = fields[prop], value = json[prop];\n                    fieldInit.push(field.init(state => field.spec.fromJSON(value, state)));\n                }\n            }\n        return EditorState.create({\n            doc: json.doc,\n            selection: EditorSelection.fromJSON(json.selection),\n            extensions: config.extensions ? fieldInit.concat([config.extensions]) : fieldInit\n        });\n    }\n    /**\n    Create a new state. You'll usually only need this when\n    initializing an editor—updated states are created by applying\n    transactions.\n    */\n    static create(config = {}) {\n        let configuration = Configuration.resolve(config.extensions || [], new Map);\n        let doc = config.doc instanceof Text ? config.doc\n            : Text.of((config.doc || \"\").split(configuration.staticFacet(EditorState.lineSeparator) || DefaultSplit));\n        let selection = !config.selection ? EditorSelection.single(0)\n            : config.selection instanceof EditorSelection ? config.selection\n                : EditorSelection.single(config.selection.anchor, config.selection.head);\n        checkSelection(selection, doc.length);\n        if (!configuration.staticFacet(allowMultipleSelections))\n            selection = selection.asSingle();\n        return new EditorState(configuration, doc, selection, configuration.dynamicSlots.map(() => null), (state, slot) => slot.create(state), null);\n    }\n    /**\n    The size (in columns) of a tab in the document, determined by\n    the [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) facet.\n    */\n    get tabSize() { return this.facet(EditorState.tabSize); }\n    /**\n    Get the proper [line-break](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator)\n    string for this state.\n    */\n    get lineBreak() { return this.facet(EditorState.lineSeparator) || \"\\n\"; }\n    /**\n    Returns true when the editor is\n    [configured](https://codemirror.net/6/docs/ref/#state.EditorState^readOnly) to be read-only.\n    */\n    get readOnly() { return this.facet(readOnly); }\n    /**\n    Look up a translation for the given phrase (via the\n    [`phrases`](https://codemirror.net/6/docs/ref/#state.EditorState^phrases) facet), or return the\n    original string if no translation is found.\n    \n    If additional arguments are passed, they will be inserted in\n    place of markers like `$1` (for the first value) and `$2`, etc.\n    A single `$` is equivalent to `$1`, and `$$` will produce a\n    literal dollar sign.\n    */\n    phrase(phrase, ...insert) {\n        for (let map of this.facet(EditorState.phrases))\n            if (Object.prototype.hasOwnProperty.call(map, phrase)) {\n                phrase = map[phrase];\n                break;\n            }\n        if (insert.length)\n            phrase = phrase.replace(/\\$(\\$|\\d*)/g, (m, i) => {\n                if (i == \"$\")\n                    return \"$\";\n                let n = +(i || 1);\n                return !n || n > insert.length ? m : insert[n - 1];\n            });\n        return phrase;\n    }\n    /**\n    Find the values for a given language data field, provided by the\n    the [`languageData`](https://codemirror.net/6/docs/ref/#state.EditorState^languageData) facet.\n    \n    Examples of language data fields are...\n    \n    - [`\"commentTokens\"`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) for specifying\n      comment syntax.\n    - [`\"autocomplete\"`](https://codemirror.net/6/docs/ref/#autocomplete.autocompletion^config.override)\n      for providing language-specific completion sources.\n    - [`\"wordChars\"`](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) for adding\n      characters that should be considered part of words in this\n      language.\n    - [`\"closeBrackets\"`](https://codemirror.net/6/docs/ref/#autocomplete.CloseBracketConfig) controls\n      bracket closing behavior.\n    */\n    languageDataAt(name, pos, side = -1) {\n        let values = [];\n        for (let provider of this.facet(languageData)) {\n            for (let result of provider(this, pos, side)) {\n                if (Object.prototype.hasOwnProperty.call(result, name))\n                    values.push(result[name]);\n            }\n        }\n        return values;\n    }\n    /**\n    Return a function that can categorize strings (expected to\n    represent a single [grapheme cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak))\n    into one of:\n    \n     - Word (contains an alphanumeric character or a character\n       explicitly listed in the local language's `\"wordChars\"`\n       language data, which should be a string)\n     - Space (contains only whitespace)\n     - Other (anything else)\n    */\n    charCategorizer(at) {\n        return makeCategorizer(this.languageDataAt(\"wordChars\", at).join(\"\"));\n    }\n    /**\n    Find the word at the given position, meaning the range\n    containing all [word](https://codemirror.net/6/docs/ref/#state.CharCategory.Word) characters\n    around it. If no word characters are adjacent to the position,\n    this returns null.\n    */\n    wordAt(pos) {\n        let { text, from, length } = this.doc.lineAt(pos);\n        let cat = this.charCategorizer(pos);\n        let start = pos - from, end = pos - from;\n        while (start > 0) {\n            let prev = findClusterBreak(text, start, false);\n            if (cat(text.slice(prev, start)) != CharCategory.Word)\n                break;\n            start = prev;\n        }\n        while (end < length) {\n            let next = findClusterBreak(text, end);\n            if (cat(text.slice(end, next)) != CharCategory.Word)\n                break;\n            end = next;\n        }\n        return start == end ? null : EditorSelection.range(start + from, end + from);\n    }\n}\n/**\nA facet that, when enabled, causes the editor to allow multiple\nranges to be selected. Be careful though, because by default the\neditor relies on the native DOM selection, which cannot handle\nmultiple selections. An extension like\n[`drawSelection`](https://codemirror.net/6/docs/ref/#view.drawSelection) can be used to make\nsecondary selections visible to the user.\n*/\nEditorState.allowMultipleSelections = allowMultipleSelections;\n/**\nConfigures the tab size to use in this state. The first\n(highest-precedence) value of the facet is used. If no value is\ngiven, this defaults to 4.\n*/\nEditorState.tabSize = /*@__PURE__*/Facet.define({\n    combine: values => values.length ? values[0] : 4\n});\n/**\nThe line separator to use. By default, any of `\"\\n\"`, `\"\\r\\n\"`\nand `\"\\r\"` is treated as a separator when splitting lines, and\nlines are joined with `\"\\n\"`.\n\nWhen you configure a value here, only that precise separator\nwill be used, allowing you to round-trip documents through the\neditor without normalizing line separators.\n*/\nEditorState.lineSeparator = lineSeparator;\n/**\nThis facet controls the value of the\n[`readOnly`](https://codemirror.net/6/docs/ref/#state.EditorState.readOnly) getter, which is\nconsulted by commands and extensions that implement editing\nfunctionality to determine whether they should apply. It\ndefaults to false, but when its highest-precedence value is\n`true`, such functionality disables itself.\n\nNot to be confused with\n[`EditorView.editable`](https://codemirror.net/6/docs/ref/#view.EditorView^editable), which\ncontrols whether the editor's DOM is set to be editable (and\nthus focusable).\n*/\nEditorState.readOnly = readOnly;\n/**\nRegisters translation phrases. The\n[`phrase`](https://codemirror.net/6/docs/ref/#state.EditorState.phrase) method will look through\nall objects registered with this facet to find translations for\nits argument.\n*/\nEditorState.phrases = /*@__PURE__*/Facet.define({\n    compare(a, b) {\n        let kA = Object.keys(a), kB = Object.keys(b);\n        return kA.length == kB.length && kA.every(k => a[k] == b[k]);\n    }\n});\n/**\nA facet used to register [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt) providers.\n*/\nEditorState.languageData = languageData;\n/**\nFacet used to register change filters, which are called for each\ntransaction (unless explicitly\n[disabled](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter)), and can suppress\npart of the transaction's changes.\n\nSuch a function can return `true` to indicate that it doesn't\nwant to do anything, `false` to completely stop the changes in\nthe transaction, or a set of ranges in which changes should be\nsuppressed. Such ranges are represented as an array of numbers,\nwith each pair of two numbers indicating the start and end of a\nrange. So for example `[10, 20, 100, 110]` suppresses changes\nbetween 10 and 20, and between 100 and 110.\n*/\nEditorState.changeFilter = changeFilter;\n/**\nFacet used to register a hook that gets a chance to update or\nreplace transaction specs before they are applied. This will\nonly be applied for transactions that don't have\n[`filter`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter) set to `false`. You\ncan either return a single transaction spec (possibly the input\ntransaction), or an array of specs (which will be combined in\nthe same way as the arguments to\n[`EditorState.update`](https://codemirror.net/6/docs/ref/#state.EditorState.update)).\n\nWhen possible, it is recommended to avoid accessing\n[`Transaction.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state) in a filter,\nsince it will force creation of a state that will then be\ndiscarded again, if the transaction is actually filtered.\n\n(This functionality should be used with care. Indiscriminately\nmodifying transaction is likely to break something or degrade\nthe user experience.)\n*/\nEditorState.transactionFilter = transactionFilter;\n/**\nThis is a more limited form of\n[`transactionFilter`](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter),\nwhich can only add\n[annotations](https://codemirror.net/6/docs/ref/#state.TransactionSpec.annotations) and\n[effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects). _But_, this type\nof filter runs even if the transaction has disabled regular\n[filtering](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter), making it suitable\nfor effects that don't need to touch the changes or selection,\nbut do want to process every transaction.\n\nExtenders run _after_ filters, when both are present.\n*/\nEditorState.transactionExtender = transactionExtender;\nCompartment.reconfigure = /*@__PURE__*/StateEffect.define();\n\n/**\nUtility function for combining behaviors to fill in a config\nobject from an array of provided configs. `defaults` should hold\ndefault values for all optional fields in `Config`.\n\nThe function will, by default, error\nwhen a field gets two values that aren't `===`-equal, but you can\nprovide combine functions per field to do something else.\n*/\nfunction combineConfig(configs, defaults, // Should hold only the optional properties of Config, but I haven't managed to express that\ncombine = {}) {\n    let result = {};\n    for (let config of configs)\n        for (let key of Object.keys(config)) {\n            let value = config[key], current = result[key];\n            if (current === undefined)\n                result[key] = value;\n            else if (current === value || value === undefined) ; // No conflict\n            else if (Object.hasOwnProperty.call(combine, key))\n                result[key] = combine[key](current, value);\n            else\n                throw new Error(\"Config merge conflict for field \" + key);\n        }\n    for (let key in defaults)\n        if (result[key] === undefined)\n            result[key] = defaults[key];\n    return result;\n}\n\n/**\nEach range is associated with a value, which must inherit from\nthis class.\n*/\nclass RangeValue {\n    /**\n    Compare this value with another value. Used when comparing\n    rangesets. The default implementation compares by identity.\n    Unless you are only creating a fixed number of unique instances\n    of your value type, it is a good idea to implement this\n    properly.\n    */\n    eq(other) { return this == other; }\n    /**\n    Create a [range](https://codemirror.net/6/docs/ref/#state.Range) with this value.\n    */\n    range(from, to = from) { return Range.create(from, to, this); }\n}\nRangeValue.prototype.startSide = RangeValue.prototype.endSide = 0;\nRangeValue.prototype.point = false;\nRangeValue.prototype.mapMode = MapMode.TrackDel;\n/**\nA range associates a value with a range of positions.\n*/\nclass Range {\n    constructor(\n    /**\n    The range's start position.\n    */\n    from, \n    /**\n    Its end position.\n    */\n    to, \n    /**\n    The value associated with this range.\n    */\n    value) {\n        this.from = from;\n        this.to = to;\n        this.value = value;\n    }\n    /**\n    @internal\n    */\n    static create(from, to, value) {\n        return new Range(from, to, value);\n    }\n}\nfunction cmpRange(a, b) {\n    return a.from - b.from || a.value.startSide - b.value.startSide;\n}\nclass Chunk {\n    constructor(from, to, value, \n    // Chunks are marked with the largest point that occurs\n    // in them (or -1 for no points), so that scans that are\n    // only interested in points (such as the\n    // heightmap-related logic) can skip range-only chunks.\n    maxPoint) {\n        this.from = from;\n        this.to = to;\n        this.value = value;\n        this.maxPoint = maxPoint;\n    }\n    get length() { return this.to[this.to.length - 1]; }\n    // Find the index of the given position and side. Use the ranges'\n    // `from` pos when `end == false`, `to` when `end == true`.\n    findIndex(pos, side, end, startAt = 0) {\n        let arr = end ? this.to : this.from;\n        for (let lo = startAt, hi = arr.length;;) {\n            if (lo == hi)\n                return lo;\n            let mid = (lo + hi) >> 1;\n            let diff = arr[mid] - pos || (end ? this.value[mid].endSide : this.value[mid].startSide) - side;\n            if (mid == lo)\n                return diff >= 0 ? lo : hi;\n            if (diff >= 0)\n                hi = mid;\n            else\n                lo = mid + 1;\n        }\n    }\n    between(offset, from, to, f) {\n        for (let i = this.findIndex(from, -1000000000 /* C.Far */, true), e = this.findIndex(to, 1000000000 /* C.Far */, false, i); i < e; i++)\n            if (f(this.from[i] + offset, this.to[i] + offset, this.value[i]) === false)\n                return false;\n    }\n    map(offset, changes) {\n        let value = [], from = [], to = [], newPos = -1, maxPoint = -1;\n        for (let i = 0; i < this.value.length; i++) {\n            let val = this.value[i], curFrom = this.from[i] + offset, curTo = this.to[i] + offset, newFrom, newTo;\n            if (curFrom == curTo) {\n                let mapped = changes.mapPos(curFrom, val.startSide, val.mapMode);\n                if (mapped == null)\n                    continue;\n                newFrom = newTo = mapped;\n                if (val.startSide != val.endSide) {\n                    newTo = changes.mapPos(curFrom, val.endSide);\n                    if (newTo < newFrom)\n                        continue;\n                }\n            }\n            else {\n                newFrom = changes.mapPos(curFrom, val.startSide);\n                newTo = changes.mapPos(curTo, val.endSide);\n                if (newFrom > newTo || newFrom == newTo && val.startSide > 0 && val.endSide <= 0)\n                    continue;\n            }\n            if ((newTo - newFrom || val.endSide - val.startSide) < 0)\n                continue;\n            if (newPos < 0)\n                newPos = newFrom;\n            if (val.point)\n                maxPoint = Math.max(maxPoint, newTo - newFrom);\n            value.push(val);\n            from.push(newFrom - newPos);\n            to.push(newTo - newPos);\n        }\n        return { mapped: value.length ? new Chunk(from, to, value, maxPoint) : null, pos: newPos };\n    }\n}\n/**\nA range set stores a collection of [ranges](https://codemirror.net/6/docs/ref/#state.Range) in a\nway that makes them efficient to [map](https://codemirror.net/6/docs/ref/#state.RangeSet.map) and\n[update](https://codemirror.net/6/docs/ref/#state.RangeSet.update). This is an immutable data\nstructure.\n*/\nclass RangeSet {\n    constructor(\n    /**\n    @internal\n    */\n    chunkPos, \n    /**\n    @internal\n    */\n    chunk, \n    /**\n    @internal\n    */\n    nextLayer, \n    /**\n    @internal\n    */\n    maxPoint) {\n        this.chunkPos = chunkPos;\n        this.chunk = chunk;\n        this.nextLayer = nextLayer;\n        this.maxPoint = maxPoint;\n    }\n    /**\n    @internal\n    */\n    static create(chunkPos, chunk, nextLayer, maxPoint) {\n        return new RangeSet(chunkPos, chunk, nextLayer, maxPoint);\n    }\n    /**\n    @internal\n    */\n    get length() {\n        let last = this.chunk.length - 1;\n        return last < 0 ? 0 : Math.max(this.chunkEnd(last), this.nextLayer.length);\n    }\n    /**\n    The number of ranges in the set.\n    */\n    get size() {\n        if (this.isEmpty)\n            return 0;\n        let size = this.nextLayer.size;\n        for (let chunk of this.chunk)\n            size += chunk.value.length;\n        return size;\n    }\n    /**\n    @internal\n    */\n    chunkEnd(index) {\n        return this.chunkPos[index] + this.chunk[index].length;\n    }\n    /**\n    Update the range set, optionally adding new ranges or filtering\n    out existing ones.\n    \n    (Note: The type parameter is just there as a kludge to work\n    around TypeScript variance issues that prevented `RangeSet<X>`\n    from being a subtype of `RangeSet<Y>` when `X` is a subtype of\n    `Y`.)\n    */\n    update(updateSpec) {\n        let { add = [], sort = false, filterFrom = 0, filterTo = this.length } = updateSpec;\n        let filter = updateSpec.filter;\n        if (add.length == 0 && !filter)\n            return this;\n        if (sort)\n            add = add.slice().sort(cmpRange);\n        if (this.isEmpty)\n            return add.length ? RangeSet.of(add) : this;\n        let cur = new LayerCursor(this, null, -1).goto(0), i = 0, spill = [];\n        let builder = new RangeSetBuilder();\n        while (cur.value || i < add.length) {\n            if (i < add.length && (cur.from - add[i].from || cur.startSide - add[i].value.startSide) >= 0) {\n                let range = add[i++];\n                if (!builder.addInner(range.from, range.to, range.value))\n                    spill.push(range);\n            }\n            else if (cur.rangeIndex == 1 && cur.chunkIndex < this.chunk.length &&\n                (i == add.length || this.chunkEnd(cur.chunkIndex) < add[i].from) &&\n                (!filter || filterFrom > this.chunkEnd(cur.chunkIndex) || filterTo < this.chunkPos[cur.chunkIndex]) &&\n                builder.addChunk(this.chunkPos[cur.chunkIndex], this.chunk[cur.chunkIndex])) {\n                cur.nextChunk();\n            }\n            else {\n                if (!filter || filterFrom > cur.to || filterTo < cur.from || filter(cur.from, cur.to, cur.value)) {\n                    if (!builder.addInner(cur.from, cur.to, cur.value))\n                        spill.push(Range.create(cur.from, cur.to, cur.value));\n                }\n                cur.next();\n            }\n        }\n        return builder.finishInner(this.nextLayer.isEmpty && !spill.length ? RangeSet.empty\n            : this.nextLayer.update({ add: spill, filter, filterFrom, filterTo }));\n    }\n    /**\n    Map this range set through a set of changes, return the new set.\n    */\n    map(changes) {\n        if (changes.empty || this.isEmpty)\n            return this;\n        let chunks = [], chunkPos = [], maxPoint = -1;\n        for (let i = 0; i < this.chunk.length; i++) {\n            let start = this.chunkPos[i], chunk = this.chunk[i];\n            let touch = changes.touchesRange(start, start + chunk.length);\n            if (touch === false) {\n                maxPoint = Math.max(maxPoint, chunk.maxPoint);\n                chunks.push(chunk);\n                chunkPos.push(changes.mapPos(start));\n            }\n            else if (touch === true) {\n                let { mapped, pos } = chunk.map(start, changes);\n                if (mapped) {\n                    maxPoint = Math.max(maxPoint, mapped.maxPoint);\n                    chunks.push(mapped);\n                    chunkPos.push(pos);\n                }\n            }\n        }\n        let next = this.nextLayer.map(changes);\n        return chunks.length == 0 ? next : new RangeSet(chunkPos, chunks, next || RangeSet.empty, maxPoint);\n    }\n    /**\n    Iterate over the ranges that touch the region `from` to `to`,\n    calling `f` for each. There is no guarantee that the ranges will\n    be reported in any specific order. When the callback returns\n    `false`, iteration stops.\n    */\n    between(from, to, f) {\n        if (this.isEmpty)\n            return;\n        for (let i = 0; i < this.chunk.length; i++) {\n            let start = this.chunkPos[i], chunk = this.chunk[i];\n            if (to >= start && from <= start + chunk.length &&\n                chunk.between(start, from - start, to - start, f) === false)\n                return;\n        }\n        this.nextLayer.between(from, to, f);\n    }\n    /**\n    Iterate over the ranges in this set, in order, including all\n    ranges that end at or after `from`.\n    */\n    iter(from = 0) {\n        return HeapCursor.from([this]).goto(from);\n    }\n    /**\n    @internal\n    */\n    get isEmpty() { return this.nextLayer == this; }\n    /**\n    Iterate over the ranges in a collection of sets, in order,\n    starting from `from`.\n    */\n    static iter(sets, from = 0) {\n        return HeapCursor.from(sets).goto(from);\n    }\n    /**\n    Iterate over two groups of sets, calling methods on `comparator`\n    to notify it of possible differences.\n    */\n    static compare(oldSets, newSets, \n    /**\n    This indicates how the underlying data changed between these\n    ranges, and is needed to synchronize the iteration.\n    */\n    textDiff, comparator, \n    /**\n    Can be used to ignore all non-point ranges, and points below\n    the given size. When -1, all ranges are compared.\n    */\n    minPointSize = -1) {\n        let a = oldSets.filter(set => set.maxPoint > 0 || !set.isEmpty && set.maxPoint >= minPointSize);\n        let b = newSets.filter(set => set.maxPoint > 0 || !set.isEmpty && set.maxPoint >= minPointSize);\n        let sharedChunks = findSharedChunks(a, b, textDiff);\n        let sideA = new SpanCursor(a, sharedChunks, minPointSize);\n        let sideB = new SpanCursor(b, sharedChunks, minPointSize);\n        textDiff.iterGaps((fromA, fromB, length) => compare(sideA, fromA, sideB, fromB, length, comparator));\n        if (textDiff.empty && textDiff.length == 0)\n            compare(sideA, 0, sideB, 0, 0, comparator);\n    }\n    /**\n    Compare the contents of two groups of range sets, returning true\n    if they are equivalent in the given range.\n    */\n    static eq(oldSets, newSets, from = 0, to) {\n        if (to == null)\n            to = 1000000000 /* C.Far */ - 1;\n        let a = oldSets.filter(set => !set.isEmpty && newSets.indexOf(set) < 0);\n        let b = newSets.filter(set => !set.isEmpty && oldSets.indexOf(set) < 0);\n        if (a.length != b.length)\n            return false;\n        if (!a.length)\n            return true;\n        let sharedChunks = findSharedChunks(a, b);\n        let sideA = new SpanCursor(a, sharedChunks, 0).goto(from), sideB = new SpanCursor(b, sharedChunks, 0).goto(from);\n        for (;;) {\n            if (sideA.to != sideB.to ||\n                !sameValues(sideA.active, sideB.active) ||\n                sideA.point && (!sideB.point || !sideA.point.eq(sideB.point)))\n                return false;\n            if (sideA.to > to)\n                return true;\n            sideA.next();\n            sideB.next();\n        }\n    }\n    /**\n    Iterate over a group of range sets at the same time, notifying\n    the iterator about the ranges covering every given piece of\n    content. Returns the open count (see\n    [`SpanIterator.span`](https://codemirror.net/6/docs/ref/#state.SpanIterator.span)) at the end\n    of the iteration.\n    */\n    static spans(sets, from, to, iterator, \n    /**\n    When given and greater than -1, only points of at least this\n    size are taken into account.\n    */\n    minPointSize = -1) {\n        let cursor = new SpanCursor(sets, null, minPointSize).goto(from), pos = from;\n        let openRanges = cursor.openStart;\n        for (;;) {\n            let curTo = Math.min(cursor.to, to);\n            if (cursor.point) {\n                let active = cursor.activeForPoint(cursor.to);\n                let openCount = cursor.pointFrom < from ? active.length + 1\n                    : cursor.point.startSide < 0 ? active.length\n                        : Math.min(active.length, openRanges);\n                iterator.point(pos, curTo, cursor.point, active, openCount, cursor.pointRank);\n                openRanges = Math.min(cursor.openEnd(curTo), active.length);\n            }\n            else if (curTo > pos) {\n                iterator.span(pos, curTo, cursor.active, openRanges);\n                openRanges = cursor.openEnd(curTo);\n            }\n            if (cursor.to > to)\n                return openRanges + (cursor.point && cursor.to > to ? 1 : 0);\n            pos = cursor.to;\n            cursor.next();\n        }\n    }\n    /**\n    Create a range set for the given range or array of ranges. By\n    default, this expects the ranges to be _sorted_ (by start\n    position and, if two start at the same position,\n    `value.startSide`). You can pass `true` as second argument to\n    cause the method to sort them.\n    */\n    static of(ranges, sort = false) {\n        let build = new RangeSetBuilder();\n        for (let range of ranges instanceof Range ? [ranges] : sort ? lazySort(ranges) : ranges)\n            build.add(range.from, range.to, range.value);\n        return build.finish();\n    }\n    /**\n    Join an array of range sets into a single set.\n    */\n    static join(sets) {\n        if (!sets.length)\n            return RangeSet.empty;\n        let result = sets[sets.length - 1];\n        for (let i = sets.length - 2; i >= 0; i--) {\n            for (let layer = sets[i]; layer != RangeSet.empty; layer = layer.nextLayer)\n                result = new RangeSet(layer.chunkPos, layer.chunk, result, Math.max(layer.maxPoint, result.maxPoint));\n        }\n        return result;\n    }\n}\n/**\nThe empty set of ranges.\n*/\nRangeSet.empty = /*@__PURE__*/new RangeSet([], [], null, -1);\nfunction lazySort(ranges) {\n    if (ranges.length > 1)\n        for (let prev = ranges[0], i = 1; i < ranges.length; i++) {\n            let cur = ranges[i];\n            if (cmpRange(prev, cur) > 0)\n                return ranges.slice().sort(cmpRange);\n            prev = cur;\n        }\n    return ranges;\n}\nRangeSet.empty.nextLayer = RangeSet.empty;\n/**\nA range set builder is a data structure that helps build up a\n[range set](https://codemirror.net/6/docs/ref/#state.RangeSet) directly, without first allocating\nan array of [`Range`](https://codemirror.net/6/docs/ref/#state.Range) objects.\n*/\nclass RangeSetBuilder {\n    finishChunk(newArrays) {\n        this.chunks.push(new Chunk(this.from, this.to, this.value, this.maxPoint));\n        this.chunkPos.push(this.chunkStart);\n        this.chunkStart = -1;\n        this.setMaxPoint = Math.max(this.setMaxPoint, this.maxPoint);\n        this.maxPoint = -1;\n        if (newArrays) {\n            this.from = [];\n            this.to = [];\n            this.value = [];\n        }\n    }\n    /**\n    Create an empty builder.\n    */\n    constructor() {\n        this.chunks = [];\n        this.chunkPos = [];\n        this.chunkStart = -1;\n        this.last = null;\n        this.lastFrom = -1000000000 /* C.Far */;\n        this.lastTo = -1000000000 /* C.Far */;\n        this.from = [];\n        this.to = [];\n        this.value = [];\n        this.maxPoint = -1;\n        this.setMaxPoint = -1;\n        this.nextLayer = null;\n    }\n    /**\n    Add a range. Ranges should be added in sorted (by `from` and\n    `value.startSide`) order.\n    */\n    add(from, to, value) {\n        if (!this.addInner(from, to, value))\n            (this.nextLayer || (this.nextLayer = new RangeSetBuilder)).add(from, to, value);\n    }\n    /**\n    @internal\n    */\n    addInner(from, to, value) {\n        let diff = from - this.lastTo || value.startSide - this.last.endSide;\n        if (diff <= 0 && (from - this.lastFrom || value.startSide - this.last.startSide) < 0)\n            throw new Error(\"Ranges must be added sorted by `from` position and `startSide`\");\n        if (diff < 0)\n            return false;\n        if (this.from.length == 250 /* C.ChunkSize */)\n            this.finishChunk(true);\n        if (this.chunkStart < 0)\n            this.chunkStart = from;\n        this.from.push(from - this.chunkStart);\n        this.to.push(to - this.chunkStart);\n        this.last = value;\n        this.lastFrom = from;\n        this.lastTo = to;\n        this.value.push(value);\n        if (value.point)\n            this.maxPoint = Math.max(this.maxPoint, to - from);\n        return true;\n    }\n    /**\n    @internal\n    */\n    addChunk(from, chunk) {\n        if ((from - this.lastTo || chunk.value[0].startSide - this.last.endSide) < 0)\n            return false;\n        if (this.from.length)\n            this.finishChunk(true);\n        this.setMaxPoint = Math.max(this.setMaxPoint, chunk.maxPoint);\n        this.chunks.push(chunk);\n        this.chunkPos.push(from);\n        let last = chunk.value.length - 1;\n        this.last = chunk.value[last];\n        this.lastFrom = chunk.from[last] + from;\n        this.lastTo = chunk.to[last] + from;\n        return true;\n    }\n    /**\n    Finish the range set. Returns the new set. The builder can't be\n    used anymore after this has been called.\n    */\n    finish() { return this.finishInner(RangeSet.empty); }\n    /**\n    @internal\n    */\n    finishInner(next) {\n        if (this.from.length)\n            this.finishChunk(false);\n        if (this.chunks.length == 0)\n            return next;\n        let result = RangeSet.create(this.chunkPos, this.chunks, this.nextLayer ? this.nextLayer.finishInner(next) : next, this.setMaxPoint);\n        this.from = null; // Make sure further `add` calls produce errors\n        return result;\n    }\n}\nfunction findSharedChunks(a, b, textDiff) {\n    let inA = new Map();\n    for (let set of a)\n        for (let i = 0; i < set.chunk.length; i++)\n            if (set.chunk[i].maxPoint <= 0)\n                inA.set(set.chunk[i], set.chunkPos[i]);\n    let shared = new Set();\n    for (let set of b)\n        for (let i = 0; i < set.chunk.length; i++) {\n            let known = inA.get(set.chunk[i]);\n            if (known != null && (textDiff ? textDiff.mapPos(known) : known) == set.chunkPos[i] &&\n                !(textDiff === null || textDiff === void 0 ? void 0 : textDiff.touchesRange(known, known + set.chunk[i].length)))\n                shared.add(set.chunk[i]);\n        }\n    return shared;\n}\nclass LayerCursor {\n    constructor(layer, skip, minPoint, rank = 0) {\n        this.layer = layer;\n        this.skip = skip;\n        this.minPoint = minPoint;\n        this.rank = rank;\n    }\n    get startSide() { return this.value ? this.value.startSide : 0; }\n    get endSide() { return this.value ? this.value.endSide : 0; }\n    goto(pos, side = -1000000000 /* C.Far */) {\n        this.chunkIndex = this.rangeIndex = 0;\n        this.gotoInner(pos, side, false);\n        return this;\n    }\n    gotoInner(pos, side, forward) {\n        while (this.chunkIndex < this.layer.chunk.length) {\n            let next = this.layer.chunk[this.chunkIndex];\n            if (!(this.skip && this.skip.has(next) ||\n                this.layer.chunkEnd(this.chunkIndex) < pos ||\n                next.maxPoint < this.minPoint))\n                break;\n            this.chunkIndex++;\n            forward = false;\n        }\n        if (this.chunkIndex < this.layer.chunk.length) {\n            let rangeIndex = this.layer.chunk[this.chunkIndex].findIndex(pos - this.layer.chunkPos[this.chunkIndex], side, true);\n            if (!forward || this.rangeIndex < rangeIndex)\n                this.setRangeIndex(rangeIndex);\n        }\n        this.next();\n    }\n    forward(pos, side) {\n        if ((this.to - pos || this.endSide - side) < 0)\n            this.gotoInner(pos, side, true);\n    }\n    next() {\n        for (;;) {\n            if (this.chunkIndex == this.layer.chunk.length) {\n                this.from = this.to = 1000000000 /* C.Far */;\n                this.value = null;\n                break;\n            }\n            else {\n                let chunkPos = this.layer.chunkPos[this.chunkIndex], chunk = this.layer.chunk[this.chunkIndex];\n                let from = chunkPos + chunk.from[this.rangeIndex];\n                this.from = from;\n                this.to = chunkPos + chunk.to[this.rangeIndex];\n                this.value = chunk.value[this.rangeIndex];\n                this.setRangeIndex(this.rangeIndex + 1);\n                if (this.minPoint < 0 || this.value.point && this.to - this.from >= this.minPoint)\n                    break;\n            }\n        }\n    }\n    setRangeIndex(index) {\n        if (index == this.layer.chunk[this.chunkIndex].value.length) {\n            this.chunkIndex++;\n            if (this.skip) {\n                while (this.chunkIndex < this.layer.chunk.length && this.skip.has(this.layer.chunk[this.chunkIndex]))\n                    this.chunkIndex++;\n            }\n            this.rangeIndex = 0;\n        }\n        else {\n            this.rangeIndex = index;\n        }\n    }\n    nextChunk() {\n        this.chunkIndex++;\n        this.rangeIndex = 0;\n        this.next();\n    }\n    compare(other) {\n        return this.from - other.from || this.startSide - other.startSide || this.rank - other.rank ||\n            this.to - other.to || this.endSide - other.endSide;\n    }\n}\nclass HeapCursor {\n    constructor(heap) {\n        this.heap = heap;\n    }\n    static from(sets, skip = null, minPoint = -1) {\n        let heap = [];\n        for (let i = 0; i < sets.length; i++) {\n            for (let cur = sets[i]; !cur.isEmpty; cur = cur.nextLayer) {\n                if (cur.maxPoint >= minPoint)\n                    heap.push(new LayerCursor(cur, skip, minPoint, i));\n            }\n        }\n        return heap.length == 1 ? heap[0] : new HeapCursor(heap);\n    }\n    get startSide() { return this.value ? this.value.startSide : 0; }\n    goto(pos, side = -1000000000 /* C.Far */) {\n        for (let cur of this.heap)\n            cur.goto(pos, side);\n        for (let i = this.heap.length >> 1; i >= 0; i--)\n            heapBubble(this.heap, i);\n        this.next();\n        return this;\n    }\n    forward(pos, side) {\n        for (let cur of this.heap)\n            cur.forward(pos, side);\n        for (let i = this.heap.length >> 1; i >= 0; i--)\n            heapBubble(this.heap, i);\n        if ((this.to - pos || this.value.endSide - side) < 0)\n            this.next();\n    }\n    next() {\n        if (this.heap.length == 0) {\n            this.from = this.to = 1000000000 /* C.Far */;\n            this.value = null;\n            this.rank = -1;\n        }\n        else {\n            let top = this.heap[0];\n            this.from = top.from;\n            this.to = top.to;\n            this.value = top.value;\n            this.rank = top.rank;\n            if (top.value)\n                top.next();\n            heapBubble(this.heap, 0);\n        }\n    }\n}\nfunction heapBubble(heap, index) {\n    for (let cur = heap[index];;) {\n        let childIndex = (index << 1) + 1;\n        if (childIndex >= heap.length)\n            break;\n        let child = heap[childIndex];\n        if (childIndex + 1 < heap.length && child.compare(heap[childIndex + 1]) >= 0) {\n            child = heap[childIndex + 1];\n            childIndex++;\n        }\n        if (cur.compare(child) < 0)\n            break;\n        heap[childIndex] = cur;\n        heap[index] = child;\n        index = childIndex;\n    }\n}\nclass SpanCursor {\n    constructor(sets, skip, minPoint) {\n        this.minPoint = minPoint;\n        this.active = [];\n        this.activeTo = [];\n        this.activeRank = [];\n        this.minActive = -1;\n        // A currently active point range, if any\n        this.point = null;\n        this.pointFrom = 0;\n        this.pointRank = 0;\n        this.to = -1000000000 /* C.Far */;\n        this.endSide = 0;\n        // The amount of open active ranges at the start of the iterator.\n        // Not including points.\n        this.openStart = -1;\n        this.cursor = HeapCursor.from(sets, skip, minPoint);\n    }\n    goto(pos, side = -1000000000 /* C.Far */) {\n        this.cursor.goto(pos, side);\n        this.active.length = this.activeTo.length = this.activeRank.length = 0;\n        this.minActive = -1;\n        this.to = pos;\n        this.endSide = side;\n        this.openStart = -1;\n        this.next();\n        return this;\n    }\n    forward(pos, side) {\n        while (this.minActive > -1 && (this.activeTo[this.minActive] - pos || this.active[this.minActive].endSide - side) < 0)\n            this.removeActive(this.minActive);\n        this.cursor.forward(pos, side);\n    }\n    removeActive(index) {\n        remove(this.active, index);\n        remove(this.activeTo, index);\n        remove(this.activeRank, index);\n        this.minActive = findMinIndex(this.active, this.activeTo);\n    }\n    addActive(trackOpen) {\n        let i = 0, { value, to, rank } = this.cursor;\n        // Organize active marks by rank first, then by size\n        while (i < this.activeRank.length && (rank - this.activeRank[i] || to - this.activeTo[i]) > 0)\n            i++;\n        insert(this.active, i, value);\n        insert(this.activeTo, i, to);\n        insert(this.activeRank, i, rank);\n        if (trackOpen)\n            insert(trackOpen, i, this.cursor.from);\n        this.minActive = findMinIndex(this.active, this.activeTo);\n    }\n    // After calling this, if `this.point` != null, the next range is a\n    // point. Otherwise, it's a regular range, covered by `this.active`.\n    next() {\n        let from = this.to, wasPoint = this.point;\n        this.point = null;\n        let trackOpen = this.openStart < 0 ? [] : null;\n        for (;;) {\n            let a = this.minActive;\n            if (a > -1 && (this.activeTo[a] - this.cursor.from || this.active[a].endSide - this.cursor.startSide) < 0) {\n                if (this.activeTo[a] > from) {\n                    this.to = this.activeTo[a];\n                    this.endSide = this.active[a].endSide;\n                    break;\n                }\n                this.removeActive(a);\n                if (trackOpen)\n                    remove(trackOpen, a);\n            }\n            else if (!this.cursor.value) {\n                this.to = this.endSide = 1000000000 /* C.Far */;\n                break;\n            }\n            else if (this.cursor.from > from) {\n                this.to = this.cursor.from;\n                this.endSide = this.cursor.startSide;\n                break;\n            }\n            else {\n                let nextVal = this.cursor.value;\n                if (!nextVal.point) { // Opening a range\n                    this.addActive(trackOpen);\n                    this.cursor.next();\n                }\n                else if (wasPoint && this.cursor.to == this.to && this.cursor.from < this.cursor.to) {\n                    // Ignore any non-empty points that end precisely at the end of the prev point\n                    this.cursor.next();\n                }\n                else { // New point\n                    this.point = nextVal;\n                    this.pointFrom = this.cursor.from;\n                    this.pointRank = this.cursor.rank;\n                    this.to = this.cursor.to;\n                    this.endSide = nextVal.endSide;\n                    this.cursor.next();\n                    this.forward(this.to, this.endSide);\n                    break;\n                }\n            }\n        }\n        if (trackOpen) {\n            this.openStart = 0;\n            for (let i = trackOpen.length - 1; i >= 0 && trackOpen[i] < from; i--)\n                this.openStart++;\n        }\n    }\n    activeForPoint(to) {\n        if (!this.active.length)\n            return this.active;\n        let active = [];\n        for (let i = this.active.length - 1; i >= 0; i--) {\n            if (this.activeRank[i] < this.pointRank)\n                break;\n            if (this.activeTo[i] > to || this.activeTo[i] == to && this.active[i].endSide >= this.point.endSide)\n                active.push(this.active[i]);\n        }\n        return active.reverse();\n    }\n    openEnd(to) {\n        let open = 0;\n        for (let i = this.activeTo.length - 1; i >= 0 && this.activeTo[i] > to; i--)\n            open++;\n        return open;\n    }\n}\nfunction compare(a, startA, b, startB, length, comparator) {\n    a.goto(startA);\n    b.goto(startB);\n    let endB = startB + length;\n    let pos = startB, dPos = startB - startA;\n    for (;;) {\n        let dEnd = (a.to + dPos) - b.to, diff = dEnd || a.endSide - b.endSide;\n        let end = diff < 0 ? a.to + dPos : b.to, clipEnd = Math.min(end, endB);\n        if (a.point || b.point) {\n            if (!(a.point && b.point && (a.point == b.point || a.point.eq(b.point)) &&\n                sameValues(a.activeForPoint(a.to), b.activeForPoint(b.to))))\n                comparator.comparePoint(pos, clipEnd, a.point, b.point);\n        }\n        else {\n            if (clipEnd > pos && !sameValues(a.active, b.active))\n                comparator.compareRange(pos, clipEnd, a.active, b.active);\n        }\n        if (end > endB)\n            break;\n        if ((dEnd || a.openEnd != b.openEnd) && comparator.boundChange)\n            comparator.boundChange(end);\n        pos = end;\n        if (diff <= 0)\n            a.next();\n        if (diff >= 0)\n            b.next();\n    }\n}\nfunction sameValues(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (a[i] != b[i] && !a[i].eq(b[i]))\n            return false;\n    return true;\n}\nfunction remove(array, index) {\n    for (let i = index, e = array.length - 1; i < e; i++)\n        array[i] = array[i + 1];\n    array.pop();\n}\nfunction insert(array, index, value) {\n    for (let i = array.length - 1; i >= index; i--)\n        array[i + 1] = array[i];\n    array[index] = value;\n}\nfunction findMinIndex(value, array) {\n    let found = -1, foundPos = 1000000000 /* C.Far */;\n    for (let i = 0; i < array.length; i++)\n        if ((array[i] - foundPos || value[i].endSide - value[found].endSide) < 0) {\n            found = i;\n            foundPos = array[i];\n        }\n    return found;\n}\n\n/**\nCount the column position at the given offset into the string,\ntaking extending characters and tab size into account.\n*/\nfunction countColumn(string, tabSize, to = string.length) {\n    let n = 0;\n    for (let i = 0; i < to && i < string.length;) {\n        if (string.charCodeAt(i) == 9) {\n            n += tabSize - (n % tabSize);\n            i++;\n        }\n        else {\n            n++;\n            i = findClusterBreak(string, i);\n        }\n    }\n    return n;\n}\n/**\nFind the offset that corresponds to the given column position in a\nstring, taking extending characters and tab size into account. By\ndefault, the string length is returned when it is too short to\nreach the column. Pass `strict` true to make it return -1 in that\nsituation.\n*/\nfunction findColumn(string, col, tabSize, strict) {\n    for (let i = 0, n = 0;;) {\n        if (n >= col)\n            return i;\n        if (i == string.length)\n            break;\n        n += string.charCodeAt(i) == 9 ? tabSize - (n % tabSize) : 1;\n        i = findClusterBreak(string, i);\n    }\n    return strict === true ? -1 : string.length;\n}\n\nexport { Annotation, AnnotationType, ChangeDesc, ChangeSet, CharCategory, Compartment, EditorSelection, EditorState, Facet, Line, MapMode, Prec, Range, RangeSet, RangeSetBuilder, RangeValue, SelectionRange, StateEffect, StateEffectType, StateField, Text, Transaction, codePointAt, codePointSize, combineConfig, countColumn, findClusterBreak, findColumn, fromCodePoint };\n","const C = \"\\u037c\"\nconst COUNT = typeof Symbol == \"undefined\" ? \"__\" + C : Symbol.for(C)\nconst SET = typeof Symbol == \"undefined\" ? \"__styleSet\" + Math.floor(Math.random() * 1e8) : Symbol(\"styleSet\")\nconst top = typeof globalThis != \"undefined\" ? globalThis : typeof window != \"undefined\" ? window : {}\n\n// :: - Style modules encapsulate a set of CSS rules defined from\n// JavaScript. Their definitions are only available in a given DOM\n// root after it has been _mounted_ there with `StyleModule.mount`.\n//\n// Style modules should be created once and stored somewhere, as\n// opposed to re-creating them every time you need them. The amount of\n// CSS rules generated for a given DOM root is bounded by the amount\n// of style modules that were used. So to avoid leaking rules, don't\n// create these dynamically, but treat them as one-time allocations.\nexport class StyleModule {\n  // :: (Object<Style>, ?{finish: ?(string) → string})\n  // Create a style module from the given spec.\n  //\n  // When `finish` is given, it is called on regular (non-`@`)\n  // selectors (after `&` expansion) to compute the final selector.\n  constructor(spec, options) {\n    this.rules = []\n    let {finish} = options || {}\n\n    function splitSelector(selector) {\n      return /^@/.test(selector) ? [selector] : selector.split(/,\\s*/)\n    }\n\n    function render(selectors, spec, target, isKeyframes) {\n      let local = [], isAt = /^@(\\w+)\\b/.exec(selectors[0]), keyframes = isAt && isAt[1] == \"keyframes\"\n      if (isAt && spec == null) return target.push(selectors[0] + \";\")\n      for (let prop in spec) {\n        let value = spec[prop]\n        if (/&/.test(prop)) {\n          render(prop.split(/,\\s*/).map(part => selectors.map(sel => part.replace(/&/, sel))).reduce((a, b) => a.concat(b)),\n                 value, target)\n        } else if (value && typeof value == \"object\") {\n          if (!isAt) throw new RangeError(\"The value of a property (\" + prop + \") should be a primitive value.\")\n          render(splitSelector(prop), value, local, keyframes)\n        } else if (value != null) {\n          local.push(prop.replace(/_.*/, \"\").replace(/[A-Z]/g, l => \"-\" + l.toLowerCase()) + \": \" + value + \";\")\n        }\n      }\n      if (local.length || keyframes) {\n        target.push((finish && !isAt && !isKeyframes ? selectors.map(finish) : selectors).join(\", \") +\n                    \" {\" + local.join(\" \") + \"}\")\n      }\n    }\n\n    for (let prop in spec) render(splitSelector(prop), spec[prop], this.rules)\n  }\n\n  // :: () → string\n  // Returns a string containing the module's CSS rules.\n  getRules() { return this.rules.join(\"\\n\") }\n\n  // :: () → string\n  // Generate a new unique CSS class name.\n  static newName() {\n    let id = top[COUNT] || 1\n    top[COUNT] = id + 1\n    return C + id.toString(36)\n  }\n\n  // :: (union<Document, ShadowRoot>, union<[StyleModule], StyleModule>, ?{nonce: ?string})\n  //\n  // Mount the given set of modules in the given DOM root, which ensures\n  // that the CSS rules defined by the module are available in that\n  // context.\n  //\n  // Rules are only added to the document once per root.\n  //\n  // Rule order will follow the order of the modules, so that rules from\n  // modules later in the array take precedence of those from earlier\n  // modules. If you call this function multiple times for the same root\n  // in a way that changes the order of already mounted modules, the old\n  // order will be changed.\n  //\n  // If a Content Security Policy nonce is provided, it is added to\n  // the `<style>` tag generated by the library.\n  static mount(root, modules, options) {\n    let set = root[SET], nonce = options && options.nonce\n    if (!set) set = new StyleSet(root, nonce)\n    else if (nonce) set.setNonce(nonce)\n    set.mount(Array.isArray(modules) ? modules : [modules], root)\n  }\n}\n\nlet adoptedSet = new Map //<Document, StyleSet>\n\nclass StyleSet {\n  constructor(root, nonce) {\n    let doc = root.ownerDocument || root, win = doc.defaultView\n    if (!root.head && root.adoptedStyleSheets && win.CSSStyleSheet) {\n      let adopted = adoptedSet.get(doc)\n      if (adopted) return root[SET] = adopted\n      this.sheet = new win.CSSStyleSheet\n      adoptedSet.set(doc, this)\n    } else {\n      this.styleTag = doc.createElement(\"style\")\n      if (nonce) this.styleTag.setAttribute(\"nonce\", nonce)\n    }\n    this.modules = []\n    root[SET] = this\n  }\n\n  mount(modules, root) {\n    let sheet = this.sheet\n    let pos = 0 /* Current rule offset */, j = 0 /* Index into this.modules */\n    for (let i = 0; i < modules.length; i++) {\n      let mod = modules[i], index = this.modules.indexOf(mod)\n      if (index < j && index > -1) { // Ordering conflict\n        this.modules.splice(index, 1)\n        j--\n        index = -1\n      }\n      if (index == -1) {\n        this.modules.splice(j++, 0, mod)\n        if (sheet) for (let k = 0; k < mod.rules.length; k++)\n          sheet.insertRule(mod.rules[k], pos++)\n      } else {\n        while (j < index) pos += this.modules[j++].rules.length\n        pos += mod.rules.length\n        j++\n      }\n    }\n\n    if (sheet) {\n      if (root.adoptedStyleSheets.indexOf(this.sheet) < 0)\n        root.adoptedStyleSheets = [this.sheet, ...root.adoptedStyleSheets]\n    } else {\n      let text = \"\"\n      for (let i = 0; i < this.modules.length; i++)\n        text += this.modules[i].getRules() + \"\\n\"\n      this.styleTag.textContent = text\n      let target = root.head || root\n      if (this.styleTag.parentNode != target)\n        target.insertBefore(this.styleTag, target.firstChild)\n    }\n  }\n\n  setNonce(nonce) {\n    if (this.styleTag && this.styleTag.getAttribute(\"nonce\") != nonce)\n      this.styleTag.setAttribute(\"nonce\", nonce)\n  }\n}\n\n// Style::Object<union<Style,string>>\n//\n// A style is an object that, in the simple case, maps CSS property\n// names to strings holding their values, as in `{color: \"red\",\n// fontWeight: \"bold\"}`. The property names can be given in\n// camel-case—the library will insert a dash before capital letters\n// when converting them to CSS.\n//\n// If you include an underscore in a property name, it and everything\n// after it will be removed from the output, which can be useful when\n// providing a property multiple times, for browser compatibility\n// reasons.\n//\n// A property in a style object can also be a sub-selector, which\n// extends the current context to add a pseudo-selector or a child\n// selector. Such a property should contain a `&` character, which\n// will be replaced by the current selector. For example `{\"&:before\":\n// {content: '\"hi\"'}}`. Sub-selectors and regular properties can\n// freely be mixed in a given object. Any property containing a `&` is\n// assumed to be a sub-selector.\n//\n// Finally, a property can specify an @-block to be wrapped around the\n// styles defined inside the object that's the property's value. For\n// example to create a media query you can do `{\"@media screen and\n// (min-width: 400px)\": {...}}`.\n","export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\"\n}\n\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // On macOS, keys held with Shift and Cmd don't reflect the effect of Shift in `.key`.\n  // On IE, shift effect is never included in `.key`.\n  var ignoreKey = mac && event.metaKey && event.shiftKey && !event.ctrlKey && !event.altKey ||\n      ie && event.shiftKey && event.key && event.key.length == 1 ||\n      event.key == \"Unidentified\"\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n","export default function crelt() {\n  var elt = arguments[0]\n  if (typeof elt == \"string\") elt = document.createElement(elt)\n  var i = 1, next = arguments[1]\n  if (next && typeof next == \"object\" && next.nodeType == null && !Array.isArray(next)) {\n    for (var name in next) if (Object.prototype.hasOwnProperty.call(next, name)) {\n      var value = next[name]\n      if (typeof value == \"string\") elt.setAttribute(name, value)\n      else if (value != null) elt[name] = value\n    }\n    i++\n  }\n  for (; i < arguments.length; i++) add(elt, arguments[i])\n  return elt\n}\n\nfunction add(elt, child) {\n  if (typeof child == \"string\") {\n    elt.appendChild(document.createTextNode(child))\n  } else if (child == null) {\n  } else if (child.nodeType != null) {\n    elt.appendChild(child)\n  } else if (Array.isArray(child)) {\n    for (var i = 0; i < child.length; i++) add(elt, child[i])\n  } else {\n    throw new RangeError(\"Unsupported child node: \" + child)\n  }\n}\n","import { Text, RangeSet, MapMode, RangeValue, findClusterBreak, EditorSelection, Facet, StateEffect, ChangeSet, findColumn, CharCategory, EditorState, Annotation, Transaction, Prec, codePointAt, codePointSize, combineConfig, StateField, RangeSetBuilder, countColumn } from '@codemirror/state';\nimport { StyleModule } from 'style-mod';\nimport { keyName, base, shift } from 'w3c-keyname';\nimport elt from 'crelt';\n\nfunction getSelection(root) {\n    let target;\n    // Browsers differ on whether shadow roots have a getSelection\n    // method. If it exists, use that, otherwise, call it on the\n    // document.\n    if (root.nodeType == 11) { // Shadow root\n        target = root.getSelection ? root : root.ownerDocument;\n    }\n    else {\n        target = root;\n    }\n    return target.getSelection();\n}\nfunction contains(dom, node) {\n    return node ? dom == node || dom.contains(node.nodeType != 1 ? node.parentNode : node) : false;\n}\nfunction hasSelection(dom, selection) {\n    if (!selection.anchorNode)\n        return false;\n    try {\n        // Firefox will raise 'permission denied' errors when accessing\n        // properties of `sel.anchorNode` when it's in a generated CSS\n        // element.\n        return contains(dom, selection.anchorNode);\n    }\n    catch (_) {\n        return false;\n    }\n}\nfunction clientRectsFor(dom) {\n    if (dom.nodeType == 3)\n        return textRange(dom, 0, dom.nodeValue.length).getClientRects();\n    else if (dom.nodeType == 1)\n        return dom.getClientRects();\n    else\n        return [];\n}\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nfunction isEquivalentPosition(node, off, targetNode, targetOff) {\n    return targetNode ? (scanFor(node, off, targetNode, targetOff, -1) ||\n        scanFor(node, off, targetNode, targetOff, 1)) : false;\n}\nfunction domIndex(node) {\n    for (var index = 0;; index++) {\n        node = node.previousSibling;\n        if (!node)\n            return index;\n    }\n}\nfunction isBlockElement(node) {\n    return node.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\\d|SECTION|PRE)$/.test(node.nodeName);\n}\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n    for (;;) {\n        if (node == targetNode && off == targetOff)\n            return true;\n        if (off == (dir < 0 ? 0 : maxOffset(node))) {\n            if (node.nodeName == \"DIV\")\n                return false;\n            let parent = node.parentNode;\n            if (!parent || parent.nodeType != 1)\n                return false;\n            off = domIndex(node) + (dir < 0 ? 0 : 1);\n            node = parent;\n        }\n        else if (node.nodeType == 1) {\n            node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n            if (node.nodeType == 1 && node.contentEditable == \"false\")\n                return false;\n            off = dir < 0 ? maxOffset(node) : 0;\n        }\n        else {\n            return false;\n        }\n    }\n}\nfunction maxOffset(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction flattenRect(rect, left) {\n    let x = left ? rect.left : rect.right;\n    return { left: x, right: x, top: rect.top, bottom: rect.bottom };\n}\nfunction windowRect(win) {\n    let vp = win.visualViewport;\n    if (vp)\n        return {\n            left: 0, right: vp.width,\n            top: 0, bottom: vp.height\n        };\n    return { left: 0, right: win.innerWidth,\n        top: 0, bottom: win.innerHeight };\n}\nfunction getScale(elt, rect) {\n    let scaleX = rect.width / elt.offsetWidth;\n    let scaleY = rect.height / elt.offsetHeight;\n    if (scaleX > 0.995 && scaleX < 1.005 || !isFinite(scaleX) || Math.abs(rect.width - elt.offsetWidth) < 1)\n        scaleX = 1;\n    if (scaleY > 0.995 && scaleY < 1.005 || !isFinite(scaleY) || Math.abs(rect.height - elt.offsetHeight) < 1)\n        scaleY = 1;\n    return { scaleX, scaleY };\n}\nfunction scrollRectIntoView(dom, rect, side, x, y, xMargin, yMargin, ltr) {\n    let doc = dom.ownerDocument, win = doc.defaultView || window;\n    for (let cur = dom, stop = false; cur && !stop;) {\n        if (cur.nodeType == 1) { // Element\n            let bounding, top = cur == doc.body;\n            let scaleX = 1, scaleY = 1;\n            if (top) {\n                bounding = windowRect(win);\n            }\n            else {\n                if (/^(fixed|sticky)$/.test(getComputedStyle(cur).position))\n                    stop = true;\n                if (cur.scrollHeight <= cur.clientHeight && cur.scrollWidth <= cur.clientWidth) {\n                    cur = cur.assignedSlot || cur.parentNode;\n                    continue;\n                }\n                let rect = cur.getBoundingClientRect();\n                ({ scaleX, scaleY } = getScale(cur, rect));\n                // Make sure scrollbar width isn't included in the rectangle\n                bounding = { left: rect.left, right: rect.left + cur.clientWidth * scaleX,\n                    top: rect.top, bottom: rect.top + cur.clientHeight * scaleY };\n            }\n            let moveX = 0, moveY = 0;\n            if (y == \"nearest\") {\n                if (rect.top < bounding.top) {\n                    moveY = rect.top - (bounding.top + yMargin);\n                    if (side > 0 && rect.bottom > bounding.bottom + moveY)\n                        moveY = rect.bottom - bounding.bottom + yMargin;\n                }\n                else if (rect.bottom > bounding.bottom) {\n                    moveY = rect.bottom - bounding.bottom + yMargin;\n                    if (side < 0 && (rect.top - moveY) < bounding.top)\n                        moveY = rect.top - (bounding.top + yMargin);\n                }\n            }\n            else {\n                let rectHeight = rect.bottom - rect.top, boundingHeight = bounding.bottom - bounding.top;\n                let targetTop = y == \"center\" && rectHeight <= boundingHeight ? rect.top + rectHeight / 2 - boundingHeight / 2 :\n                    y == \"start\" || y == \"center\" && side < 0 ? rect.top - yMargin :\n                        rect.bottom - boundingHeight + yMargin;\n                moveY = targetTop - bounding.top;\n            }\n            if (x == \"nearest\") {\n                if (rect.left < bounding.left) {\n                    moveX = rect.left - (bounding.left + xMargin);\n                    if (side > 0 && rect.right > bounding.right + moveX)\n                        moveX = rect.right - bounding.right + xMargin;\n                }\n                else if (rect.right > bounding.right) {\n                    moveX = rect.right - bounding.right + xMargin;\n                    if (side < 0 && rect.left < bounding.left + moveX)\n                        moveX = rect.left - (bounding.left + xMargin);\n                }\n            }\n            else {\n                let targetLeft = x == \"center\" ? rect.left + (rect.right - rect.left) / 2 - (bounding.right - bounding.left) / 2 :\n                    (x == \"start\") == ltr ? rect.left - xMargin :\n                        rect.right - (bounding.right - bounding.left) + xMargin;\n                moveX = targetLeft - bounding.left;\n            }\n            if (moveX || moveY) {\n                if (top) {\n                    win.scrollBy(moveX, moveY);\n                }\n                else {\n                    let movedX = 0, movedY = 0;\n                    if (moveY) {\n                        let start = cur.scrollTop;\n                        cur.scrollTop += moveY / scaleY;\n                        movedY = (cur.scrollTop - start) * scaleY;\n                    }\n                    if (moveX) {\n                        let start = cur.scrollLeft;\n                        cur.scrollLeft += moveX / scaleX;\n                        movedX = (cur.scrollLeft - start) * scaleX;\n                    }\n                    rect = { left: rect.left - movedX, top: rect.top - movedY,\n                        right: rect.right - movedX, bottom: rect.bottom - movedY };\n                    if (movedX && Math.abs(movedX - moveX) < 1)\n                        x = \"nearest\";\n                    if (movedY && Math.abs(movedY - moveY) < 1)\n                        y = \"nearest\";\n                }\n            }\n            if (top)\n                break;\n            if (rect.top < bounding.top || rect.bottom > bounding.bottom ||\n                rect.left < bounding.left || rect.right > bounding.right)\n                rect = { left: Math.max(rect.left, bounding.left), right: Math.min(rect.right, bounding.right),\n                    top: Math.max(rect.top, bounding.top), bottom: Math.min(rect.bottom, bounding.bottom) };\n            cur = cur.assignedSlot || cur.parentNode;\n        }\n        else if (cur.nodeType == 11) { // A shadow root\n            cur = cur.host;\n        }\n        else {\n            break;\n        }\n    }\n}\nfunction scrollableParents(dom) {\n    let doc = dom.ownerDocument, x, y;\n    for (let cur = dom.parentNode; cur;) {\n        if (cur == doc.body || (x && y)) {\n            break;\n        }\n        else if (cur.nodeType == 1) {\n            if (!y && cur.scrollHeight > cur.clientHeight)\n                y = cur;\n            if (!x && cur.scrollWidth > cur.clientWidth)\n                x = cur;\n            cur = cur.assignedSlot || cur.parentNode;\n        }\n        else if (cur.nodeType == 11) {\n            cur = cur.host;\n        }\n        else {\n            break;\n        }\n    }\n    return { x, y };\n}\nclass DOMSelectionState {\n    constructor() {\n        this.anchorNode = null;\n        this.anchorOffset = 0;\n        this.focusNode = null;\n        this.focusOffset = 0;\n    }\n    eq(domSel) {\n        return this.anchorNode == domSel.anchorNode && this.anchorOffset == domSel.anchorOffset &&\n            this.focusNode == domSel.focusNode && this.focusOffset == domSel.focusOffset;\n    }\n    setRange(range) {\n        let { anchorNode, focusNode } = range;\n        // Clip offsets to node size to avoid crashes when Safari reports bogus offsets (#1152)\n        this.set(anchorNode, Math.min(range.anchorOffset, anchorNode ? maxOffset(anchorNode) : 0), focusNode, Math.min(range.focusOffset, focusNode ? maxOffset(focusNode) : 0));\n    }\n    set(anchorNode, anchorOffset, focusNode, focusOffset) {\n        this.anchorNode = anchorNode;\n        this.anchorOffset = anchorOffset;\n        this.focusNode = focusNode;\n        this.focusOffset = focusOffset;\n    }\n}\nlet preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n    if (dom.setActive)\n        return dom.setActive(); // in IE\n    if (preventScrollSupported)\n        return dom.focus(preventScrollSupported);\n    let stack = [];\n    for (let cur = dom; cur; cur = cur.parentNode) {\n        stack.push(cur, cur.scrollTop, cur.scrollLeft);\n        if (cur == cur.ownerDocument)\n            break;\n    }\n    dom.focus(preventScrollSupported == null ? {\n        get preventScroll() {\n            preventScrollSupported = { preventScroll: true };\n            return true;\n        }\n    } : undefined);\n    if (!preventScrollSupported) {\n        preventScrollSupported = false;\n        for (let i = 0; i < stack.length;) {\n            let elt = stack[i++], top = stack[i++], left = stack[i++];\n            if (elt.scrollTop != top)\n                elt.scrollTop = top;\n            if (elt.scrollLeft != left)\n                elt.scrollLeft = left;\n        }\n    }\n}\nlet scratchRange;\nfunction textRange(node, from, to = from) {\n    let range = scratchRange || (scratchRange = document.createRange());\n    range.setEnd(node, to);\n    range.setStart(node, from);\n    return range;\n}\nfunction dispatchKey(elt, name, code, mods) {\n    let options = { key: name, code: name, keyCode: code, which: code, cancelable: true };\n    if (mods)\n        ({ altKey: options.altKey, ctrlKey: options.ctrlKey, shiftKey: options.shiftKey, metaKey: options.metaKey } = mods);\n    let down = new KeyboardEvent(\"keydown\", options);\n    down.synthetic = true;\n    elt.dispatchEvent(down);\n    let up = new KeyboardEvent(\"keyup\", options);\n    up.synthetic = true;\n    elt.dispatchEvent(up);\n    return down.defaultPrevented || up.defaultPrevented;\n}\nfunction getRoot(node) {\n    while (node) {\n        if (node && (node.nodeType == 9 || node.nodeType == 11 && node.host))\n            return node;\n        node = node.assignedSlot || node.parentNode;\n    }\n    return null;\n}\nfunction clearAttributes(node) {\n    while (node.attributes.length)\n        node.removeAttributeNode(node.attributes[0]);\n}\nfunction atElementStart(doc, selection) {\n    let node = selection.focusNode, offset = selection.focusOffset;\n    if (!node || selection.anchorNode != node || selection.anchorOffset != offset)\n        return false;\n    // Safari can report bogus offsets (#1152)\n    offset = Math.min(offset, maxOffset(node));\n    for (;;) {\n        if (offset) {\n            if (node.nodeType != 1)\n                return false;\n            let prev = node.childNodes[offset - 1];\n            if (prev.contentEditable == \"false\")\n                offset--;\n            else {\n                node = prev;\n                offset = maxOffset(node);\n            }\n        }\n        else if (node == doc) {\n            return true;\n        }\n        else {\n            offset = domIndex(node);\n            node = node.parentNode;\n        }\n    }\n}\nfunction isScrolledToBottom(elt) {\n    return elt.scrollTop > Math.max(1, elt.scrollHeight - elt.clientHeight - 4);\n}\nfunction textNodeBefore(startNode, startOffset) {\n    for (let node = startNode, offset = startOffset;;) {\n        if (node.nodeType == 3 && offset > 0) {\n            return { node: node, offset: offset };\n        }\n        else if (node.nodeType == 1 && offset > 0) {\n            if (node.contentEditable == \"false\")\n                return null;\n            node = node.childNodes[offset - 1];\n            offset = maxOffset(node);\n        }\n        else if (node.parentNode && !isBlockElement(node)) {\n            offset = domIndex(node);\n            node = node.parentNode;\n        }\n        else {\n            return null;\n        }\n    }\n}\nfunction textNodeAfter(startNode, startOffset) {\n    for (let node = startNode, offset = startOffset;;) {\n        if (node.nodeType == 3 && offset < node.nodeValue.length) {\n            return { node: node, offset: offset };\n        }\n        else if (node.nodeType == 1 && offset < node.childNodes.length) {\n            if (node.contentEditable == \"false\")\n                return null;\n            node = node.childNodes[offset];\n            offset = 0;\n        }\n        else if (node.parentNode && !isBlockElement(node)) {\n            offset = domIndex(node) + 1;\n            node = node.parentNode;\n        }\n        else {\n            return null;\n        }\n    }\n}\n\nclass DOMPos {\n    constructor(node, offset, precise = true) {\n        this.node = node;\n        this.offset = offset;\n        this.precise = precise;\n    }\n    static before(dom, precise) { return new DOMPos(dom.parentNode, domIndex(dom), precise); }\n    static after(dom, precise) { return new DOMPos(dom.parentNode, domIndex(dom) + 1, precise); }\n}\nconst noChildren = [];\nclass ContentView {\n    constructor() {\n        this.parent = null;\n        this.dom = null;\n        this.flags = 2 /* ViewFlag.NodeDirty */;\n    }\n    get overrideDOMText() { return null; }\n    get posAtStart() {\n        return this.parent ? this.parent.posBefore(this) : 0;\n    }\n    get posAtEnd() {\n        return this.posAtStart + this.length;\n    }\n    posBefore(view) {\n        let pos = this.posAtStart;\n        for (let child of this.children) {\n            if (child == view)\n                return pos;\n            pos += child.length + child.breakAfter;\n        }\n        throw new RangeError(\"Invalid child in posBefore\");\n    }\n    posAfter(view) {\n        return this.posBefore(view) + view.length;\n    }\n    sync(view, track) {\n        if (this.flags & 2 /* ViewFlag.NodeDirty */) {\n            let parent = this.dom;\n            let prev = null, next;\n            for (let child of this.children) {\n                if (child.flags & 7 /* ViewFlag.Dirty */) {\n                    if (!child.dom && (next = prev ? prev.nextSibling : parent.firstChild)) {\n                        let contentView = ContentView.get(next);\n                        if (!contentView || !contentView.parent && contentView.canReuseDOM(child))\n                            child.reuseDOM(next);\n                    }\n                    child.sync(view, track);\n                    child.flags &= ~7 /* ViewFlag.Dirty */;\n                }\n                next = prev ? prev.nextSibling : parent.firstChild;\n                if (track && !track.written && track.node == parent && next != child.dom)\n                    track.written = true;\n                if (child.dom.parentNode == parent) {\n                    while (next && next != child.dom)\n                        next = rm$1(next);\n                }\n                else {\n                    parent.insertBefore(child.dom, next);\n                }\n                prev = child.dom;\n            }\n            next = prev ? prev.nextSibling : parent.firstChild;\n            if (next && track && track.node == parent)\n                track.written = true;\n            while (next)\n                next = rm$1(next);\n        }\n        else if (this.flags & 1 /* ViewFlag.ChildDirty */) {\n            for (let child of this.children)\n                if (child.flags & 7 /* ViewFlag.Dirty */) {\n                    child.sync(view, track);\n                    child.flags &= ~7 /* ViewFlag.Dirty */;\n                }\n        }\n    }\n    reuseDOM(_dom) { }\n    localPosFromDOM(node, offset) {\n        let after;\n        if (node == this.dom) {\n            after = this.dom.childNodes[offset];\n        }\n        else {\n            let bias = maxOffset(node) == 0 ? 0 : offset == 0 ? -1 : 1;\n            for (;;) {\n                let parent = node.parentNode;\n                if (parent == this.dom)\n                    break;\n                if (bias == 0 && parent.firstChild != parent.lastChild) {\n                    if (node == parent.firstChild)\n                        bias = -1;\n                    else\n                        bias = 1;\n                }\n                node = parent;\n            }\n            if (bias < 0)\n                after = node;\n            else\n                after = node.nextSibling;\n        }\n        if (after == this.dom.firstChild)\n            return 0;\n        while (after && !ContentView.get(after))\n            after = after.nextSibling;\n        if (!after)\n            return this.length;\n        for (let i = 0, pos = 0;; i++) {\n            let child = this.children[i];\n            if (child.dom == after)\n                return pos;\n            pos += child.length + child.breakAfter;\n        }\n    }\n    domBoundsAround(from, to, offset = 0) {\n        let fromI = -1, fromStart = -1, toI = -1, toEnd = -1;\n        for (let i = 0, pos = offset, prevEnd = offset; i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (pos < from && end > to)\n                return child.domBoundsAround(from, to, pos);\n            if (end >= from && fromI == -1) {\n                fromI = i;\n                fromStart = pos;\n            }\n            if (pos > to && child.dom.parentNode == this.dom) {\n                toI = i;\n                toEnd = prevEnd;\n                break;\n            }\n            prevEnd = end;\n            pos = end + child.breakAfter;\n        }\n        return { from: fromStart, to: toEnd < 0 ? offset + this.length : toEnd,\n            startDOM: (fromI ? this.children[fromI - 1].dom.nextSibling : null) || this.dom.firstChild,\n            endDOM: toI < this.children.length && toI >= 0 ? this.children[toI].dom : null };\n    }\n    markDirty(andParent = false) {\n        this.flags |= 2 /* ViewFlag.NodeDirty */;\n        this.markParentsDirty(andParent);\n    }\n    markParentsDirty(childList) {\n        for (let parent = this.parent; parent; parent = parent.parent) {\n            if (childList)\n                parent.flags |= 2 /* ViewFlag.NodeDirty */;\n            if (parent.flags & 1 /* ViewFlag.ChildDirty */)\n                return;\n            parent.flags |= 1 /* ViewFlag.ChildDirty */;\n            childList = false;\n        }\n    }\n    setParent(parent) {\n        if (this.parent != parent) {\n            this.parent = parent;\n            if (this.flags & 7 /* ViewFlag.Dirty */)\n                this.markParentsDirty(true);\n        }\n    }\n    setDOM(dom) {\n        if (this.dom == dom)\n            return;\n        if (this.dom)\n            this.dom.cmView = null;\n        this.dom = dom;\n        dom.cmView = this;\n    }\n    get rootView() {\n        for (let v = this;;) {\n            let parent = v.parent;\n            if (!parent)\n                return v;\n            v = parent;\n        }\n    }\n    replaceChildren(from, to, children = noChildren) {\n        this.markDirty();\n        for (let i = from; i < to; i++) {\n            let child = this.children[i];\n            if (child.parent == this && children.indexOf(child) < 0)\n                child.destroy();\n        }\n        if (children.length < 250)\n            this.children.splice(from, to - from, ...children);\n        else\n            this.children = [].concat(this.children.slice(0, from), children, this.children.slice(to));\n        for (let i = 0; i < children.length; i++)\n            children[i].setParent(this);\n    }\n    ignoreMutation(_rec) { return false; }\n    ignoreEvent(_event) { return false; }\n    childCursor(pos = this.length) {\n        return new ChildCursor(this.children, pos, this.children.length);\n    }\n    childPos(pos, bias = 1) {\n        return this.childCursor().findPos(pos, bias);\n    }\n    toString() {\n        let name = this.constructor.name.replace(\"View\", \"\");\n        return name + (this.children.length ? \"(\" + this.children.join() + \")\" :\n            this.length ? \"[\" + (name == \"Text\" ? this.text : this.length) + \"]\" : \"\") +\n            (this.breakAfter ? \"#\" : \"\");\n    }\n    static get(node) { return node.cmView; }\n    get isEditable() { return true; }\n    get isWidget() { return false; }\n    get isHidden() { return false; }\n    merge(from, to, source, hasStart, openStart, openEnd) {\n        return false;\n    }\n    become(other) { return false; }\n    canReuseDOM(other) {\n        return other.constructor == this.constructor && !((this.flags | other.flags) & 8 /* ViewFlag.Composition */);\n    }\n    // When this is a zero-length view with a side, this should return a\n    // number <= 0 to indicate it is before its position, or a\n    // number > 0 when after its position.\n    getSide() { return 0; }\n    destroy() {\n        for (let child of this.children)\n            if (child.parent == this)\n                child.destroy();\n        this.parent = null;\n    }\n}\nContentView.prototype.breakAfter = 0;\n// Remove a DOM node and return its next sibling.\nfunction rm$1(dom) {\n    let next = dom.nextSibling;\n    dom.parentNode.removeChild(dom);\n    return next;\n}\nclass ChildCursor {\n    constructor(children, pos, i) {\n        this.children = children;\n        this.pos = pos;\n        this.i = i;\n        this.off = 0;\n    }\n    findPos(pos, bias = 1) {\n        for (;;) {\n            if (pos > this.pos || pos == this.pos &&\n                (bias > 0 || this.i == 0 || this.children[this.i - 1].breakAfter)) {\n                this.off = pos - this.pos;\n                return this;\n            }\n            let next = this.children[--this.i];\n            this.pos -= next.length + next.breakAfter;\n        }\n    }\n}\nfunction replaceRange(parent, fromI, fromOff, toI, toOff, insert, breakAtStart, openStart, openEnd) {\n    let { children } = parent;\n    let before = children.length ? children[fromI] : null;\n    let last = insert.length ? insert[insert.length - 1] : null;\n    let breakAtEnd = last ? last.breakAfter : breakAtStart;\n    // Change within a single child\n    if (fromI == toI && before && !breakAtStart && !breakAtEnd && insert.length < 2 &&\n        before.merge(fromOff, toOff, insert.length ? last : null, fromOff == 0, openStart, openEnd))\n        return;\n    if (toI < children.length) {\n        let after = children[toI];\n        // Make sure the end of the child after the update is preserved in `after`\n        if (after && (toOff < after.length || after.breakAfter && (last === null || last === void 0 ? void 0 : last.breakAfter))) {\n            // If we're splitting a child, separate part of it to avoid that\n            // being mangled when updating the child before the update.\n            if (fromI == toI) {\n                after = after.split(toOff);\n                toOff = 0;\n            }\n            // If the element after the replacement should be merged with\n            // the last replacing element, update `content`\n            if (!breakAtEnd && last && after.merge(0, toOff, last, true, 0, openEnd)) {\n                insert[insert.length - 1] = after;\n            }\n            else {\n                // Remove the start of the after element, if necessary, and\n                // add it to `content`.\n                if (toOff || after.children.length && !after.children[0].length)\n                    after.merge(0, toOff, null, false, 0, openEnd);\n                insert.push(after);\n            }\n        }\n        else if (after === null || after === void 0 ? void 0 : after.breakAfter) {\n            // The element at `toI` is entirely covered by this range.\n            // Preserve its line break, if any.\n            if (last)\n                last.breakAfter = 1;\n            else\n                breakAtStart = 1;\n        }\n        // Since we've handled the next element from the current elements\n        // now, make sure `toI` points after that.\n        toI++;\n    }\n    if (before) {\n        before.breakAfter = breakAtStart;\n        if (fromOff > 0) {\n            if (!breakAtStart && insert.length && before.merge(fromOff, before.length, insert[0], false, openStart, 0)) {\n                before.breakAfter = insert.shift().breakAfter;\n            }\n            else if (fromOff < before.length || before.children.length && before.children[before.children.length - 1].length == 0) {\n                before.merge(fromOff, before.length, null, false, openStart, 0);\n            }\n            fromI++;\n        }\n    }\n    // Try to merge widgets on the boundaries of the replacement\n    while (fromI < toI && insert.length) {\n        if (children[toI - 1].become(insert[insert.length - 1])) {\n            toI--;\n            insert.pop();\n            openEnd = insert.length ? 0 : openStart;\n        }\n        else if (children[fromI].become(insert[0])) {\n            fromI++;\n            insert.shift();\n            openStart = insert.length ? 0 : openEnd;\n        }\n        else {\n            break;\n        }\n    }\n    if (!insert.length && fromI && toI < children.length && !children[fromI - 1].breakAfter &&\n        children[toI].merge(0, 0, children[fromI - 1], false, openStart, openEnd))\n        fromI--;\n    if (fromI < toI || insert.length)\n        parent.replaceChildren(fromI, toI, insert);\n}\nfunction mergeChildrenInto(parent, from, to, insert, openStart, openEnd) {\n    let cur = parent.childCursor();\n    let { i: toI, off: toOff } = cur.findPos(to, 1);\n    let { i: fromI, off: fromOff } = cur.findPos(from, -1);\n    let dLen = from - to;\n    for (let view of insert)\n        dLen += view.length;\n    parent.length += dLen;\n    replaceRange(parent, fromI, fromOff, toI, toOff, insert, 0, openStart, openEnd);\n}\n\nlet nav = typeof navigator != \"undefined\" ? navigator : { userAgent: \"\", vendor: \"\", platform: \"\" };\nlet doc = typeof document != \"undefined\" ? document : { documentElement: { style: {} } };\nconst ie_edge = /*@__PURE__*//Edge\\/(\\d+)/.exec(nav.userAgent);\nconst ie_upto10 = /*@__PURE__*//MSIE \\d/.test(nav.userAgent);\nconst ie_11up = /*@__PURE__*//Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(nav.userAgent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst gecko = !ie && /*@__PURE__*//gecko\\/(\\d+)/i.test(nav.userAgent);\nconst chrome = !ie && /*@__PURE__*//Chrome\\/(\\d+)/.exec(nav.userAgent);\nconst webkit = \"webkitFontSmoothing\" in doc.documentElement.style;\nconst safari = !ie && /*@__PURE__*//Apple Computer/.test(nav.vendor);\nconst ios = safari && (/*@__PURE__*//Mobile\\/\\w+/.test(nav.userAgent) || nav.maxTouchPoints > 2);\nvar browser = {\n    mac: ios || /*@__PURE__*//Mac/.test(nav.platform),\n    windows: /*@__PURE__*//Win/.test(nav.platform),\n    linux: /*@__PURE__*//Linux|X11/.test(nav.platform),\n    ie,\n    ie_version: ie_upto10 ? doc.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0,\n    gecko,\n    gecko_version: gecko ? +(/*@__PURE__*//Firefox\\/(\\d+)/.exec(nav.userAgent) || [0, 0])[1] : 0,\n    chrome: !!chrome,\n    chrome_version: chrome ? +chrome[1] : 0,\n    ios,\n    android: /*@__PURE__*//Android\\b/.test(nav.userAgent),\n    webkit,\n    safari,\n    webkit_version: webkit ? +(/*@__PURE__*//\\bAppleWebKit\\/(\\d+)/.exec(nav.userAgent) || [0, 0])[1] : 0,\n    tabSize: doc.documentElement.style.tabSize != null ? \"tab-size\" : \"-moz-tab-size\"\n};\n\nconst MaxJoinLen = 256;\nclass TextView extends ContentView {\n    constructor(text) {\n        super();\n        this.text = text;\n    }\n    get length() { return this.text.length; }\n    createDOM(textDOM) {\n        this.setDOM(textDOM || document.createTextNode(this.text));\n    }\n    sync(view, track) {\n        if (!this.dom)\n            this.createDOM();\n        if (this.dom.nodeValue != this.text) {\n            if (track && track.node == this.dom)\n                track.written = true;\n            this.dom.nodeValue = this.text;\n        }\n    }\n    reuseDOM(dom) {\n        if (dom.nodeType == 3)\n            this.createDOM(dom);\n    }\n    merge(from, to, source) {\n        if ((this.flags & 8 /* ViewFlag.Composition */) ||\n            source && (!(source instanceof TextView) ||\n                this.length - (to - from) + source.length > MaxJoinLen ||\n                (source.flags & 8 /* ViewFlag.Composition */)))\n            return false;\n        this.text = this.text.slice(0, from) + (source ? source.text : \"\") + this.text.slice(to);\n        this.markDirty();\n        return true;\n    }\n    split(from) {\n        let result = new TextView(this.text.slice(from));\n        this.text = this.text.slice(0, from);\n        this.markDirty();\n        result.flags |= this.flags & 8 /* ViewFlag.Composition */;\n        return result;\n    }\n    localPosFromDOM(node, offset) {\n        return node == this.dom ? offset : offset ? this.text.length : 0;\n    }\n    domAtPos(pos) { return new DOMPos(this.dom, pos); }\n    domBoundsAround(_from, _to, offset) {\n        return { from: offset, to: offset + this.length, startDOM: this.dom, endDOM: this.dom.nextSibling };\n    }\n    coordsAt(pos, side) {\n        return textCoords(this.dom, pos, side);\n    }\n}\nclass MarkView extends ContentView {\n    constructor(mark, children = [], length = 0) {\n        super();\n        this.mark = mark;\n        this.children = children;\n        this.length = length;\n        for (let ch of children)\n            ch.setParent(this);\n    }\n    setAttrs(dom) {\n        clearAttributes(dom);\n        if (this.mark.class)\n            dom.className = this.mark.class;\n        if (this.mark.attrs)\n            for (let name in this.mark.attrs)\n                dom.setAttribute(name, this.mark.attrs[name]);\n        return dom;\n    }\n    canReuseDOM(other) {\n        return super.canReuseDOM(other) && !((this.flags | other.flags) & 8 /* ViewFlag.Composition */);\n    }\n    reuseDOM(node) {\n        if (node.nodeName == this.mark.tagName.toUpperCase()) {\n            this.setDOM(node);\n            this.flags |= 4 /* ViewFlag.AttrsDirty */ | 2 /* ViewFlag.NodeDirty */;\n        }\n    }\n    sync(view, track) {\n        if (!this.dom)\n            this.setDOM(this.setAttrs(document.createElement(this.mark.tagName)));\n        else if (this.flags & 4 /* ViewFlag.AttrsDirty */)\n            this.setAttrs(this.dom);\n        super.sync(view, track);\n    }\n    merge(from, to, source, _hasStart, openStart, openEnd) {\n        if (source && (!(source instanceof MarkView && source.mark.eq(this.mark)) ||\n            (from && openStart <= 0) || (to < this.length && openEnd <= 0)))\n            return false;\n        mergeChildrenInto(this, from, to, source ? source.children.slice() : [], openStart - 1, openEnd - 1);\n        this.markDirty();\n        return true;\n    }\n    split(from) {\n        let result = [], off = 0, detachFrom = -1, i = 0;\n        for (let elt of this.children) {\n            let end = off + elt.length;\n            if (end > from)\n                result.push(off < from ? elt.split(from - off) : elt);\n            if (detachFrom < 0 && off >= from)\n                detachFrom = i;\n            off = end;\n            i++;\n        }\n        let length = this.length - from;\n        this.length = from;\n        if (detachFrom > -1) {\n            this.children.length = detachFrom;\n            this.markDirty();\n        }\n        return new MarkView(this.mark, result, length);\n    }\n    domAtPos(pos) {\n        return inlineDOMAtPos(this, pos);\n    }\n    coordsAt(pos, side) {\n        return coordsInChildren(this, pos, side);\n    }\n}\nfunction textCoords(text, pos, side) {\n    let length = text.nodeValue.length;\n    if (pos > length)\n        pos = length;\n    let from = pos, to = pos, flatten = 0;\n    if (pos == 0 && side < 0 || pos == length && side >= 0) {\n        if (!(browser.chrome || browser.gecko)) { // These browsers reliably return valid rectangles for empty ranges\n            if (pos) {\n                from--;\n                flatten = 1;\n            } // FIXME this is wrong in RTL text\n            else if (to < length) {\n                to++;\n                flatten = -1;\n            }\n        }\n    }\n    else {\n        if (side < 0)\n            from--;\n        else if (to < length)\n            to++;\n    }\n    let rects = textRange(text, from, to).getClientRects();\n    if (!rects.length)\n        return null;\n    let rect = rects[(flatten ? flatten < 0 : side >= 0) ? 0 : rects.length - 1];\n    if (browser.safari && !flatten && rect.width == 0)\n        rect = Array.prototype.find.call(rects, r => r.width) || rect;\n    return flatten ? flattenRect(rect, flatten < 0) : rect || null;\n}\n// Also used for collapsed ranges that don't have a placeholder widget!\nclass WidgetView extends ContentView {\n    static create(widget, length, side) {\n        return new WidgetView(widget, length, side);\n    }\n    constructor(widget, length, side) {\n        super();\n        this.widget = widget;\n        this.length = length;\n        this.side = side;\n        this.prevWidget = null;\n    }\n    split(from) {\n        let result = WidgetView.create(this.widget, this.length - from, this.side);\n        this.length -= from;\n        return result;\n    }\n    sync(view) {\n        if (!this.dom || !this.widget.updateDOM(this.dom, view)) {\n            if (this.dom && this.prevWidget)\n                this.prevWidget.destroy(this.dom);\n            this.prevWidget = null;\n            this.setDOM(this.widget.toDOM(view));\n            if (!this.widget.editable)\n                this.dom.contentEditable = \"false\";\n        }\n    }\n    getSide() { return this.side; }\n    merge(from, to, source, hasStart, openStart, openEnd) {\n        if (source && (!(source instanceof WidgetView) || !this.widget.compare(source.widget) ||\n            from > 0 && openStart <= 0 || to < this.length && openEnd <= 0))\n            return false;\n        this.length = from + (source ? source.length : 0) + (this.length - to);\n        return true;\n    }\n    become(other) {\n        if (other instanceof WidgetView && other.side == this.side &&\n            this.widget.constructor == other.widget.constructor) {\n            if (!this.widget.compare(other.widget))\n                this.markDirty(true);\n            if (this.dom && !this.prevWidget)\n                this.prevWidget = this.widget;\n            this.widget = other.widget;\n            this.length = other.length;\n            return true;\n        }\n        return false;\n    }\n    ignoreMutation() { return true; }\n    ignoreEvent(event) { return this.widget.ignoreEvent(event); }\n    get overrideDOMText() {\n        if (this.length == 0)\n            return Text.empty;\n        let top = this;\n        while (top.parent)\n            top = top.parent;\n        let { view } = top, text = view && view.state.doc, start = this.posAtStart;\n        return text ? text.slice(start, start + this.length) : Text.empty;\n    }\n    domAtPos(pos) {\n        return (this.length ? pos == 0 : this.side > 0)\n            ? DOMPos.before(this.dom)\n            : DOMPos.after(this.dom, pos == this.length);\n    }\n    domBoundsAround() { return null; }\n    coordsAt(pos, side) {\n        let custom = this.widget.coordsAt(this.dom, pos, side);\n        if (custom)\n            return custom;\n        let rects = this.dom.getClientRects(), rect = null;\n        if (!rects.length)\n            return null;\n        let fromBack = this.side ? this.side < 0 : pos > 0;\n        for (let i = fromBack ? rects.length - 1 : 0;; i += (fromBack ? -1 : 1)) {\n            rect = rects[i];\n            if (pos > 0 ? i == 0 : i == rects.length - 1 || rect.top < rect.bottom)\n                break;\n        }\n        return flattenRect(rect, !fromBack);\n    }\n    get isEditable() { return false; }\n    get isWidget() { return true; }\n    get isHidden() { return this.widget.isHidden; }\n    destroy() {\n        super.destroy();\n        if (this.dom)\n            this.widget.destroy(this.dom);\n    }\n}\n// These are drawn around uneditable widgets to avoid a number of\n// browser bugs that show up when the cursor is directly next to\n// uneditable inline content.\nclass WidgetBufferView extends ContentView {\n    constructor(side) {\n        super();\n        this.side = side;\n    }\n    get length() { return 0; }\n    merge() { return false; }\n    become(other) {\n        return other instanceof WidgetBufferView && other.side == this.side;\n    }\n    split() { return new WidgetBufferView(this.side); }\n    sync() {\n        if (!this.dom) {\n            let dom = document.createElement(\"img\");\n            dom.className = \"cm-widgetBuffer\";\n            dom.setAttribute(\"aria-hidden\", \"true\");\n            this.setDOM(dom);\n        }\n    }\n    getSide() { return this.side; }\n    domAtPos(pos) { return this.side > 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom); }\n    localPosFromDOM() { return 0; }\n    domBoundsAround() { return null; }\n    coordsAt(pos) {\n        return this.dom.getBoundingClientRect();\n    }\n    get overrideDOMText() {\n        return Text.empty;\n    }\n    get isHidden() { return true; }\n}\nTextView.prototype.children = WidgetView.prototype.children = WidgetBufferView.prototype.children = noChildren;\nfunction inlineDOMAtPos(parent, pos) {\n    let dom = parent.dom, { children } = parent, i = 0;\n    for (let off = 0; i < children.length; i++) {\n        let child = children[i], end = off + child.length;\n        if (end == off && child.getSide() <= 0)\n            continue;\n        if (pos > off && pos < end && child.dom.parentNode == dom)\n            return child.domAtPos(pos - off);\n        if (pos <= off)\n            break;\n        off = end;\n    }\n    for (let j = i; j > 0; j--) {\n        let prev = children[j - 1];\n        if (prev.dom.parentNode == dom)\n            return prev.domAtPos(prev.length);\n    }\n    for (let j = i; j < children.length; j++) {\n        let next = children[j];\n        if (next.dom.parentNode == dom)\n            return next.domAtPos(0);\n    }\n    return new DOMPos(dom, 0);\n}\n// Assumes `view`, if a mark view, has precisely 1 child.\nfunction joinInlineInto(parent, view, open) {\n    let last, { children } = parent;\n    if (open > 0 && view instanceof MarkView && children.length &&\n        (last = children[children.length - 1]) instanceof MarkView && last.mark.eq(view.mark)) {\n        joinInlineInto(last, view.children[0], open - 1);\n    }\n    else {\n        children.push(view);\n        view.setParent(parent);\n    }\n    parent.length += view.length;\n}\nfunction coordsInChildren(view, pos, side) {\n    let before = null, beforePos = -1, after = null, afterPos = -1;\n    function scan(view, pos) {\n        for (let i = 0, off = 0; i < view.children.length && off <= pos; i++) {\n            let child = view.children[i], end = off + child.length;\n            if (end >= pos) {\n                if (child.children.length) {\n                    scan(child, pos - off);\n                }\n                else if ((!after || after.isHidden && (side > 0 || onSameLine(after, child))) &&\n                    (end > pos || off == end && child.getSide() > 0)) {\n                    after = child;\n                    afterPos = pos - off;\n                }\n                else if (off < pos || (off == end && child.getSide() < 0) && !child.isHidden) {\n                    before = child;\n                    beforePos = pos - off;\n                }\n            }\n            off = end;\n        }\n    }\n    scan(view, pos);\n    let target = (side < 0 ? before : after) || before || after;\n    if (target)\n        return target.coordsAt(Math.max(0, target == before ? beforePos : afterPos), side);\n    return fallbackRect(view);\n}\nfunction fallbackRect(view) {\n    let last = view.dom.lastChild;\n    if (!last)\n        return view.dom.getBoundingClientRect();\n    let rects = clientRectsFor(last);\n    return rects[rects.length - 1] || null;\n}\nfunction onSameLine(a, b) {\n    let posA = a.coordsAt(0, 1), posB = b.coordsAt(0, 1);\n    return posA && posB && posB.top < posA.bottom;\n}\n\nfunction combineAttrs(source, target) {\n    for (let name in source) {\n        if (name == \"class\" && target.class)\n            target.class += \" \" + source.class;\n        else if (name == \"style\" && target.style)\n            target.style += \";\" + source.style;\n        else\n            target[name] = source[name];\n    }\n    return target;\n}\nconst noAttrs = /*@__PURE__*/Object.create(null);\nfunction attrsEq(a, b, ignore) {\n    if (a == b)\n        return true;\n    if (!a)\n        a = noAttrs;\n    if (!b)\n        b = noAttrs;\n    let keysA = Object.keys(a), keysB = Object.keys(b);\n    if (keysA.length - (ignore && keysA.indexOf(ignore) > -1 ? 1 : 0) !=\n        keysB.length - (ignore && keysB.indexOf(ignore) > -1 ? 1 : 0))\n        return false;\n    for (let key of keysA) {\n        if (key != ignore && (keysB.indexOf(key) == -1 || a[key] !== b[key]))\n            return false;\n    }\n    return true;\n}\nfunction updateAttrs(dom, prev, attrs) {\n    let changed = false;\n    if (prev)\n        for (let name in prev)\n            if (!(attrs && name in attrs)) {\n                changed = true;\n                if (name == \"style\")\n                    dom.style.cssText = \"\";\n                else\n                    dom.removeAttribute(name);\n            }\n    if (attrs)\n        for (let name in attrs)\n            if (!(prev && prev[name] == attrs[name])) {\n                changed = true;\n                if (name == \"style\")\n                    dom.style.cssText = attrs[name];\n                else\n                    dom.setAttribute(name, attrs[name]);\n            }\n    return changed;\n}\nfunction getAttrs(dom) {\n    let attrs = Object.create(null);\n    for (let i = 0; i < dom.attributes.length; i++) {\n        let attr = dom.attributes[i];\n        attrs[attr.name] = attr.value;\n    }\n    return attrs;\n}\n\n/**\nWidgets added to the content are described by subclasses of this\nclass. Using a description object like that makes it possible to\ndelay creating of the DOM structure for a widget until it is\nneeded, and to avoid redrawing widgets even if the decorations\nthat define them are recreated.\n*/\nclass WidgetType {\n    /**\n    Compare this instance to another instance of the same type.\n    (TypeScript can't express this, but only instances of the same\n    specific class will be passed to this method.) This is used to\n    avoid redrawing widgets when they are replaced by a new\n    decoration of the same type. The default implementation just\n    returns `false`, which will cause new instances of the widget to\n    always be redrawn.\n    */\n    eq(widget) { return false; }\n    /**\n    Update a DOM element created by a widget of the same type (but\n    different, non-`eq` content) to reflect this widget. May return\n    true to indicate that it could update, false to indicate it\n    couldn't (in which case the widget will be redrawn). The default\n    implementation just returns false.\n    */\n    updateDOM(dom, view) { return false; }\n    /**\n    @internal\n    */\n    compare(other) {\n        return this == other || this.constructor == other.constructor && this.eq(other);\n    }\n    /**\n    The estimated height this widget will have, to be used when\n    estimating the height of content that hasn't been drawn. May\n    return -1 to indicate you don't know. The default implementation\n    returns -1.\n    */\n    get estimatedHeight() { return -1; }\n    /**\n    For inline widgets that are displayed inline (as opposed to\n    `inline-block`) and introduce line breaks (through `<br>` tags\n    or textual newlines), this must indicate the amount of line\n    breaks they introduce. Defaults to 0.\n    */\n    get lineBreaks() { return 0; }\n    /**\n    Can be used to configure which kinds of events inside the widget\n    should be ignored by the editor. The default is to ignore all\n    events.\n    */\n    ignoreEvent(event) { return true; }\n    /**\n    Override the way screen coordinates for positions at/in the\n    widget are found. `pos` will be the offset into the widget, and\n    `side` the side of the position that is being queried—less than\n    zero for before, greater than zero for after, and zero for\n    directly at that position.\n    */\n    coordsAt(dom, pos, side) { return null; }\n    /**\n    @internal\n    */\n    get isHidden() { return false; }\n    /**\n    @internal\n    */\n    get editable() { return false; }\n    /**\n    This is called when the an instance of the widget is removed\n    from the editor view.\n    */\n    destroy(dom) { }\n}\n/**\nThe different types of blocks that can occur in an editor view.\n*/\nvar BlockType = /*@__PURE__*/(function (BlockType) {\n    /**\n    A line of text.\n    */\n    BlockType[BlockType[\"Text\"] = 0] = \"Text\";\n    /**\n    A block widget associated with the position after it.\n    */\n    BlockType[BlockType[\"WidgetBefore\"] = 1] = \"WidgetBefore\";\n    /**\n    A block widget associated with the position before it.\n    */\n    BlockType[BlockType[\"WidgetAfter\"] = 2] = \"WidgetAfter\";\n    /**\n    A block widget [replacing](https://codemirror.net/6/docs/ref/#view.Decoration^replace) a range of content.\n    */\n    BlockType[BlockType[\"WidgetRange\"] = 3] = \"WidgetRange\";\nreturn BlockType})(BlockType || (BlockType = {}));\n/**\nA decoration provides information on how to draw or style a piece\nof content. You'll usually use it wrapped in a\n[`Range`](https://codemirror.net/6/docs/ref/#state.Range), which adds a start and end position.\n@nonabstract\n*/\nclass Decoration extends RangeValue {\n    constructor(\n    /**\n    @internal\n    */\n    startSide, \n    /**\n    @internal\n    */\n    endSide, \n    /**\n    @internal\n    */\n    widget, \n    /**\n    The config object used to create this decoration. You can\n    include additional properties in there to store metadata about\n    your decoration.\n    */\n    spec) {\n        super();\n        this.startSide = startSide;\n        this.endSide = endSide;\n        this.widget = widget;\n        this.spec = spec;\n    }\n    /**\n    @internal\n    */\n    get heightRelevant() { return false; }\n    /**\n    Create a mark decoration, which influences the styling of the\n    content in its range. Nested mark decorations will cause nested\n    DOM elements to be created. Nesting order is determined by\n    precedence of the [facet](https://codemirror.net/6/docs/ref/#view.EditorView^decorations), with\n    the higher-precedence decorations creating the inner DOM nodes.\n    Such elements are split on line boundaries and on the boundaries\n    of lower-precedence decorations.\n    */\n    static mark(spec) {\n        return new MarkDecoration(spec);\n    }\n    /**\n    Create a widget decoration, which displays a DOM element at the\n    given position.\n    */\n    static widget(spec) {\n        let side = Math.max(-10000, Math.min(10000, spec.side || 0)), block = !!spec.block;\n        side += (block && !spec.inlineOrder)\n            ? (side > 0 ? 300000000 /* Side.BlockAfter */ : -400000000 /* Side.BlockBefore */)\n            : (side > 0 ? 100000000 /* Side.InlineAfter */ : -100000000 /* Side.InlineBefore */);\n        return new PointDecoration(spec, side, side, block, spec.widget || null, false);\n    }\n    /**\n    Create a replace decoration which replaces the given range with\n    a widget, or simply hides it.\n    */\n    static replace(spec) {\n        let block = !!spec.block, startSide, endSide;\n        if (spec.isBlockGap) {\n            startSide = -500000000 /* Side.GapStart */;\n            endSide = 400000000 /* Side.GapEnd */;\n        }\n        else {\n            let { start, end } = getInclusive(spec, block);\n            startSide = (start ? (block ? -300000000 /* Side.BlockIncStart */ : -1 /* Side.InlineIncStart */) : 500000000 /* Side.NonIncStart */) - 1;\n            endSide = (end ? (block ? 200000000 /* Side.BlockIncEnd */ : 1 /* Side.InlineIncEnd */) : -600000000 /* Side.NonIncEnd */) + 1;\n        }\n        return new PointDecoration(spec, startSide, endSide, block, spec.widget || null, true);\n    }\n    /**\n    Create a line decoration, which can add DOM attributes to the\n    line starting at the given position.\n    */\n    static line(spec) {\n        return new LineDecoration(spec);\n    }\n    /**\n    Build a [`DecorationSet`](https://codemirror.net/6/docs/ref/#view.DecorationSet) from the given\n    decorated range or ranges. If the ranges aren't already sorted,\n    pass `true` for `sort` to make the library sort them for you.\n    */\n    static set(of, sort = false) {\n        return RangeSet.of(of, sort);\n    }\n    /**\n    @internal\n    */\n    hasHeight() { return this.widget ? this.widget.estimatedHeight > -1 : false; }\n}\n/**\nThe empty set of decorations.\n*/\nDecoration.none = RangeSet.empty;\nclass MarkDecoration extends Decoration {\n    constructor(spec) {\n        let { start, end } = getInclusive(spec);\n        super(start ? -1 /* Side.InlineIncStart */ : 500000000 /* Side.NonIncStart */, end ? 1 /* Side.InlineIncEnd */ : -600000000 /* Side.NonIncEnd */, null, spec);\n        this.tagName = spec.tagName || \"span\";\n        this.class = spec.class || \"\";\n        this.attrs = spec.attributes || null;\n    }\n    eq(other) {\n        var _a, _b;\n        return this == other ||\n            other instanceof MarkDecoration &&\n                this.tagName == other.tagName &&\n                (this.class || ((_a = this.attrs) === null || _a === void 0 ? void 0 : _a.class)) == (other.class || ((_b = other.attrs) === null || _b === void 0 ? void 0 : _b.class)) &&\n                attrsEq(this.attrs, other.attrs, \"class\");\n    }\n    range(from, to = from) {\n        if (from >= to)\n            throw new RangeError(\"Mark decorations may not be empty\");\n        return super.range(from, to);\n    }\n}\nMarkDecoration.prototype.point = false;\nclass LineDecoration extends Decoration {\n    constructor(spec) {\n        super(-200000000 /* Side.Line */, -200000000 /* Side.Line */, null, spec);\n    }\n    eq(other) {\n        return other instanceof LineDecoration &&\n            this.spec.class == other.spec.class &&\n            attrsEq(this.spec.attributes, other.spec.attributes);\n    }\n    range(from, to = from) {\n        if (to != from)\n            throw new RangeError(\"Line decoration ranges must be zero-length\");\n        return super.range(from, to);\n    }\n}\nLineDecoration.prototype.mapMode = MapMode.TrackBefore;\nLineDecoration.prototype.point = true;\nclass PointDecoration extends Decoration {\n    constructor(spec, startSide, endSide, block, widget, isReplace) {\n        super(startSide, endSide, widget, spec);\n        this.block = block;\n        this.isReplace = isReplace;\n        this.mapMode = !block ? MapMode.TrackDel : startSide <= 0 ? MapMode.TrackBefore : MapMode.TrackAfter;\n    }\n    // Only relevant when this.block == true\n    get type() {\n        return this.startSide != this.endSide ? BlockType.WidgetRange\n            : this.startSide <= 0 ? BlockType.WidgetBefore : BlockType.WidgetAfter;\n    }\n    get heightRelevant() {\n        return this.block || !!this.widget && (this.widget.estimatedHeight >= 5 || this.widget.lineBreaks > 0);\n    }\n    eq(other) {\n        return other instanceof PointDecoration &&\n            widgetsEq(this.widget, other.widget) &&\n            this.block == other.block &&\n            this.startSide == other.startSide && this.endSide == other.endSide;\n    }\n    range(from, to = from) {\n        if (this.isReplace && (from > to || (from == to && this.startSide > 0 && this.endSide <= 0)))\n            throw new RangeError(\"Invalid range for replacement decoration\");\n        if (!this.isReplace && to != from)\n            throw new RangeError(\"Widget decorations can only have zero-length ranges\");\n        return super.range(from, to);\n    }\n}\nPointDecoration.prototype.point = true;\nfunction getInclusive(spec, block = false) {\n    let { inclusiveStart: start, inclusiveEnd: end } = spec;\n    if (start == null)\n        start = spec.inclusive;\n    if (end == null)\n        end = spec.inclusive;\n    return { start: start !== null && start !== void 0 ? start : block, end: end !== null && end !== void 0 ? end : block };\n}\nfunction widgetsEq(a, b) {\n    return a == b || !!(a && b && a.compare(b));\n}\nfunction addRange(from, to, ranges, margin = 0) {\n    let last = ranges.length - 1;\n    if (last >= 0 && ranges[last] + margin >= from)\n        ranges[last] = Math.max(ranges[last], to);\n    else\n        ranges.push(from, to);\n}\n\nclass LineView extends ContentView {\n    constructor() {\n        super(...arguments);\n        this.children = [];\n        this.length = 0;\n        this.prevAttrs = undefined;\n        this.attrs = null;\n        this.breakAfter = 0;\n    }\n    // Consumes source\n    merge(from, to, source, hasStart, openStart, openEnd) {\n        if (source) {\n            if (!(source instanceof LineView))\n                return false;\n            if (!this.dom)\n                source.transferDOM(this); // Reuse source.dom when appropriate\n        }\n        if (hasStart)\n            this.setDeco(source ? source.attrs : null);\n        mergeChildrenInto(this, from, to, source ? source.children.slice() : [], openStart, openEnd);\n        return true;\n    }\n    split(at) {\n        let end = new LineView;\n        end.breakAfter = this.breakAfter;\n        if (this.length == 0)\n            return end;\n        let { i, off } = this.childPos(at);\n        if (off) {\n            end.append(this.children[i].split(off), 0);\n            this.children[i].merge(off, this.children[i].length, null, false, 0, 0);\n            i++;\n        }\n        for (let j = i; j < this.children.length; j++)\n            end.append(this.children[j], 0);\n        while (i > 0 && this.children[i - 1].length == 0)\n            this.children[--i].destroy();\n        this.children.length = i;\n        this.markDirty();\n        this.length = at;\n        return end;\n    }\n    transferDOM(other) {\n        if (!this.dom)\n            return;\n        this.markDirty();\n        other.setDOM(this.dom);\n        other.prevAttrs = this.prevAttrs === undefined ? this.attrs : this.prevAttrs;\n        this.prevAttrs = undefined;\n        this.dom = null;\n    }\n    setDeco(attrs) {\n        if (!attrsEq(this.attrs, attrs)) {\n            if (this.dom) {\n                this.prevAttrs = this.attrs;\n                this.markDirty();\n            }\n            this.attrs = attrs;\n        }\n    }\n    append(child, openStart) {\n        joinInlineInto(this, child, openStart);\n    }\n    // Only called when building a line view in ContentBuilder\n    addLineDeco(deco) {\n        let attrs = deco.spec.attributes, cls = deco.spec.class;\n        if (attrs)\n            this.attrs = combineAttrs(attrs, this.attrs || {});\n        if (cls)\n            this.attrs = combineAttrs({ class: cls }, this.attrs || {});\n    }\n    domAtPos(pos) {\n        return inlineDOMAtPos(this, pos);\n    }\n    reuseDOM(node) {\n        if (node.nodeName == \"DIV\") {\n            this.setDOM(node);\n            this.flags |= 4 /* ViewFlag.AttrsDirty */ | 2 /* ViewFlag.NodeDirty */;\n        }\n    }\n    sync(view, track) {\n        var _a;\n        if (!this.dom) {\n            this.setDOM(document.createElement(\"div\"));\n            this.dom.className = \"cm-line\";\n            this.prevAttrs = this.attrs ? null : undefined;\n        }\n        else if (this.flags & 4 /* ViewFlag.AttrsDirty */) {\n            clearAttributes(this.dom);\n            this.dom.className = \"cm-line\";\n            this.prevAttrs = this.attrs ? null : undefined;\n        }\n        if (this.prevAttrs !== undefined) {\n            updateAttrs(this.dom, this.prevAttrs, this.attrs);\n            this.dom.classList.add(\"cm-line\");\n            this.prevAttrs = undefined;\n        }\n        super.sync(view, track);\n        let last = this.dom.lastChild;\n        while (last && ContentView.get(last) instanceof MarkView)\n            last = last.lastChild;\n        if (!last || !this.length ||\n            last.nodeName != \"BR\" && ((_a = ContentView.get(last)) === null || _a === void 0 ? void 0 : _a.isEditable) == false &&\n                (!browser.ios || !this.children.some(ch => ch instanceof TextView))) {\n            let hack = document.createElement(\"BR\");\n            hack.cmIgnore = true;\n            this.dom.appendChild(hack);\n        }\n    }\n    measureTextSize() {\n        if (this.children.length == 0 || this.length > 20)\n            return null;\n        let totalWidth = 0, textHeight;\n        for (let child of this.children) {\n            if (!(child instanceof TextView) || /[^ -~]/.test(child.text))\n                return null;\n            let rects = clientRectsFor(child.dom);\n            if (rects.length != 1)\n                return null;\n            totalWidth += rects[0].width;\n            textHeight = rects[0].height;\n        }\n        return !totalWidth ? null : {\n            lineHeight: this.dom.getBoundingClientRect().height,\n            charWidth: totalWidth / this.length,\n            textHeight\n        };\n    }\n    coordsAt(pos, side) {\n        let rect = coordsInChildren(this, pos, side);\n        // Correct rectangle height for empty lines when the returned\n        // height is larger than the text height.\n        if (!this.children.length && rect && this.parent) {\n            let { heightOracle } = this.parent.view.viewState, height = rect.bottom - rect.top;\n            if (Math.abs(height - heightOracle.lineHeight) < 2 && heightOracle.textHeight < height) {\n                let dist = (height - heightOracle.textHeight) / 2;\n                return { top: rect.top + dist, bottom: rect.bottom - dist, left: rect.left, right: rect.left };\n            }\n        }\n        return rect;\n    }\n    become(other) {\n        return other instanceof LineView && this.children.length == 0 && other.children.length == 0 &&\n            attrsEq(this.attrs, other.attrs) && this.breakAfter == other.breakAfter;\n    }\n    covers() { return true; }\n    static find(docView, pos) {\n        for (let i = 0, off = 0; i < docView.children.length; i++) {\n            let block = docView.children[i], end = off + block.length;\n            if (end >= pos) {\n                if (block instanceof LineView)\n                    return block;\n                if (end > pos)\n                    break;\n            }\n            off = end + block.breakAfter;\n        }\n        return null;\n    }\n}\nclass BlockWidgetView extends ContentView {\n    constructor(widget, length, deco) {\n        super();\n        this.widget = widget;\n        this.length = length;\n        this.deco = deco;\n        this.breakAfter = 0;\n        this.prevWidget = null;\n    }\n    merge(from, to, source, _takeDeco, openStart, openEnd) {\n        if (source && (!(source instanceof BlockWidgetView) || !this.widget.compare(source.widget) ||\n            from > 0 && openStart <= 0 || to < this.length && openEnd <= 0))\n            return false;\n        this.length = from + (source ? source.length : 0) + (this.length - to);\n        return true;\n    }\n    domAtPos(pos) {\n        return pos == 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom, pos == this.length);\n    }\n    split(at) {\n        let len = this.length - at;\n        this.length = at;\n        let end = new BlockWidgetView(this.widget, len, this.deco);\n        end.breakAfter = this.breakAfter;\n        return end;\n    }\n    get children() { return noChildren; }\n    sync(view) {\n        if (!this.dom || !this.widget.updateDOM(this.dom, view)) {\n            if (this.dom && this.prevWidget)\n                this.prevWidget.destroy(this.dom);\n            this.prevWidget = null;\n            this.setDOM(this.widget.toDOM(view));\n            if (!this.widget.editable)\n                this.dom.contentEditable = \"false\";\n        }\n    }\n    get overrideDOMText() {\n        return this.parent ? this.parent.view.state.doc.slice(this.posAtStart, this.posAtEnd) : Text.empty;\n    }\n    domBoundsAround() { return null; }\n    become(other) {\n        if (other instanceof BlockWidgetView &&\n            other.widget.constructor == this.widget.constructor) {\n            if (!other.widget.compare(this.widget))\n                this.markDirty(true);\n            if (this.dom && !this.prevWidget)\n                this.prevWidget = this.widget;\n            this.widget = other.widget;\n            this.length = other.length;\n            this.deco = other.deco;\n            this.breakAfter = other.breakAfter;\n            return true;\n        }\n        return false;\n    }\n    ignoreMutation() { return true; }\n    ignoreEvent(event) { return this.widget.ignoreEvent(event); }\n    get isEditable() { return false; }\n    get isWidget() { return true; }\n    coordsAt(pos, side) {\n        let custom = this.widget.coordsAt(this.dom, pos, side);\n        if (custom)\n            return custom;\n        if (this.widget instanceof BlockGapWidget)\n            return null;\n        return flattenRect(this.dom.getBoundingClientRect(), this.length ? pos == 0 : side <= 0);\n    }\n    destroy() {\n        super.destroy();\n        if (this.dom)\n            this.widget.destroy(this.dom);\n    }\n    covers(side) {\n        let { startSide, endSide } = this.deco;\n        return startSide == endSide ? false : side < 0 ? startSide < 0 : endSide > 0;\n    }\n}\nclass BlockGapWidget extends WidgetType {\n    constructor(height) {\n        super();\n        this.height = height;\n    }\n    toDOM() {\n        let elt = document.createElement(\"div\");\n        elt.className = \"cm-gap\";\n        this.updateDOM(elt);\n        return elt;\n    }\n    eq(other) { return other.height == this.height; }\n    updateDOM(elt) {\n        elt.style.height = this.height + \"px\";\n        return true;\n    }\n    get editable() { return true; }\n    get estimatedHeight() { return this.height; }\n    ignoreEvent() { return false; }\n}\n\nclass ContentBuilder {\n    constructor(doc, pos, end, disallowBlockEffectsFor) {\n        this.doc = doc;\n        this.pos = pos;\n        this.end = end;\n        this.disallowBlockEffectsFor = disallowBlockEffectsFor;\n        this.content = [];\n        this.curLine = null;\n        this.breakAtStart = 0;\n        this.pendingBuffer = 0 /* Buf.No */;\n        this.bufferMarks = [];\n        // Set to false directly after a widget that covers the position after it\n        this.atCursorPos = true;\n        this.openStart = -1;\n        this.openEnd = -1;\n        this.text = \"\";\n        this.textOff = 0;\n        this.cursor = doc.iter();\n        this.skip = pos;\n    }\n    posCovered() {\n        if (this.content.length == 0)\n            return !this.breakAtStart && this.doc.lineAt(this.pos).from != this.pos;\n        let last = this.content[this.content.length - 1];\n        return !(last.breakAfter || last instanceof BlockWidgetView && last.deco.endSide < 0);\n    }\n    getLine() {\n        if (!this.curLine) {\n            this.content.push(this.curLine = new LineView);\n            this.atCursorPos = true;\n        }\n        return this.curLine;\n    }\n    flushBuffer(active = this.bufferMarks) {\n        if (this.pendingBuffer) {\n            this.curLine.append(wrapMarks(new WidgetBufferView(-1), active), active.length);\n            this.pendingBuffer = 0 /* Buf.No */;\n        }\n    }\n    addBlockWidget(view) {\n        this.flushBuffer();\n        this.curLine = null;\n        this.content.push(view);\n    }\n    finish(openEnd) {\n        if (this.pendingBuffer && openEnd <= this.bufferMarks.length)\n            this.flushBuffer();\n        else\n            this.pendingBuffer = 0 /* Buf.No */;\n        if (!this.posCovered() &&\n            !(openEnd && this.content.length && this.content[this.content.length - 1] instanceof BlockWidgetView))\n            this.getLine();\n    }\n    buildText(length, active, openStart) {\n        while (length > 0) {\n            if (this.textOff == this.text.length) {\n                let { value, lineBreak, done } = this.cursor.next(this.skip);\n                this.skip = 0;\n                if (done)\n                    throw new Error(\"Ran out of text content when drawing inline views\");\n                if (lineBreak) {\n                    if (!this.posCovered())\n                        this.getLine();\n                    if (this.content.length)\n                        this.content[this.content.length - 1].breakAfter = 1;\n                    else\n                        this.breakAtStart = 1;\n                    this.flushBuffer();\n                    this.curLine = null;\n                    this.atCursorPos = true;\n                    length--;\n                    continue;\n                }\n                else {\n                    this.text = value;\n                    this.textOff = 0;\n                }\n            }\n            let take = Math.min(this.text.length - this.textOff, length, 512 /* T.Chunk */);\n            this.flushBuffer(active.slice(active.length - openStart));\n            this.getLine().append(wrapMarks(new TextView(this.text.slice(this.textOff, this.textOff + take)), active), openStart);\n            this.atCursorPos = true;\n            this.textOff += take;\n            length -= take;\n            openStart = 0;\n        }\n    }\n    span(from, to, active, openStart) {\n        this.buildText(to - from, active, openStart);\n        this.pos = to;\n        if (this.openStart < 0)\n            this.openStart = openStart;\n    }\n    point(from, to, deco, active, openStart, index) {\n        if (this.disallowBlockEffectsFor[index] && deco instanceof PointDecoration) {\n            if (deco.block)\n                throw new RangeError(\"Block decorations may not be specified via plugins\");\n            if (to > this.doc.lineAt(this.pos).to)\n                throw new RangeError(\"Decorations that replace line breaks may not be specified via plugins\");\n        }\n        let len = to - from;\n        if (deco instanceof PointDecoration) {\n            if (deco.block) {\n                if (deco.startSide > 0 && !this.posCovered())\n                    this.getLine();\n                this.addBlockWidget(new BlockWidgetView(deco.widget || NullWidget.block, len, deco));\n            }\n            else {\n                let view = WidgetView.create(deco.widget || NullWidget.inline, len, len ? 0 : deco.startSide);\n                let cursorBefore = this.atCursorPos && !view.isEditable && openStart <= active.length &&\n                    (from < to || deco.startSide > 0);\n                let cursorAfter = !view.isEditable && (from < to || openStart > active.length || deco.startSide <= 0);\n                let line = this.getLine();\n                if (this.pendingBuffer == 2 /* Buf.IfCursor */ && !cursorBefore && !view.isEditable)\n                    this.pendingBuffer = 0 /* Buf.No */;\n                this.flushBuffer(active);\n                if (cursorBefore) {\n                    line.append(wrapMarks(new WidgetBufferView(1), active), openStart);\n                    openStart = active.length + Math.max(0, openStart - active.length);\n                }\n                line.append(wrapMarks(view, active), openStart);\n                this.atCursorPos = cursorAfter;\n                this.pendingBuffer = !cursorAfter ? 0 /* Buf.No */ : from < to || openStart > active.length ? 1 /* Buf.Yes */ : 2 /* Buf.IfCursor */;\n                if (this.pendingBuffer)\n                    this.bufferMarks = active.slice();\n            }\n        }\n        else if (this.doc.lineAt(this.pos).from == this.pos) { // Line decoration\n            this.getLine().addLineDeco(deco);\n        }\n        if (len) {\n            // Advance the iterator past the replaced content\n            if (this.textOff + len <= this.text.length) {\n                this.textOff += len;\n            }\n            else {\n                this.skip += len - (this.text.length - this.textOff);\n                this.text = \"\";\n                this.textOff = 0;\n            }\n            this.pos = to;\n        }\n        if (this.openStart < 0)\n            this.openStart = openStart;\n    }\n    static build(text, from, to, decorations, dynamicDecorationMap) {\n        let builder = new ContentBuilder(text, from, to, dynamicDecorationMap);\n        builder.openEnd = RangeSet.spans(decorations, from, to, builder);\n        if (builder.openStart < 0)\n            builder.openStart = builder.openEnd;\n        builder.finish(builder.openEnd);\n        return builder;\n    }\n}\nfunction wrapMarks(view, active) {\n    for (let mark of active)\n        view = new MarkView(mark, [view], view.length);\n    return view;\n}\nclass NullWidget extends WidgetType {\n    constructor(tag) {\n        super();\n        this.tag = tag;\n    }\n    eq(other) { return other.tag == this.tag; }\n    toDOM() { return document.createElement(this.tag); }\n    updateDOM(elt) { return elt.nodeName.toLowerCase() == this.tag; }\n    get isHidden() { return true; }\n}\nNullWidget.inline = /*@__PURE__*/new NullWidget(\"span\");\nNullWidget.block = /*@__PURE__*/new NullWidget(\"div\");\n\n/**\nUsed to indicate [text direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection).\n*/\nvar Direction = /*@__PURE__*/(function (Direction) {\n    // (These are chosen to match the base levels, in bidi algorithm\n    // terms, of spans in that direction.)\n    /**\n    Left-to-right.\n    */\n    Direction[Direction[\"LTR\"] = 0] = \"LTR\";\n    /**\n    Right-to-left.\n    */\n    Direction[Direction[\"RTL\"] = 1] = \"RTL\";\nreturn Direction})(Direction || (Direction = {}));\nconst LTR = Direction.LTR, RTL = Direction.RTL;\n// Decode a string with each type encoded as log2(type)\nfunction dec(str) {\n    let result = [];\n    for (let i = 0; i < str.length; i++)\n        result.push(1 << +str[i]);\n    return result;\n}\n// Character types for codepoints 0 to 0xf8\nconst LowTypes = /*@__PURE__*/dec(\"88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008\");\n// Character types for codepoints 0x600 to 0x6f9\nconst ArabicTypes = /*@__PURE__*/dec(\"4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333\");\nconst Brackets = /*@__PURE__*/Object.create(null), BracketStack = [];\n// There's a lot more in\n// https://www.unicode.org/Public/UCD/latest/ucd/BidiBrackets.txt,\n// which are left out to keep code size down.\nfor (let p of [\"()\", \"[]\", \"{}\"]) {\n    let l = /*@__PURE__*/p.charCodeAt(0), r = /*@__PURE__*/p.charCodeAt(1);\n    Brackets[l] = r;\n    Brackets[r] = -l;\n}\nfunction charType(ch) {\n    return ch <= 0xf7 ? LowTypes[ch] :\n        0x590 <= ch && ch <= 0x5f4 ? 2 /* T.R */ :\n            0x600 <= ch && ch <= 0x6f9 ? ArabicTypes[ch - 0x600] :\n                0x6ee <= ch && ch <= 0x8ac ? 4 /* T.AL */ :\n                    0x2000 <= ch && ch <= 0x200c ? 256 /* T.NI */ :\n                        0xfb50 <= ch && ch <= 0xfdff ? 4 /* T.AL */ : 1 /* T.L */;\n}\nconst BidiRE = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac\\ufb50-\\ufdff]/;\n/**\nRepresents a contiguous range of text that has a single direction\n(as in left-to-right or right-to-left).\n*/\nclass BidiSpan {\n    /**\n    The direction of this span.\n    */\n    get dir() { return this.level % 2 ? RTL : LTR; }\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start of the span (relative to the start of the line).\n    */\n    from, \n    /**\n    The end of the span.\n    */\n    to, \n    /**\n    The [\"bidi\n    level\"](https://unicode.org/reports/tr9/#Basic_Display_Algorithm)\n    of the span (in this context, 0 means\n    left-to-right, 1 means right-to-left, 2 means left-to-right\n    number inside right-to-left text).\n    */\n    level) {\n        this.from = from;\n        this.to = to;\n        this.level = level;\n    }\n    /**\n    @internal\n    */\n    side(end, dir) { return (this.dir == dir) == end ? this.to : this.from; }\n    /**\n    @internal\n    */\n    forward(forward, dir) { return forward == (this.dir == dir); }\n    /**\n    @internal\n    */\n    static find(order, index, level, assoc) {\n        let maybe = -1;\n        for (let i = 0; i < order.length; i++) {\n            let span = order[i];\n            if (span.from <= index && span.to >= index) {\n                if (span.level == level)\n                    return i;\n                // When multiple spans match, if assoc != 0, take the one that\n                // covers that side, otherwise take the one with the minimum\n                // level.\n                if (maybe < 0 || (assoc != 0 ? (assoc < 0 ? span.from < index : span.to > index) : order[maybe].level > span.level))\n                    maybe = i;\n            }\n        }\n        if (maybe < 0)\n            throw new RangeError(\"Index out of range\");\n        return maybe;\n    }\n}\nfunction isolatesEq(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++) {\n        let iA = a[i], iB = b[i];\n        if (iA.from != iB.from || iA.to != iB.to || iA.direction != iB.direction || !isolatesEq(iA.inner, iB.inner))\n            return false;\n    }\n    return true;\n}\n// Reused array of character types\nconst types = [];\n// Fill in the character types (in `types`) from `from` to `to` and\n// apply W normalization rules.\nfunction computeCharTypes(line, rFrom, rTo, isolates, outerType) {\n    for (let iI = 0; iI <= isolates.length; iI++) {\n        let from = iI ? isolates[iI - 1].to : rFrom, to = iI < isolates.length ? isolates[iI].from : rTo;\n        let prevType = iI ? 256 /* T.NI */ : outerType;\n        // W1. Examine each non-spacing mark (NSM) in the level run, and\n        // change the type of the NSM to the type of the previous\n        // character. If the NSM is at the start of the level run, it will\n        // get the type of sor.\n        // W2. Search backwards from each instance of a European number\n        // until the first strong type (R, L, AL, or sor) is found. If an\n        // AL is found, change the type of the European number to Arabic\n        // number.\n        // W3. Change all ALs to R.\n        // (Left after this: L, R, EN, AN, ET, CS, NI)\n        for (let i = from, prev = prevType, prevStrong = prevType; i < to; i++) {\n            let type = charType(line.charCodeAt(i));\n            if (type == 512 /* T.NSM */)\n                type = prev;\n            else if (type == 8 /* T.EN */ && prevStrong == 4 /* T.AL */)\n                type = 16 /* T.AN */;\n            types[i] = type == 4 /* T.AL */ ? 2 /* T.R */ : type;\n            if (type & 7 /* T.Strong */)\n                prevStrong = type;\n            prev = type;\n        }\n        // W5. A sequence of European terminators adjacent to European\n        // numbers changes to all European numbers.\n        // W6. Otherwise, separators and terminators change to Other\n        // Neutral.\n        // W7. Search backwards from each instance of a European number\n        // until the first strong type (R, L, or sor) is found. If an L is\n        // found, then change the type of the European number to L.\n        // (Left after this: L, R, EN+AN, NI)\n        for (let i = from, prev = prevType, prevStrong = prevType; i < to; i++) {\n            let type = types[i];\n            if (type == 128 /* T.CS */) {\n                if (i < to - 1 && prev == types[i + 1] && (prev & 24 /* T.Num */))\n                    type = types[i] = prev;\n                else\n                    types[i] = 256 /* T.NI */;\n            }\n            else if (type == 64 /* T.ET */) {\n                let end = i + 1;\n                while (end < to && types[end] == 64 /* T.ET */)\n                    end++;\n                let replace = (i && prev == 8 /* T.EN */) || (end < rTo && types[end] == 8 /* T.EN */) ? (prevStrong == 1 /* T.L */ ? 1 /* T.L */ : 8 /* T.EN */) : 256 /* T.NI */;\n                for (let j = i; j < end; j++)\n                    types[j] = replace;\n                i = end - 1;\n            }\n            else if (type == 8 /* T.EN */ && prevStrong == 1 /* T.L */) {\n                types[i] = 1 /* T.L */;\n            }\n            prev = type;\n            if (type & 7 /* T.Strong */)\n                prevStrong = type;\n        }\n    }\n}\n// Process brackets throughout a run sequence.\nfunction processBracketPairs(line, rFrom, rTo, isolates, outerType) {\n    let oppositeType = outerType == 1 /* T.L */ ? 2 /* T.R */ : 1 /* T.L */;\n    for (let iI = 0, sI = 0, context = 0; iI <= isolates.length; iI++) {\n        let from = iI ? isolates[iI - 1].to : rFrom, to = iI < isolates.length ? isolates[iI].from : rTo;\n        // N0. Process bracket pairs in an isolating run sequence\n        // sequentially in the logical order of the text positions of the\n        // opening paired brackets using the logic given below. Within this\n        // scope, bidirectional types EN and AN are treated as R.\n        for (let i = from, ch, br, type; i < to; i++) {\n            // Keeps [startIndex, type, strongSeen] triples for each open\n            // bracket on BracketStack.\n            if (br = Brackets[ch = line.charCodeAt(i)]) {\n                if (br < 0) { // Closing bracket\n                    for (let sJ = sI - 3; sJ >= 0; sJ -= 3) {\n                        if (BracketStack[sJ + 1] == -br) {\n                            let flags = BracketStack[sJ + 2];\n                            let type = (flags & 2 /* Bracketed.EmbedInside */) ? outerType :\n                                !(flags & 4 /* Bracketed.OppositeInside */) ? 0 :\n                                    (flags & 1 /* Bracketed.OppositeBefore */) ? oppositeType : outerType;\n                            if (type)\n                                types[i] = types[BracketStack[sJ]] = type;\n                            sI = sJ;\n                            break;\n                        }\n                    }\n                }\n                else if (BracketStack.length == 189 /* Bracketed.MaxDepth */) {\n                    break;\n                }\n                else {\n                    BracketStack[sI++] = i;\n                    BracketStack[sI++] = ch;\n                    BracketStack[sI++] = context;\n                }\n            }\n            else if ((type = types[i]) == 2 /* T.R */ || type == 1 /* T.L */) {\n                let embed = type == outerType;\n                context = embed ? 0 : 1 /* Bracketed.OppositeBefore */;\n                for (let sJ = sI - 3; sJ >= 0; sJ -= 3) {\n                    let cur = BracketStack[sJ + 2];\n                    if (cur & 2 /* Bracketed.EmbedInside */)\n                        break;\n                    if (embed) {\n                        BracketStack[sJ + 2] |= 2 /* Bracketed.EmbedInside */;\n                    }\n                    else {\n                        if (cur & 4 /* Bracketed.OppositeInside */)\n                            break;\n                        BracketStack[sJ + 2] |= 4 /* Bracketed.OppositeInside */;\n                    }\n                }\n            }\n        }\n    }\n}\nfunction processNeutrals(rFrom, rTo, isolates, outerType) {\n    for (let iI = 0, prev = outerType; iI <= isolates.length; iI++) {\n        let from = iI ? isolates[iI - 1].to : rFrom, to = iI < isolates.length ? isolates[iI].from : rTo;\n        // N1. A sequence of neutrals takes the direction of the\n        // surrounding strong text if the text on both sides has the same\n        // direction. European and Arabic numbers act as if they were R in\n        // terms of their influence on neutrals. Start-of-level-run (sor)\n        // and end-of-level-run (eor) are used at level run boundaries.\n        // N2. Any remaining neutrals take the embedding direction.\n        // (Left after this: L, R, EN+AN)\n        for (let i = from; i < to;) {\n            let type = types[i];\n            if (type == 256 /* T.NI */) {\n                let end = i + 1;\n                for (;;) {\n                    if (end == to) {\n                        if (iI == isolates.length)\n                            break;\n                        end = isolates[iI++].to;\n                        to = iI < isolates.length ? isolates[iI].from : rTo;\n                    }\n                    else if (types[end] == 256 /* T.NI */) {\n                        end++;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                let beforeL = prev == 1 /* T.L */;\n                let afterL = (end < rTo ? types[end] : outerType) == 1 /* T.L */;\n                let replace = beforeL == afterL ? (beforeL ? 1 /* T.L */ : 2 /* T.R */) : outerType;\n                for (let j = end, jI = iI, fromJ = jI ? isolates[jI - 1].to : rFrom; j > i;) {\n                    if (j == fromJ) {\n                        j = isolates[--jI].from;\n                        fromJ = jI ? isolates[jI - 1].to : rFrom;\n                    }\n                    types[--j] = replace;\n                }\n                i = end;\n            }\n            else {\n                prev = type;\n                i++;\n            }\n        }\n    }\n}\n// Find the contiguous ranges of character types in a given range, and\n// emit spans for them. Flip the order of the spans as appropriate\n// based on the level, and call through to compute the spans for\n// isolates at the proper point.\nfunction emitSpans(line, from, to, level, baseLevel, isolates, order) {\n    let ourType = level % 2 ? 2 /* T.R */ : 1 /* T.L */;\n    if ((level % 2) == (baseLevel % 2)) { // Same dir as base direction, don't flip\n        for (let iCh = from, iI = 0; iCh < to;) {\n            // Scan a section of characters in direction ourType, unless\n            // there's another type of char right after iCh, in which case\n            // we scan a section of other characters (which, if ourType ==\n            // T.L, may contain both T.R and T.AN chars).\n            let sameDir = true, isNum = false;\n            if (iI == isolates.length || iCh < isolates[iI].from) {\n                let next = types[iCh];\n                if (next != ourType) {\n                    sameDir = false;\n                    isNum = next == 16 /* T.AN */;\n                }\n            }\n            // Holds an array of isolates to pass to a recursive call if we\n            // must recurse (to distinguish T.AN inside an RTL section in\n            // LTR text), null if we can emit directly\n            let recurse = !sameDir && ourType == 1 /* T.L */ ? [] : null;\n            let localLevel = sameDir ? level : level + 1;\n            let iScan = iCh;\n            run: for (;;) {\n                if (iI < isolates.length && iScan == isolates[iI].from) {\n                    if (isNum)\n                        break run;\n                    let iso = isolates[iI];\n                    // Scan ahead to verify that there is another char in this dir after the isolate(s)\n                    if (!sameDir)\n                        for (let upto = iso.to, jI = iI + 1;;) {\n                            if (upto == to)\n                                break run;\n                            if (jI < isolates.length && isolates[jI].from == upto)\n                                upto = isolates[jI++].to;\n                            else if (types[upto] == ourType)\n                                break run;\n                            else\n                                break;\n                        }\n                    iI++;\n                    if (recurse) {\n                        recurse.push(iso);\n                    }\n                    else {\n                        if (iso.from > iCh)\n                            order.push(new BidiSpan(iCh, iso.from, localLevel));\n                        let dirSwap = (iso.direction == LTR) != !(localLevel % 2);\n                        computeSectionOrder(line, dirSwap ? level + 1 : level, baseLevel, iso.inner, iso.from, iso.to, order);\n                        iCh = iso.to;\n                    }\n                    iScan = iso.to;\n                }\n                else if (iScan == to || (sameDir ? types[iScan] != ourType : types[iScan] == ourType)) {\n                    break;\n                }\n                else {\n                    iScan++;\n                }\n            }\n            if (recurse)\n                emitSpans(line, iCh, iScan, level + 1, baseLevel, recurse, order);\n            else if (iCh < iScan)\n                order.push(new BidiSpan(iCh, iScan, localLevel));\n            iCh = iScan;\n        }\n    }\n    else {\n        // Iterate in reverse to flip the span order. Same code again, but\n        // going from the back of the section to the front\n        for (let iCh = to, iI = isolates.length; iCh > from;) {\n            let sameDir = true, isNum = false;\n            if (!iI || iCh > isolates[iI - 1].to) {\n                let next = types[iCh - 1];\n                if (next != ourType) {\n                    sameDir = false;\n                    isNum = next == 16 /* T.AN */;\n                }\n            }\n            let recurse = !sameDir && ourType == 1 /* T.L */ ? [] : null;\n            let localLevel = sameDir ? level : level + 1;\n            let iScan = iCh;\n            run: for (;;) {\n                if (iI && iScan == isolates[iI - 1].to) {\n                    if (isNum)\n                        break run;\n                    let iso = isolates[--iI];\n                    // Scan ahead to verify that there is another char in this dir after the isolate(s)\n                    if (!sameDir)\n                        for (let upto = iso.from, jI = iI;;) {\n                            if (upto == from)\n                                break run;\n                            if (jI && isolates[jI - 1].to == upto)\n                                upto = isolates[--jI].from;\n                            else if (types[upto - 1] == ourType)\n                                break run;\n                            else\n                                break;\n                        }\n                    if (recurse) {\n                        recurse.push(iso);\n                    }\n                    else {\n                        if (iso.to < iCh)\n                            order.push(new BidiSpan(iso.to, iCh, localLevel));\n                        let dirSwap = (iso.direction == LTR) != !(localLevel % 2);\n                        computeSectionOrder(line, dirSwap ? level + 1 : level, baseLevel, iso.inner, iso.from, iso.to, order);\n                        iCh = iso.from;\n                    }\n                    iScan = iso.from;\n                }\n                else if (iScan == from || (sameDir ? types[iScan - 1] != ourType : types[iScan - 1] == ourType)) {\n                    break;\n                }\n                else {\n                    iScan--;\n                }\n            }\n            if (recurse)\n                emitSpans(line, iScan, iCh, level + 1, baseLevel, recurse, order);\n            else if (iScan < iCh)\n                order.push(new BidiSpan(iScan, iCh, localLevel));\n            iCh = iScan;\n        }\n    }\n}\nfunction computeSectionOrder(line, level, baseLevel, isolates, from, to, order) {\n    let outerType = (level % 2 ? 2 /* T.R */ : 1 /* T.L */);\n    computeCharTypes(line, from, to, isolates, outerType);\n    processBracketPairs(line, from, to, isolates, outerType);\n    processNeutrals(from, to, isolates, outerType);\n    emitSpans(line, from, to, level, baseLevel, isolates, order);\n}\nfunction computeOrder(line, direction, isolates) {\n    if (!line)\n        return [new BidiSpan(0, 0, direction == RTL ? 1 : 0)];\n    if (direction == LTR && !isolates.length && !BidiRE.test(line))\n        return trivialOrder(line.length);\n    if (isolates.length)\n        while (line.length > types.length)\n            types[types.length] = 256 /* T.NI */; // Make sure types array has no gaps\n    let order = [], level = direction == LTR ? 0 : 1;\n    computeSectionOrder(line, level, level, isolates, 0, line.length, order);\n    return order;\n}\nfunction trivialOrder(length) {\n    return [new BidiSpan(0, length, 0)];\n}\nlet movedOver = \"\";\n// This implementation moves strictly visually, without concern for a\n// traversal visiting every logical position in the string. It will\n// still do so for simple input, but situations like multiple isolates\n// with the same level next to each other, or text going against the\n// main dir at the end of the line, will make some positions\n// unreachable with this motion. Each visible cursor position will\n// correspond to the lower-level bidi span that touches it.\n//\n// The alternative would be to solve an order globally for a given\n// line, making sure that it includes every position, but that would\n// require associating non-canonical (higher bidi span level)\n// positions with a given visual position, which is likely to confuse\n// people. (And would generally be a lot more complicated.)\nfunction moveVisually(line, order, dir, start, forward) {\n    var _a;\n    let startIndex = start.head - line.from;\n    let spanI = BidiSpan.find(order, startIndex, (_a = start.bidiLevel) !== null && _a !== void 0 ? _a : -1, start.assoc);\n    let span = order[spanI], spanEnd = span.side(forward, dir);\n    // End of span\n    if (startIndex == spanEnd) {\n        let nextI = spanI += forward ? 1 : -1;\n        if (nextI < 0 || nextI >= order.length)\n            return null;\n        span = order[spanI = nextI];\n        startIndex = span.side(!forward, dir);\n        spanEnd = span.side(forward, dir);\n    }\n    let nextIndex = findClusterBreak(line.text, startIndex, span.forward(forward, dir));\n    if (nextIndex < span.from || nextIndex > span.to)\n        nextIndex = spanEnd;\n    movedOver = line.text.slice(Math.min(startIndex, nextIndex), Math.max(startIndex, nextIndex));\n    let nextSpan = spanI == (forward ? order.length - 1 : 0) ? null : order[spanI + (forward ? 1 : -1)];\n    if (nextSpan && nextIndex == spanEnd && nextSpan.level + (forward ? 0 : 1) < span.level)\n        return EditorSelection.cursor(nextSpan.side(!forward, dir) + line.from, nextSpan.forward(forward, dir) ? 1 : -1, nextSpan.level);\n    return EditorSelection.cursor(nextIndex + line.from, span.forward(forward, dir) ? -1 : 1, span.level);\n}\nfunction autoDirection(text, from, to) {\n    for (let i = from; i < to; i++) {\n        let type = charType(text.charCodeAt(i));\n        if (type == 1 /* T.L */)\n            return LTR;\n        if (type == 2 /* T.R */ || type == 4 /* T.AL */)\n            return RTL;\n    }\n    return LTR;\n}\n\nconst clickAddsSelectionRange = /*@__PURE__*/Facet.define();\nconst dragMovesSelection$1 = /*@__PURE__*/Facet.define();\nconst mouseSelectionStyle = /*@__PURE__*/Facet.define();\nconst exceptionSink = /*@__PURE__*/Facet.define();\nconst updateListener = /*@__PURE__*/Facet.define();\nconst inputHandler = /*@__PURE__*/Facet.define();\nconst focusChangeEffect = /*@__PURE__*/Facet.define();\nconst clipboardInputFilter = /*@__PURE__*/Facet.define();\nconst clipboardOutputFilter = /*@__PURE__*/Facet.define();\nconst perLineTextDirection = /*@__PURE__*/Facet.define({\n    combine: values => values.some(x => x)\n});\nconst nativeSelectionHidden = /*@__PURE__*/Facet.define({\n    combine: values => values.some(x => x)\n});\nconst scrollHandler = /*@__PURE__*/Facet.define();\nclass ScrollTarget {\n    constructor(range, y = \"nearest\", x = \"nearest\", yMargin = 5, xMargin = 5, \n    // This data structure is abused to also store precise scroll\n    // snapshots, instead of a `scrollIntoView` request. When this\n    // flag is `true`, `range` points at a position in the reference\n    // line, `yMargin` holds the difference between the top of that\n    // line and the top of the editor, and `xMargin` holds the\n    // editor's `scrollLeft`.\n    isSnapshot = false) {\n        this.range = range;\n        this.y = y;\n        this.x = x;\n        this.yMargin = yMargin;\n        this.xMargin = xMargin;\n        this.isSnapshot = isSnapshot;\n    }\n    map(changes) {\n        return changes.empty ? this :\n            new ScrollTarget(this.range.map(changes), this.y, this.x, this.yMargin, this.xMargin, this.isSnapshot);\n    }\n    clip(state) {\n        return this.range.to <= state.doc.length ? this :\n            new ScrollTarget(EditorSelection.cursor(state.doc.length), this.y, this.x, this.yMargin, this.xMargin, this.isSnapshot);\n    }\n}\nconst scrollIntoView = /*@__PURE__*/StateEffect.define({ map: (t, ch) => t.map(ch) });\nconst setEditContextFormatting = /*@__PURE__*/StateEffect.define();\n/**\nLog or report an unhandled exception in client code. Should\nprobably only be used by extension code that allows client code to\nprovide functions, and calls those functions in a context where an\nexception can't be propagated to calling code in a reasonable way\n(for example when in an event handler).\n\nEither calls a handler registered with\n[`EditorView.exceptionSink`](https://codemirror.net/6/docs/ref/#view.EditorView^exceptionSink),\n`window.onerror`, if defined, or `console.error` (in which case\nit'll pass `context`, when given, as first argument).\n*/\nfunction logException(state, exception, context) {\n    let handler = state.facet(exceptionSink);\n    if (handler.length)\n        handler[0](exception);\n    else if (window.onerror && window.onerror(String(exception), context, undefined, undefined, exception)) ;\n    else if (context)\n        console.error(context + \":\", exception);\n    else\n        console.error(exception);\n}\nconst editable = /*@__PURE__*/Facet.define({ combine: values => values.length ? values[0] : true });\nlet nextPluginID = 0;\nconst viewPlugin = /*@__PURE__*/Facet.define({\n    combine(plugins) {\n        return plugins.filter((p, i) => {\n            for (let j = 0; j < i; j++)\n                if (plugins[j].plugin == p.plugin)\n                    return false;\n            return true;\n        });\n    }\n});\n/**\nView plugins associate stateful values with a view. They can\ninfluence the way the content is drawn, and are notified of things\nthat happen in the view. They optionally take an argument, in\nwhich case you need to call [`of`](https://codemirror.net/6/docs/ref/#view.ViewPlugin.of) to create\nan extension for the plugin. When the argument type is undefined,\nyou can use the plugin instance as an extension directly.\n*/\nclass ViewPlugin {\n    constructor(\n    /**\n    @internal\n    */\n    id, \n    /**\n    @internal\n    */\n    create, \n    /**\n    @internal\n    */\n    domEventHandlers, \n    /**\n    @internal\n    */\n    domEventObservers, buildExtensions) {\n        this.id = id;\n        this.create = create;\n        this.domEventHandlers = domEventHandlers;\n        this.domEventObservers = domEventObservers;\n        this.baseExtensions = buildExtensions(this);\n        this.extension = this.baseExtensions.concat(viewPlugin.of({ plugin: this, arg: undefined }));\n    }\n    /**\n    Create an extension for this plugin with the given argument.\n    */\n    of(arg) {\n        return this.baseExtensions.concat(viewPlugin.of({ plugin: this, arg }));\n    }\n    /**\n    Define a plugin from a constructor function that creates the\n    plugin's value, given an editor view.\n    */\n    static define(create, spec) {\n        const { eventHandlers, eventObservers, provide, decorations: deco } = spec || {};\n        return new ViewPlugin(nextPluginID++, create, eventHandlers, eventObservers, plugin => {\n            let ext = [];\n            if (deco)\n                ext.push(decorations.of(view => {\n                    let pluginInst = view.plugin(plugin);\n                    return pluginInst ? deco(pluginInst) : Decoration.none;\n                }));\n            if (provide)\n                ext.push(provide(plugin));\n            return ext;\n        });\n    }\n    /**\n    Create a plugin for a class whose constructor takes a single\n    editor view as argument.\n    */\n    static fromClass(cls, spec) {\n        return ViewPlugin.define((view, arg) => new cls(view, arg), spec);\n    }\n}\nclass PluginInstance {\n    constructor(spec) {\n        this.spec = spec;\n        // When starting an update, all plugins have this field set to the\n        // update object, indicating they need to be updated. When finished\n        // updating, it is set to `null`. Retrieving a plugin that needs to\n        // be updated with `view.plugin` forces an eager update.\n        this.mustUpdate = null;\n        // This is null when the plugin is initially created, but\n        // initialized on the first update.\n        this.value = null;\n    }\n    get plugin() { return this.spec && this.spec.plugin; }\n    update(view) {\n        if (!this.value) {\n            if (this.spec) {\n                try {\n                    this.value = this.spec.plugin.create(view, this.spec.arg);\n                }\n                catch (e) {\n                    logException(view.state, e, \"CodeMirror plugin crashed\");\n                    this.deactivate();\n                }\n            }\n        }\n        else if (this.mustUpdate) {\n            let update = this.mustUpdate;\n            this.mustUpdate = null;\n            if (this.value.update) {\n                try {\n                    this.value.update(update);\n                }\n                catch (e) {\n                    logException(update.state, e, \"CodeMirror plugin crashed\");\n                    if (this.value.destroy)\n                        try {\n                            this.value.destroy();\n                        }\n                        catch (_) { }\n                    this.deactivate();\n                }\n            }\n        }\n        return this;\n    }\n    destroy(view) {\n        var _a;\n        if ((_a = this.value) === null || _a === void 0 ? void 0 : _a.destroy) {\n            try {\n                this.value.destroy();\n            }\n            catch (e) {\n                logException(view.state, e, \"CodeMirror plugin crashed\");\n            }\n        }\n    }\n    deactivate() {\n        this.spec = this.value = null;\n    }\n}\nconst editorAttributes = /*@__PURE__*/Facet.define();\nconst contentAttributes = /*@__PURE__*/Facet.define();\n// Provide decorations\nconst decorations = /*@__PURE__*/Facet.define();\nconst outerDecorations = /*@__PURE__*/Facet.define();\nconst atomicRanges = /*@__PURE__*/Facet.define();\nconst bidiIsolatedRanges = /*@__PURE__*/Facet.define();\nfunction getIsolatedRanges(view, line) {\n    let isolates = view.state.facet(bidiIsolatedRanges);\n    if (!isolates.length)\n        return isolates;\n    let sets = isolates.map(i => i instanceof Function ? i(view) : i);\n    let result = [];\n    RangeSet.spans(sets, line.from, line.to, {\n        point() { },\n        span(fromDoc, toDoc, active, open) {\n            let from = fromDoc - line.from, to = toDoc - line.from;\n            let level = result;\n            for (let i = active.length - 1; i >= 0; i--, open--) {\n                let direction = active[i].spec.bidiIsolate, update;\n                if (direction == null)\n                    direction = autoDirection(line.text, from, to);\n                if (open > 0 && level.length &&\n                    (update = level[level.length - 1]).to == from && update.direction == direction) {\n                    update.to = to;\n                    level = update.inner;\n                }\n                else {\n                    let add = { from, to, direction, inner: [] };\n                    level.push(add);\n                    level = add.inner;\n                }\n            }\n        }\n    });\n    return result;\n}\nconst scrollMargins = /*@__PURE__*/Facet.define();\nfunction getScrollMargins(view) {\n    let left = 0, right = 0, top = 0, bottom = 0;\n    for (let source of view.state.facet(scrollMargins)) {\n        let m = source(view);\n        if (m) {\n            if (m.left != null)\n                left = Math.max(left, m.left);\n            if (m.right != null)\n                right = Math.max(right, m.right);\n            if (m.top != null)\n                top = Math.max(top, m.top);\n            if (m.bottom != null)\n                bottom = Math.max(bottom, m.bottom);\n        }\n    }\n    return { left, right, top, bottom };\n}\nconst styleModule = /*@__PURE__*/Facet.define();\nclass ChangedRange {\n    constructor(fromA, toA, fromB, toB) {\n        this.fromA = fromA;\n        this.toA = toA;\n        this.fromB = fromB;\n        this.toB = toB;\n    }\n    join(other) {\n        return new ChangedRange(Math.min(this.fromA, other.fromA), Math.max(this.toA, other.toA), Math.min(this.fromB, other.fromB), Math.max(this.toB, other.toB));\n    }\n    addToSet(set) {\n        let i = set.length, me = this;\n        for (; i > 0; i--) {\n            let range = set[i - 1];\n            if (range.fromA > me.toA)\n                continue;\n            if (range.toA < me.fromA)\n                break;\n            me = me.join(range);\n            set.splice(i - 1, 1);\n        }\n        set.splice(i, 0, me);\n        return set;\n    }\n    static extendWithRanges(diff, ranges) {\n        if (ranges.length == 0)\n            return diff;\n        let result = [];\n        for (let dI = 0, rI = 0, posA = 0, posB = 0;; dI++) {\n            let next = dI == diff.length ? null : diff[dI], off = posA - posB;\n            let end = next ? next.fromB : 1e9;\n            while (rI < ranges.length && ranges[rI] < end) {\n                let from = ranges[rI], to = ranges[rI + 1];\n                let fromB = Math.max(posB, from), toB = Math.min(end, to);\n                if (fromB <= toB)\n                    new ChangedRange(fromB + off, toB + off, fromB, toB).addToSet(result);\n                if (to > end)\n                    break;\n                else\n                    rI += 2;\n            }\n            if (!next)\n                return result;\n            new ChangedRange(next.fromA, next.toA, next.fromB, next.toB).addToSet(result);\n            posA = next.toA;\n            posB = next.toB;\n        }\n    }\n}\n/**\nView [plugins](https://codemirror.net/6/docs/ref/#view.ViewPlugin) are given instances of this\nclass, which describe what happened, whenever the view is updated.\n*/\nclass ViewUpdate {\n    constructor(\n    /**\n    The editor view that the update is associated with.\n    */\n    view, \n    /**\n    The new editor state.\n    */\n    state, \n    /**\n    The transactions involved in the update. May be empty.\n    */\n    transactions) {\n        this.view = view;\n        this.state = state;\n        this.transactions = transactions;\n        /**\n        @internal\n        */\n        this.flags = 0;\n        this.startState = view.state;\n        this.changes = ChangeSet.empty(this.startState.doc.length);\n        for (let tr of transactions)\n            this.changes = this.changes.compose(tr.changes);\n        let changedRanges = [];\n        this.changes.iterChangedRanges((fromA, toA, fromB, toB) => changedRanges.push(new ChangedRange(fromA, toA, fromB, toB)));\n        this.changedRanges = changedRanges;\n    }\n    /**\n    @internal\n    */\n    static create(view, state, transactions) {\n        return new ViewUpdate(view, state, transactions);\n    }\n    /**\n    Tells you whether the [viewport](https://codemirror.net/6/docs/ref/#view.EditorView.viewport) or\n    [visible ranges](https://codemirror.net/6/docs/ref/#view.EditorView.visibleRanges) changed in this\n    update.\n    */\n    get viewportChanged() {\n        return (this.flags & 4 /* UpdateFlag.Viewport */) > 0;\n    }\n    /**\n    Returns true when\n    [`viewportChanged`](https://codemirror.net/6/docs/ref/#view.ViewUpdate.viewportChanged) is true\n    and the viewport change is not just the result of mapping it in\n    response to document changes.\n    */\n    get viewportMoved() {\n        return (this.flags & 8 /* UpdateFlag.ViewportMoved */) > 0;\n    }\n    /**\n    Indicates whether the height of a block element in the editor\n    changed in this update.\n    */\n    get heightChanged() {\n        return (this.flags & 2 /* UpdateFlag.Height */) > 0;\n    }\n    /**\n    Returns true when the document was modified or the size of the\n    editor, or elements within the editor, changed.\n    */\n    get geometryChanged() {\n        return this.docChanged || (this.flags & (16 /* UpdateFlag.Geometry */ | 2 /* UpdateFlag.Height */)) > 0;\n    }\n    /**\n    True when this update indicates a focus change.\n    */\n    get focusChanged() {\n        return (this.flags & 1 /* UpdateFlag.Focus */) > 0;\n    }\n    /**\n    Whether the document changed in this update.\n    */\n    get docChanged() {\n        return !this.changes.empty;\n    }\n    /**\n    Whether the selection was explicitly set in this update.\n    */\n    get selectionSet() {\n        return this.transactions.some(tr => tr.selection);\n    }\n    /**\n    @internal\n    */\n    get empty() { return this.flags == 0 && this.transactions.length == 0; }\n}\n\nclass DocView extends ContentView {\n    get length() { return this.view.state.doc.length; }\n    constructor(view) {\n        super();\n        this.view = view;\n        this.decorations = [];\n        this.dynamicDecorationMap = [false];\n        this.domChanged = null;\n        this.hasComposition = null;\n        this.markedForComposition = new Set;\n        this.editContextFormatting = Decoration.none;\n        this.lastCompositionAfterCursor = false;\n        // Track a minimum width for the editor. When measuring sizes in\n        // measureVisibleLineHeights, this is updated to point at the width\n        // of a given element and its extent in the document. When a change\n        // happens in that range, these are reset. That way, once we've seen\n        // a line/element of a given length, we keep the editor wide enough\n        // to fit at least that element, until it is changed, at which point\n        // we forget it again.\n        this.minWidth = 0;\n        this.minWidthFrom = 0;\n        this.minWidthTo = 0;\n        // Track whether the DOM selection was set in a lossy way, so that\n        // we don't mess it up when reading it back it\n        this.impreciseAnchor = null;\n        this.impreciseHead = null;\n        this.forceSelection = false;\n        // Used by the resize observer to ignore resizes that we caused\n        // ourselves\n        this.lastUpdate = Date.now();\n        this.setDOM(view.contentDOM);\n        this.children = [new LineView];\n        this.children[0].setParent(this);\n        this.updateDeco();\n        this.updateInner([new ChangedRange(0, 0, 0, view.state.doc.length)], 0, null);\n    }\n    // Update the document view to a given state.\n    update(update) {\n        var _a;\n        let changedRanges = update.changedRanges;\n        if (this.minWidth > 0 && changedRanges.length) {\n            if (!changedRanges.every(({ fromA, toA }) => toA < this.minWidthFrom || fromA > this.minWidthTo)) {\n                this.minWidth = this.minWidthFrom = this.minWidthTo = 0;\n            }\n            else {\n                this.minWidthFrom = update.changes.mapPos(this.minWidthFrom, 1);\n                this.minWidthTo = update.changes.mapPos(this.minWidthTo, 1);\n            }\n        }\n        this.updateEditContextFormatting(update);\n        let readCompositionAt = -1;\n        if (this.view.inputState.composing >= 0 && !this.view.observer.editContext) {\n            if ((_a = this.domChanged) === null || _a === void 0 ? void 0 : _a.newSel)\n                readCompositionAt = this.domChanged.newSel.head;\n            else if (!touchesComposition(update.changes, this.hasComposition) && !update.selectionSet)\n                readCompositionAt = update.state.selection.main.head;\n        }\n        let composition = readCompositionAt > -1 ? findCompositionRange(this.view, update.changes, readCompositionAt) : null;\n        this.domChanged = null;\n        if (this.hasComposition) {\n            this.markedForComposition.clear();\n            let { from, to } = this.hasComposition;\n            changedRanges = new ChangedRange(from, to, update.changes.mapPos(from, -1), update.changes.mapPos(to, 1))\n                .addToSet(changedRanges.slice());\n        }\n        this.hasComposition = composition ? { from: composition.range.fromB, to: composition.range.toB } : null;\n        // When the DOM nodes around the selection are moved to another\n        // parent, Chrome sometimes reports a different selection through\n        // getSelection than the one that it actually shows to the user.\n        // This forces a selection update when lines are joined to work\n        // around that. Issue #54\n        if ((browser.ie || browser.chrome) && !composition && update &&\n            update.state.doc.lines != update.startState.doc.lines)\n            this.forceSelection = true;\n        let prevDeco = this.decorations, deco = this.updateDeco();\n        let decoDiff = findChangedDeco(prevDeco, deco, update.changes);\n        changedRanges = ChangedRange.extendWithRanges(changedRanges, decoDiff);\n        if (!(this.flags & 7 /* ViewFlag.Dirty */) && changedRanges.length == 0) {\n            return false;\n        }\n        else {\n            this.updateInner(changedRanges, update.startState.doc.length, composition);\n            if (update.transactions.length)\n                this.lastUpdate = Date.now();\n            return true;\n        }\n    }\n    // Used by update and the constructor do perform the actual DOM\n    // update\n    updateInner(changes, oldLength, composition) {\n        this.view.viewState.mustMeasureContent = true;\n        this.updateChildren(changes, oldLength, composition);\n        let { observer } = this.view;\n        observer.ignore(() => {\n            // Lock the height during redrawing, since Chrome sometimes\n            // messes with the scroll position during DOM mutation (though\n            // no relayout is triggered and I cannot imagine how it can\n            // recompute the scroll position without a layout)\n            this.dom.style.height = this.view.viewState.contentHeight / this.view.scaleY + \"px\";\n            this.dom.style.flexBasis = this.minWidth ? this.minWidth + \"px\" : \"\";\n            // Chrome will sometimes, when DOM mutations occur directly\n            // around the selection, get confused and report a different\n            // selection from the one it displays (issue #218). This tries\n            // to detect that situation.\n            let track = browser.chrome || browser.ios ? { node: observer.selectionRange.focusNode, written: false } : undefined;\n            this.sync(this.view, track);\n            this.flags &= ~7 /* ViewFlag.Dirty */;\n            if (track && (track.written || observer.selectionRange.focusNode != track.node))\n                this.forceSelection = true;\n            this.dom.style.height = \"\";\n        });\n        this.markedForComposition.forEach(cView => cView.flags &= ~8 /* ViewFlag.Composition */);\n        let gaps = [];\n        if (this.view.viewport.from || this.view.viewport.to < this.view.state.doc.length)\n            for (let child of this.children)\n                if (child instanceof BlockWidgetView && child.widget instanceof BlockGapWidget)\n                    gaps.push(child.dom);\n        observer.updateGaps(gaps);\n    }\n    updateChildren(changes, oldLength, composition) {\n        let ranges = composition ? composition.range.addToSet(changes.slice()) : changes;\n        let cursor = this.childCursor(oldLength);\n        for (let i = ranges.length - 1;; i--) {\n            let next = i >= 0 ? ranges[i] : null;\n            if (!next)\n                break;\n            let { fromA, toA, fromB, toB } = next, content, breakAtStart, openStart, openEnd;\n            if (composition && composition.range.fromB < toB && composition.range.toB > fromB) {\n                let before = ContentBuilder.build(this.view.state.doc, fromB, composition.range.fromB, this.decorations, this.dynamicDecorationMap);\n                let after = ContentBuilder.build(this.view.state.doc, composition.range.toB, toB, this.decorations, this.dynamicDecorationMap);\n                breakAtStart = before.breakAtStart;\n                openStart = before.openStart;\n                openEnd = after.openEnd;\n                let compLine = this.compositionView(composition);\n                if (after.breakAtStart) {\n                    compLine.breakAfter = 1;\n                }\n                else if (after.content.length &&\n                    compLine.merge(compLine.length, compLine.length, after.content[0], false, after.openStart, 0)) {\n                    compLine.breakAfter = after.content[0].breakAfter;\n                    after.content.shift();\n                }\n                if (before.content.length &&\n                    compLine.merge(0, 0, before.content[before.content.length - 1], true, 0, before.openEnd)) {\n                    before.content.pop();\n                }\n                content = before.content.concat(compLine).concat(after.content);\n            }\n            else {\n                ({ content, breakAtStart, openStart, openEnd } =\n                    ContentBuilder.build(this.view.state.doc, fromB, toB, this.decorations, this.dynamicDecorationMap));\n            }\n            let { i: toI, off: toOff } = cursor.findPos(toA, 1);\n            let { i: fromI, off: fromOff } = cursor.findPos(fromA, -1);\n            replaceRange(this, fromI, fromOff, toI, toOff, content, breakAtStart, openStart, openEnd);\n        }\n        if (composition)\n            this.fixCompositionDOM(composition);\n    }\n    updateEditContextFormatting(update) {\n        this.editContextFormatting = this.editContextFormatting.map(update.changes);\n        for (let tr of update.transactions)\n            for (let effect of tr.effects)\n                if (effect.is(setEditContextFormatting)) {\n                    this.editContextFormatting = effect.value;\n                }\n    }\n    compositionView(composition) {\n        let cur = new TextView(composition.text.nodeValue);\n        cur.flags |= 8 /* ViewFlag.Composition */;\n        for (let { deco } of composition.marks)\n            cur = new MarkView(deco, [cur], cur.length);\n        let line = new LineView;\n        line.append(cur, 0);\n        return line;\n    }\n    fixCompositionDOM(composition) {\n        let fix = (dom, cView) => {\n            cView.flags |= 8 /* ViewFlag.Composition */ | (cView.children.some(c => c.flags & 7 /* ViewFlag.Dirty */) ? 1 /* ViewFlag.ChildDirty */ : 0);\n            this.markedForComposition.add(cView);\n            let prev = ContentView.get(dom);\n            if (prev && prev != cView)\n                prev.dom = null;\n            cView.setDOM(dom);\n        };\n        let pos = this.childPos(composition.range.fromB, 1);\n        let cView = this.children[pos.i];\n        fix(composition.line, cView);\n        for (let i = composition.marks.length - 1; i >= -1; i--) {\n            pos = cView.childPos(pos.off, 1);\n            cView = cView.children[pos.i];\n            fix(i >= 0 ? composition.marks[i].node : composition.text, cView);\n        }\n    }\n    // Sync the DOM selection to this.state.selection\n    updateSelection(mustRead = false, fromPointer = false) {\n        if (mustRead || !this.view.observer.selectionRange.focusNode)\n            this.view.observer.readSelectionRange();\n        let activeElt = this.view.root.activeElement, focused = activeElt == this.dom;\n        let selectionNotFocus = !focused && !(this.view.state.facet(editable) || this.dom.tabIndex > -1) &&\n            hasSelection(this.dom, this.view.observer.selectionRange) && !(activeElt && this.dom.contains(activeElt));\n        if (!(focused || fromPointer || selectionNotFocus))\n            return;\n        let force = this.forceSelection;\n        this.forceSelection = false;\n        let main = this.view.state.selection.main;\n        let anchor = this.moveToLine(this.domAtPos(main.anchor));\n        let head = main.empty ? anchor : this.moveToLine(this.domAtPos(main.head));\n        // Always reset on Firefox when next to an uneditable node to\n        // avoid invisible cursor bugs (#111)\n        if (browser.gecko && main.empty && !this.hasComposition && betweenUneditable(anchor)) {\n            let dummy = document.createTextNode(\"\");\n            this.view.observer.ignore(() => anchor.node.insertBefore(dummy, anchor.node.childNodes[anchor.offset] || null));\n            anchor = head = new DOMPos(dummy, 0);\n            force = true;\n        }\n        let domSel = this.view.observer.selectionRange;\n        // If the selection is already here, or in an equivalent position, don't touch it\n        if (force || !domSel.focusNode || (!isEquivalentPosition(anchor.node, anchor.offset, domSel.anchorNode, domSel.anchorOffset) ||\n            !isEquivalentPosition(head.node, head.offset, domSel.focusNode, domSel.focusOffset)) && !this.suppressWidgetCursorChange(domSel, main)) {\n            this.view.observer.ignore(() => {\n                // Chrome Android will hide the virtual keyboard when tapping\n                // inside an uneditable node, and not bring it back when we\n                // move the cursor to its proper position. This tries to\n                // restore the keyboard by cycling focus.\n                if (browser.android && browser.chrome && this.dom.contains(domSel.focusNode) &&\n                    inUneditable(domSel.focusNode, this.dom)) {\n                    this.dom.blur();\n                    this.dom.focus({ preventScroll: true });\n                }\n                let rawSel = getSelection(this.view.root);\n                if (!rawSel) ;\n                else if (main.empty) {\n                    // Work around https://bugzilla.mozilla.org/show_bug.cgi?id=1612076\n                    if (browser.gecko) {\n                        let nextTo = nextToUneditable(anchor.node, anchor.offset);\n                        if (nextTo && nextTo != (1 /* NextTo.Before */ | 2 /* NextTo.After */)) {\n                            let text = (nextTo == 1 /* NextTo.Before */ ? textNodeBefore : textNodeAfter)(anchor.node, anchor.offset);\n                            if (text)\n                                anchor = new DOMPos(text.node, text.offset);\n                        }\n                    }\n                    rawSel.collapse(anchor.node, anchor.offset);\n                    if (main.bidiLevel != null && rawSel.caretBidiLevel !== undefined)\n                        rawSel.caretBidiLevel = main.bidiLevel;\n                }\n                else if (rawSel.extend) {\n                    // Selection.extend can be used to create an 'inverted' selection\n                    // (one where the focus is before the anchor), but not all\n                    // browsers support it yet.\n                    rawSel.collapse(anchor.node, anchor.offset);\n                    // Safari will ignore the call above when the editor is\n                    // hidden, and then raise an error on the call to extend\n                    // (#940).\n                    try {\n                        rawSel.extend(head.node, head.offset);\n                    }\n                    catch (_) { }\n                }\n                else {\n                    // Primitive (IE) way\n                    let range = document.createRange();\n                    if (main.anchor > main.head)\n                        [anchor, head] = [head, anchor];\n                    range.setEnd(head.node, head.offset);\n                    range.setStart(anchor.node, anchor.offset);\n                    rawSel.removeAllRanges();\n                    rawSel.addRange(range);\n                }\n                if (selectionNotFocus && this.view.root.activeElement == this.dom) {\n                    this.dom.blur();\n                    if (activeElt)\n                        activeElt.focus();\n                }\n            });\n            this.view.observer.setSelectionRange(anchor, head);\n        }\n        this.impreciseAnchor = anchor.precise ? null : new DOMPos(domSel.anchorNode, domSel.anchorOffset);\n        this.impreciseHead = head.precise ? null : new DOMPos(domSel.focusNode, domSel.focusOffset);\n    }\n    // If a zero-length widget is inserted next to the cursor during\n    // composition, avoid moving it across it and disrupting the\n    // composition.\n    suppressWidgetCursorChange(sel, cursor) {\n        return this.hasComposition && cursor.empty &&\n            isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset) &&\n            this.posFromDOM(sel.focusNode, sel.focusOffset) == cursor.head;\n    }\n    enforceCursorAssoc() {\n        if (this.hasComposition)\n            return;\n        let { view } = this, cursor = view.state.selection.main;\n        let sel = getSelection(view.root);\n        let { anchorNode, anchorOffset } = view.observer.selectionRange;\n        if (!sel || !cursor.empty || !cursor.assoc || !sel.modify)\n            return;\n        let line = LineView.find(this, cursor.head);\n        if (!line)\n            return;\n        let lineStart = line.posAtStart;\n        if (cursor.head == lineStart || cursor.head == lineStart + line.length)\n            return;\n        let before = this.coordsAt(cursor.head, -1), after = this.coordsAt(cursor.head, 1);\n        if (!before || !after || before.bottom > after.top)\n            return;\n        let dom = this.domAtPos(cursor.head + cursor.assoc);\n        sel.collapse(dom.node, dom.offset);\n        sel.modify(\"move\", cursor.assoc < 0 ? \"forward\" : \"backward\", \"lineboundary\");\n        // This can go wrong in corner cases like single-character lines,\n        // so check and reset if necessary.\n        view.observer.readSelectionRange();\n        let newRange = view.observer.selectionRange;\n        if (view.docView.posFromDOM(newRange.anchorNode, newRange.anchorOffset) != cursor.from)\n            sel.collapse(anchorNode, anchorOffset);\n    }\n    // If a position is in/near a block widget, move it to a nearby text\n    // line, since we don't want the cursor inside a block widget.\n    moveToLine(pos) {\n        // Block widgets will return positions before/after them, which\n        // are thus directly in the document DOM element.\n        let dom = this.dom, newPos;\n        if (pos.node != dom)\n            return pos;\n        for (let i = pos.offset; !newPos && i < dom.childNodes.length; i++) {\n            let view = ContentView.get(dom.childNodes[i]);\n            if (view instanceof LineView)\n                newPos = view.domAtPos(0);\n        }\n        for (let i = pos.offset - 1; !newPos && i >= 0; i--) {\n            let view = ContentView.get(dom.childNodes[i]);\n            if (view instanceof LineView)\n                newPos = view.domAtPos(view.length);\n        }\n        return newPos ? new DOMPos(newPos.node, newPos.offset, true) : pos;\n    }\n    nearest(dom) {\n        for (let cur = dom; cur;) {\n            let domView = ContentView.get(cur);\n            if (domView && domView.rootView == this)\n                return domView;\n            cur = cur.parentNode;\n        }\n        return null;\n    }\n    posFromDOM(node, offset) {\n        let view = this.nearest(node);\n        if (!view)\n            throw new RangeError(\"Trying to find position for a DOM position outside of the document\");\n        return view.localPosFromDOM(node, offset) + view.posAtStart;\n    }\n    domAtPos(pos) {\n        let { i, off } = this.childCursor().findPos(pos, -1);\n        for (; i < this.children.length - 1;) {\n            let child = this.children[i];\n            if (off < child.length || child instanceof LineView)\n                break;\n            i++;\n            off = 0;\n        }\n        return this.children[i].domAtPos(off);\n    }\n    coordsAt(pos, side) {\n        let best = null, bestPos = 0;\n        for (let off = this.length, i = this.children.length - 1; i >= 0; i--) {\n            let child = this.children[i], end = off - child.breakAfter, start = end - child.length;\n            if (end < pos)\n                break;\n            if (start <= pos && (start < pos || child.covers(-1)) && (end > pos || child.covers(1)) &&\n                (!best || child instanceof LineView && !(best instanceof LineView && side >= 0))) {\n                best = child;\n                bestPos = start;\n            }\n            else if (best && start == pos && end == pos && child instanceof BlockWidgetView && Math.abs(side) < 2) {\n                if (child.deco.startSide < 0)\n                    break;\n                else if (i)\n                    best = null;\n            }\n            off = start;\n        }\n        return best ? best.coordsAt(pos - bestPos, side) : null;\n    }\n    coordsForChar(pos) {\n        let { i, off } = this.childPos(pos, 1), child = this.children[i];\n        if (!(child instanceof LineView))\n            return null;\n        while (child.children.length) {\n            let { i, off: childOff } = child.childPos(off, 1);\n            for (;; i++) {\n                if (i == child.children.length)\n                    return null;\n                if ((child = child.children[i]).length)\n                    break;\n            }\n            off = childOff;\n        }\n        if (!(child instanceof TextView))\n            return null;\n        let end = findClusterBreak(child.text, off);\n        if (end == off)\n            return null;\n        let rects = textRange(child.dom, off, end).getClientRects();\n        for (let i = 0; i < rects.length; i++) {\n            let rect = rects[i];\n            if (i == rects.length - 1 || rect.top < rect.bottom && rect.left < rect.right)\n                return rect;\n        }\n        return null;\n    }\n    measureVisibleLineHeights(viewport) {\n        let result = [], { from, to } = viewport;\n        let contentWidth = this.view.contentDOM.clientWidth;\n        let isWider = contentWidth > Math.max(this.view.scrollDOM.clientWidth, this.minWidth) + 1;\n        let widest = -1, ltr = this.view.textDirection == Direction.LTR;\n        for (let pos = 0, i = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (end > to)\n                break;\n            if (pos >= from) {\n                let childRect = child.dom.getBoundingClientRect();\n                result.push(childRect.height);\n                if (isWider) {\n                    let last = child.dom.lastChild;\n                    let rects = last ? clientRectsFor(last) : [];\n                    if (rects.length) {\n                        let rect = rects[rects.length - 1];\n                        let width = ltr ? rect.right - childRect.left : childRect.right - rect.left;\n                        if (width > widest) {\n                            widest = width;\n                            this.minWidth = contentWidth;\n                            this.minWidthFrom = pos;\n                            this.minWidthTo = end;\n                        }\n                    }\n                }\n            }\n            pos = end + child.breakAfter;\n        }\n        return result;\n    }\n    textDirectionAt(pos) {\n        let { i } = this.childPos(pos, 1);\n        return getComputedStyle(this.children[i].dom).direction == \"rtl\" ? Direction.RTL : Direction.LTR;\n    }\n    measureTextSize() {\n        for (let child of this.children) {\n            if (child instanceof LineView) {\n                let measure = child.measureTextSize();\n                if (measure)\n                    return measure;\n            }\n        }\n        // If no workable line exists, force a layout of a measurable element\n        let dummy = document.createElement(\"div\"), lineHeight, charWidth, textHeight;\n        dummy.className = \"cm-line\";\n        dummy.style.width = \"99999px\";\n        dummy.style.position = \"absolute\";\n        dummy.textContent = \"abc def ghi jkl mno pqr stu\";\n        this.view.observer.ignore(() => {\n            this.dom.appendChild(dummy);\n            let rect = clientRectsFor(dummy.firstChild)[0];\n            lineHeight = dummy.getBoundingClientRect().height;\n            charWidth = rect ? rect.width / 27 : 7;\n            textHeight = rect ? rect.height : lineHeight;\n            dummy.remove();\n        });\n        return { lineHeight, charWidth, textHeight };\n    }\n    childCursor(pos = this.length) {\n        // Move back to start of last element when possible, so that\n        // `ChildCursor.findPos` doesn't have to deal with the edge case\n        // of being after the last element.\n        let i = this.children.length;\n        if (i)\n            pos -= this.children[--i].length;\n        return new ChildCursor(this.children, pos, i);\n    }\n    computeBlockGapDeco() {\n        let deco = [], vs = this.view.viewState;\n        for (let pos = 0, i = 0;; i++) {\n            let next = i == vs.viewports.length ? null : vs.viewports[i];\n            let end = next ? next.from - 1 : this.length;\n            if (end > pos) {\n                let height = (vs.lineBlockAt(end).bottom - vs.lineBlockAt(pos).top) / this.view.scaleY;\n                deco.push(Decoration.replace({\n                    widget: new BlockGapWidget(height),\n                    block: true,\n                    inclusive: true,\n                    isBlockGap: true,\n                }).range(pos, end));\n            }\n            if (!next)\n                break;\n            pos = next.to + 1;\n        }\n        return Decoration.set(deco);\n    }\n    updateDeco() {\n        let i = 1;\n        let allDeco = this.view.state.facet(decorations).map(d => {\n            let dynamic = this.dynamicDecorationMap[i++] = typeof d == \"function\";\n            return dynamic ? d(this.view) : d;\n        });\n        let dynamicOuter = false, outerDeco = this.view.state.facet(outerDecorations).map((d, i) => {\n            let dynamic = typeof d == \"function\";\n            if (dynamic)\n                dynamicOuter = true;\n            return dynamic ? d(this.view) : d;\n        });\n        if (outerDeco.length) {\n            this.dynamicDecorationMap[i++] = dynamicOuter;\n            allDeco.push(RangeSet.join(outerDeco));\n        }\n        this.decorations = [\n            this.editContextFormatting,\n            ...allDeco,\n            this.computeBlockGapDeco(),\n            this.view.viewState.lineGapDeco\n        ];\n        while (i < this.decorations.length)\n            this.dynamicDecorationMap[i++] = false;\n        return this.decorations;\n    }\n    scrollIntoView(target) {\n        if (target.isSnapshot) {\n            let ref = this.view.viewState.lineBlockAt(target.range.head);\n            this.view.scrollDOM.scrollTop = ref.top - target.yMargin;\n            this.view.scrollDOM.scrollLeft = target.xMargin;\n            return;\n        }\n        for (let handler of this.view.state.facet(scrollHandler)) {\n            try {\n                if (handler(this.view, target.range, target))\n                    return true;\n            }\n            catch (e) {\n                logException(this.view.state, e, \"scroll handler\");\n            }\n        }\n        let { range } = target;\n        let rect = this.coordsAt(range.head, range.empty ? range.assoc : range.head > range.anchor ? -1 : 1), other;\n        if (!rect)\n            return;\n        if (!range.empty && (other = this.coordsAt(range.anchor, range.anchor > range.head ? -1 : 1)))\n            rect = { left: Math.min(rect.left, other.left), top: Math.min(rect.top, other.top),\n                right: Math.max(rect.right, other.right), bottom: Math.max(rect.bottom, other.bottom) };\n        let margins = getScrollMargins(this.view);\n        let targetRect = {\n            left: rect.left - margins.left, top: rect.top - margins.top,\n            right: rect.right + margins.right, bottom: rect.bottom + margins.bottom\n        };\n        let { offsetWidth, offsetHeight } = this.view.scrollDOM;\n        scrollRectIntoView(this.view.scrollDOM, targetRect, range.head < range.anchor ? -1 : 1, target.x, target.y, Math.max(Math.min(target.xMargin, offsetWidth), -offsetWidth), Math.max(Math.min(target.yMargin, offsetHeight), -offsetHeight), this.view.textDirection == Direction.LTR);\n    }\n}\nfunction betweenUneditable(pos) {\n    return pos.node.nodeType == 1 && pos.node.firstChild &&\n        (pos.offset == 0 || pos.node.childNodes[pos.offset - 1].contentEditable == \"false\") &&\n        (pos.offset == pos.node.childNodes.length || pos.node.childNodes[pos.offset].contentEditable == \"false\");\n}\nfunction findCompositionNode(view, headPos) {\n    let sel = view.observer.selectionRange;\n    if (!sel.focusNode)\n        return null;\n    let textBefore = textNodeBefore(sel.focusNode, sel.focusOffset);\n    let textAfter = textNodeAfter(sel.focusNode, sel.focusOffset);\n    let textNode = textBefore || textAfter;\n    if (textAfter && textBefore && textAfter.node != textBefore.node) {\n        let descAfter = ContentView.get(textAfter.node);\n        if (!descAfter || descAfter instanceof TextView && descAfter.text != textAfter.node.nodeValue) {\n            textNode = textAfter;\n        }\n        else if (view.docView.lastCompositionAfterCursor) {\n            let descBefore = ContentView.get(textBefore.node);\n            if (!(!descBefore || descBefore instanceof TextView && descBefore.text != textBefore.node.nodeValue))\n                textNode = textAfter;\n        }\n    }\n    view.docView.lastCompositionAfterCursor = textNode != textBefore;\n    if (!textNode)\n        return null;\n    let from = headPos - textNode.offset;\n    return { from, to: from + textNode.node.nodeValue.length, node: textNode.node };\n}\nfunction findCompositionRange(view, changes, headPos) {\n    let found = findCompositionNode(view, headPos);\n    if (!found)\n        return null;\n    let { node: textNode, from, to } = found, text = textNode.nodeValue;\n    // Don't try to preserve multi-line compositions\n    if (/[\\n\\r]/.test(text))\n        return null;\n    if (view.state.doc.sliceString(found.from, found.to) != text)\n        return null;\n    let inv = changes.invertedDesc;\n    let range = new ChangedRange(inv.mapPos(from), inv.mapPos(to), from, to);\n    let marks = [];\n    for (let parent = textNode.parentNode;; parent = parent.parentNode) {\n        let parentView = ContentView.get(parent);\n        if (parentView instanceof MarkView)\n            marks.push({ node: parent, deco: parentView.mark });\n        else if (parentView instanceof LineView || parent.nodeName == \"DIV\" && parent.parentNode == view.contentDOM)\n            return { range, text: textNode, marks, line: parent };\n        else if (parent != view.contentDOM)\n            marks.push({ node: parent, deco: new MarkDecoration({\n                    inclusive: true,\n                    attributes: getAttrs(parent),\n                    tagName: parent.tagName.toLowerCase()\n                }) });\n        else\n            return null;\n    }\n}\nfunction nextToUneditable(node, offset) {\n    if (node.nodeType != 1)\n        return 0;\n    return (offset && node.childNodes[offset - 1].contentEditable == \"false\" ? 1 /* NextTo.Before */ : 0) |\n        (offset < node.childNodes.length && node.childNodes[offset].contentEditable == \"false\" ? 2 /* NextTo.After */ : 0);\n}\nlet DecorationComparator$1 = class DecorationComparator {\n    constructor() {\n        this.changes = [];\n    }\n    compareRange(from, to) { addRange(from, to, this.changes); }\n    comparePoint(from, to) { addRange(from, to, this.changes); }\n    boundChange(pos) { addRange(pos, pos, this.changes); }\n};\nfunction findChangedDeco(a, b, diff) {\n    let comp = new DecorationComparator$1;\n    RangeSet.compare(a, b, diff, comp);\n    return comp.changes;\n}\nfunction inUneditable(node, inside) {\n    for (let cur = node; cur && cur != inside; cur = cur.assignedSlot || cur.parentNode) {\n        if (cur.nodeType == 1 && cur.contentEditable == 'false') {\n            return true;\n        }\n    }\n    return false;\n}\nfunction touchesComposition(changes, composition) {\n    let touched = false;\n    if (composition)\n        changes.iterChangedRanges((from, to) => {\n            if (from < composition.to && to > composition.from)\n                touched = true;\n        });\n    return touched;\n}\n\nfunction groupAt(state, pos, bias = 1) {\n    let categorize = state.charCategorizer(pos);\n    let line = state.doc.lineAt(pos), linePos = pos - line.from;\n    if (line.length == 0)\n        return EditorSelection.cursor(pos);\n    if (linePos == 0)\n        bias = 1;\n    else if (linePos == line.length)\n        bias = -1;\n    let from = linePos, to = linePos;\n    if (bias < 0)\n        from = findClusterBreak(line.text, linePos, false);\n    else\n        to = findClusterBreak(line.text, linePos);\n    let cat = categorize(line.text.slice(from, to));\n    while (from > 0) {\n        let prev = findClusterBreak(line.text, from, false);\n        if (categorize(line.text.slice(prev, from)) != cat)\n            break;\n        from = prev;\n    }\n    while (to < line.length) {\n        let next = findClusterBreak(line.text, to);\n        if (categorize(line.text.slice(to, next)) != cat)\n            break;\n        to = next;\n    }\n    return EditorSelection.range(from + line.from, to + line.from);\n}\n// Search the DOM for the {node, offset} position closest to the given\n// coordinates. Very inefficient and crude, but can usually be avoided\n// by calling caret(Position|Range)FromPoint instead.\nfunction getdx(x, rect) {\n    return rect.left > x ? rect.left - x : Math.max(0, x - rect.right);\n}\nfunction getdy(y, rect) {\n    return rect.top > y ? rect.top - y : Math.max(0, y - rect.bottom);\n}\nfunction yOverlap(a, b) {\n    return a.top < b.bottom - 1 && a.bottom > b.top + 1;\n}\nfunction upTop(rect, top) {\n    return top < rect.top ? { top, left: rect.left, right: rect.right, bottom: rect.bottom } : rect;\n}\nfunction upBot(rect, bottom) {\n    return bottom > rect.bottom ? { top: rect.top, left: rect.left, right: rect.right, bottom } : rect;\n}\nfunction domPosAtCoords(parent, x, y) {\n    let closest, closestRect, closestX, closestY, closestOverlap = false;\n    let above, below, aboveRect, belowRect;\n    for (let child = parent.firstChild; child; child = child.nextSibling) {\n        let rects = clientRectsFor(child);\n        for (let i = 0; i < rects.length; i++) {\n            let rect = rects[i];\n            if (closestRect && yOverlap(closestRect, rect))\n                rect = upTop(upBot(rect, closestRect.bottom), closestRect.top);\n            let dx = getdx(x, rect), dy = getdy(y, rect);\n            if (dx == 0 && dy == 0)\n                return child.nodeType == 3 ? domPosInText(child, x, y) : domPosAtCoords(child, x, y);\n            if (!closest || closestY > dy || closestY == dy && closestX > dx) {\n                closest = child;\n                closestRect = rect;\n                closestX = dx;\n                closestY = dy;\n                closestOverlap = !dx ? true : x < rect.left ? i > 0 : i < rects.length - 1;\n            }\n            if (dx == 0) {\n                if (y > rect.bottom && (!aboveRect || aboveRect.bottom < rect.bottom)) {\n                    above = child;\n                    aboveRect = rect;\n                }\n                else if (y < rect.top && (!belowRect || belowRect.top > rect.top)) {\n                    below = child;\n                    belowRect = rect;\n                }\n            }\n            else if (aboveRect && yOverlap(aboveRect, rect)) {\n                aboveRect = upBot(aboveRect, rect.bottom);\n            }\n            else if (belowRect && yOverlap(belowRect, rect)) {\n                belowRect = upTop(belowRect, rect.top);\n            }\n        }\n    }\n    if (aboveRect && aboveRect.bottom >= y) {\n        closest = above;\n        closestRect = aboveRect;\n    }\n    else if (belowRect && belowRect.top <= y) {\n        closest = below;\n        closestRect = belowRect;\n    }\n    if (!closest)\n        return { node: parent, offset: 0 };\n    let clipX = Math.max(closestRect.left, Math.min(closestRect.right, x));\n    if (closest.nodeType == 3)\n        return domPosInText(closest, clipX, y);\n    if (closestOverlap && closest.contentEditable != \"false\")\n        return domPosAtCoords(closest, clipX, y);\n    let offset = Array.prototype.indexOf.call(parent.childNodes, closest) +\n        (x >= (closestRect.left + closestRect.right) / 2 ? 1 : 0);\n    return { node: parent, offset };\n}\nfunction domPosInText(node, x, y) {\n    let len = node.nodeValue.length;\n    let closestOffset = -1, closestDY = 1e9, generalSide = 0;\n    for (let i = 0; i < len; i++) {\n        let rects = textRange(node, i, i + 1).getClientRects();\n        for (let j = 0; j < rects.length; j++) {\n            let rect = rects[j];\n            if (rect.top == rect.bottom)\n                continue;\n            if (!generalSide)\n                generalSide = x - rect.left;\n            let dy = (rect.top > y ? rect.top - y : y - rect.bottom) - 1;\n            if (rect.left - 1 <= x && rect.right + 1 >= x && dy < closestDY) {\n                let right = x >= (rect.left + rect.right) / 2, after = right;\n                if (browser.chrome || browser.gecko) {\n                    // Check for RTL on browsers that support getting client\n                    // rects for empty ranges.\n                    let rectBefore = textRange(node, i).getBoundingClientRect();\n                    if (rectBefore.left == rect.right)\n                        after = !right;\n                }\n                if (dy <= 0)\n                    return { node, offset: i + (after ? 1 : 0) };\n                closestOffset = i + (after ? 1 : 0);\n                closestDY = dy;\n            }\n        }\n    }\n    return { node, offset: closestOffset > -1 ? closestOffset : generalSide > 0 ? node.nodeValue.length : 0 };\n}\nfunction posAtCoords(view, coords, precise, bias = -1) {\n    var _a, _b;\n    let content = view.contentDOM.getBoundingClientRect(), docTop = content.top + view.viewState.paddingTop;\n    let block, { docHeight } = view.viewState;\n    let { x, y } = coords, yOffset = y - docTop;\n    if (yOffset < 0)\n        return 0;\n    if (yOffset > docHeight)\n        return view.state.doc.length;\n    // Scan for a text block near the queried y position\n    for (let halfLine = view.viewState.heightOracle.textHeight / 2, bounced = false;;) {\n        block = view.elementAtHeight(yOffset);\n        if (block.type == BlockType.Text)\n            break;\n        for (;;) {\n            // Move the y position out of this block\n            yOffset = bias > 0 ? block.bottom + halfLine : block.top - halfLine;\n            if (yOffset >= 0 && yOffset <= docHeight)\n                break;\n            // If the document consists entirely of replaced widgets, we\n            // won't find a text block, so return 0\n            if (bounced)\n                return precise ? null : 0;\n            bounced = true;\n            bias = -bias;\n        }\n    }\n    y = docTop + yOffset;\n    let lineStart = block.from;\n    // If this is outside of the rendered viewport, we can't determine a position\n    if (lineStart < view.viewport.from)\n        return view.viewport.from == 0 ? 0 : precise ? null : posAtCoordsImprecise(view, content, block, x, y);\n    if (lineStart > view.viewport.to)\n        return view.viewport.to == view.state.doc.length ? view.state.doc.length :\n            precise ? null : posAtCoordsImprecise(view, content, block, x, y);\n    // Prefer ShadowRootOrDocument.elementFromPoint if present, fall back to document if not\n    let doc = view.dom.ownerDocument;\n    let root = view.root.elementFromPoint ? view.root : doc;\n    let element = root.elementFromPoint(x, y);\n    if (element && !view.contentDOM.contains(element))\n        element = null;\n    // If the element is unexpected, clip x at the sides of the content area and try again\n    if (!element) {\n        x = Math.max(content.left + 1, Math.min(content.right - 1, x));\n        element = root.elementFromPoint(x, y);\n        if (element && !view.contentDOM.contains(element))\n            element = null;\n    }\n    // There's visible editor content under the point, so we can try\n    // using caret(Position|Range)FromPoint as a shortcut\n    let node, offset = -1;\n    if (element && ((_a = view.docView.nearest(element)) === null || _a === void 0 ? void 0 : _a.isEditable) != false) {\n        if (doc.caretPositionFromPoint) {\n            let pos = doc.caretPositionFromPoint(x, y);\n            if (pos)\n                ({ offsetNode: node, offset } = pos);\n        }\n        else if (doc.caretRangeFromPoint) {\n            let range = doc.caretRangeFromPoint(x, y);\n            if (range) {\n                ({ startContainer: node, startOffset: offset } = range);\n                if (!view.contentDOM.contains(node) ||\n                    browser.safari && isSuspiciousSafariCaretResult(node, offset, x) ||\n                    browser.chrome && isSuspiciousChromeCaretResult(node, offset, x))\n                    node = undefined;\n            }\n        }\n        // Chrome will return offsets into <input> elements without child\n        // nodes, which will lead to a null deref below, so clip the\n        // offset to the node size.\n        if (node)\n            offset = Math.min(maxOffset(node), offset);\n    }\n    // No luck, do our own (potentially expensive) search\n    if (!node || !view.docView.dom.contains(node)) {\n        let line = LineView.find(view.docView, lineStart);\n        if (!line)\n            return yOffset > block.top + block.height / 2 ? block.to : block.from;\n        ({ node, offset } = domPosAtCoords(line.dom, x, y));\n    }\n    let nearest = view.docView.nearest(node);\n    if (!nearest)\n        return null;\n    if (nearest.isWidget && ((_b = nearest.dom) === null || _b === void 0 ? void 0 : _b.nodeType) == 1) {\n        let rect = nearest.dom.getBoundingClientRect();\n        return coords.y < rect.top || coords.y <= rect.bottom && coords.x <= (rect.left + rect.right) / 2\n            ? nearest.posAtStart : nearest.posAtEnd;\n    }\n    else {\n        return nearest.localPosFromDOM(node, offset) + nearest.posAtStart;\n    }\n}\nfunction posAtCoordsImprecise(view, contentRect, block, x, y) {\n    let into = Math.round((x - contentRect.left) * view.defaultCharacterWidth);\n    if (view.lineWrapping && block.height > view.defaultLineHeight * 1.5) {\n        let textHeight = view.viewState.heightOracle.textHeight;\n        let line = Math.floor((y - block.top - (view.defaultLineHeight - textHeight) * 0.5) / textHeight);\n        into += line * view.viewState.heightOracle.lineLength;\n    }\n    let content = view.state.sliceDoc(block.from, block.to);\n    return block.from + findColumn(content, into, view.state.tabSize);\n}\n// In case of a high line height, Safari's caretRangeFromPoint treats\n// the space between lines as belonging to the last character of the\n// line before. This is used to detect such a result so that it can be\n// ignored (issue #401).\nfunction isSuspiciousSafariCaretResult(node, offset, x) {\n    let len, scan = node;\n    if (node.nodeType != 3 || offset != (len = node.nodeValue.length))\n        return false;\n    for (;;) { // Check that there is no content after this node\n        let next = scan.nextSibling;\n        if (next) {\n            if (next.nodeName == \"BR\")\n                break;\n            return false;\n        }\n        else {\n            let parent = scan.parentNode;\n            if (!parent || parent.nodeName == \"DIV\")\n                break;\n            scan = parent;\n        }\n    }\n    return textRange(node, len - 1, len).getBoundingClientRect().right > x;\n}\n// Chrome will move positions between lines to the start of the next line\nfunction isSuspiciousChromeCaretResult(node, offset, x) {\n    if (offset != 0)\n        return false;\n    for (let cur = node;;) {\n        let parent = cur.parentNode;\n        if (!parent || parent.nodeType != 1 || parent.firstChild != cur)\n            return false;\n        if (parent.classList.contains(\"cm-line\"))\n            break;\n        cur = parent;\n    }\n    let rect = node.nodeType == 1 ? node.getBoundingClientRect()\n        : textRange(node, 0, Math.max(node.nodeValue.length, 1)).getBoundingClientRect();\n    return x - rect.left > 5;\n}\nfunction blockAt(view, pos, side) {\n    let line = view.lineBlockAt(pos);\n    if (Array.isArray(line.type)) {\n        let best;\n        for (let l of line.type) {\n            if (l.from > pos)\n                break;\n            if (l.to < pos)\n                continue;\n            if (l.from < pos && l.to > pos)\n                return l;\n            if (!best || (l.type == BlockType.Text && (best.type != l.type || (side < 0 ? l.from < pos : l.to > pos))))\n                best = l;\n        }\n        return best || line;\n    }\n    return line;\n}\nfunction moveToLineBoundary(view, start, forward, includeWrap) {\n    let line = blockAt(view, start.head, start.assoc || -1);\n    let coords = !includeWrap || line.type != BlockType.Text || !(view.lineWrapping || line.widgetLineBreaks) ? null\n        : view.coordsAtPos(start.assoc < 0 && start.head > line.from ? start.head - 1 : start.head);\n    if (coords) {\n        let editorRect = view.dom.getBoundingClientRect();\n        let direction = view.textDirectionAt(line.from);\n        let pos = view.posAtCoords({ x: forward == (direction == Direction.LTR) ? editorRect.right - 1 : editorRect.left + 1,\n            y: (coords.top + coords.bottom) / 2 });\n        if (pos != null)\n            return EditorSelection.cursor(pos, forward ? -1 : 1);\n    }\n    return EditorSelection.cursor(forward ? line.to : line.from, forward ? -1 : 1);\n}\nfunction moveByChar(view, start, forward, by) {\n    let line = view.state.doc.lineAt(start.head), spans = view.bidiSpans(line);\n    let direction = view.textDirectionAt(line.from);\n    for (let cur = start, check = null;;) {\n        let next = moveVisually(line, spans, direction, cur, forward), char = movedOver;\n        if (!next) {\n            if (line.number == (forward ? view.state.doc.lines : 1))\n                return cur;\n            char = \"\\n\";\n            line = view.state.doc.line(line.number + (forward ? 1 : -1));\n            spans = view.bidiSpans(line);\n            next = view.visualLineSide(line, !forward);\n        }\n        if (!check) {\n            if (!by)\n                return next;\n            check = by(char);\n        }\n        else if (!check(char)) {\n            return cur;\n        }\n        cur = next;\n    }\n}\nfunction byGroup(view, pos, start) {\n    let categorize = view.state.charCategorizer(pos);\n    let cat = categorize(start);\n    return (next) => {\n        let nextCat = categorize(next);\n        if (cat == CharCategory.Space)\n            cat = nextCat;\n        return cat == nextCat;\n    };\n}\nfunction moveVertically(view, start, forward, distance) {\n    let startPos = start.head, dir = forward ? 1 : -1;\n    if (startPos == (forward ? view.state.doc.length : 0))\n        return EditorSelection.cursor(startPos, start.assoc);\n    let goal = start.goalColumn, startY;\n    let rect = view.contentDOM.getBoundingClientRect();\n    let startCoords = view.coordsAtPos(startPos, start.assoc || -1), docTop = view.documentTop;\n    if (startCoords) {\n        if (goal == null)\n            goal = startCoords.left - rect.left;\n        startY = dir < 0 ? startCoords.top : startCoords.bottom;\n    }\n    else {\n        let line = view.viewState.lineBlockAt(startPos);\n        if (goal == null)\n            goal = Math.min(rect.right - rect.left, view.defaultCharacterWidth * (startPos - line.from));\n        startY = (dir < 0 ? line.top : line.bottom) + docTop;\n    }\n    let resolvedGoal = rect.left + goal;\n    let dist = distance !== null && distance !== void 0 ? distance : (view.viewState.heightOracle.textHeight >> 1);\n    for (let extra = 0;; extra += 10) {\n        let curY = startY + (dist + extra) * dir;\n        let pos = posAtCoords(view, { x: resolvedGoal, y: curY }, false, dir);\n        if (curY < rect.top || curY > rect.bottom || (dir < 0 ? pos < startPos : pos > startPos)) {\n            let charRect = view.docView.coordsForChar(pos);\n            let assoc = !charRect || curY < charRect.top ? -1 : 1;\n            return EditorSelection.cursor(pos, assoc, undefined, goal);\n        }\n    }\n}\nfunction skipAtomicRanges(atoms, pos, bias) {\n    for (;;) {\n        let moved = 0;\n        for (let set of atoms) {\n            set.between(pos - 1, pos + 1, (from, to, value) => {\n                if (pos > from && pos < to) {\n                    let side = moved || bias || (pos - from < to - pos ? -1 : 1);\n                    pos = side < 0 ? from : to;\n                    moved = side;\n                }\n            });\n        }\n        if (!moved)\n            return pos;\n    }\n}\nfunction skipAtomsForSelection(atoms, sel) {\n    let ranges = null;\n    for (let i = 0; i < sel.ranges.length; i++) {\n        let range = sel.ranges[i], updated = null;\n        if (range.empty) {\n            let pos = skipAtomicRanges(atoms, range.from, 0);\n            if (pos != range.from)\n                updated = EditorSelection.cursor(pos, -1);\n        }\n        else {\n            let from = skipAtomicRanges(atoms, range.from, -1);\n            let to = skipAtomicRanges(atoms, range.to, 1);\n            if (from != range.from || to != range.to)\n                updated = EditorSelection.range(range.from == range.anchor ? from : to, range.from == range.head ? from : to);\n        }\n        if (updated) {\n            if (!ranges)\n                ranges = sel.ranges.slice();\n            ranges[i] = updated;\n        }\n    }\n    return ranges ? EditorSelection.create(ranges, sel.mainIndex) : sel;\n}\nfunction skipAtoms(view, oldPos, pos) {\n    let newPos = skipAtomicRanges(view.state.facet(atomicRanges).map(f => f(view)), pos.from, oldPos.head > pos.from ? -1 : 1);\n    return newPos == pos.from ? pos : EditorSelection.cursor(newPos, newPos < pos.from ? 1 : -1);\n}\n\nconst LineBreakPlaceholder = \"\\uffff\";\nclass DOMReader {\n    constructor(points, state) {\n        this.points = points;\n        this.text = \"\";\n        this.lineSeparator = state.facet(EditorState.lineSeparator);\n    }\n    append(text) {\n        this.text += text;\n    }\n    lineBreak() {\n        this.text += LineBreakPlaceholder;\n    }\n    readRange(start, end) {\n        if (!start)\n            return this;\n        let parent = start.parentNode;\n        for (let cur = start;;) {\n            this.findPointBefore(parent, cur);\n            let oldLen = this.text.length;\n            this.readNode(cur);\n            let next = cur.nextSibling;\n            if (next == end)\n                break;\n            let view = ContentView.get(cur), nextView = ContentView.get(next);\n            if (view && nextView ? view.breakAfter :\n                (view ? view.breakAfter : isBlockElement(cur)) ||\n                    (isBlockElement(next) && (cur.nodeName != \"BR\" || cur.cmIgnore) && this.text.length > oldLen))\n                this.lineBreak();\n            cur = next;\n        }\n        this.findPointBefore(parent, end);\n        return this;\n    }\n    readTextNode(node) {\n        let text = node.nodeValue;\n        for (let point of this.points)\n            if (point.node == node)\n                point.pos = this.text.length + Math.min(point.offset, text.length);\n        for (let off = 0, re = this.lineSeparator ? null : /\\r\\n?|\\n/g;;) {\n            let nextBreak = -1, breakSize = 1, m;\n            if (this.lineSeparator) {\n                nextBreak = text.indexOf(this.lineSeparator, off);\n                breakSize = this.lineSeparator.length;\n            }\n            else if (m = re.exec(text)) {\n                nextBreak = m.index;\n                breakSize = m[0].length;\n            }\n            this.append(text.slice(off, nextBreak < 0 ? text.length : nextBreak));\n            if (nextBreak < 0)\n                break;\n            this.lineBreak();\n            if (breakSize > 1)\n                for (let point of this.points)\n                    if (point.node == node && point.pos > this.text.length)\n                        point.pos -= breakSize - 1;\n            off = nextBreak + breakSize;\n        }\n    }\n    readNode(node) {\n        if (node.cmIgnore)\n            return;\n        let view = ContentView.get(node);\n        let fromView = view && view.overrideDOMText;\n        if (fromView != null) {\n            this.findPointInside(node, fromView.length);\n            for (let i = fromView.iter(); !i.next().done;) {\n                if (i.lineBreak)\n                    this.lineBreak();\n                else\n                    this.append(i.value);\n            }\n        }\n        else if (node.nodeType == 3) {\n            this.readTextNode(node);\n        }\n        else if (node.nodeName == \"BR\") {\n            if (node.nextSibling)\n                this.lineBreak();\n        }\n        else if (node.nodeType == 1) {\n            this.readRange(node.firstChild, null);\n        }\n    }\n    findPointBefore(node, next) {\n        for (let point of this.points)\n            if (point.node == node && node.childNodes[point.offset] == next)\n                point.pos = this.text.length;\n    }\n    findPointInside(node, length) {\n        for (let point of this.points)\n            if (node.nodeType == 3 ? point.node == node : node.contains(point.node))\n                point.pos = this.text.length + (isAtEnd(node, point.node, point.offset) ? length : 0);\n    }\n}\nfunction isAtEnd(parent, node, offset) {\n    for (;;) {\n        if (!node || offset < maxOffset(node))\n            return false;\n        if (node == parent)\n            return true;\n        offset = domIndex(node) + 1;\n        node = node.parentNode;\n    }\n}\nclass DOMPoint {\n    constructor(node, offset) {\n        this.node = node;\n        this.offset = offset;\n        this.pos = -1;\n    }\n}\n\nclass DOMChange {\n    constructor(view, start, end, typeOver) {\n        this.typeOver = typeOver;\n        this.bounds = null;\n        this.text = \"\";\n        this.domChanged = start > -1;\n        let { impreciseHead: iHead, impreciseAnchor: iAnchor } = view.docView;\n        if (view.state.readOnly && start > -1) {\n            // Ignore changes when the editor is read-only\n            this.newSel = null;\n        }\n        else if (start > -1 && (this.bounds = view.docView.domBoundsAround(start, end, 0))) {\n            let selPoints = iHead || iAnchor ? [] : selectionPoints(view);\n            let reader = new DOMReader(selPoints, view.state);\n            reader.readRange(this.bounds.startDOM, this.bounds.endDOM);\n            this.text = reader.text;\n            this.newSel = selectionFromPoints(selPoints, this.bounds.from);\n        }\n        else {\n            let domSel = view.observer.selectionRange;\n            let head = iHead && iHead.node == domSel.focusNode && iHead.offset == domSel.focusOffset ||\n                !contains(view.contentDOM, domSel.focusNode)\n                ? view.state.selection.main.head\n                : view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset);\n            let anchor = iAnchor && iAnchor.node == domSel.anchorNode && iAnchor.offset == domSel.anchorOffset ||\n                !contains(view.contentDOM, domSel.anchorNode)\n                ? view.state.selection.main.anchor\n                : view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset);\n            // iOS will refuse to select the block gaps when doing\n            // select-all.\n            // Chrome will put the selection *inside* them, confusing\n            // posFromDOM\n            let vp = view.viewport;\n            if ((browser.ios || browser.chrome) && view.state.selection.main.empty && head != anchor &&\n                (vp.from > 0 || vp.to < view.state.doc.length)) {\n                let from = Math.min(head, anchor), to = Math.max(head, anchor);\n                let offFrom = vp.from - from, offTo = vp.to - to;\n                if ((offFrom == 0 || offFrom == 1 || from == 0) && (offTo == 0 || offTo == -1 || to == view.state.doc.length)) {\n                    head = 0;\n                    anchor = view.state.doc.length;\n                }\n            }\n            this.newSel = EditorSelection.single(anchor, head);\n        }\n    }\n}\nfunction applyDOMChange(view, domChange) {\n    let change;\n    let { newSel } = domChange, sel = view.state.selection.main;\n    let lastKey = view.inputState.lastKeyTime > Date.now() - 100 ? view.inputState.lastKeyCode : -1;\n    if (domChange.bounds) {\n        let { from, to } = domChange.bounds;\n        let preferredPos = sel.from, preferredSide = null;\n        // Prefer anchoring to end when Backspace is pressed (or, on\n        // Android, when something was deleted)\n        if (lastKey === 8 || browser.android && domChange.text.length < to - from) {\n            preferredPos = sel.to;\n            preferredSide = \"end\";\n        }\n        let diff = findDiff(view.state.doc.sliceString(from, to, LineBreakPlaceholder), domChange.text, preferredPos - from, preferredSide);\n        if (diff) {\n            // Chrome inserts two newlines when pressing shift-enter at the\n            // end of a line. DomChange drops one of those.\n            if (browser.chrome && lastKey == 13 &&\n                diff.toB == diff.from + 2 && domChange.text.slice(diff.from, diff.toB) == LineBreakPlaceholder + LineBreakPlaceholder)\n                diff.toB--;\n            change = { from: from + diff.from, to: from + diff.toA,\n                insert: Text.of(domChange.text.slice(diff.from, diff.toB).split(LineBreakPlaceholder)) };\n        }\n    }\n    else if (newSel && (!view.hasFocus && view.state.facet(editable) || newSel.main.eq(sel))) {\n        newSel = null;\n    }\n    if (!change && !newSel)\n        return false;\n    if (!change && domChange.typeOver && !sel.empty && newSel && newSel.main.empty) {\n        // Heuristic to notice typing over a selected character\n        change = { from: sel.from, to: sel.to, insert: view.state.doc.slice(sel.from, sel.to) };\n    }\n    else if ((browser.mac || browser.android) && change && change.from == change.to && change.from == sel.head - 1 &&\n        /^\\. ?$/.test(change.insert.toString()) && view.contentDOM.getAttribute(\"autocorrect\") == \"off\") {\n        // Detect insert-period-on-double-space Mac and Android behavior,\n        // and transform it into a regular space insert.\n        if (newSel && change.insert.length == 2)\n            newSel = EditorSelection.single(newSel.main.anchor - 1, newSel.main.head - 1);\n        change = { from: change.from, to: change.to, insert: Text.of([change.insert.toString().replace(\".\", \" \")]) };\n    }\n    else if (change && change.from >= sel.from && change.to <= sel.to &&\n        (change.from != sel.from || change.to != sel.to) &&\n        (sel.to - sel.from) - (change.to - change.from) <= 4) {\n        // If the change is inside the selection and covers most of it,\n        // assume it is a selection replace (with identical characters at\n        // the start/end not included in the diff)\n        change = {\n            from: sel.from, to: sel.to,\n            insert: view.state.doc.slice(sel.from, change.from).append(change.insert).append(view.state.doc.slice(change.to, sel.to))\n        };\n    }\n    else if (browser.chrome && change && change.from == change.to && change.from == sel.head &&\n        change.insert.toString() == \"\\n \" && view.lineWrapping) {\n        // In Chrome, if you insert a space at the start of a wrapped\n        // line, it will actually insert a newline and a space, causing a\n        // bogus new line to be created in CodeMirror (#968)\n        if (newSel)\n            newSel = EditorSelection.single(newSel.main.anchor - 1, newSel.main.head - 1);\n        change = { from: sel.from, to: sel.to, insert: Text.of([\" \"]) };\n    }\n    if (change) {\n        return applyDOMChangeInner(view, change, newSel, lastKey);\n    }\n    else if (newSel && !newSel.main.eq(sel)) {\n        let scrollIntoView = false, userEvent = \"select\";\n        if (view.inputState.lastSelectionTime > Date.now() - 50) {\n            if (view.inputState.lastSelectionOrigin == \"select\")\n                scrollIntoView = true;\n            userEvent = view.inputState.lastSelectionOrigin;\n            if (userEvent == \"select.pointer\")\n                newSel = skipAtomsForSelection(view.state.facet(atomicRanges).map(f => f(view)), newSel);\n        }\n        view.dispatch({ selection: newSel, scrollIntoView, userEvent });\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction applyDOMChangeInner(view, change, newSel, lastKey = -1) {\n    if (browser.ios && view.inputState.flushIOSKey(change))\n        return true;\n    let sel = view.state.selection.main;\n    // Android browsers don't fire reasonable key events for enter,\n    // backspace, or delete. So this detects changes that look like\n    // they're caused by those keys, and reinterprets them as key\n    // events. (Some of these keys are also handled by beforeinput\n    // events and the pendingAndroidKey mechanism, but that's not\n    // reliable in all situations.)\n    if (browser.android &&\n        ((change.to == sel.to &&\n            // GBoard will sometimes remove a space it just inserted\n            // after a completion when you press enter\n            (change.from == sel.from || change.from == sel.from - 1 && view.state.sliceDoc(change.from, sel.from) == \" \") &&\n            change.insert.length == 1 && change.insert.lines == 2 &&\n            dispatchKey(view.contentDOM, \"Enter\", 13)) ||\n            ((change.from == sel.from - 1 && change.to == sel.to && change.insert.length == 0 ||\n                lastKey == 8 && change.insert.length < change.to - change.from && change.to > sel.head) &&\n                dispatchKey(view.contentDOM, \"Backspace\", 8)) ||\n            (change.from == sel.from && change.to == sel.to + 1 && change.insert.length == 0 &&\n                dispatchKey(view.contentDOM, \"Delete\", 46))))\n        return true;\n    let text = change.insert.toString();\n    if (view.inputState.composing >= 0)\n        view.inputState.composing++;\n    let defaultTr;\n    let defaultInsert = () => defaultTr || (defaultTr = applyDefaultInsert(view, change, newSel));\n    if (!view.state.facet(inputHandler).some(h => h(view, change.from, change.to, text, defaultInsert)))\n        view.dispatch(defaultInsert());\n    return true;\n}\nfunction applyDefaultInsert(view, change, newSel) {\n    let tr, startState = view.state, sel = startState.selection.main;\n    if (change.from >= sel.from && change.to <= sel.to && change.to - change.from >= (sel.to - sel.from) / 3 &&\n        (!newSel || newSel.main.empty && newSel.main.from == change.from + change.insert.length) &&\n        view.inputState.composing < 0) {\n        let before = sel.from < change.from ? startState.sliceDoc(sel.from, change.from) : \"\";\n        let after = sel.to > change.to ? startState.sliceDoc(change.to, sel.to) : \"\";\n        tr = startState.replaceSelection(view.state.toText(before + change.insert.sliceString(0, undefined, view.state.lineBreak) + after));\n    }\n    else {\n        let changes = startState.changes(change);\n        let mainSel = newSel && newSel.main.to <= changes.newLength ? newSel.main : undefined;\n        // Try to apply a composition change to all cursors\n        if (startState.selection.ranges.length > 1 && view.inputState.composing >= 0 &&\n            change.to <= sel.to && change.to >= sel.to - 10) {\n            let replaced = view.state.sliceDoc(change.from, change.to);\n            let compositionRange, composition = newSel && findCompositionNode(view, newSel.main.head);\n            if (composition) {\n                let dLen = change.insert.length - (change.to - change.from);\n                compositionRange = { from: composition.from, to: composition.to - dLen };\n            }\n            else {\n                compositionRange = view.state.doc.lineAt(sel.head);\n            }\n            let offset = sel.to - change.to, size = sel.to - sel.from;\n            tr = startState.changeByRange(range => {\n                if (range.from == sel.from && range.to == sel.to)\n                    return { changes, range: mainSel || range.map(changes) };\n                let to = range.to - offset, from = to - replaced.length;\n                if (range.to - range.from != size || view.state.sliceDoc(from, to) != replaced ||\n                    // Unfortunately, there's no way to make multiple\n                    // changes in the same node work without aborting\n                    // composition, so cursors in the composition range are\n                    // ignored.\n                    range.to >= compositionRange.from && range.from <= compositionRange.to)\n                    return { range };\n                let rangeChanges = startState.changes({ from, to, insert: change.insert }), selOff = range.to - sel.to;\n                return {\n                    changes: rangeChanges,\n                    range: !mainSel ? range.map(rangeChanges) :\n                        EditorSelection.range(Math.max(0, mainSel.anchor + selOff), Math.max(0, mainSel.head + selOff))\n                };\n            });\n        }\n        else {\n            tr = {\n                changes,\n                selection: mainSel && startState.selection.replaceRange(mainSel)\n            };\n        }\n    }\n    let userEvent = \"input.type\";\n    if (view.composing ||\n        view.inputState.compositionPendingChange && view.inputState.compositionEndedAt > Date.now() - 50) {\n        view.inputState.compositionPendingChange = false;\n        userEvent += \".compose\";\n        if (view.inputState.compositionFirstChange) {\n            userEvent += \".start\";\n            view.inputState.compositionFirstChange = false;\n        }\n    }\n    return startState.update(tr, { userEvent, scrollIntoView: true });\n}\nfunction findDiff(a, b, preferredPos, preferredSide) {\n    let minLen = Math.min(a.length, b.length);\n    let from = 0;\n    while (from < minLen && a.charCodeAt(from) == b.charCodeAt(from))\n        from++;\n    if (from == minLen && a.length == b.length)\n        return null;\n    let toA = a.length, toB = b.length;\n    while (toA > 0 && toB > 0 && a.charCodeAt(toA - 1) == b.charCodeAt(toB - 1)) {\n        toA--;\n        toB--;\n    }\n    if (preferredSide == \"end\") {\n        let adjust = Math.max(0, from - Math.min(toA, toB));\n        preferredPos -= toA + adjust - from;\n    }\n    if (toA < from && a.length < b.length) {\n        let move = preferredPos <= from && preferredPos >= toA ? from - preferredPos : 0;\n        from -= move;\n        toB = from + (toB - toA);\n        toA = from;\n    }\n    else if (toB < from) {\n        let move = preferredPos <= from && preferredPos >= toB ? from - preferredPos : 0;\n        from -= move;\n        toA = from + (toA - toB);\n        toB = from;\n    }\n    return { from, toA, toB };\n}\nfunction selectionPoints(view) {\n    let result = [];\n    if (view.root.activeElement != view.contentDOM)\n        return result;\n    let { anchorNode, anchorOffset, focusNode, focusOffset } = view.observer.selectionRange;\n    if (anchorNode) {\n        result.push(new DOMPoint(anchorNode, anchorOffset));\n        if (focusNode != anchorNode || focusOffset != anchorOffset)\n            result.push(new DOMPoint(focusNode, focusOffset));\n    }\n    return result;\n}\nfunction selectionFromPoints(points, base) {\n    if (points.length == 0)\n        return null;\n    let anchor = points[0].pos, head = points.length == 2 ? points[1].pos : anchor;\n    return anchor > -1 && head > -1 ? EditorSelection.single(anchor + base, head + base) : null;\n}\n\nclass InputState {\n    setSelectionOrigin(origin) {\n        this.lastSelectionOrigin = origin;\n        this.lastSelectionTime = Date.now();\n    }\n    constructor(view) {\n        this.view = view;\n        this.lastKeyCode = 0;\n        this.lastKeyTime = 0;\n        this.lastTouchTime = 0;\n        this.lastFocusTime = 0;\n        this.lastScrollTop = 0;\n        this.lastScrollLeft = 0;\n        // On iOS, some keys need to have their default behavior happen\n        // (after which we retroactively handle them and reset the DOM) to\n        // avoid messing up the virtual keyboard state.\n        this.pendingIOSKey = undefined;\n        /**\n        When enabled (>-1), tab presses are not given to key handlers,\n        leaving the browser's default behavior. If >0, the mode expires\n        at that timestamp, and any other keypress clears it.\n        Esc enables temporary tab focus mode for two seconds when not\n        otherwise handled.\n        */\n        this.tabFocusMode = -1;\n        this.lastSelectionOrigin = null;\n        this.lastSelectionTime = 0;\n        this.lastContextMenu = 0;\n        this.scrollHandlers = [];\n        this.handlers = Object.create(null);\n        // -1 means not in a composition. Otherwise, this counts the number\n        // of changes made during the composition. The count is used to\n        // avoid treating the start state of the composition, before any\n        // changes have been made, as part of the composition.\n        this.composing = -1;\n        // Tracks whether the next change should be marked as starting the\n        // composition (null means no composition, true means next is the\n        // first, false means first has already been marked for this\n        // composition)\n        this.compositionFirstChange = null;\n        // End time of the previous composition\n        this.compositionEndedAt = 0;\n        // Used in a kludge to detect when an Enter keypress should be\n        // considered part of the composition on Safari, which fires events\n        // in the wrong order\n        this.compositionPendingKey = false;\n        // Used to categorize changes as part of a composition, even when\n        // the mutation events fire shortly after the compositionend event\n        this.compositionPendingChange = false;\n        this.mouseSelection = null;\n        // When a drag from the editor is active, this points at the range\n        // being dragged.\n        this.draggedContent = null;\n        this.handleEvent = this.handleEvent.bind(this);\n        this.notifiedFocused = view.hasFocus;\n        // On Safari adding an input event handler somehow prevents an\n        // issue where the composition vanishes when you press enter.\n        if (browser.safari)\n            view.contentDOM.addEventListener(\"input\", () => null);\n        if (browser.gecko)\n            firefoxCopyCutHack(view.contentDOM.ownerDocument);\n    }\n    handleEvent(event) {\n        if (!eventBelongsToEditor(this.view, event) || this.ignoreDuringComposition(event))\n            return;\n        if (event.type == \"keydown\" && this.keydown(event))\n            return;\n        if (this.view.updateState != 0 /* UpdateState.Idle */)\n            Promise.resolve().then(() => this.runHandlers(event.type, event));\n        else\n            this.runHandlers(event.type, event);\n    }\n    runHandlers(type, event) {\n        let handlers = this.handlers[type];\n        if (handlers) {\n            for (let observer of handlers.observers)\n                observer(this.view, event);\n            for (let handler of handlers.handlers) {\n                if (event.defaultPrevented)\n                    break;\n                if (handler(this.view, event)) {\n                    event.preventDefault();\n                    break;\n                }\n            }\n        }\n    }\n    ensureHandlers(plugins) {\n        let handlers = computeHandlers(plugins), prev = this.handlers, dom = this.view.contentDOM;\n        for (let type in handlers)\n            if (type != \"scroll\") {\n                let passive = !handlers[type].handlers.length;\n                let exists = prev[type];\n                if (exists && passive != !exists.handlers.length) {\n                    dom.removeEventListener(type, this.handleEvent);\n                    exists = null;\n                }\n                if (!exists)\n                    dom.addEventListener(type, this.handleEvent, { passive });\n            }\n        for (let type in prev)\n            if (type != \"scroll\" && !handlers[type])\n                dom.removeEventListener(type, this.handleEvent);\n        this.handlers = handlers;\n    }\n    keydown(event) {\n        // Must always run, even if a custom handler handled the event\n        this.lastKeyCode = event.keyCode;\n        this.lastKeyTime = Date.now();\n        if (event.keyCode == 9 && this.tabFocusMode > -1 && (!this.tabFocusMode || Date.now() <= this.tabFocusMode))\n            return true;\n        if (this.tabFocusMode > 0 && event.keyCode != 27 && modifierCodes.indexOf(event.keyCode) < 0)\n            this.tabFocusMode = -1;\n        // Chrome for Android usually doesn't fire proper key events, but\n        // occasionally does, usually surrounded by a bunch of complicated\n        // composition changes. When an enter or backspace key event is\n        // seen, hold off on handling DOM events for a bit, and then\n        // dispatch it.\n        if (browser.android && browser.chrome && !event.synthetic &&\n            (event.keyCode == 13 || event.keyCode == 8)) {\n            this.view.observer.delayAndroidKey(event.key, event.keyCode);\n            return true;\n        }\n        // Preventing the default behavior of Enter on iOS makes the\n        // virtual keyboard get stuck in the wrong (lowercase)\n        // state. So we let it go through, and then, in\n        // applyDOMChange, notify key handlers of it and reset to\n        // the state they produce.\n        let pending;\n        if (browser.ios && !event.synthetic && !event.altKey && !event.metaKey &&\n            ((pending = PendingKeys.find(key => key.keyCode == event.keyCode)) && !event.ctrlKey ||\n                EmacsyPendingKeys.indexOf(event.key) > -1 && event.ctrlKey && !event.shiftKey)) {\n            this.pendingIOSKey = pending || event;\n            setTimeout(() => this.flushIOSKey(), 250);\n            return true;\n        }\n        if (event.keyCode != 229)\n            this.view.observer.forceFlush();\n        return false;\n    }\n    flushIOSKey(change) {\n        let key = this.pendingIOSKey;\n        if (!key)\n            return false;\n        // This looks like an autocorrection before Enter\n        if (key.key == \"Enter\" && change && change.from < change.to && /^\\S+$/.test(change.insert.toString()))\n            return false;\n        this.pendingIOSKey = undefined;\n        return dispatchKey(this.view.contentDOM, key.key, key.keyCode, key instanceof KeyboardEvent ? key : undefined);\n    }\n    ignoreDuringComposition(event) {\n        if (!/^key/.test(event.type))\n            return false;\n        if (this.composing > 0)\n            return true;\n        // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n        // On some input method editors (IMEs), the Enter key is used to\n        // confirm character selection. On Safari, when Enter is pressed,\n        // compositionend and keydown events are sometimes emitted in the\n        // wrong order. The key event should still be ignored, even when\n        // it happens after the compositionend event.\n        if (browser.safari && !browser.ios && this.compositionPendingKey && Date.now() - this.compositionEndedAt < 100) {\n            this.compositionPendingKey = false;\n            return true;\n        }\n        return false;\n    }\n    startMouseSelection(mouseSelection) {\n        if (this.mouseSelection)\n            this.mouseSelection.destroy();\n        this.mouseSelection = mouseSelection;\n    }\n    update(update) {\n        this.view.observer.update(update);\n        if (this.mouseSelection)\n            this.mouseSelection.update(update);\n        if (this.draggedContent && update.docChanged)\n            this.draggedContent = this.draggedContent.map(update.changes);\n        if (update.transactions.length)\n            this.lastKeyCode = this.lastSelectionTime = 0;\n    }\n    destroy() {\n        if (this.mouseSelection)\n            this.mouseSelection.destroy();\n    }\n}\nfunction bindHandler(plugin, handler) {\n    return (view, event) => {\n        try {\n            return handler.call(plugin, event, view);\n        }\n        catch (e) {\n            logException(view.state, e);\n        }\n    };\n}\nfunction computeHandlers(plugins) {\n    let result = Object.create(null);\n    function record(type) {\n        return result[type] || (result[type] = { observers: [], handlers: [] });\n    }\n    for (let plugin of plugins) {\n        let spec = plugin.spec, handlers = spec && spec.plugin.domEventHandlers, observers = spec && spec.plugin.domEventObservers;\n        if (handlers)\n            for (let type in handlers) {\n                let f = handlers[type];\n                if (f)\n                    record(type).handlers.push(bindHandler(plugin.value, f));\n            }\n        if (observers)\n            for (let type in observers) {\n                let f = observers[type];\n                if (f)\n                    record(type).observers.push(bindHandler(plugin.value, f));\n            }\n    }\n    for (let type in handlers)\n        record(type).handlers.push(handlers[type]);\n    for (let type in observers)\n        record(type).observers.push(observers[type]);\n    return result;\n}\nconst PendingKeys = [\n    { key: \"Backspace\", keyCode: 8, inputType: \"deleteContentBackward\" },\n    { key: \"Enter\", keyCode: 13, inputType: \"insertParagraph\" },\n    { key: \"Enter\", keyCode: 13, inputType: \"insertLineBreak\" },\n    { key: \"Delete\", keyCode: 46, inputType: \"deleteContentForward\" }\n];\nconst EmacsyPendingKeys = \"dthko\";\n// Key codes for modifier keys\nconst modifierCodes = [16, 17, 18, 20, 91, 92, 224, 225];\nconst dragScrollMargin = 6;\nfunction dragScrollSpeed(dist) {\n    return Math.max(0, dist) * 0.7 + 8;\n}\nfunction dist(a, b) {\n    return Math.max(Math.abs(a.clientX - b.clientX), Math.abs(a.clientY - b.clientY));\n}\nclass MouseSelection {\n    constructor(view, startEvent, style, mustSelect) {\n        this.view = view;\n        this.startEvent = startEvent;\n        this.style = style;\n        this.mustSelect = mustSelect;\n        this.scrollSpeed = { x: 0, y: 0 };\n        this.scrolling = -1;\n        this.lastEvent = startEvent;\n        this.scrollParents = scrollableParents(view.contentDOM);\n        this.atoms = view.state.facet(atomicRanges).map(f => f(view));\n        let doc = view.contentDOM.ownerDocument;\n        doc.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n        doc.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n        this.extend = startEvent.shiftKey;\n        this.multiple = view.state.facet(EditorState.allowMultipleSelections) && addsSelectionRange(view, startEvent);\n        this.dragging = isInPrimarySelection(view, startEvent) && getClickType(startEvent) == 1 ? null : false;\n    }\n    start(event) {\n        // When clicking outside of the selection, immediately apply the\n        // effect of starting the selection\n        if (this.dragging === false)\n            this.select(event);\n    }\n    move(event) {\n        if (event.buttons == 0)\n            return this.destroy();\n        if (this.dragging || this.dragging == null && dist(this.startEvent, event) < 10)\n            return;\n        this.select(this.lastEvent = event);\n        let sx = 0, sy = 0;\n        let left = 0, top = 0, right = this.view.win.innerWidth, bottom = this.view.win.innerHeight;\n        if (this.scrollParents.x)\n            ({ left, right } = this.scrollParents.x.getBoundingClientRect());\n        if (this.scrollParents.y)\n            ({ top, bottom } = this.scrollParents.y.getBoundingClientRect());\n        let margins = getScrollMargins(this.view);\n        if (event.clientX - margins.left <= left + dragScrollMargin)\n            sx = -dragScrollSpeed(left - event.clientX);\n        else if (event.clientX + margins.right >= right - dragScrollMargin)\n            sx = dragScrollSpeed(event.clientX - right);\n        if (event.clientY - margins.top <= top + dragScrollMargin)\n            sy = -dragScrollSpeed(top - event.clientY);\n        else if (event.clientY + margins.bottom >= bottom - dragScrollMargin)\n            sy = dragScrollSpeed(event.clientY - bottom);\n        this.setScrollSpeed(sx, sy);\n    }\n    up(event) {\n        if (this.dragging == null)\n            this.select(this.lastEvent);\n        if (!this.dragging)\n            event.preventDefault();\n        this.destroy();\n    }\n    destroy() {\n        this.setScrollSpeed(0, 0);\n        let doc = this.view.contentDOM.ownerDocument;\n        doc.removeEventListener(\"mousemove\", this.move);\n        doc.removeEventListener(\"mouseup\", this.up);\n        this.view.inputState.mouseSelection = this.view.inputState.draggedContent = null;\n    }\n    setScrollSpeed(sx, sy) {\n        this.scrollSpeed = { x: sx, y: sy };\n        if (sx || sy) {\n            if (this.scrolling < 0)\n                this.scrolling = setInterval(() => this.scroll(), 50);\n        }\n        else if (this.scrolling > -1) {\n            clearInterval(this.scrolling);\n            this.scrolling = -1;\n        }\n    }\n    scroll() {\n        let { x, y } = this.scrollSpeed;\n        if (x && this.scrollParents.x) {\n            this.scrollParents.x.scrollLeft += x;\n            x = 0;\n        }\n        if (y && this.scrollParents.y) {\n            this.scrollParents.y.scrollTop += y;\n            y = 0;\n        }\n        if (x || y)\n            this.view.win.scrollBy(x, y);\n        if (this.dragging === false)\n            this.select(this.lastEvent);\n    }\n    select(event) {\n        let { view } = this, selection = skipAtomsForSelection(this.atoms, this.style.get(event, this.extend, this.multiple));\n        if (this.mustSelect || !selection.eq(view.state.selection, this.dragging === false))\n            this.view.dispatch({\n                selection,\n                userEvent: \"select.pointer\"\n            });\n        this.mustSelect = false;\n    }\n    update(update) {\n        if (update.transactions.some(tr => tr.isUserEvent(\"input.type\")))\n            this.destroy();\n        else if (this.style.update(update))\n            setTimeout(() => this.select(this.lastEvent), 20);\n    }\n}\nfunction addsSelectionRange(view, event) {\n    let facet = view.state.facet(clickAddsSelectionRange);\n    return facet.length ? facet[0](event) : browser.mac ? event.metaKey : event.ctrlKey;\n}\nfunction dragMovesSelection(view, event) {\n    let facet = view.state.facet(dragMovesSelection$1);\n    return facet.length ? facet[0](event) : browser.mac ? !event.altKey : !event.ctrlKey;\n}\nfunction isInPrimarySelection(view, event) {\n    let { main } = view.state.selection;\n    if (main.empty)\n        return false;\n    // On boundary clicks, check whether the coordinates are inside the\n    // selection's client rectangles\n    let sel = getSelection(view.root);\n    if (!sel || sel.rangeCount == 0)\n        return true;\n    let rects = sel.getRangeAt(0).getClientRects();\n    for (let i = 0; i < rects.length; i++) {\n        let rect = rects[i];\n        if (rect.left <= event.clientX && rect.right >= event.clientX &&\n            rect.top <= event.clientY && rect.bottom >= event.clientY)\n            return true;\n    }\n    return false;\n}\nfunction eventBelongsToEditor(view, event) {\n    if (!event.bubbles)\n        return true;\n    if (event.defaultPrevented)\n        return false;\n    for (let node = event.target, cView; node != view.contentDOM; node = node.parentNode)\n        if (!node || node.nodeType == 11 || ((cView = ContentView.get(node)) && cView.ignoreEvent(event)))\n            return false;\n    return true;\n}\nconst handlers = /*@__PURE__*/Object.create(null);\nconst observers = /*@__PURE__*/Object.create(null);\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (browser.ie && browser.ie_version < 15) ||\n    (browser.ios && browser.webkit_version < 604);\nfunction capturePaste(view) {\n    let parent = view.dom.parentNode;\n    if (!parent)\n        return;\n    let target = parent.appendChild(document.createElement(\"textarea\"));\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.focus();\n    setTimeout(() => {\n        view.focus();\n        target.remove();\n        doPaste(view, target.value);\n    }, 50);\n}\nfunction textFilter(state, facet, text) {\n    for (let filter of state.facet(facet))\n        text = filter(text, state);\n    return text;\n}\nfunction doPaste(view, input) {\n    input = textFilter(view.state, clipboardInputFilter, input);\n    let { state } = view, changes, i = 1, text = state.toText(input);\n    let byLine = text.lines == state.selection.ranges.length;\n    let linewise = lastLinewiseCopy != null && state.selection.ranges.every(r => r.empty) && lastLinewiseCopy == text.toString();\n    if (linewise) {\n        let lastLine = -1;\n        changes = state.changeByRange(range => {\n            let line = state.doc.lineAt(range.from);\n            if (line.from == lastLine)\n                return { range };\n            lastLine = line.from;\n            let insert = state.toText((byLine ? text.line(i++).text : input) + state.lineBreak);\n            return { changes: { from: line.from, insert },\n                range: EditorSelection.cursor(range.from + insert.length) };\n        });\n    }\n    else if (byLine) {\n        changes = state.changeByRange(range => {\n            let line = text.line(i++);\n            return { changes: { from: range.from, to: range.to, insert: line.text },\n                range: EditorSelection.cursor(range.from + line.length) };\n        });\n    }\n    else {\n        changes = state.replaceSelection(text);\n    }\n    view.dispatch(changes, {\n        userEvent: \"input.paste\",\n        scrollIntoView: true\n    });\n}\nobservers.scroll = view => {\n    view.inputState.lastScrollTop = view.scrollDOM.scrollTop;\n    view.inputState.lastScrollLeft = view.scrollDOM.scrollLeft;\n};\nhandlers.keydown = (view, event) => {\n    view.inputState.setSelectionOrigin(\"select\");\n    if (event.keyCode == 27 && view.inputState.tabFocusMode != 0)\n        view.inputState.tabFocusMode = Date.now() + 2000;\n    return false;\n};\nobservers.touchstart = (view, e) => {\n    view.inputState.lastTouchTime = Date.now();\n    view.inputState.setSelectionOrigin(\"select.pointer\");\n};\nobservers.touchmove = view => {\n    view.inputState.setSelectionOrigin(\"select.pointer\");\n};\nhandlers.mousedown = (view, event) => {\n    view.observer.flush();\n    if (view.inputState.lastTouchTime > Date.now() - 2000)\n        return false; // Ignore touch interaction\n    let style = null;\n    for (let makeStyle of view.state.facet(mouseSelectionStyle)) {\n        style = makeStyle(view, event);\n        if (style)\n            break;\n    }\n    if (!style && event.button == 0)\n        style = basicMouseSelection(view, event);\n    if (style) {\n        let mustFocus = !view.hasFocus;\n        view.inputState.startMouseSelection(new MouseSelection(view, event, style, mustFocus));\n        if (mustFocus)\n            view.observer.ignore(() => {\n                focusPreventScroll(view.contentDOM);\n                let active = view.root.activeElement;\n                if (active && !active.contains(view.contentDOM))\n                    active.blur();\n            });\n        let mouseSel = view.inputState.mouseSelection;\n        if (mouseSel) {\n            mouseSel.start(event);\n            return mouseSel.dragging === false;\n        }\n    }\n    else {\n        view.inputState.setSelectionOrigin(\"select.pointer\");\n    }\n    return false;\n};\nfunction rangeForClick(view, pos, bias, type) {\n    if (type == 1) { // Single click\n        return EditorSelection.cursor(pos, bias);\n    }\n    else if (type == 2) { // Double click\n        return groupAt(view.state, pos, bias);\n    }\n    else { // Triple click\n        let visual = LineView.find(view.docView, pos), line = view.state.doc.lineAt(visual ? visual.posAtEnd : pos);\n        let from = visual ? visual.posAtStart : line.from, to = visual ? visual.posAtEnd : line.to;\n        if (to < view.state.doc.length && to == line.to)\n            to++;\n        return EditorSelection.range(from, to);\n    }\n}\nlet inside = (x, y, rect) => y >= rect.top && y <= rect.bottom && x >= rect.left && x <= rect.right;\n// Try to determine, for the given coordinates, associated with the\n// given position, whether they are related to the element before or\n// the element after the position.\nfunction findPositionSide(view, pos, x, y) {\n    let line = LineView.find(view.docView, pos);\n    if (!line)\n        return 1;\n    let off = pos - line.posAtStart;\n    // Line boundaries point into the line\n    if (off == 0)\n        return 1;\n    if (off == line.length)\n        return -1;\n    // Positions on top of an element point at that element\n    let before = line.coordsAt(off, -1);\n    if (before && inside(x, y, before))\n        return -1;\n    let after = line.coordsAt(off, 1);\n    if (after && inside(x, y, after))\n        return 1;\n    // This is probably a line wrap point. Pick before if the point is\n    // above its bottom.\n    return before && before.bottom >= y ? -1 : 1;\n}\nfunction queryPos(view, event) {\n    let pos = view.posAtCoords({ x: event.clientX, y: event.clientY }, false);\n    return { pos, bias: findPositionSide(view, pos, event.clientX, event.clientY) };\n}\nconst BadMouseDetail = browser.ie && browser.ie_version <= 11;\nlet lastMouseDown = null, lastMouseDownCount = 0, lastMouseDownTime = 0;\nfunction getClickType(event) {\n    if (!BadMouseDetail)\n        return event.detail;\n    let last = lastMouseDown, lastTime = lastMouseDownTime;\n    lastMouseDown = event;\n    lastMouseDownTime = Date.now();\n    return lastMouseDownCount = !last || (lastTime > Date.now() - 400 && Math.abs(last.clientX - event.clientX) < 2 &&\n        Math.abs(last.clientY - event.clientY) < 2) ? (lastMouseDownCount + 1) % 3 : 1;\n}\nfunction basicMouseSelection(view, event) {\n    let start = queryPos(view, event), type = getClickType(event);\n    let startSel = view.state.selection;\n    return {\n        update(update) {\n            if (update.docChanged) {\n                start.pos = update.changes.mapPos(start.pos);\n                startSel = startSel.map(update.changes);\n            }\n        },\n        get(event, extend, multiple) {\n            let cur = queryPos(view, event), removed;\n            let range = rangeForClick(view, cur.pos, cur.bias, type);\n            if (start.pos != cur.pos && !extend) {\n                let startRange = rangeForClick(view, start.pos, start.bias, type);\n                let from = Math.min(startRange.from, range.from), to = Math.max(startRange.to, range.to);\n                range = from < range.from ? EditorSelection.range(from, to) : EditorSelection.range(to, from);\n            }\n            if (extend)\n                return startSel.replaceRange(startSel.main.extend(range.from, range.to));\n            else if (multiple && type == 1 && startSel.ranges.length > 1 && (removed = removeRangeAround(startSel, cur.pos)))\n                return removed;\n            else if (multiple)\n                return startSel.addRange(range);\n            else\n                return EditorSelection.create([range]);\n        }\n    };\n}\nfunction removeRangeAround(sel, pos) {\n    for (let i = 0; i < sel.ranges.length; i++) {\n        let { from, to } = sel.ranges[i];\n        if (from <= pos && to >= pos)\n            return EditorSelection.create(sel.ranges.slice(0, i).concat(sel.ranges.slice(i + 1)), sel.mainIndex == i ? 0 : sel.mainIndex - (sel.mainIndex > i ? 1 : 0));\n    }\n    return null;\n}\nhandlers.dragstart = (view, event) => {\n    let { selection: { main: range } } = view.state;\n    if (event.target.draggable) {\n        let cView = view.docView.nearest(event.target);\n        if (cView && cView.isWidget) {\n            let from = cView.posAtStart, to = from + cView.length;\n            if (from >= range.to || to <= range.from)\n                range = EditorSelection.range(from, to);\n        }\n    }\n    let { inputState } = view;\n    if (inputState.mouseSelection)\n        inputState.mouseSelection.dragging = true;\n    inputState.draggedContent = range;\n    if (event.dataTransfer) {\n        event.dataTransfer.setData(\"Text\", textFilter(view.state, clipboardOutputFilter, view.state.sliceDoc(range.from, range.to)));\n        event.dataTransfer.effectAllowed = \"copyMove\";\n    }\n    return false;\n};\nhandlers.dragend = view => {\n    view.inputState.draggedContent = null;\n    return false;\n};\nfunction dropText(view, event, text, direct) {\n    text = textFilter(view.state, clipboardInputFilter, text);\n    if (!text)\n        return;\n    let dropPos = view.posAtCoords({ x: event.clientX, y: event.clientY }, false);\n    let { draggedContent } = view.inputState;\n    let del = direct && draggedContent && dragMovesSelection(view, event)\n        ? { from: draggedContent.from, to: draggedContent.to } : null;\n    let ins = { from: dropPos, insert: text };\n    let changes = view.state.changes(del ? [del, ins] : ins);\n    view.focus();\n    view.dispatch({\n        changes,\n        selection: { anchor: changes.mapPos(dropPos, -1), head: changes.mapPos(dropPos, 1) },\n        userEvent: del ? \"move.drop\" : \"input.drop\"\n    });\n    view.inputState.draggedContent = null;\n}\nhandlers.drop = (view, event) => {\n    if (!event.dataTransfer)\n        return false;\n    if (view.state.readOnly)\n        return true;\n    let files = event.dataTransfer.files;\n    if (files && files.length) { // For a file drop, read the file's text.\n        let text = Array(files.length), read = 0;\n        let finishFile = () => {\n            if (++read == files.length)\n                dropText(view, event, text.filter(s => s != null).join(view.state.lineBreak), false);\n        };\n        for (let i = 0; i < files.length; i++) {\n            let reader = new FileReader;\n            reader.onerror = finishFile;\n            reader.onload = () => {\n                if (!/[\\x00-\\x08\\x0e-\\x1f]{2}/.test(reader.result))\n                    text[i] = reader.result;\n                finishFile();\n            };\n            reader.readAsText(files[i]);\n        }\n        return true;\n    }\n    else {\n        let text = event.dataTransfer.getData(\"Text\");\n        if (text) {\n            dropText(view, event, text, true);\n            return true;\n        }\n    }\n    return false;\n};\nhandlers.paste = (view, event) => {\n    if (view.state.readOnly)\n        return true;\n    view.observer.flush();\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    if (data) {\n        doPaste(view, data.getData(\"text/plain\") || data.getData(\"text/uri-list\"));\n        return true;\n    }\n    else {\n        capturePaste(view);\n        return false;\n    }\n};\nfunction captureCopy(view, text) {\n    // The extra wrapper is somehow necessary on IE/Edge to prevent the\n    // content from being mangled when it is put onto the clipboard\n    let parent = view.dom.parentNode;\n    if (!parent)\n        return;\n    let target = parent.appendChild(document.createElement(\"textarea\"));\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.value = text;\n    target.focus();\n    target.selectionEnd = text.length;\n    target.selectionStart = 0;\n    setTimeout(() => {\n        target.remove();\n        view.focus();\n    }, 50);\n}\nfunction copiedRange(state) {\n    let content = [], ranges = [], linewise = false;\n    for (let range of state.selection.ranges)\n        if (!range.empty) {\n            content.push(state.sliceDoc(range.from, range.to));\n            ranges.push(range);\n        }\n    if (!content.length) {\n        // Nothing selected, do a line-wise copy\n        let upto = -1;\n        for (let { from } of state.selection.ranges) {\n            let line = state.doc.lineAt(from);\n            if (line.number > upto) {\n                content.push(line.text);\n                ranges.push({ from: line.from, to: Math.min(state.doc.length, line.to + 1) });\n            }\n            upto = line.number;\n        }\n        linewise = true;\n    }\n    return { text: textFilter(state, clipboardOutputFilter, content.join(state.lineBreak)), ranges, linewise };\n}\nlet lastLinewiseCopy = null;\nhandlers.copy = handlers.cut = (view, event) => {\n    let { text, ranges, linewise } = copiedRange(view.state);\n    if (!text && !linewise)\n        return false;\n    lastLinewiseCopy = linewise ? text : null;\n    if (event.type == \"cut\" && !view.state.readOnly)\n        view.dispatch({\n            changes: ranges,\n            scrollIntoView: true,\n            userEvent: \"delete.cut\"\n        });\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    if (data) {\n        data.clearData();\n        data.setData(\"text/plain\", text);\n        return true;\n    }\n    else {\n        captureCopy(view, text);\n        return false;\n    }\n};\nconst isFocusChange = /*@__PURE__*/Annotation.define();\nfunction focusChangeTransaction(state, focus) {\n    let effects = [];\n    for (let getEffect of state.facet(focusChangeEffect)) {\n        let effect = getEffect(state, focus);\n        if (effect)\n            effects.push(effect);\n    }\n    return effects.length ? state.update({ effects, annotations: isFocusChange.of(true) }) : null;\n}\nfunction updateForFocusChange(view) {\n    setTimeout(() => {\n        let focus = view.hasFocus;\n        if (focus != view.inputState.notifiedFocused) {\n            let tr = focusChangeTransaction(view.state, focus);\n            if (tr)\n                view.dispatch(tr);\n            else\n                view.update([]);\n        }\n    }, 10);\n}\nobservers.focus = view => {\n    view.inputState.lastFocusTime = Date.now();\n    // When focusing reset the scroll position, move it back to where it was\n    if (!view.scrollDOM.scrollTop && (view.inputState.lastScrollTop || view.inputState.lastScrollLeft)) {\n        view.scrollDOM.scrollTop = view.inputState.lastScrollTop;\n        view.scrollDOM.scrollLeft = view.inputState.lastScrollLeft;\n    }\n    updateForFocusChange(view);\n};\nobservers.blur = view => {\n    view.observer.clearSelectionRange();\n    updateForFocusChange(view);\n};\nobservers.compositionstart = observers.compositionupdate = view => {\n    if (view.observer.editContext)\n        return; // Composition handled by edit context\n    if (view.inputState.compositionFirstChange == null)\n        view.inputState.compositionFirstChange = true;\n    if (view.inputState.composing < 0) {\n        // FIXME possibly set a timeout to clear it again on Android\n        view.inputState.composing = 0;\n    }\n};\nobservers.compositionend = view => {\n    if (view.observer.editContext)\n        return; // Composition handled by edit context\n    view.inputState.composing = -1;\n    view.inputState.compositionEndedAt = Date.now();\n    view.inputState.compositionPendingKey = true;\n    view.inputState.compositionPendingChange = view.observer.pendingRecords().length > 0;\n    view.inputState.compositionFirstChange = null;\n    if (browser.chrome && browser.android) {\n        // Delay flushing for a bit on Android because it'll often fire a\n        // bunch of contradictory changes in a row at end of compositon\n        view.observer.flushSoon();\n    }\n    else if (view.inputState.compositionPendingChange) {\n        // If we found pending records, schedule a flush.\n        Promise.resolve().then(() => view.observer.flush());\n    }\n    else {\n        // Otherwise, make sure that, if no changes come in soon, the\n        // composition view is cleared.\n        setTimeout(() => {\n            if (view.inputState.composing < 0 && view.docView.hasComposition)\n                view.update([]);\n        }, 50);\n    }\n};\nobservers.contextmenu = view => {\n    view.inputState.lastContextMenu = Date.now();\n};\nhandlers.beforeinput = (view, event) => {\n    var _a, _b;\n    // In EditContext mode, we must handle insertReplacementText events\n    // directly, to make spell checking corrections work\n    if (event.inputType == \"insertReplacementText\" && view.observer.editContext) {\n        let text = (_a = event.dataTransfer) === null || _a === void 0 ? void 0 : _a.getData(\"text/plain\"), ranges = event.getTargetRanges();\n        if (text && ranges.length) {\n            let r = ranges[0];\n            let from = view.posAtDOM(r.startContainer, r.startOffset), to = view.posAtDOM(r.endContainer, r.endOffset);\n            applyDOMChangeInner(view, { from, to, insert: view.state.toText(text) }, null);\n            return true;\n        }\n    }\n    // Because Chrome Android doesn't fire useful key events, use\n    // beforeinput to detect backspace (and possibly enter and delete,\n    // but those usually don't even seem to fire beforeinput events at\n    // the moment) and fake a key event for it.\n    //\n    // (preventDefault on beforeinput, though supported in the spec,\n    // seems to do nothing at all on Chrome).\n    let pending;\n    if (browser.chrome && browser.android && (pending = PendingKeys.find(key => key.inputType == event.inputType))) {\n        view.observer.delayAndroidKey(pending.key, pending.keyCode);\n        if (pending.key == \"Backspace\" || pending.key == \"Delete\") {\n            let startViewHeight = ((_b = window.visualViewport) === null || _b === void 0 ? void 0 : _b.height) || 0;\n            setTimeout(() => {\n                var _a;\n                // Backspacing near uneditable nodes on Chrome Android sometimes\n                // closes the virtual keyboard. This tries to crudely detect\n                // that and refocus to get it back.\n                if ((((_a = window.visualViewport) === null || _a === void 0 ? void 0 : _a.height) || 0) > startViewHeight + 10 && view.hasFocus) {\n                    view.contentDOM.blur();\n                    view.focus();\n                }\n            }, 100);\n        }\n    }\n    if (browser.ios && event.inputType == \"deleteContentForward\") {\n        // For some reason, DOM changes (and beforeinput) happen _before_\n        // the key event for ctrl-d on iOS when using an external\n        // keyboard.\n        view.observer.flushSoon();\n    }\n    // Safari will occasionally forget to fire compositionend at the end of a dead-key composition\n    if (browser.safari && event.inputType == \"insertText\" && view.inputState.composing >= 0) {\n        setTimeout(() => observers.compositionend(view, event), 20);\n    }\n    return false;\n};\nconst appliedFirefoxHack = /*@__PURE__*/new Set;\n// In Firefox, when cut/copy handlers are added to the document, that\n// somehow avoids a bug where those events aren't fired when the\n// selection is empty. See https://github.com/codemirror/dev/issues/1082\n// and https://bugzilla.mozilla.org/show_bug.cgi?id=995961\nfunction firefoxCopyCutHack(doc) {\n    if (!appliedFirefoxHack.has(doc)) {\n        appliedFirefoxHack.add(doc);\n        doc.addEventListener(\"copy\", () => { });\n        doc.addEventListener(\"cut\", () => { });\n    }\n}\n\nconst wrappingWhiteSpace = [\"pre-wrap\", \"normal\", \"pre-line\", \"break-spaces\"];\n// Used to track, during updateHeight, if any actual heights changed\nlet heightChangeFlag = false;\nfunction clearHeightChangeFlag() { heightChangeFlag = false; }\nclass HeightOracle {\n    constructor(lineWrapping) {\n        this.lineWrapping = lineWrapping;\n        this.doc = Text.empty;\n        this.heightSamples = {};\n        this.lineHeight = 14; // The height of an entire line (line-height)\n        this.charWidth = 7;\n        this.textHeight = 14; // The height of the actual font (font-size)\n        this.lineLength = 30;\n    }\n    heightForGap(from, to) {\n        let lines = this.doc.lineAt(to).number - this.doc.lineAt(from).number + 1;\n        if (this.lineWrapping)\n            lines += Math.max(0, Math.ceil(((to - from) - (lines * this.lineLength * 0.5)) / this.lineLength));\n        return this.lineHeight * lines;\n    }\n    heightForLine(length) {\n        if (!this.lineWrapping)\n            return this.lineHeight;\n        let lines = 1 + Math.max(0, Math.ceil((length - this.lineLength) / Math.max(1, this.lineLength - 5)));\n        return lines * this.lineHeight;\n    }\n    setDoc(doc) { this.doc = doc; return this; }\n    mustRefreshForWrapping(whiteSpace) {\n        return (wrappingWhiteSpace.indexOf(whiteSpace) > -1) != this.lineWrapping;\n    }\n    mustRefreshForHeights(lineHeights) {\n        let newHeight = false;\n        for (let i = 0; i < lineHeights.length; i++) {\n            let h = lineHeights[i];\n            if (h < 0) {\n                i++;\n            }\n            else if (!this.heightSamples[Math.floor(h * 10)]) { // Round to .1 pixels\n                newHeight = true;\n                this.heightSamples[Math.floor(h * 10)] = true;\n            }\n        }\n        return newHeight;\n    }\n    refresh(whiteSpace, lineHeight, charWidth, textHeight, lineLength, knownHeights) {\n        let lineWrapping = wrappingWhiteSpace.indexOf(whiteSpace) > -1;\n        let changed = Math.round(lineHeight) != Math.round(this.lineHeight) || this.lineWrapping != lineWrapping;\n        this.lineWrapping = lineWrapping;\n        this.lineHeight = lineHeight;\n        this.charWidth = charWidth;\n        this.textHeight = textHeight;\n        this.lineLength = lineLength;\n        if (changed) {\n            this.heightSamples = {};\n            for (let i = 0; i < knownHeights.length; i++) {\n                let h = knownHeights[i];\n                if (h < 0)\n                    i++;\n                else\n                    this.heightSamples[Math.floor(h * 10)] = true;\n            }\n        }\n        return changed;\n    }\n}\n// This object is used by `updateHeight` to make DOM measurements\n// arrive at the right nides. The `heights` array is a sequence of\n// block heights, starting from position `from`.\nclass MeasuredHeights {\n    constructor(from, heights) {\n        this.from = from;\n        this.heights = heights;\n        this.index = 0;\n    }\n    get more() { return this.index < this.heights.length; }\n}\n/**\nRecord used to represent information about a block-level element\nin the editor view.\n*/\nclass BlockInfo {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start of the element in the document.\n    */\n    from, \n    /**\n    The length of the element.\n    */\n    length, \n    /**\n    The top position of the element (relative to the top of the\n    document).\n    */\n    top, \n    /**\n    Its height.\n    */\n    height, \n    /**\n    @internal Weird packed field that holds an array of children\n    for composite blocks, a decoration for block widgets, and a\n    number indicating the amount of widget-create line breaks for\n    text blocks.\n    */\n    _content) {\n        this.from = from;\n        this.length = length;\n        this.top = top;\n        this.height = height;\n        this._content = _content;\n    }\n    /**\n    The type of element this is. When querying lines, this may be\n    an array of all the blocks that make up the line.\n    */\n    get type() {\n        return typeof this._content == \"number\" ? BlockType.Text :\n            Array.isArray(this._content) ? this._content : this._content.type;\n    }\n    /**\n    The end of the element as a document position.\n    */\n    get to() { return this.from + this.length; }\n    /**\n    The bottom position of the element.\n    */\n    get bottom() { return this.top + this.height; }\n    /**\n    If this is a widget block, this will return the widget\n    associated with it.\n    */\n    get widget() {\n        return this._content instanceof PointDecoration ? this._content.widget : null;\n    }\n    /**\n    If this is a textblock, this holds the number of line breaks\n    that appear in widgets inside the block.\n    */\n    get widgetLineBreaks() {\n        return typeof this._content == \"number\" ? this._content : 0;\n    }\n    /**\n    @internal\n    */\n    join(other) {\n        let content = (Array.isArray(this._content) ? this._content : [this])\n            .concat(Array.isArray(other._content) ? other._content : [other]);\n        return new BlockInfo(this.from, this.length + other.length, this.top, this.height + other.height, content);\n    }\n}\nvar QueryType = /*@__PURE__*/(function (QueryType) {\n    QueryType[QueryType[\"ByPos\"] = 0] = \"ByPos\";\n    QueryType[QueryType[\"ByHeight\"] = 1] = \"ByHeight\";\n    QueryType[QueryType[\"ByPosNoHeight\"] = 2] = \"ByPosNoHeight\";\nreturn QueryType})(QueryType || (QueryType = {}));\nconst Epsilon = 1e-3;\nclass HeightMap {\n    constructor(length, // The number of characters covered\n    height, // Height of this part of the document\n    flags = 2 /* Flag.Outdated */) {\n        this.length = length;\n        this.height = height;\n        this.flags = flags;\n    }\n    get outdated() { return (this.flags & 2 /* Flag.Outdated */) > 0; }\n    set outdated(value) { this.flags = (value ? 2 /* Flag.Outdated */ : 0) | (this.flags & ~2 /* Flag.Outdated */); }\n    setHeight(height) {\n        if (this.height != height) {\n            if (Math.abs(this.height - height) > Epsilon)\n                heightChangeFlag = true;\n            this.height = height;\n        }\n    }\n    // Base case is to replace a leaf node, which simply builds a tree\n    // from the new nodes and returns that (HeightMapBranch and\n    // HeightMapGap override this to actually use from/to)\n    replace(_from, _to, nodes) {\n        return HeightMap.of(nodes);\n    }\n    // Again, these are base cases, and are overridden for branch and gap nodes.\n    decomposeLeft(_to, result) { result.push(this); }\n    decomposeRight(_from, result) { result.push(this); }\n    applyChanges(decorations, oldDoc, oracle, changes) {\n        let me = this, doc = oracle.doc;\n        for (let i = changes.length - 1; i >= 0; i--) {\n            let { fromA, toA, fromB, toB } = changes[i];\n            let start = me.lineAt(fromA, QueryType.ByPosNoHeight, oracle.setDoc(oldDoc), 0, 0);\n            let end = start.to >= toA ? start : me.lineAt(toA, QueryType.ByPosNoHeight, oracle, 0, 0);\n            toB += end.to - toA;\n            toA = end.to;\n            while (i > 0 && start.from <= changes[i - 1].toA) {\n                fromA = changes[i - 1].fromA;\n                fromB = changes[i - 1].fromB;\n                i--;\n                if (fromA < start.from)\n                    start = me.lineAt(fromA, QueryType.ByPosNoHeight, oracle, 0, 0);\n            }\n            fromB += start.from - fromA;\n            fromA = start.from;\n            let nodes = NodeBuilder.build(oracle.setDoc(doc), decorations, fromB, toB);\n            me = replace(me, me.replace(fromA, toA, nodes));\n        }\n        return me.updateHeight(oracle, 0);\n    }\n    static empty() { return new HeightMapText(0, 0); }\n    // nodes uses null values to indicate the position of line breaks.\n    // There are never line breaks at the start or end of the array, or\n    // two line breaks next to each other, and the array isn't allowed\n    // to be empty (same restrictions as return value from the builder).\n    static of(nodes) {\n        if (nodes.length == 1)\n            return nodes[0];\n        let i = 0, j = nodes.length, before = 0, after = 0;\n        for (;;) {\n            if (i == j) {\n                if (before > after * 2) {\n                    let split = nodes[i - 1];\n                    if (split.break)\n                        nodes.splice(--i, 1, split.left, null, split.right);\n                    else\n                        nodes.splice(--i, 1, split.left, split.right);\n                    j += 1 + split.break;\n                    before -= split.size;\n                }\n                else if (after > before * 2) {\n                    let split = nodes[j];\n                    if (split.break)\n                        nodes.splice(j, 1, split.left, null, split.right);\n                    else\n                        nodes.splice(j, 1, split.left, split.right);\n                    j += 2 + split.break;\n                    after -= split.size;\n                }\n                else {\n                    break;\n                }\n            }\n            else if (before < after) {\n                let next = nodes[i++];\n                if (next)\n                    before += next.size;\n            }\n            else {\n                let next = nodes[--j];\n                if (next)\n                    after += next.size;\n            }\n        }\n        let brk = 0;\n        if (nodes[i - 1] == null) {\n            brk = 1;\n            i--;\n        }\n        else if (nodes[i] == null) {\n            brk = 1;\n            j++;\n        }\n        return new HeightMapBranch(HeightMap.of(nodes.slice(0, i)), brk, HeightMap.of(nodes.slice(j)));\n    }\n}\nfunction replace(old, val) {\n    if (old == val)\n        return old;\n    if (old.constructor != val.constructor)\n        heightChangeFlag = true;\n    return val;\n}\nHeightMap.prototype.size = 1;\nclass HeightMapBlock extends HeightMap {\n    constructor(length, height, deco) {\n        super(length, height);\n        this.deco = deco;\n    }\n    blockAt(_height, _oracle, top, offset) {\n        return new BlockInfo(offset, this.length, top, this.height, this.deco || 0);\n    }\n    lineAt(_value, _type, oracle, top, offset) {\n        return this.blockAt(0, oracle, top, offset);\n    }\n    forEachLine(from, to, oracle, top, offset, f) {\n        if (from <= offset + this.length && to >= offset)\n            f(this.blockAt(0, oracle, top, offset));\n    }\n    updateHeight(oracle, offset = 0, _force = false, measured) {\n        if (measured && measured.from <= offset && measured.more)\n            this.setHeight(measured.heights[measured.index++]);\n        this.outdated = false;\n        return this;\n    }\n    toString() { return `block(${this.length})`; }\n}\nclass HeightMapText extends HeightMapBlock {\n    constructor(length, height) {\n        super(length, height, null);\n        this.collapsed = 0; // Amount of collapsed content in the line\n        this.widgetHeight = 0; // Maximum inline widget height\n        this.breaks = 0; // Number of widget-introduced line breaks on the line\n    }\n    blockAt(_height, _oracle, top, offset) {\n        return new BlockInfo(offset, this.length, top, this.height, this.breaks);\n    }\n    replace(_from, _to, nodes) {\n        let node = nodes[0];\n        if (nodes.length == 1 && (node instanceof HeightMapText || node instanceof HeightMapGap && (node.flags & 4 /* Flag.SingleLine */)) &&\n            Math.abs(this.length - node.length) < 10) {\n            if (node instanceof HeightMapGap)\n                node = new HeightMapText(node.length, this.height);\n            else\n                node.height = this.height;\n            if (!this.outdated)\n                node.outdated = false;\n            return node;\n        }\n        else {\n            return HeightMap.of(nodes);\n        }\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        if (measured && measured.from <= offset && measured.more)\n            this.setHeight(measured.heights[measured.index++]);\n        else if (force || this.outdated)\n            this.setHeight(Math.max(this.widgetHeight, oracle.heightForLine(this.length - this.collapsed)) +\n                this.breaks * oracle.lineHeight);\n        this.outdated = false;\n        return this;\n    }\n    toString() {\n        return `line(${this.length}${this.collapsed ? -this.collapsed : \"\"}${this.widgetHeight ? \":\" + this.widgetHeight : \"\"})`;\n    }\n}\nclass HeightMapGap extends HeightMap {\n    constructor(length) { super(length, 0); }\n    heightMetrics(oracle, offset) {\n        let firstLine = oracle.doc.lineAt(offset).number, lastLine = oracle.doc.lineAt(offset + this.length).number;\n        let lines = lastLine - firstLine + 1;\n        let perLine, perChar = 0;\n        if (oracle.lineWrapping) {\n            let totalPerLine = Math.min(this.height, oracle.lineHeight * lines);\n            perLine = totalPerLine / lines;\n            if (this.length > lines + 1)\n                perChar = (this.height - totalPerLine) / (this.length - lines - 1);\n        }\n        else {\n            perLine = this.height / lines;\n        }\n        return { firstLine, lastLine, perLine, perChar };\n    }\n    blockAt(height, oracle, top, offset) {\n        let { firstLine, lastLine, perLine, perChar } = this.heightMetrics(oracle, offset);\n        if (oracle.lineWrapping) {\n            let guess = offset + (height < oracle.lineHeight ? 0\n                : Math.round(Math.max(0, Math.min(1, (height - top) / this.height)) * this.length));\n            let line = oracle.doc.lineAt(guess), lineHeight = perLine + line.length * perChar;\n            let lineTop = Math.max(top, height - lineHeight / 2);\n            return new BlockInfo(line.from, line.length, lineTop, lineHeight, 0);\n        }\n        else {\n            let line = Math.max(0, Math.min(lastLine - firstLine, Math.floor((height - top) / perLine)));\n            let { from, length } = oracle.doc.line(firstLine + line);\n            return new BlockInfo(from, length, top + perLine * line, perLine, 0);\n        }\n    }\n    lineAt(value, type, oracle, top, offset) {\n        if (type == QueryType.ByHeight)\n            return this.blockAt(value, oracle, top, offset);\n        if (type == QueryType.ByPosNoHeight) {\n            let { from, to } = oracle.doc.lineAt(value);\n            return new BlockInfo(from, to - from, 0, 0, 0);\n        }\n        let { firstLine, perLine, perChar } = this.heightMetrics(oracle, offset);\n        let line = oracle.doc.lineAt(value), lineHeight = perLine + line.length * perChar;\n        let linesAbove = line.number - firstLine;\n        let lineTop = top + perLine * linesAbove + perChar * (line.from - offset - linesAbove);\n        return new BlockInfo(line.from, line.length, Math.max(top, Math.min(lineTop, top + this.height - lineHeight)), lineHeight, 0);\n    }\n    forEachLine(from, to, oracle, top, offset, f) {\n        from = Math.max(from, offset);\n        to = Math.min(to, offset + this.length);\n        let { firstLine, perLine, perChar } = this.heightMetrics(oracle, offset);\n        for (let pos = from, lineTop = top; pos <= to;) {\n            let line = oracle.doc.lineAt(pos);\n            if (pos == from) {\n                let linesAbove = line.number - firstLine;\n                lineTop += perLine * linesAbove + perChar * (from - offset - linesAbove);\n            }\n            let lineHeight = perLine + perChar * line.length;\n            f(new BlockInfo(line.from, line.length, lineTop, lineHeight, 0));\n            lineTop += lineHeight;\n            pos = line.to + 1;\n        }\n    }\n    replace(from, to, nodes) {\n        let after = this.length - to;\n        if (after > 0) {\n            let last = nodes[nodes.length - 1];\n            if (last instanceof HeightMapGap)\n                nodes[nodes.length - 1] = new HeightMapGap(last.length + after);\n            else\n                nodes.push(null, new HeightMapGap(after - 1));\n        }\n        if (from > 0) {\n            let first = nodes[0];\n            if (first instanceof HeightMapGap)\n                nodes[0] = new HeightMapGap(from + first.length);\n            else\n                nodes.unshift(new HeightMapGap(from - 1), null);\n        }\n        return HeightMap.of(nodes);\n    }\n    decomposeLeft(to, result) {\n        result.push(new HeightMapGap(to - 1), null);\n    }\n    decomposeRight(from, result) {\n        result.push(null, new HeightMapGap(this.length - from - 1));\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        let end = offset + this.length;\n        if (measured && measured.from <= offset + this.length && measured.more) {\n            // Fill in part of this gap with measured lines. We know there\n            // can't be widgets or collapsed ranges in those lines, because\n            // they would already have been added to the heightmap (gaps\n            // only contain plain text).\n            let nodes = [], pos = Math.max(offset, measured.from), singleHeight = -1;\n            if (measured.from > offset)\n                nodes.push(new HeightMapGap(measured.from - offset - 1).updateHeight(oracle, offset));\n            while (pos <= end && measured.more) {\n                let len = oracle.doc.lineAt(pos).length;\n                if (nodes.length)\n                    nodes.push(null);\n                let height = measured.heights[measured.index++];\n                if (singleHeight == -1)\n                    singleHeight = height;\n                else if (Math.abs(height - singleHeight) >= Epsilon)\n                    singleHeight = -2;\n                let line = new HeightMapText(len, height);\n                line.outdated = false;\n                nodes.push(line);\n                pos += len + 1;\n            }\n            if (pos <= end)\n                nodes.push(null, new HeightMapGap(end - pos).updateHeight(oracle, pos));\n            let result = HeightMap.of(nodes);\n            if (singleHeight < 0 || Math.abs(result.height - this.height) >= Epsilon ||\n                Math.abs(singleHeight - this.heightMetrics(oracle, offset).perLine) >= Epsilon)\n                heightChangeFlag = true;\n            return replace(this, result);\n        }\n        else if (force || this.outdated) {\n            this.setHeight(oracle.heightForGap(offset, offset + this.length));\n            this.outdated = false;\n        }\n        return this;\n    }\n    toString() { return `gap(${this.length})`; }\n}\nclass HeightMapBranch extends HeightMap {\n    constructor(left, brk, right) {\n        super(left.length + brk + right.length, left.height + right.height, brk | (left.outdated || right.outdated ? 2 /* Flag.Outdated */ : 0));\n        this.left = left;\n        this.right = right;\n        this.size = left.size + right.size;\n    }\n    get break() { return this.flags & 1 /* Flag.Break */; }\n    blockAt(height, oracle, top, offset) {\n        let mid = top + this.left.height;\n        return height < mid ? this.left.blockAt(height, oracle, top, offset)\n            : this.right.blockAt(height, oracle, mid, offset + this.left.length + this.break);\n    }\n    lineAt(value, type, oracle, top, offset) {\n        let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break;\n        let left = type == QueryType.ByHeight ? value < rightTop : value < rightOffset;\n        let base = left ? this.left.lineAt(value, type, oracle, top, offset)\n            : this.right.lineAt(value, type, oracle, rightTop, rightOffset);\n        if (this.break || (left ? base.to < rightOffset : base.from > rightOffset))\n            return base;\n        let subQuery = type == QueryType.ByPosNoHeight ? QueryType.ByPosNoHeight : QueryType.ByPos;\n        if (left)\n            return base.join(this.right.lineAt(rightOffset, subQuery, oracle, rightTop, rightOffset));\n        else\n            return this.left.lineAt(rightOffset, subQuery, oracle, top, offset).join(base);\n    }\n    forEachLine(from, to, oracle, top, offset, f) {\n        let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break;\n        if (this.break) {\n            if (from < rightOffset)\n                this.left.forEachLine(from, to, oracle, top, offset, f);\n            if (to >= rightOffset)\n                this.right.forEachLine(from, to, oracle, rightTop, rightOffset, f);\n        }\n        else {\n            let mid = this.lineAt(rightOffset, QueryType.ByPos, oracle, top, offset);\n            if (from < mid.from)\n                this.left.forEachLine(from, mid.from - 1, oracle, top, offset, f);\n            if (mid.to >= from && mid.from <= to)\n                f(mid);\n            if (to > mid.to)\n                this.right.forEachLine(mid.to + 1, to, oracle, rightTop, rightOffset, f);\n        }\n    }\n    replace(from, to, nodes) {\n        let rightStart = this.left.length + this.break;\n        if (to < rightStart)\n            return this.balanced(this.left.replace(from, to, nodes), this.right);\n        if (from > this.left.length)\n            return this.balanced(this.left, this.right.replace(from - rightStart, to - rightStart, nodes));\n        let result = [];\n        if (from > 0)\n            this.decomposeLeft(from, result);\n        let left = result.length;\n        for (let node of nodes)\n            result.push(node);\n        if (from > 0)\n            mergeGaps(result, left - 1);\n        if (to < this.length) {\n            let right = result.length;\n            this.decomposeRight(to, result);\n            mergeGaps(result, right);\n        }\n        return HeightMap.of(result);\n    }\n    decomposeLeft(to, result) {\n        let left = this.left.length;\n        if (to <= left)\n            return this.left.decomposeLeft(to, result);\n        result.push(this.left);\n        if (this.break) {\n            left++;\n            if (to >= left)\n                result.push(null);\n        }\n        if (to > left)\n            this.right.decomposeLeft(to - left, result);\n    }\n    decomposeRight(from, result) {\n        let left = this.left.length, right = left + this.break;\n        if (from >= right)\n            return this.right.decomposeRight(from - right, result);\n        if (from < left)\n            this.left.decomposeRight(from, result);\n        if (this.break && from < right)\n            result.push(null);\n        result.push(this.right);\n    }\n    balanced(left, right) {\n        if (left.size > 2 * right.size || right.size > 2 * left.size)\n            return HeightMap.of(this.break ? [left, null, right] : [left, right]);\n        this.left = replace(this.left, left);\n        this.right = replace(this.right, right);\n        this.setHeight(left.height + right.height);\n        this.outdated = left.outdated || right.outdated;\n        this.size = left.size + right.size;\n        this.length = left.length + this.break + right.length;\n        return this;\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        let { left, right } = this, rightStart = offset + left.length + this.break, rebalance = null;\n        if (measured && measured.from <= offset + left.length && measured.more)\n            rebalance = left = left.updateHeight(oracle, offset, force, measured);\n        else\n            left.updateHeight(oracle, offset, force);\n        if (measured && measured.from <= rightStart + right.length && measured.more)\n            rebalance = right = right.updateHeight(oracle, rightStart, force, measured);\n        else\n            right.updateHeight(oracle, rightStart, force);\n        if (rebalance)\n            return this.balanced(left, right);\n        this.height = this.left.height + this.right.height;\n        this.outdated = false;\n        return this;\n    }\n    toString() { return this.left + (this.break ? \" \" : \"-\") + this.right; }\n}\nfunction mergeGaps(nodes, around) {\n    let before, after;\n    if (nodes[around] == null &&\n        (before = nodes[around - 1]) instanceof HeightMapGap &&\n        (after = nodes[around + 1]) instanceof HeightMapGap)\n        nodes.splice(around - 1, 3, new HeightMapGap(before.length + 1 + after.length));\n}\nconst relevantWidgetHeight = 5;\nclass NodeBuilder {\n    constructor(pos, oracle) {\n        this.pos = pos;\n        this.oracle = oracle;\n        this.nodes = [];\n        this.lineStart = -1;\n        this.lineEnd = -1;\n        this.covering = null;\n        this.writtenTo = pos;\n    }\n    get isCovered() {\n        return this.covering && this.nodes[this.nodes.length - 1] == this.covering;\n    }\n    span(_from, to) {\n        if (this.lineStart > -1) {\n            let end = Math.min(to, this.lineEnd), last = this.nodes[this.nodes.length - 1];\n            if (last instanceof HeightMapText)\n                last.length += end - this.pos;\n            else if (end > this.pos || !this.isCovered)\n                this.nodes.push(new HeightMapText(end - this.pos, -1));\n            this.writtenTo = end;\n            if (to > end) {\n                this.nodes.push(null);\n                this.writtenTo++;\n                this.lineStart = -1;\n            }\n        }\n        this.pos = to;\n    }\n    point(from, to, deco) {\n        if (from < to || deco.heightRelevant) {\n            let height = deco.widget ? deco.widget.estimatedHeight : 0;\n            let breaks = deco.widget ? deco.widget.lineBreaks : 0;\n            if (height < 0)\n                height = this.oracle.lineHeight;\n            let len = to - from;\n            if (deco.block) {\n                this.addBlock(new HeightMapBlock(len, height, deco));\n            }\n            else if (len || breaks || height >= relevantWidgetHeight) {\n                this.addLineDeco(height, breaks, len);\n            }\n        }\n        else if (to > from) {\n            this.span(from, to);\n        }\n        if (this.lineEnd > -1 && this.lineEnd < this.pos)\n            this.lineEnd = this.oracle.doc.lineAt(this.pos).to;\n    }\n    enterLine() {\n        if (this.lineStart > -1)\n            return;\n        let { from, to } = this.oracle.doc.lineAt(this.pos);\n        this.lineStart = from;\n        this.lineEnd = to;\n        if (this.writtenTo < from) {\n            if (this.writtenTo < from - 1 || this.nodes[this.nodes.length - 1] == null)\n                this.nodes.push(this.blankContent(this.writtenTo, from - 1));\n            this.nodes.push(null);\n        }\n        if (this.pos > from)\n            this.nodes.push(new HeightMapText(this.pos - from, -1));\n        this.writtenTo = this.pos;\n    }\n    blankContent(from, to) {\n        let gap = new HeightMapGap(to - from);\n        if (this.oracle.doc.lineAt(from).to == to)\n            gap.flags |= 4 /* Flag.SingleLine */;\n        return gap;\n    }\n    ensureLine() {\n        this.enterLine();\n        let last = this.nodes.length ? this.nodes[this.nodes.length - 1] : null;\n        if (last instanceof HeightMapText)\n            return last;\n        let line = new HeightMapText(0, -1);\n        this.nodes.push(line);\n        return line;\n    }\n    addBlock(block) {\n        this.enterLine();\n        let deco = block.deco;\n        if (deco && deco.startSide > 0 && !this.isCovered)\n            this.ensureLine();\n        this.nodes.push(block);\n        this.writtenTo = this.pos = this.pos + block.length;\n        if (deco && deco.endSide > 0)\n            this.covering = block;\n    }\n    addLineDeco(height, breaks, length) {\n        let line = this.ensureLine();\n        line.length += length;\n        line.collapsed += length;\n        line.widgetHeight = Math.max(line.widgetHeight, height);\n        line.breaks += breaks;\n        this.writtenTo = this.pos = this.pos + length;\n    }\n    finish(from) {\n        let last = this.nodes.length == 0 ? null : this.nodes[this.nodes.length - 1];\n        if (this.lineStart > -1 && !(last instanceof HeightMapText) && !this.isCovered)\n            this.nodes.push(new HeightMapText(0, -1));\n        else if (this.writtenTo < this.pos || last == null)\n            this.nodes.push(this.blankContent(this.writtenTo, this.pos));\n        let pos = from;\n        for (let node of this.nodes) {\n            if (node instanceof HeightMapText)\n                node.updateHeight(this.oracle, pos);\n            pos += node ? node.length : 1;\n        }\n        return this.nodes;\n    }\n    // Always called with a region that on both sides either stretches\n    // to a line break or the end of the document.\n    // The returned array uses null to indicate line breaks, but never\n    // starts or ends in a line break, or has multiple line breaks next\n    // to each other.\n    static build(oracle, decorations, from, to) {\n        let builder = new NodeBuilder(from, oracle);\n        RangeSet.spans(decorations, from, to, builder, 0);\n        return builder.finish(from);\n    }\n}\nfunction heightRelevantDecoChanges(a, b, diff) {\n    let comp = new DecorationComparator;\n    RangeSet.compare(a, b, diff, comp, 0);\n    return comp.changes;\n}\nclass DecorationComparator {\n    constructor() {\n        this.changes = [];\n    }\n    compareRange() { }\n    comparePoint(from, to, a, b) {\n        if (from < to || a && a.heightRelevant || b && b.heightRelevant)\n            addRange(from, to, this.changes, 5);\n    }\n}\n\nfunction visiblePixelRange(dom, paddingTop) {\n    let rect = dom.getBoundingClientRect();\n    let doc = dom.ownerDocument, win = doc.defaultView || window;\n    let left = Math.max(0, rect.left), right = Math.min(win.innerWidth, rect.right);\n    let top = Math.max(0, rect.top), bottom = Math.min(win.innerHeight, rect.bottom);\n    for (let parent = dom.parentNode; parent && parent != doc.body;) {\n        if (parent.nodeType == 1) {\n            let elt = parent;\n            let style = window.getComputedStyle(elt);\n            if ((elt.scrollHeight > elt.clientHeight || elt.scrollWidth > elt.clientWidth) &&\n                style.overflow != \"visible\") {\n                let parentRect = elt.getBoundingClientRect();\n                left = Math.max(left, parentRect.left);\n                right = Math.min(right, parentRect.right);\n                top = Math.max(top, parentRect.top);\n                bottom = Math.min(parent == dom.parentNode ? win.innerHeight : bottom, parentRect.bottom);\n            }\n            parent = style.position == \"absolute\" || style.position == \"fixed\" ? elt.offsetParent : elt.parentNode;\n        }\n        else if (parent.nodeType == 11) { // Shadow root\n            parent = parent.host;\n        }\n        else {\n            break;\n        }\n    }\n    return { left: left - rect.left, right: Math.max(left, right) - rect.left,\n        top: top - (rect.top + paddingTop), bottom: Math.max(top, bottom) - (rect.top + paddingTop) };\n}\nfunction inWindow(elt) {\n    let rect = elt.getBoundingClientRect(), win = elt.ownerDocument.defaultView || window;\n    return rect.left < win.innerWidth && rect.right > 0 &&\n        rect.top < win.innerHeight && rect.bottom > 0;\n}\nfunction fullPixelRange(dom, paddingTop) {\n    let rect = dom.getBoundingClientRect();\n    return { left: 0, right: rect.right - rect.left,\n        top: paddingTop, bottom: rect.bottom - (rect.top + paddingTop) };\n}\n// Line gaps are placeholder widgets used to hide pieces of overlong\n// lines within the viewport, as a kludge to keep the editor\n// responsive when a ridiculously long line is loaded into it.\nclass LineGap {\n    constructor(from, to, size, displaySize) {\n        this.from = from;\n        this.to = to;\n        this.size = size;\n        this.displaySize = displaySize;\n    }\n    static same(a, b) {\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++) {\n            let gA = a[i], gB = b[i];\n            if (gA.from != gB.from || gA.to != gB.to || gA.size != gB.size)\n                return false;\n        }\n        return true;\n    }\n    draw(viewState, wrapping) {\n        return Decoration.replace({\n            widget: new LineGapWidget(this.displaySize * (wrapping ? viewState.scaleY : viewState.scaleX), wrapping)\n        }).range(this.from, this.to);\n    }\n}\nclass LineGapWidget extends WidgetType {\n    constructor(size, vertical) {\n        super();\n        this.size = size;\n        this.vertical = vertical;\n    }\n    eq(other) { return other.size == this.size && other.vertical == this.vertical; }\n    toDOM() {\n        let elt = document.createElement(\"div\");\n        if (this.vertical) {\n            elt.style.height = this.size + \"px\";\n        }\n        else {\n            elt.style.width = this.size + \"px\";\n            elt.style.height = \"2px\";\n            elt.style.display = \"inline-block\";\n        }\n        return elt;\n    }\n    get estimatedHeight() { return this.vertical ? this.size : -1; }\n}\nclass ViewState {\n    constructor(state) {\n        this.state = state;\n        // These are contentDOM-local coordinates\n        this.pixelViewport = { left: 0, right: window.innerWidth, top: 0, bottom: 0 };\n        this.inView = true;\n        this.paddingTop = 0; // Padding above the document, scaled\n        this.paddingBottom = 0; // Padding below the document, scaled\n        this.contentDOMWidth = 0; // contentDOM.getBoundingClientRect().width\n        this.contentDOMHeight = 0; // contentDOM.getBoundingClientRect().height\n        this.editorHeight = 0; // scrollDOM.clientHeight, unscaled\n        this.editorWidth = 0; // scrollDOM.clientWidth, unscaled\n        this.scrollTop = 0; // Last seen scrollDOM.scrollTop, scaled\n        this.scrolledToBottom = false;\n        // The CSS-transformation scale of the editor (transformed size /\n        // concrete size)\n        this.scaleX = 1;\n        this.scaleY = 1;\n        // The vertical position (document-relative) to which to anchor the\n        // scroll position. -1 means anchor to the end of the document.\n        this.scrollAnchorPos = 0;\n        // The height at the anchor position. Set by the DOM update phase.\n        // -1 means no height available.\n        this.scrollAnchorHeight = -1;\n        // See VP.MaxDOMHeight\n        this.scaler = IdScaler;\n        this.scrollTarget = null;\n        // Briefly set to true when printing, to disable viewport limiting\n        this.printing = false;\n        // Flag set when editor content was redrawn, so that the next\n        // measure stage knows it must read DOM layout\n        this.mustMeasureContent = true;\n        this.defaultTextDirection = Direction.LTR;\n        this.visibleRanges = [];\n        // Cursor 'assoc' is only significant when the cursor is on a line\n        // wrap point, where it must stick to the character that it is\n        // associated with. Since browsers don't provide a reasonable\n        // interface to set or query this, when a selection is set that\n        // might cause this to be significant, this flag is set. The next\n        // measure phase will check whether the cursor is on a line-wrapping\n        // boundary and, if so, reset it to make sure it is positioned in\n        // the right place.\n        this.mustEnforceCursorAssoc = false;\n        let guessWrapping = state.facet(contentAttributes).some(v => typeof v != \"function\" && v.class == \"cm-lineWrapping\");\n        this.heightOracle = new HeightOracle(guessWrapping);\n        this.stateDeco = state.facet(decorations).filter(d => typeof d != \"function\");\n        this.heightMap = HeightMap.empty().applyChanges(this.stateDeco, Text.empty, this.heightOracle.setDoc(state.doc), [new ChangedRange(0, 0, 0, state.doc.length)]);\n        for (let i = 0; i < 2; i++) {\n            this.viewport = this.getViewport(0, null);\n            if (!this.updateForViewport())\n                break;\n        }\n        this.updateViewportLines();\n        this.lineGaps = this.ensureLineGaps([]);\n        this.lineGapDeco = Decoration.set(this.lineGaps.map(gap => gap.draw(this, false)));\n        this.computeVisibleRanges();\n    }\n    updateForViewport() {\n        let viewports = [this.viewport], { main } = this.state.selection;\n        for (let i = 0; i <= 1; i++) {\n            let pos = i ? main.head : main.anchor;\n            if (!viewports.some(({ from, to }) => pos >= from && pos <= to)) {\n                let { from, to } = this.lineBlockAt(pos);\n                viewports.push(new Viewport(from, to));\n            }\n        }\n        this.viewports = viewports.sort((a, b) => a.from - b.from);\n        return this.updateScaler();\n    }\n    updateScaler() {\n        let scaler = this.scaler;\n        this.scaler = this.heightMap.height <= 7000000 /* VP.MaxDOMHeight */ ? IdScaler :\n            new BigScaler(this.heightOracle, this.heightMap, this.viewports);\n        return scaler.eq(this.scaler) ? 0 : 2 /* UpdateFlag.Height */;\n    }\n    updateViewportLines() {\n        this.viewportLines = [];\n        this.heightMap.forEachLine(this.viewport.from, this.viewport.to, this.heightOracle.setDoc(this.state.doc), 0, 0, block => {\n            this.viewportLines.push(scaleBlock(block, this.scaler));\n        });\n    }\n    update(update, scrollTarget = null) {\n        this.state = update.state;\n        let prevDeco = this.stateDeco;\n        this.stateDeco = this.state.facet(decorations).filter(d => typeof d != \"function\");\n        let contentChanges = update.changedRanges;\n        let heightChanges = ChangedRange.extendWithRanges(contentChanges, heightRelevantDecoChanges(prevDeco, this.stateDeco, update ? update.changes : ChangeSet.empty(this.state.doc.length)));\n        let prevHeight = this.heightMap.height;\n        let scrollAnchor = this.scrolledToBottom ? null : this.scrollAnchorAt(this.scrollTop);\n        clearHeightChangeFlag();\n        this.heightMap = this.heightMap.applyChanges(this.stateDeco, update.startState.doc, this.heightOracle.setDoc(this.state.doc), heightChanges);\n        if (this.heightMap.height != prevHeight || heightChangeFlag)\n            update.flags |= 2 /* UpdateFlag.Height */;\n        if (scrollAnchor) {\n            this.scrollAnchorPos = update.changes.mapPos(scrollAnchor.from, -1);\n            this.scrollAnchorHeight = scrollAnchor.top;\n        }\n        else {\n            this.scrollAnchorPos = -1;\n            this.scrollAnchorHeight = prevHeight;\n        }\n        let viewport = heightChanges.length ? this.mapViewport(this.viewport, update.changes) : this.viewport;\n        if (scrollTarget && (scrollTarget.range.head < viewport.from || scrollTarget.range.head > viewport.to) ||\n            !this.viewportIsAppropriate(viewport))\n            viewport = this.getViewport(0, scrollTarget);\n        let viewportChange = viewport.from != this.viewport.from || viewport.to != this.viewport.to;\n        this.viewport = viewport;\n        update.flags |= this.updateForViewport();\n        if (viewportChange || !update.changes.empty || (update.flags & 2 /* UpdateFlag.Height */))\n            this.updateViewportLines();\n        if (this.lineGaps.length || this.viewport.to - this.viewport.from > (2000 /* LG.Margin */ << 1))\n            this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps, update.changes)));\n        update.flags |= this.computeVisibleRanges(update.changes);\n        if (scrollTarget)\n            this.scrollTarget = scrollTarget;\n        if (!this.mustEnforceCursorAssoc && update.selectionSet && update.view.lineWrapping &&\n            update.state.selection.main.empty && update.state.selection.main.assoc &&\n            !update.state.facet(nativeSelectionHidden))\n            this.mustEnforceCursorAssoc = true;\n    }\n    measure(view) {\n        let dom = view.contentDOM, style = window.getComputedStyle(dom);\n        let oracle = this.heightOracle;\n        let whiteSpace = style.whiteSpace;\n        this.defaultTextDirection = style.direction == \"rtl\" ? Direction.RTL : Direction.LTR;\n        let refresh = this.heightOracle.mustRefreshForWrapping(whiteSpace);\n        let domRect = dom.getBoundingClientRect();\n        let measureContent = refresh || this.mustMeasureContent || this.contentDOMHeight != domRect.height;\n        this.contentDOMHeight = domRect.height;\n        this.mustMeasureContent = false;\n        let result = 0, bias = 0;\n        if (domRect.width && domRect.height) {\n            let { scaleX, scaleY } = getScale(dom, domRect);\n            if (scaleX > .005 && Math.abs(this.scaleX - scaleX) > .005 ||\n                scaleY > .005 && Math.abs(this.scaleY - scaleY) > .005) {\n                this.scaleX = scaleX;\n                this.scaleY = scaleY;\n                result |= 16 /* UpdateFlag.Geometry */;\n                refresh = measureContent = true;\n            }\n        }\n        // Vertical padding\n        let paddingTop = (parseInt(style.paddingTop) || 0) * this.scaleY;\n        let paddingBottom = (parseInt(style.paddingBottom) || 0) * this.scaleY;\n        if (this.paddingTop != paddingTop || this.paddingBottom != paddingBottom) {\n            this.paddingTop = paddingTop;\n            this.paddingBottom = paddingBottom;\n            result |= 16 /* UpdateFlag.Geometry */ | 2 /* UpdateFlag.Height */;\n        }\n        if (this.editorWidth != view.scrollDOM.clientWidth) {\n            if (oracle.lineWrapping)\n                measureContent = true;\n            this.editorWidth = view.scrollDOM.clientWidth;\n            result |= 16 /* UpdateFlag.Geometry */;\n        }\n        let scrollTop = view.scrollDOM.scrollTop * this.scaleY;\n        if (this.scrollTop != scrollTop) {\n            this.scrollAnchorHeight = -1;\n            this.scrollTop = scrollTop;\n        }\n        this.scrolledToBottom = isScrolledToBottom(view.scrollDOM);\n        // Pixel viewport\n        let pixelViewport = (this.printing ? fullPixelRange : visiblePixelRange)(dom, this.paddingTop);\n        let dTop = pixelViewport.top - this.pixelViewport.top, dBottom = pixelViewport.bottom - this.pixelViewport.bottom;\n        this.pixelViewport = pixelViewport;\n        let inView = this.pixelViewport.bottom > this.pixelViewport.top && this.pixelViewport.right > this.pixelViewport.left;\n        if (inView != this.inView) {\n            this.inView = inView;\n            if (inView)\n                measureContent = true;\n        }\n        if (!this.inView && !this.scrollTarget && !inWindow(view.dom))\n            return 0;\n        let contentWidth = domRect.width;\n        if (this.contentDOMWidth != contentWidth || this.editorHeight != view.scrollDOM.clientHeight) {\n            this.contentDOMWidth = domRect.width;\n            this.editorHeight = view.scrollDOM.clientHeight;\n            result |= 16 /* UpdateFlag.Geometry */;\n        }\n        if (measureContent) {\n            let lineHeights = view.docView.measureVisibleLineHeights(this.viewport);\n            if (oracle.mustRefreshForHeights(lineHeights))\n                refresh = true;\n            if (refresh || oracle.lineWrapping && Math.abs(contentWidth - this.contentDOMWidth) > oracle.charWidth) {\n                let { lineHeight, charWidth, textHeight } = view.docView.measureTextSize();\n                refresh = lineHeight > 0 && oracle.refresh(whiteSpace, lineHeight, charWidth, textHeight, Math.max(5, contentWidth / charWidth), lineHeights);\n                if (refresh) {\n                    view.docView.minWidth = 0;\n                    result |= 16 /* UpdateFlag.Geometry */;\n                }\n            }\n            if (dTop > 0 && dBottom > 0)\n                bias = Math.max(dTop, dBottom);\n            else if (dTop < 0 && dBottom < 0)\n                bias = Math.min(dTop, dBottom);\n            clearHeightChangeFlag();\n            for (let vp of this.viewports) {\n                let heights = vp.from == this.viewport.from ? lineHeights : view.docView.measureVisibleLineHeights(vp);\n                this.heightMap = (refresh ? HeightMap.empty().applyChanges(this.stateDeco, Text.empty, this.heightOracle, [new ChangedRange(0, 0, 0, view.state.doc.length)]) : this.heightMap).updateHeight(oracle, 0, refresh, new MeasuredHeights(vp.from, heights));\n            }\n            if (heightChangeFlag)\n                result |= 2 /* UpdateFlag.Height */;\n        }\n        let viewportChange = !this.viewportIsAppropriate(this.viewport, bias) ||\n            this.scrollTarget && (this.scrollTarget.range.head < this.viewport.from ||\n                this.scrollTarget.range.head > this.viewport.to);\n        if (viewportChange) {\n            if (result & 2 /* UpdateFlag.Height */)\n                result |= this.updateScaler();\n            this.viewport = this.getViewport(bias, this.scrollTarget);\n            result |= this.updateForViewport();\n        }\n        if ((result & 2 /* UpdateFlag.Height */) || viewportChange)\n            this.updateViewportLines();\n        if (this.lineGaps.length || this.viewport.to - this.viewport.from > (2000 /* LG.Margin */ << 1))\n            this.updateLineGaps(this.ensureLineGaps(refresh ? [] : this.lineGaps, view));\n        result |= this.computeVisibleRanges();\n        if (this.mustEnforceCursorAssoc) {\n            this.mustEnforceCursorAssoc = false;\n            // This is done in the read stage, because moving the selection\n            // to a line end is going to trigger a layout anyway, so it\n            // can't be a pure write. It should be rare that it does any\n            // writing.\n            view.docView.enforceCursorAssoc();\n        }\n        return result;\n    }\n    get visibleTop() { return this.scaler.fromDOM(this.pixelViewport.top); }\n    get visibleBottom() { return this.scaler.fromDOM(this.pixelViewport.bottom); }\n    getViewport(bias, scrollTarget) {\n        // This will divide VP.Margin between the top and the\n        // bottom, depending on the bias (the change in viewport position\n        // since the last update). It'll hold a number between 0 and 1\n        let marginTop = 0.5 - Math.max(-0.5, Math.min(0.5, bias / 1000 /* VP.Margin */ / 2));\n        let map = this.heightMap, oracle = this.heightOracle;\n        let { visibleTop, visibleBottom } = this;\n        let viewport = new Viewport(map.lineAt(visibleTop - marginTop * 1000 /* VP.Margin */, QueryType.ByHeight, oracle, 0, 0).from, map.lineAt(visibleBottom + (1 - marginTop) * 1000 /* VP.Margin */, QueryType.ByHeight, oracle, 0, 0).to);\n        // If scrollTarget is given, make sure the viewport includes that position\n        if (scrollTarget) {\n            let { head } = scrollTarget.range;\n            if (head < viewport.from || head > viewport.to) {\n                let viewHeight = Math.min(this.editorHeight, this.pixelViewport.bottom - this.pixelViewport.top);\n                let block = map.lineAt(head, QueryType.ByPos, oracle, 0, 0), topPos;\n                if (scrollTarget.y == \"center\")\n                    topPos = (block.top + block.bottom) / 2 - viewHeight / 2;\n                else if (scrollTarget.y == \"start\" || scrollTarget.y == \"nearest\" && head < viewport.from)\n                    topPos = block.top;\n                else\n                    topPos = block.bottom - viewHeight;\n                viewport = new Viewport(map.lineAt(topPos - 1000 /* VP.Margin */ / 2, QueryType.ByHeight, oracle, 0, 0).from, map.lineAt(topPos + viewHeight + 1000 /* VP.Margin */ / 2, QueryType.ByHeight, oracle, 0, 0).to);\n            }\n        }\n        return viewport;\n    }\n    mapViewport(viewport, changes) {\n        let from = changes.mapPos(viewport.from, -1), to = changes.mapPos(viewport.to, 1);\n        return new Viewport(this.heightMap.lineAt(from, QueryType.ByPos, this.heightOracle, 0, 0).from, this.heightMap.lineAt(to, QueryType.ByPos, this.heightOracle, 0, 0).to);\n    }\n    // Checks if a given viewport covers the visible part of the\n    // document and not too much beyond that.\n    viewportIsAppropriate({ from, to }, bias = 0) {\n        if (!this.inView)\n            return true;\n        let { top } = this.heightMap.lineAt(from, QueryType.ByPos, this.heightOracle, 0, 0);\n        let { bottom } = this.heightMap.lineAt(to, QueryType.ByPos, this.heightOracle, 0, 0);\n        let { visibleTop, visibleBottom } = this;\n        return (from == 0 || top <= visibleTop - Math.max(10 /* VP.MinCoverMargin */, Math.min(-bias, 250 /* VP.MaxCoverMargin */))) &&\n            (to == this.state.doc.length ||\n                bottom >= visibleBottom + Math.max(10 /* VP.MinCoverMargin */, Math.min(bias, 250 /* VP.MaxCoverMargin */))) &&\n            (top > visibleTop - 2 * 1000 /* VP.Margin */ && bottom < visibleBottom + 2 * 1000 /* VP.Margin */);\n    }\n    mapLineGaps(gaps, changes) {\n        if (!gaps.length || changes.empty)\n            return gaps;\n        let mapped = [];\n        for (let gap of gaps)\n            if (!changes.touchesRange(gap.from, gap.to))\n                mapped.push(new LineGap(changes.mapPos(gap.from), changes.mapPos(gap.to), gap.size, gap.displaySize));\n        return mapped;\n    }\n    // Computes positions in the viewport where the start or end of a\n    // line should be hidden, trying to reuse existing line gaps when\n    // appropriate to avoid unneccesary redraws.\n    // Uses crude character-counting for the positioning and sizing,\n    // since actual DOM coordinates aren't always available and\n    // predictable. Relies on generous margins (see LG.Margin) to hide\n    // the artifacts this might produce from the user.\n    ensureLineGaps(current, mayMeasure) {\n        let wrapping = this.heightOracle.lineWrapping;\n        let margin = wrapping ? 10000 /* LG.MarginWrap */ : 2000 /* LG.Margin */, halfMargin = margin >> 1, doubleMargin = margin << 1;\n        // The non-wrapping logic won't work at all in predominantly right-to-left text.\n        if (this.defaultTextDirection != Direction.LTR && !wrapping)\n            return [];\n        let gaps = [];\n        let addGap = (from, to, line, structure) => {\n            if (to - from < halfMargin)\n                return;\n            let sel = this.state.selection.main, avoid = [sel.from];\n            if (!sel.empty)\n                avoid.push(sel.to);\n            for (let pos of avoid) {\n                if (pos > from && pos < to) {\n                    addGap(from, pos - 10 /* LG.SelectionMargin */, line, structure);\n                    addGap(pos + 10 /* LG.SelectionMargin */, to, line, structure);\n                    return;\n                }\n            }\n            let gap = find(current, gap => gap.from >= line.from && gap.to <= line.to &&\n                Math.abs(gap.from - from) < halfMargin && Math.abs(gap.to - to) < halfMargin &&\n                !avoid.some(pos => gap.from < pos && gap.to > pos));\n            if (!gap) {\n                // When scrolling down, snap gap ends to line starts to avoid shifts in wrapping\n                if (to < line.to && mayMeasure && wrapping &&\n                    mayMeasure.visibleRanges.some(r => r.from <= to && r.to >= to)) {\n                    let lineStart = mayMeasure.moveToLineBoundary(EditorSelection.cursor(to), false, true).head;\n                    if (lineStart > from)\n                        to = lineStart;\n                }\n                let size = this.gapSize(line, from, to, structure);\n                let displaySize = wrapping || size < 2000000 /* VP.MaxHorizGap */ ? size : 2000000 /* VP.MaxHorizGap */;\n                gap = new LineGap(from, to, size, displaySize);\n            }\n            gaps.push(gap);\n        };\n        let checkLine = (line) => {\n            if (line.length < doubleMargin || line.type != BlockType.Text)\n                return;\n            let structure = lineStructure(line.from, line.to, this.stateDeco);\n            if (structure.total < doubleMargin)\n                return;\n            let target = this.scrollTarget ? this.scrollTarget.range.head : null;\n            let viewFrom, viewTo;\n            if (wrapping) {\n                let marginHeight = (margin / this.heightOracle.lineLength) * this.heightOracle.lineHeight;\n                let top, bot;\n                if (target != null) {\n                    let targetFrac = findFraction(structure, target);\n                    let spaceFrac = ((this.visibleBottom - this.visibleTop) / 2 + marginHeight) / line.height;\n                    top = targetFrac - spaceFrac;\n                    bot = targetFrac + spaceFrac;\n                }\n                else {\n                    top = (this.visibleTop - line.top - marginHeight) / line.height;\n                    bot = (this.visibleBottom - line.top + marginHeight) / line.height;\n                }\n                viewFrom = findPosition(structure, top);\n                viewTo = findPosition(structure, bot);\n            }\n            else {\n                let totalWidth = structure.total * this.heightOracle.charWidth;\n                let marginWidth = margin * this.heightOracle.charWidth;\n                let horizOffset = 0;\n                if (totalWidth > 2000000 /* VP.MaxHorizGap */)\n                    for (let old of current) {\n                        if (old.from >= line.from && old.from < line.to && old.size != old.displaySize &&\n                            old.from * this.heightOracle.charWidth + horizOffset < this.pixelViewport.left)\n                            horizOffset = old.size - old.displaySize;\n                    }\n                let pxLeft = this.pixelViewport.left + horizOffset, pxRight = this.pixelViewport.right + horizOffset;\n                let left, right;\n                if (target != null) {\n                    let targetFrac = findFraction(structure, target);\n                    let spaceFrac = ((pxRight - pxLeft) / 2 + marginWidth) / totalWidth;\n                    left = targetFrac - spaceFrac;\n                    right = targetFrac + spaceFrac;\n                }\n                else {\n                    left = (pxLeft - marginWidth) / totalWidth;\n                    right = (pxRight + marginWidth) / totalWidth;\n                }\n                viewFrom = findPosition(structure, left);\n                viewTo = findPosition(structure, right);\n            }\n            if (viewFrom > line.from)\n                addGap(line.from, viewFrom, line, structure);\n            if (viewTo < line.to)\n                addGap(viewTo, line.to, line, structure);\n        };\n        for (let line of this.viewportLines) {\n            if (Array.isArray(line.type))\n                line.type.forEach(checkLine);\n            else\n                checkLine(line);\n        }\n        return gaps;\n    }\n    gapSize(line, from, to, structure) {\n        let fraction = findFraction(structure, to) - findFraction(structure, from);\n        if (this.heightOracle.lineWrapping) {\n            return line.height * fraction;\n        }\n        else {\n            return structure.total * this.heightOracle.charWidth * fraction;\n        }\n    }\n    updateLineGaps(gaps) {\n        if (!LineGap.same(gaps, this.lineGaps)) {\n            this.lineGaps = gaps;\n            this.lineGapDeco = Decoration.set(gaps.map(gap => gap.draw(this, this.heightOracle.lineWrapping)));\n        }\n    }\n    computeVisibleRanges(changes) {\n        let deco = this.stateDeco;\n        if (this.lineGaps.length)\n            deco = deco.concat(this.lineGapDeco);\n        let ranges = [];\n        RangeSet.spans(deco, this.viewport.from, this.viewport.to, {\n            span(from, to) { ranges.push({ from, to }); },\n            point() { }\n        }, 20);\n        let changed = 0;\n        if (ranges.length != this.visibleRanges.length) {\n            changed = 8 /* UpdateFlag.ViewportMoved */ | 4 /* UpdateFlag.Viewport */;\n        }\n        else {\n            for (let i = 0; i < ranges.length && !(changed & 8 /* UpdateFlag.ViewportMoved */); i++) {\n                let old = this.visibleRanges[i], nw = ranges[i];\n                if (old.from != nw.from || old.to != nw.to) {\n                    changed |= 4 /* UpdateFlag.Viewport */;\n                    if (!(changes && changes.mapPos(old.from, -1) == nw.from && changes.mapPos(old.to, 1) == nw.to))\n                        changed |= 8 /* UpdateFlag.ViewportMoved */;\n                }\n            }\n        }\n        this.visibleRanges = ranges;\n        return changed;\n    }\n    lineBlockAt(pos) {\n        return (pos >= this.viewport.from && pos <= this.viewport.to &&\n            this.viewportLines.find(b => b.from <= pos && b.to >= pos)) ||\n            scaleBlock(this.heightMap.lineAt(pos, QueryType.ByPos, this.heightOracle, 0, 0), this.scaler);\n    }\n    lineBlockAtHeight(height) {\n        return (height >= this.viewportLines[0].top && height <= this.viewportLines[this.viewportLines.length - 1].bottom &&\n            this.viewportLines.find(l => l.top <= height && l.bottom >= height)) ||\n            scaleBlock(this.heightMap.lineAt(this.scaler.fromDOM(height), QueryType.ByHeight, this.heightOracle, 0, 0), this.scaler);\n    }\n    scrollAnchorAt(scrollTop) {\n        let block = this.lineBlockAtHeight(scrollTop + 8);\n        return block.from >= this.viewport.from || this.viewportLines[0].top - scrollTop > 200 ? block : this.viewportLines[0];\n    }\n    elementAtHeight(height) {\n        return scaleBlock(this.heightMap.blockAt(this.scaler.fromDOM(height), this.heightOracle, 0, 0), this.scaler);\n    }\n    get docHeight() {\n        return this.scaler.toDOM(this.heightMap.height);\n    }\n    get contentHeight() {\n        return this.docHeight + this.paddingTop + this.paddingBottom;\n    }\n}\nclass Viewport {\n    constructor(from, to) {\n        this.from = from;\n        this.to = to;\n    }\n}\nfunction lineStructure(from, to, stateDeco) {\n    let ranges = [], pos = from, total = 0;\n    RangeSet.spans(stateDeco, from, to, {\n        span() { },\n        point(from, to) {\n            if (from > pos) {\n                ranges.push({ from: pos, to: from });\n                total += from - pos;\n            }\n            pos = to;\n        }\n    }, 20); // We're only interested in collapsed ranges of a significant size\n    if (pos < to) {\n        ranges.push({ from: pos, to });\n        total += to - pos;\n    }\n    return { total, ranges };\n}\nfunction findPosition({ total, ranges }, ratio) {\n    if (ratio <= 0)\n        return ranges[0].from;\n    if (ratio >= 1)\n        return ranges[ranges.length - 1].to;\n    let dist = Math.floor(total * ratio);\n    for (let i = 0;; i++) {\n        let { from, to } = ranges[i], size = to - from;\n        if (dist <= size)\n            return from + dist;\n        dist -= size;\n    }\n}\nfunction findFraction(structure, pos) {\n    let counted = 0;\n    for (let { from, to } of structure.ranges) {\n        if (pos <= to) {\n            counted += pos - from;\n            break;\n        }\n        counted += to - from;\n    }\n    return counted / structure.total;\n}\nfunction find(array, f) {\n    for (let val of array)\n        if (f(val))\n            return val;\n    return undefined;\n}\n// Don't scale when the document height is within the range of what\n// the DOM can handle.\nconst IdScaler = {\n    toDOM(n) { return n; },\n    fromDOM(n) { return n; },\n    scale: 1,\n    eq(other) { return other == this; }\n};\n// When the height is too big (> VP.MaxDOMHeight), scale down the\n// regions outside the viewports so that the total height is\n// VP.MaxDOMHeight.\nclass BigScaler {\n    constructor(oracle, heightMap, viewports) {\n        let vpHeight = 0, base = 0, domBase = 0;\n        this.viewports = viewports.map(({ from, to }) => {\n            let top = heightMap.lineAt(from, QueryType.ByPos, oracle, 0, 0).top;\n            let bottom = heightMap.lineAt(to, QueryType.ByPos, oracle, 0, 0).bottom;\n            vpHeight += bottom - top;\n            return { from, to, top, bottom, domTop: 0, domBottom: 0 };\n        });\n        this.scale = (7000000 /* VP.MaxDOMHeight */ - vpHeight) / (heightMap.height - vpHeight);\n        for (let obj of this.viewports) {\n            obj.domTop = domBase + (obj.top - base) * this.scale;\n            domBase = obj.domBottom = obj.domTop + (obj.bottom - obj.top);\n            base = obj.bottom;\n        }\n    }\n    toDOM(n) {\n        for (let i = 0, base = 0, domBase = 0;; i++) {\n            let vp = i < this.viewports.length ? this.viewports[i] : null;\n            if (!vp || n < vp.top)\n                return domBase + (n - base) * this.scale;\n            if (n <= vp.bottom)\n                return vp.domTop + (n - vp.top);\n            base = vp.bottom;\n            domBase = vp.domBottom;\n        }\n    }\n    fromDOM(n) {\n        for (let i = 0, base = 0, domBase = 0;; i++) {\n            let vp = i < this.viewports.length ? this.viewports[i] : null;\n            if (!vp || n < vp.domTop)\n                return base + (n - domBase) / this.scale;\n            if (n <= vp.domBottom)\n                return vp.top + (n - vp.domTop);\n            base = vp.bottom;\n            domBase = vp.domBottom;\n        }\n    }\n    eq(other) {\n        if (!(other instanceof BigScaler))\n            return false;\n        return this.scale == other.scale && this.viewports.length == other.viewports.length &&\n            this.viewports.every((vp, i) => vp.from == other.viewports[i].from && vp.to == other.viewports[i].to);\n    }\n}\nfunction scaleBlock(block, scaler) {\n    if (scaler.scale == 1)\n        return block;\n    let bTop = scaler.toDOM(block.top), bBottom = scaler.toDOM(block.bottom);\n    return new BlockInfo(block.from, block.length, bTop, bBottom - bTop, Array.isArray(block._content) ? block._content.map(b => scaleBlock(b, scaler)) : block._content);\n}\n\nconst theme = /*@__PURE__*/Facet.define({ combine: strs => strs.join(\" \") });\nconst darkTheme = /*@__PURE__*/Facet.define({ combine: values => values.indexOf(true) > -1 });\nconst baseThemeID = /*@__PURE__*/StyleModule.newName(), baseLightID = /*@__PURE__*/StyleModule.newName(), baseDarkID = /*@__PURE__*/StyleModule.newName();\nconst lightDarkIDs = { \"&light\": \".\" + baseLightID, \"&dark\": \".\" + baseDarkID };\nfunction buildTheme(main, spec, scopes) {\n    return new StyleModule(spec, {\n        finish(sel) {\n            return /&/.test(sel) ? sel.replace(/&\\w*/, m => {\n                if (m == \"&\")\n                    return main;\n                if (!scopes || !scopes[m])\n                    throw new RangeError(`Unsupported selector: ${m}`);\n                return scopes[m];\n            }) : main + \" \" + sel;\n        }\n    });\n}\nconst baseTheme$1 = /*@__PURE__*/buildTheme(\".\" + baseThemeID, {\n    \"&\": {\n        position: \"relative !important\",\n        boxSizing: \"border-box\",\n        \"&.cm-focused\": {\n            // Provide a simple default outline to make sure a focused\n            // editor is visually distinct. Can't leave the default behavior\n            // because that will apply to the content element, which is\n            // inside the scrollable container and doesn't include the\n            // gutters. We also can't use an 'auto' outline, since those\n            // are, for some reason, drawn behind the element content, which\n            // will cause things like the active line background to cover\n            // the outline (#297).\n            outline: \"1px dotted #212121\"\n        },\n        display: \"flex !important\",\n        flexDirection: \"column\"\n    },\n    \".cm-scroller\": {\n        display: \"flex !important\",\n        alignItems: \"flex-start !important\",\n        fontFamily: \"monospace\",\n        lineHeight: 1.4,\n        height: \"100%\",\n        overflowX: \"auto\",\n        position: \"relative\",\n        zIndex: 0,\n        overflowAnchor: \"none\",\n    },\n    \".cm-content\": {\n        margin: 0,\n        flexGrow: 2,\n        flexShrink: 0,\n        display: \"block\",\n        whiteSpace: \"pre\",\n        wordWrap: \"normal\", // https://github.com/codemirror/dev/issues/456\n        boxSizing: \"border-box\",\n        minHeight: \"100%\",\n        padding: \"4px 0\",\n        outline: \"none\",\n        \"&[contenteditable=true]\": {\n            WebkitUserModify: \"read-write-plaintext-only\",\n        }\n    },\n    \".cm-lineWrapping\": {\n        whiteSpace_fallback: \"pre-wrap\", // For IE\n        whiteSpace: \"break-spaces\",\n        wordBreak: \"break-word\", // For Safari, which doesn't support overflow-wrap: anywhere\n        overflowWrap: \"anywhere\",\n        flexShrink: 1\n    },\n    \"&light .cm-content\": { caretColor: \"black\" },\n    \"&dark .cm-content\": { caretColor: \"white\" },\n    \".cm-line\": {\n        display: \"block\",\n        padding: \"0 2px 0 6px\"\n    },\n    \".cm-layer\": {\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        contain: \"size style\",\n        \"& > *\": {\n            position: \"absolute\"\n        }\n    },\n    \"&light .cm-selectionBackground\": {\n        background: \"#d9d9d9\"\n    },\n    \"&dark .cm-selectionBackground\": {\n        background: \"#222\"\n    },\n    \"&light.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground\": {\n        background: \"#d7d4f0\"\n    },\n    \"&dark.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground\": {\n        background: \"#233\"\n    },\n    \".cm-cursorLayer\": {\n        pointerEvents: \"none\"\n    },\n    \"&.cm-focused > .cm-scroller > .cm-cursorLayer\": {\n        animation: \"steps(1) cm-blink 1.2s infinite\"\n    },\n    // Two animations defined so that we can switch between them to\n    // restart the animation without forcing another style\n    // recomputation.\n    \"@keyframes cm-blink\": { \"0%\": {}, \"50%\": { opacity: 0 }, \"100%\": {} },\n    \"@keyframes cm-blink2\": { \"0%\": {}, \"50%\": { opacity: 0 }, \"100%\": {} },\n    \".cm-cursor, .cm-dropCursor\": {\n        borderLeft: \"1.2px solid black\",\n        marginLeft: \"-0.6px\",\n        pointerEvents: \"none\",\n    },\n    \".cm-cursor\": {\n        display: \"none\"\n    },\n    \"&dark .cm-cursor\": {\n        borderLeftColor: \"#ddd\"\n    },\n    \".cm-dropCursor\": {\n        position: \"absolute\"\n    },\n    \"&.cm-focused > .cm-scroller > .cm-cursorLayer .cm-cursor\": {\n        display: \"block\"\n    },\n    \".cm-iso\": {\n        unicodeBidi: \"isolate\"\n    },\n    \".cm-announced\": {\n        position: \"fixed\",\n        top: \"-10000px\"\n    },\n    \"@media print\": {\n        \".cm-announced\": { display: \"none\" }\n    },\n    \"&light .cm-activeLine\": { backgroundColor: \"#cceeff44\" },\n    \"&dark .cm-activeLine\": { backgroundColor: \"#99eeff33\" },\n    \"&light .cm-specialChar\": { color: \"red\" },\n    \"&dark .cm-specialChar\": { color: \"#f78\" },\n    \".cm-gutters\": {\n        flexShrink: 0,\n        display: \"flex\",\n        height: \"100%\",\n        boxSizing: \"border-box\",\n        zIndex: 200,\n    },\n    \".cm-gutters-before\": { insetInlineStart: 0 },\n    \".cm-gutters-after\": { insetInlineEnd: 0 },\n    \"&light .cm-gutters\": {\n        backgroundColor: \"#f5f5f5\",\n        color: \"#6c6c6c\",\n        border: \"0px solid #ddd\",\n        \"&.cm-gutters-before\": { borderRightWidth: \"1px\" },\n        \"&.cm-gutters-after\": { borderLeftWidth: \"1px\" },\n    },\n    \"&dark .cm-gutters\": {\n        backgroundColor: \"#333338\",\n        color: \"#ccc\"\n    },\n    \".cm-gutter\": {\n        display: \"flex !important\", // Necessary -- prevents margin collapsing\n        flexDirection: \"column\",\n        flexShrink: 0,\n        boxSizing: \"border-box\",\n        minHeight: \"100%\",\n        overflow: \"hidden\"\n    },\n    \".cm-gutterElement\": {\n        boxSizing: \"border-box\"\n    },\n    \".cm-lineNumbers .cm-gutterElement\": {\n        padding: \"0 3px 0 5px\",\n        minWidth: \"20px\",\n        textAlign: \"right\",\n        whiteSpace: \"nowrap\"\n    },\n    \"&light .cm-activeLineGutter\": {\n        backgroundColor: \"#e2f2ff\"\n    },\n    \"&dark .cm-activeLineGutter\": {\n        backgroundColor: \"#222227\"\n    },\n    \".cm-panels\": {\n        boxSizing: \"border-box\",\n        position: \"sticky\",\n        left: 0,\n        right: 0,\n        zIndex: 300\n    },\n    \"&light .cm-panels\": {\n        backgroundColor: \"#f5f5f5\",\n        color: \"black\"\n    },\n    \"&light .cm-panels-top\": {\n        borderBottom: \"1px solid #ddd\"\n    },\n    \"&light .cm-panels-bottom\": {\n        borderTop: \"1px solid #ddd\"\n    },\n    \"&dark .cm-panels\": {\n        backgroundColor: \"#333338\",\n        color: \"white\"\n    },\n    \".cm-dialog\": {\n        padding: \"2px 19px 4px 6px\",\n        position: \"relative\",\n        \"& label\": { fontSize: \"80%\" },\n    },\n    \".cm-dialog-close\": {\n        position: \"absolute\",\n        top: \"3px\",\n        right: \"4px\",\n        backgroundColor: \"inherit\",\n        border: \"none\",\n        font: \"inherit\",\n        fontSize: \"14px\",\n        padding: \"0\"\n    },\n    \".cm-tab\": {\n        display: \"inline-block\",\n        overflow: \"hidden\",\n        verticalAlign: \"bottom\"\n    },\n    \".cm-widgetBuffer\": {\n        verticalAlign: \"text-top\",\n        height: \"1em\",\n        width: 0,\n        display: \"inline\"\n    },\n    \".cm-placeholder\": {\n        color: \"#888\",\n        display: \"inline-block\",\n        verticalAlign: \"top\",\n        userSelect: \"none\"\n    },\n    \".cm-highlightSpace\": {\n        backgroundImage: \"radial-gradient(circle at 50% 55%, #aaa 20%, transparent 5%)\",\n        backgroundPosition: \"center\",\n    },\n    \".cm-highlightTab\": {\n        backgroundImage: `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"200\" height=\"20\"><path stroke=\"%23888\" stroke-width=\"1\" fill=\"none\" d=\"M1 10H196L190 5M190 15L196 10M197 4L197 16\"/></svg>')`,\n        backgroundSize: \"auto 100%\",\n        backgroundPosition: \"right 90%\",\n        backgroundRepeat: \"no-repeat\"\n    },\n    \".cm-trailingSpace\": {\n        backgroundColor: \"#ff332255\"\n    },\n    \".cm-button\": {\n        verticalAlign: \"middle\",\n        color: \"inherit\",\n        fontSize: \"70%\",\n        padding: \".2em 1em\",\n        borderRadius: \"1px\"\n    },\n    \"&light .cm-button\": {\n        backgroundImage: \"linear-gradient(#eff1f5, #d9d9df)\",\n        border: \"1px solid #888\",\n        \"&:active\": {\n            backgroundImage: \"linear-gradient(#b4b4b4, #d0d3d6)\"\n        }\n    },\n    \"&dark .cm-button\": {\n        backgroundImage: \"linear-gradient(#393939, #111)\",\n        border: \"1px solid #888\",\n        \"&:active\": {\n            backgroundImage: \"linear-gradient(#111, #333)\"\n        }\n    },\n    \".cm-textfield\": {\n        verticalAlign: \"middle\",\n        color: \"inherit\",\n        fontSize: \"70%\",\n        border: \"1px solid silver\",\n        padding: \".2em .5em\"\n    },\n    \"&light .cm-textfield\": {\n        backgroundColor: \"white\"\n    },\n    \"&dark .cm-textfield\": {\n        border: \"1px solid #555\",\n        backgroundColor: \"inherit\"\n    }\n}, lightDarkIDs);\n\nconst observeOptions = {\n    childList: true,\n    characterData: true,\n    subtree: true,\n    attributes: true,\n    characterDataOldValue: true\n};\n// IE11 has very broken mutation observers, so we also listen to\n// DOMCharacterDataModified there\nconst useCharData = browser.ie && browser.ie_version <= 11;\nclass DOMObserver {\n    constructor(view) {\n        this.view = view;\n        this.active = false;\n        this.editContext = null;\n        // The known selection. Kept in our own object, as opposed to just\n        // directly accessing the selection because:\n        //  - Safari doesn't report the right selection in shadow DOM\n        //  - Reading from the selection forces a DOM layout\n        //  - This way, we can ignore selectionchange events if we have\n        //    already seen the 'new' selection\n        this.selectionRange = new DOMSelectionState;\n        // Set when a selection change is detected, cleared on flush\n        this.selectionChanged = false;\n        this.delayedFlush = -1;\n        this.resizeTimeout = -1;\n        this.queue = [];\n        this.delayedAndroidKey = null;\n        this.flushingAndroidKey = -1;\n        this.lastChange = 0;\n        this.scrollTargets = [];\n        this.intersection = null;\n        this.resizeScroll = null;\n        this.intersecting = false;\n        this.gapIntersection = null;\n        this.gaps = [];\n        this.printQuery = null;\n        // Timeout for scheduling check of the parents that need scroll handlers\n        this.parentCheck = -1;\n        this.dom = view.contentDOM;\n        this.observer = new MutationObserver(mutations => {\n            for (let mut of mutations)\n                this.queue.push(mut);\n            // IE11 will sometimes (on typing over a selection or\n            // backspacing out a single character text node) call the\n            // observer callback before actually updating the DOM.\n            //\n            // Unrelatedly, iOS Safari will, when ending a composition,\n            // sometimes first clear it, deliver the mutations, and then\n            // reinsert the finished text. CodeMirror's handling of the\n            // deletion will prevent the reinsertion from happening,\n            // breaking composition.\n            if ((browser.ie && browser.ie_version <= 11 || browser.ios && view.composing) &&\n                mutations.some(m => m.type == \"childList\" && m.removedNodes.length ||\n                    m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n                this.flushSoon();\n            else\n                this.flush();\n        });\n        if (window.EditContext && browser.android && view.constructor.EDIT_CONTEXT !== false &&\n            // Chrome <126 doesn't support inverted selections in edit context (#1392)\n            !(browser.chrome && browser.chrome_version < 126)) {\n            this.editContext = new EditContextManager(view);\n            if (view.state.facet(editable))\n                view.contentDOM.editContext = this.editContext.editContext;\n        }\n        if (useCharData)\n            this.onCharData = (event) => {\n                this.queue.push({ target: event.target,\n                    type: \"characterData\",\n                    oldValue: event.prevValue });\n                this.flushSoon();\n            };\n        this.onSelectionChange = this.onSelectionChange.bind(this);\n        this.onResize = this.onResize.bind(this);\n        this.onPrint = this.onPrint.bind(this);\n        this.onScroll = this.onScroll.bind(this);\n        if (window.matchMedia)\n            this.printQuery = window.matchMedia(\"print\");\n        if (typeof ResizeObserver == \"function\") {\n            this.resizeScroll = new ResizeObserver(() => {\n                var _a;\n                if (((_a = this.view.docView) === null || _a === void 0 ? void 0 : _a.lastUpdate) < Date.now() - 75)\n                    this.onResize();\n            });\n            this.resizeScroll.observe(view.scrollDOM);\n        }\n        this.addWindowListeners(this.win = view.win);\n        this.start();\n        if (typeof IntersectionObserver == \"function\") {\n            this.intersection = new IntersectionObserver(entries => {\n                if (this.parentCheck < 0)\n                    this.parentCheck = setTimeout(this.listenForScroll.bind(this), 1000);\n                if (entries.length > 0 && (entries[entries.length - 1].intersectionRatio > 0) != this.intersecting) {\n                    this.intersecting = !this.intersecting;\n                    if (this.intersecting != this.view.inView)\n                        this.onScrollChanged(document.createEvent(\"Event\"));\n                }\n            }, { threshold: [0, .001] });\n            this.intersection.observe(this.dom);\n            this.gapIntersection = new IntersectionObserver(entries => {\n                if (entries.length > 0 && entries[entries.length - 1].intersectionRatio > 0)\n                    this.onScrollChanged(document.createEvent(\"Event\"));\n            }, {});\n        }\n        this.listenForScroll();\n        this.readSelectionRange();\n    }\n    onScrollChanged(e) {\n        this.view.inputState.runHandlers(\"scroll\", e);\n        if (this.intersecting)\n            this.view.measure();\n    }\n    onScroll(e) {\n        if (this.intersecting)\n            this.flush(false);\n        if (this.editContext)\n            this.view.requestMeasure(this.editContext.measureReq);\n        this.onScrollChanged(e);\n    }\n    onResize() {\n        if (this.resizeTimeout < 0)\n            this.resizeTimeout = setTimeout(() => {\n                this.resizeTimeout = -1;\n                this.view.requestMeasure();\n            }, 50);\n    }\n    onPrint(event) {\n        if ((event.type == \"change\" || !event.type) && !event.matches)\n            return;\n        this.view.viewState.printing = true;\n        this.view.measure();\n        setTimeout(() => {\n            this.view.viewState.printing = false;\n            this.view.requestMeasure();\n        }, 500);\n    }\n    updateGaps(gaps) {\n        if (this.gapIntersection && (gaps.length != this.gaps.length || this.gaps.some((g, i) => g != gaps[i]))) {\n            this.gapIntersection.disconnect();\n            for (let gap of gaps)\n                this.gapIntersection.observe(gap);\n            this.gaps = gaps;\n        }\n    }\n    onSelectionChange(event) {\n        let wasChanged = this.selectionChanged;\n        if (!this.readSelectionRange() || this.delayedAndroidKey)\n            return;\n        let { view } = this, sel = this.selectionRange;\n        if (view.state.facet(editable) ? view.root.activeElement != this.dom : !hasSelection(this.dom, sel))\n            return;\n        let context = sel.anchorNode && view.docView.nearest(sel.anchorNode);\n        if (context && context.ignoreEvent(event)) {\n            if (!wasChanged)\n                this.selectionChanged = false;\n            return;\n        }\n        // Deletions on IE11 fire their events in the wrong order, giving\n        // us a selection change event before the DOM changes are\n        // reported.\n        // Chrome Android has a similar issue when backspacing out a\n        // selection (#645).\n        if ((browser.ie && browser.ie_version <= 11 || browser.android && browser.chrome) && !view.state.selection.main.empty &&\n            // (Selection.isCollapsed isn't reliable on IE)\n            sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n            this.flushSoon();\n        else\n            this.flush(false);\n    }\n    readSelectionRange() {\n        let { view } = this;\n        // The Selection object is broken in shadow roots in Safari. See\n        // https://github.com/codemirror/dev/issues/414\n        let selection = getSelection(view.root);\n        if (!selection)\n            return false;\n        let range = browser.safari && view.root.nodeType == 11 &&\n            view.root.activeElement == this.dom &&\n            safariSelectionRangeHack(this.view, selection) || selection;\n        if (!range || this.selectionRange.eq(range))\n            return false;\n        let local = hasSelection(this.dom, range);\n        // Detect the situation where the browser has, on focus, moved the\n        // selection to the start of the content element. Reset it to the\n        // position from the editor state.\n        if (local && !this.selectionChanged &&\n            view.inputState.lastFocusTime > Date.now() - 200 &&\n            view.inputState.lastTouchTime < Date.now() - 300 &&\n            atElementStart(this.dom, range)) {\n            this.view.inputState.lastFocusTime = 0;\n            view.docView.updateSelection();\n            return false;\n        }\n        this.selectionRange.setRange(range);\n        if (local)\n            this.selectionChanged = true;\n        return true;\n    }\n    setSelectionRange(anchor, head) {\n        this.selectionRange.set(anchor.node, anchor.offset, head.node, head.offset);\n        this.selectionChanged = false;\n    }\n    clearSelectionRange() {\n        this.selectionRange.set(null, 0, null, 0);\n    }\n    listenForScroll() {\n        this.parentCheck = -1;\n        let i = 0, changed = null;\n        for (let dom = this.dom; dom;) {\n            if (dom.nodeType == 1) {\n                if (!changed && i < this.scrollTargets.length && this.scrollTargets[i] == dom)\n                    i++;\n                else if (!changed)\n                    changed = this.scrollTargets.slice(0, i);\n                if (changed)\n                    changed.push(dom);\n                dom = dom.assignedSlot || dom.parentNode;\n            }\n            else if (dom.nodeType == 11) { // Shadow root\n                dom = dom.host;\n            }\n            else {\n                break;\n            }\n        }\n        if (i < this.scrollTargets.length && !changed)\n            changed = this.scrollTargets.slice(0, i);\n        if (changed) {\n            for (let dom of this.scrollTargets)\n                dom.removeEventListener(\"scroll\", this.onScroll);\n            for (let dom of this.scrollTargets = changed)\n                dom.addEventListener(\"scroll\", this.onScroll);\n        }\n    }\n    ignore(f) {\n        if (!this.active)\n            return f();\n        try {\n            this.stop();\n            return f();\n        }\n        finally {\n            this.start();\n            this.clear();\n        }\n    }\n    start() {\n        if (this.active)\n            return;\n        this.observer.observe(this.dom, observeOptions);\n        if (useCharData)\n            this.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.active = true;\n    }\n    stop() {\n        if (!this.active)\n            return;\n        this.active = false;\n        this.observer.disconnect();\n        if (useCharData)\n            this.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n    }\n    // Throw away any pending changes\n    clear() {\n        this.processRecords();\n        this.queue.length = 0;\n        this.selectionChanged = false;\n    }\n    // Chrome Android, especially in combination with GBoard, not only\n    // doesn't reliably fire regular key events, but also often\n    // surrounds the effect of enter or backspace with a bunch of\n    // composition events that, when interrupted, cause text duplication\n    // or other kinds of corruption. This hack makes the editor back off\n    // from handling DOM changes for a moment when such a key is\n    // detected (via beforeinput or keydown), and then tries to flush\n    // them or, if that has no effect, dispatches the given key.\n    delayAndroidKey(key, keyCode) {\n        var _a;\n        if (!this.delayedAndroidKey) {\n            let flush = () => {\n                let key = this.delayedAndroidKey;\n                if (key) {\n                    this.clearDelayedAndroidKey();\n                    this.view.inputState.lastKeyCode = key.keyCode;\n                    this.view.inputState.lastKeyTime = Date.now();\n                    let flushed = this.flush();\n                    if (!flushed && key.force)\n                        dispatchKey(this.dom, key.key, key.keyCode);\n                }\n            };\n            this.flushingAndroidKey = this.view.win.requestAnimationFrame(flush);\n        }\n        // Since backspace beforeinput is sometimes signalled spuriously,\n        // Enter always takes precedence.\n        if (!this.delayedAndroidKey || key == \"Enter\")\n            this.delayedAndroidKey = {\n                key, keyCode,\n                // Only run the key handler when no changes are detected if\n                // this isn't coming right after another change, in which case\n                // it is probably part of a weird chain of updates, and should\n                // be ignored if it returns the DOM to its previous state.\n                force: this.lastChange < Date.now() - 50 || !!((_a = this.delayedAndroidKey) === null || _a === void 0 ? void 0 : _a.force)\n            };\n    }\n    clearDelayedAndroidKey() {\n        this.win.cancelAnimationFrame(this.flushingAndroidKey);\n        this.delayedAndroidKey = null;\n        this.flushingAndroidKey = -1;\n    }\n    flushSoon() {\n        if (this.delayedFlush < 0)\n            this.delayedFlush = this.view.win.requestAnimationFrame(() => { this.delayedFlush = -1; this.flush(); });\n    }\n    forceFlush() {\n        if (this.delayedFlush >= 0) {\n            this.view.win.cancelAnimationFrame(this.delayedFlush);\n            this.delayedFlush = -1;\n        }\n        this.flush();\n    }\n    pendingRecords() {\n        for (let mut of this.observer.takeRecords())\n            this.queue.push(mut);\n        return this.queue;\n    }\n    processRecords() {\n        let records = this.pendingRecords();\n        if (records.length)\n            this.queue = [];\n        let from = -1, to = -1, typeOver = false;\n        for (let record of records) {\n            let range = this.readMutation(record);\n            if (!range)\n                continue;\n            if (range.typeOver)\n                typeOver = true;\n            if (from == -1) {\n                ({ from, to } = range);\n            }\n            else {\n                from = Math.min(range.from, from);\n                to = Math.max(range.to, to);\n            }\n        }\n        return { from, to, typeOver };\n    }\n    readChange() {\n        let { from, to, typeOver } = this.processRecords();\n        let newSel = this.selectionChanged && hasSelection(this.dom, this.selectionRange);\n        if (from < 0 && !newSel)\n            return null;\n        if (from > -1)\n            this.lastChange = Date.now();\n        this.view.inputState.lastFocusTime = 0;\n        this.selectionChanged = false;\n        let change = new DOMChange(this.view, from, to, typeOver);\n        this.view.docView.domChanged = { newSel: change.newSel ? change.newSel.main : null };\n        return change;\n    }\n    // Apply pending changes, if any\n    flush(readSelection = true) {\n        // Completely hold off flushing when pending keys are set—the code\n        // managing those will make sure processRecords is called and the\n        // view is resynchronized after\n        if (this.delayedFlush >= 0 || this.delayedAndroidKey)\n            return false;\n        if (readSelection)\n            this.readSelectionRange();\n        let domChange = this.readChange();\n        if (!domChange) {\n            this.view.requestMeasure();\n            return false;\n        }\n        let startState = this.view.state;\n        let handled = applyDOMChange(this.view, domChange);\n        // The view wasn't updated but DOM/selection changes were seen. Reset the view.\n        if (this.view.state == startState &&\n            (domChange.domChanged || domChange.newSel && !domChange.newSel.main.eq(this.view.state.selection.main)))\n            this.view.update([]);\n        return handled;\n    }\n    readMutation(rec) {\n        let cView = this.view.docView.nearest(rec.target);\n        if (!cView || cView.ignoreMutation(rec))\n            return null;\n        cView.markDirty(rec.type == \"attributes\");\n        if (rec.type == \"attributes\")\n            cView.flags |= 4 /* ViewFlag.AttrsDirty */;\n        if (rec.type == \"childList\") {\n            let childBefore = findChild(cView, rec.previousSibling || rec.target.previousSibling, -1);\n            let childAfter = findChild(cView, rec.nextSibling || rec.target.nextSibling, 1);\n            return { from: childBefore ? cView.posAfter(childBefore) : cView.posAtStart,\n                to: childAfter ? cView.posBefore(childAfter) : cView.posAtEnd, typeOver: false };\n        }\n        else if (rec.type == \"characterData\") {\n            return { from: cView.posAtStart, to: cView.posAtEnd, typeOver: rec.target.nodeValue == rec.oldValue };\n        }\n        else {\n            return null;\n        }\n    }\n    setWindow(win) {\n        if (win != this.win) {\n            this.removeWindowListeners(this.win);\n            this.win = win;\n            this.addWindowListeners(this.win);\n        }\n    }\n    addWindowListeners(win) {\n        win.addEventListener(\"resize\", this.onResize);\n        if (this.printQuery) {\n            if (this.printQuery.addEventListener)\n                this.printQuery.addEventListener(\"change\", this.onPrint);\n            else\n                this.printQuery.addListener(this.onPrint);\n        }\n        else\n            win.addEventListener(\"beforeprint\", this.onPrint);\n        win.addEventListener(\"scroll\", this.onScroll);\n        win.document.addEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    removeWindowListeners(win) {\n        win.removeEventListener(\"scroll\", this.onScroll);\n        win.removeEventListener(\"resize\", this.onResize);\n        if (this.printQuery) {\n            if (this.printQuery.removeEventListener)\n                this.printQuery.removeEventListener(\"change\", this.onPrint);\n            else\n                this.printQuery.removeListener(this.onPrint);\n        }\n        else\n            win.removeEventListener(\"beforeprint\", this.onPrint);\n        win.document.removeEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    update(update) {\n        if (this.editContext) {\n            this.editContext.update(update);\n            if (update.startState.facet(editable) != update.state.facet(editable))\n                update.view.contentDOM.editContext = update.state.facet(editable) ? this.editContext.editContext : null;\n        }\n    }\n    destroy() {\n        var _a, _b, _c;\n        this.stop();\n        (_a = this.intersection) === null || _a === void 0 ? void 0 : _a.disconnect();\n        (_b = this.gapIntersection) === null || _b === void 0 ? void 0 : _b.disconnect();\n        (_c = this.resizeScroll) === null || _c === void 0 ? void 0 : _c.disconnect();\n        for (let dom of this.scrollTargets)\n            dom.removeEventListener(\"scroll\", this.onScroll);\n        this.removeWindowListeners(this.win);\n        clearTimeout(this.parentCheck);\n        clearTimeout(this.resizeTimeout);\n        this.win.cancelAnimationFrame(this.delayedFlush);\n        this.win.cancelAnimationFrame(this.flushingAndroidKey);\n        if (this.editContext) {\n            this.view.contentDOM.editContext = null;\n            this.editContext.destroy();\n        }\n    }\n}\nfunction findChild(cView, dom, dir) {\n    while (dom) {\n        let curView = ContentView.get(dom);\n        if (curView && curView.parent == cView)\n            return curView;\n        let parent = dom.parentNode;\n        dom = parent != cView.dom ? parent : dir > 0 ? dom.nextSibling : dom.previousSibling;\n    }\n    return null;\n}\nfunction buildSelectionRangeFromRange(view, range) {\n    let anchorNode = range.startContainer, anchorOffset = range.startOffset;\n    let focusNode = range.endContainer, focusOffset = range.endOffset;\n    let curAnchor = view.docView.domAtPos(view.state.selection.main.anchor);\n    // Since such a range doesn't distinguish between anchor and head,\n    // use a heuristic that flips it around if its end matches the\n    // current anchor.\n    if (isEquivalentPosition(curAnchor.node, curAnchor.offset, focusNode, focusOffset))\n        [anchorNode, anchorOffset, focusNode, focusOffset] = [focusNode, focusOffset, anchorNode, anchorOffset];\n    return { anchorNode, anchorOffset, focusNode, focusOffset };\n}\n// Used to work around a Safari Selection/shadow DOM bug (#414)\nfunction safariSelectionRangeHack(view, selection) {\n    if (selection.getComposedRanges) {\n        let range = selection.getComposedRanges(view.root)[0];\n        if (range)\n            return buildSelectionRangeFromRange(view, range);\n    }\n    let found = null;\n    // Because Safari (at least in 2018-2021) doesn't provide regular\n    // access to the selection inside a shadowroot, we have to perform a\n    // ridiculous hack to get at it—using `execCommand` to trigger a\n    // `beforeInput` event so that we can read the target range from the\n    // event.\n    function read(event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        found = event.getTargetRanges()[0];\n    }\n    view.contentDOM.addEventListener(\"beforeinput\", read, true);\n    view.dom.ownerDocument.execCommand(\"indent\");\n    view.contentDOM.removeEventListener(\"beforeinput\", read, true);\n    return found ? buildSelectionRangeFromRange(view, found) : null;\n}\nclass EditContextManager {\n    constructor(view) {\n        // The document window for which the text in the context is\n        // maintained. For large documents, this may be smaller than the\n        // editor document. This window always includes the selection head.\n        this.from = 0;\n        this.to = 0;\n        // When applying a transaction, this is used to compare the change\n        // made to the context content to the change in the transaction in\n        // order to make the minimal changes to the context (since touching\n        // that sometimes breaks series of multiple edits made for a single\n        // user action on some Android keyboards)\n        this.pendingContextChange = null;\n        this.handlers = Object.create(null);\n        // Kludge to work around the fact that EditContext does not respond\n        // well to having its content updated during a composition (see #1472)\n        this.composing = null;\n        this.resetRange(view.state);\n        let context = this.editContext = new window.EditContext({\n            text: view.state.doc.sliceString(this.from, this.to),\n            selectionStart: this.toContextPos(Math.max(this.from, Math.min(this.to, view.state.selection.main.anchor))),\n            selectionEnd: this.toContextPos(view.state.selection.main.head)\n        });\n        this.handlers.textupdate = e => {\n            let main = view.state.selection.main, { anchor, head } = main;\n            let from = this.toEditorPos(e.updateRangeStart), to = this.toEditorPos(e.updateRangeEnd);\n            if (view.inputState.composing >= 0 && !this.composing)\n                this.composing = { contextBase: e.updateRangeStart, editorBase: from, drifted: false };\n            let change = { from, to, insert: Text.of(e.text.split(\"\\n\")) };\n            // If the window doesn't include the anchor, assume changes\n            // adjacent to a side go up to the anchor.\n            if (change.from == this.from && anchor < this.from)\n                change.from = anchor;\n            else if (change.to == this.to && anchor > this.to)\n                change.to = anchor;\n            // Edit contexts sometimes fire empty changes\n            if (change.from == change.to && !change.insert.length) {\n                let newSel = EditorSelection.single(this.toEditorPos(e.selectionStart), this.toEditorPos(e.selectionEnd));\n                if (!newSel.main.eq(main))\n                    view.dispatch({ selection: newSel, userEvent: \"select\" });\n                return;\n            }\n            if ((browser.mac || browser.android) && change.from == head - 1 &&\n                /^\\. ?$/.test(e.text) && view.contentDOM.getAttribute(\"autocorrect\") == \"off\")\n                change = { from, to, insert: Text.of([e.text.replace(\".\", \" \")]) };\n            this.pendingContextChange = change;\n            if (!view.state.readOnly) {\n                let newLen = this.to - this.from + (change.to - change.from + change.insert.length);\n                applyDOMChangeInner(view, change, EditorSelection.single(this.toEditorPos(e.selectionStart, newLen), this.toEditorPos(e.selectionEnd, newLen)));\n            }\n            // If the transaction didn't flush our change, revert it so\n            // that the context is in sync with the editor state again.\n            if (this.pendingContextChange) {\n                this.revertPending(view.state);\n                this.setSelection(view.state);\n            }\n        };\n        this.handlers.characterboundsupdate = e => {\n            let rects = [], prev = null;\n            for (let i = this.toEditorPos(e.rangeStart), end = this.toEditorPos(e.rangeEnd); i < end; i++) {\n                let rect = view.coordsForChar(i);\n                prev = (rect && new DOMRect(rect.left, rect.top, rect.right - rect.left, rect.bottom - rect.top))\n                    || prev || new DOMRect;\n                rects.push(prev);\n            }\n            context.updateCharacterBounds(e.rangeStart, rects);\n        };\n        this.handlers.textformatupdate = e => {\n            let deco = [];\n            for (let format of e.getTextFormats()) {\n                let lineStyle = format.underlineStyle, thickness = format.underlineThickness;\n                if (lineStyle != \"None\" && thickness != \"None\") {\n                    let from = this.toEditorPos(format.rangeStart), to = this.toEditorPos(format.rangeEnd);\n                    if (from < to) {\n                        let style = `text-decoration: underline ${lineStyle == \"Dashed\" ? \"dashed \" : lineStyle == \"Squiggle\" ? \"wavy \" : \"\"}${thickness == \"Thin\" ? 1 : 2}px`;\n                        deco.push(Decoration.mark({ attributes: { style } }).range(from, to));\n                    }\n                }\n            }\n            view.dispatch({ effects: setEditContextFormatting.of(Decoration.set(deco)) });\n        };\n        this.handlers.compositionstart = () => {\n            if (view.inputState.composing < 0) {\n                view.inputState.composing = 0;\n                view.inputState.compositionFirstChange = true;\n            }\n        };\n        this.handlers.compositionend = () => {\n            view.inputState.composing = -1;\n            view.inputState.compositionFirstChange = null;\n            if (this.composing) {\n                let { drifted } = this.composing;\n                this.composing = null;\n                if (drifted)\n                    this.reset(view.state);\n            }\n        };\n        for (let event in this.handlers)\n            context.addEventListener(event, this.handlers[event]);\n        this.measureReq = { read: view => {\n                this.editContext.updateControlBounds(view.contentDOM.getBoundingClientRect());\n                let sel = getSelection(view.root);\n                if (sel && sel.rangeCount)\n                    this.editContext.updateSelectionBounds(sel.getRangeAt(0).getBoundingClientRect());\n            } };\n    }\n    applyEdits(update) {\n        let off = 0, abort = false, pending = this.pendingContextChange;\n        update.changes.iterChanges((fromA, toA, _fromB, _toB, insert) => {\n            if (abort)\n                return;\n            let dLen = insert.length - (toA - fromA);\n            if (pending && toA >= pending.to) {\n                if (pending.from == fromA && pending.to == toA && pending.insert.eq(insert)) {\n                    pending = this.pendingContextChange = null; // Match\n                    off += dLen;\n                    this.to += dLen;\n                    return;\n                }\n                else { // Mismatch, revert\n                    pending = null;\n                    this.revertPending(update.state);\n                }\n            }\n            fromA += off;\n            toA += off;\n            if (toA <= this.from) { // Before the window\n                this.from += dLen;\n                this.to += dLen;\n            }\n            else if (fromA < this.to) { // Overlaps with window\n                if (fromA < this.from || toA > this.to || (this.to - this.from) + insert.length > 30000 /* CxVp.MaxSize */) {\n                    abort = true;\n                    return;\n                }\n                this.editContext.updateText(this.toContextPos(fromA), this.toContextPos(toA), insert.toString());\n                this.to += dLen;\n            }\n            off += dLen;\n        });\n        if (pending && !abort)\n            this.revertPending(update.state);\n        return !abort;\n    }\n    update(update) {\n        let reverted = this.pendingContextChange, startSel = update.startState.selection.main;\n        if (this.composing &&\n            (this.composing.drifted ||\n                (!update.changes.touchesRange(startSel.from, startSel.to) &&\n                    update.transactions.some(tr => !tr.isUserEvent(\"input.type\") && tr.changes.touchesRange(this.from, this.to))))) {\n            this.composing.drifted = true;\n            this.composing.editorBase = update.changes.mapPos(this.composing.editorBase);\n        }\n        else if (!this.applyEdits(update) || !this.rangeIsValid(update.state)) {\n            this.pendingContextChange = null;\n            this.reset(update.state);\n        }\n        else if (update.docChanged || update.selectionSet || reverted) {\n            this.setSelection(update.state);\n        }\n        if (update.geometryChanged || update.docChanged || update.selectionSet)\n            update.view.requestMeasure(this.measureReq);\n    }\n    resetRange(state) {\n        let { head } = state.selection.main;\n        this.from = Math.max(0, head - 10000 /* CxVp.Margin */);\n        this.to = Math.min(state.doc.length, head + 10000 /* CxVp.Margin */);\n    }\n    reset(state) {\n        this.resetRange(state);\n        this.editContext.updateText(0, this.editContext.text.length, state.doc.sliceString(this.from, this.to));\n        this.setSelection(state);\n    }\n    revertPending(state) {\n        let pending = this.pendingContextChange;\n        this.pendingContextChange = null;\n        this.editContext.updateText(this.toContextPos(pending.from), this.toContextPos(pending.from + pending.insert.length), state.doc.sliceString(pending.from, pending.to));\n    }\n    setSelection(state) {\n        let { main } = state.selection;\n        let start = this.toContextPos(Math.max(this.from, Math.min(this.to, main.anchor)));\n        let end = this.toContextPos(main.head);\n        if (this.editContext.selectionStart != start || this.editContext.selectionEnd != end)\n            this.editContext.updateSelection(start, end);\n    }\n    rangeIsValid(state) {\n        let { head } = state.selection.main;\n        return !(this.from > 0 && head - this.from < 500 /* CxVp.MinMargin */ ||\n            this.to < state.doc.length && this.to - head < 500 /* CxVp.MinMargin */ ||\n            this.to - this.from > 10000 /* CxVp.Margin */ * 3);\n    }\n    toEditorPos(contextPos, clipLen = this.to - this.from) {\n        contextPos = Math.min(contextPos, clipLen);\n        let c = this.composing;\n        return c && c.drifted ? c.editorBase + (contextPos - c.contextBase) : contextPos + this.from;\n    }\n    toContextPos(editorPos) {\n        let c = this.composing;\n        return c && c.drifted ? c.contextBase + (editorPos - c.editorBase) : editorPos - this.from;\n    }\n    destroy() {\n        for (let event in this.handlers)\n            this.editContext.removeEventListener(event, this.handlers[event]);\n    }\n}\n\n// The editor's update state machine looks something like this:\n//\n//     Idle → Updating ⇆ Idle (unchecked) → Measuring → Idle\n//                                         ↑      ↓\n//                                         Updating (measure)\n//\n// The difference between 'Idle' and 'Idle (unchecked)' lies in\n// whether a layout check has been scheduled. A regular update through\n// the `update` method updates the DOM in a write-only fashion, and\n// relies on a check (scheduled with `requestAnimationFrame`) to make\n// sure everything is where it should be and the viewport covers the\n// visible code. That check continues to measure and then optionally\n// update until it reaches a coherent state.\n/**\nAn editor view represents the editor's user interface. It holds\nthe editable DOM surface, and possibly other elements such as the\nline number gutter. It handles events and dispatches state\ntransactions for editing actions.\n*/\nclass EditorView {\n    /**\n    The current editor state.\n    */\n    get state() { return this.viewState.state; }\n    /**\n    To be able to display large documents without consuming too much\n    memory or overloading the browser, CodeMirror only draws the\n    code that is visible (plus a margin around it) to the DOM. This\n    property tells you the extent of the current drawn viewport, in\n    document positions.\n    */\n    get viewport() { return this.viewState.viewport; }\n    /**\n    When there are, for example, large collapsed ranges in the\n    viewport, its size can be a lot bigger than the actual visible\n    content. Thus, if you are doing something like styling the\n    content in the viewport, it is preferable to only do so for\n    these ranges, which are the subset of the viewport that is\n    actually drawn.\n    */\n    get visibleRanges() { return this.viewState.visibleRanges; }\n    /**\n    Returns false when the editor is entirely scrolled out of view\n    or otherwise hidden.\n    */\n    get inView() { return this.viewState.inView; }\n    /**\n    Indicates whether the user is currently composing text via\n    [IME](https://en.wikipedia.org/wiki/Input_method), and at least\n    one change has been made in the current composition.\n    */\n    get composing() { return !!this.inputState && this.inputState.composing > 0; }\n    /**\n    Indicates whether the user is currently in composing state. Note\n    that on some platforms, like Android, this will be the case a\n    lot, since just putting the cursor on a word starts a\n    composition there.\n    */\n    get compositionStarted() { return !!this.inputState && this.inputState.composing >= 0; }\n    /**\n    The document or shadow root that the view lives in.\n    */\n    get root() { return this._root; }\n    /**\n    @internal\n    */\n    get win() { return this.dom.ownerDocument.defaultView || window; }\n    /**\n    Construct a new view. You'll want to either provide a `parent`\n    option, or put `view.dom` into your document after creating a\n    view, so that the user can see the editor.\n    */\n    constructor(config = {}) {\n        var _a;\n        this.plugins = [];\n        this.pluginMap = new Map;\n        this.editorAttrs = {};\n        this.contentAttrs = {};\n        this.bidiCache = [];\n        this.destroyed = false;\n        /**\n        @internal\n        */\n        this.updateState = 2 /* UpdateState.Updating */;\n        /**\n        @internal\n        */\n        this.measureScheduled = -1;\n        /**\n        @internal\n        */\n        this.measureRequests = [];\n        this.contentDOM = document.createElement(\"div\");\n        this.scrollDOM = document.createElement(\"div\");\n        this.scrollDOM.tabIndex = -1;\n        this.scrollDOM.className = \"cm-scroller\";\n        this.scrollDOM.appendChild(this.contentDOM);\n        this.announceDOM = document.createElement(\"div\");\n        this.announceDOM.className = \"cm-announced\";\n        this.announceDOM.setAttribute(\"aria-live\", \"polite\");\n        this.dom = document.createElement(\"div\");\n        this.dom.appendChild(this.announceDOM);\n        this.dom.appendChild(this.scrollDOM);\n        if (config.parent)\n            config.parent.appendChild(this.dom);\n        let { dispatch } = config;\n        this.dispatchTransactions = config.dispatchTransactions ||\n            (dispatch && ((trs) => trs.forEach(tr => dispatch(tr, this)))) ||\n            ((trs) => this.update(trs));\n        this.dispatch = this.dispatch.bind(this);\n        this._root = (config.root || getRoot(config.parent) || document);\n        this.viewState = new ViewState(config.state || EditorState.create(config));\n        if (config.scrollTo && config.scrollTo.is(scrollIntoView))\n            this.viewState.scrollTarget = config.scrollTo.value.clip(this.viewState.state);\n        this.plugins = this.state.facet(viewPlugin).map(spec => new PluginInstance(spec));\n        for (let plugin of this.plugins)\n            plugin.update(this);\n        this.observer = new DOMObserver(this);\n        this.inputState = new InputState(this);\n        this.inputState.ensureHandlers(this.plugins);\n        this.docView = new DocView(this);\n        this.mountStyles();\n        this.updateAttrs();\n        this.updateState = 0 /* UpdateState.Idle */;\n        this.requestMeasure();\n        if ((_a = document.fonts) === null || _a === void 0 ? void 0 : _a.ready)\n            document.fonts.ready.then(() => this.requestMeasure());\n    }\n    dispatch(...input) {\n        let trs = input.length == 1 && input[0] instanceof Transaction ? input\n            : input.length == 1 && Array.isArray(input[0]) ? input[0]\n                : [this.state.update(...input)];\n        this.dispatchTransactions(trs, this);\n    }\n    /**\n    Update the view for the given array of transactions. This will\n    update the visible document and selection to match the state\n    produced by the transactions, and notify view plugins of the\n    change. You should usually call\n    [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead, which uses this\n    as a primitive.\n    */\n    update(transactions) {\n        if (this.updateState != 0 /* UpdateState.Idle */)\n            throw new Error(\"Calls to EditorView.update are not allowed while an update is in progress\");\n        let redrawn = false, attrsChanged = false, update;\n        let state = this.state;\n        for (let tr of transactions) {\n            if (tr.startState != state)\n                throw new RangeError(\"Trying to update state with a transaction that doesn't start from the previous state.\");\n            state = tr.state;\n        }\n        if (this.destroyed) {\n            this.viewState.state = state;\n            return;\n        }\n        let focus = this.hasFocus, focusFlag = 0, dispatchFocus = null;\n        if (transactions.some(tr => tr.annotation(isFocusChange))) {\n            this.inputState.notifiedFocused = focus;\n            // If a focus-change transaction is being dispatched, set this update flag.\n            focusFlag = 1 /* UpdateFlag.Focus */;\n        }\n        else if (focus != this.inputState.notifiedFocused) {\n            this.inputState.notifiedFocused = focus;\n            // Schedule a separate focus transaction if necessary, otherwise\n            // add a flag to this update\n            dispatchFocus = focusChangeTransaction(state, focus);\n            if (!dispatchFocus)\n                focusFlag = 1 /* UpdateFlag.Focus */;\n        }\n        // If there was a pending DOM change, eagerly read it and try to\n        // apply it after the given transactions.\n        let pendingKey = this.observer.delayedAndroidKey, domChange = null;\n        if (pendingKey) {\n            this.observer.clearDelayedAndroidKey();\n            domChange = this.observer.readChange();\n            // Only try to apply DOM changes if the transactions didn't\n            // change the doc or selection.\n            if (domChange && !this.state.doc.eq(state.doc) || !this.state.selection.eq(state.selection))\n                domChange = null;\n        }\n        else {\n            this.observer.clear();\n        }\n        // When the phrases change, redraw the editor\n        if (state.facet(EditorState.phrases) != this.state.facet(EditorState.phrases))\n            return this.setState(state);\n        update = ViewUpdate.create(this, state, transactions);\n        update.flags |= focusFlag;\n        let scrollTarget = this.viewState.scrollTarget;\n        try {\n            this.updateState = 2 /* UpdateState.Updating */;\n            for (let tr of transactions) {\n                if (scrollTarget)\n                    scrollTarget = scrollTarget.map(tr.changes);\n                if (tr.scrollIntoView) {\n                    let { main } = tr.state.selection;\n                    scrollTarget = new ScrollTarget(main.empty ? main : EditorSelection.cursor(main.head, main.head > main.anchor ? -1 : 1));\n                }\n                for (let e of tr.effects)\n                    if (e.is(scrollIntoView))\n                        scrollTarget = e.value.clip(this.state);\n            }\n            this.viewState.update(update, scrollTarget);\n            this.bidiCache = CachedOrder.update(this.bidiCache, update.changes);\n            if (!update.empty) {\n                this.updatePlugins(update);\n                this.inputState.update(update);\n            }\n            redrawn = this.docView.update(update);\n            if (this.state.facet(styleModule) != this.styleModules)\n                this.mountStyles();\n            attrsChanged = this.updateAttrs();\n            this.showAnnouncements(transactions);\n            this.docView.updateSelection(redrawn, transactions.some(tr => tr.isUserEvent(\"select.pointer\")));\n        }\n        finally {\n            this.updateState = 0 /* UpdateState.Idle */;\n        }\n        if (update.startState.facet(theme) != update.state.facet(theme))\n            this.viewState.mustMeasureContent = true;\n        if (redrawn || attrsChanged || scrollTarget || this.viewState.mustEnforceCursorAssoc || this.viewState.mustMeasureContent)\n            this.requestMeasure();\n        if (redrawn)\n            this.docViewUpdate();\n        if (!update.empty)\n            for (let listener of this.state.facet(updateListener)) {\n                try {\n                    listener(update);\n                }\n                catch (e) {\n                    logException(this.state, e, \"update listener\");\n                }\n            }\n        if (dispatchFocus || domChange)\n            Promise.resolve().then(() => {\n                if (dispatchFocus && this.state == dispatchFocus.startState)\n                    this.dispatch(dispatchFocus);\n                if (domChange) {\n                    if (!applyDOMChange(this, domChange) && pendingKey.force)\n                        dispatchKey(this.contentDOM, pendingKey.key, pendingKey.keyCode);\n                }\n            });\n    }\n    /**\n    Reset the view to the given state. (This will cause the entire\n    document to be redrawn and all view plugins to be reinitialized,\n    so you should probably only use it when the new state isn't\n    derived from the old state. Otherwise, use\n    [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead.)\n    */\n    setState(newState) {\n        if (this.updateState != 0 /* UpdateState.Idle */)\n            throw new Error(\"Calls to EditorView.setState are not allowed while an update is in progress\");\n        if (this.destroyed) {\n            this.viewState.state = newState;\n            return;\n        }\n        this.updateState = 2 /* UpdateState.Updating */;\n        let hadFocus = this.hasFocus;\n        try {\n            for (let plugin of this.plugins)\n                plugin.destroy(this);\n            this.viewState = new ViewState(newState);\n            this.plugins = newState.facet(viewPlugin).map(spec => new PluginInstance(spec));\n            this.pluginMap.clear();\n            for (let plugin of this.plugins)\n                plugin.update(this);\n            this.docView.destroy();\n            this.docView = new DocView(this);\n            this.inputState.ensureHandlers(this.plugins);\n            this.mountStyles();\n            this.updateAttrs();\n            this.bidiCache = [];\n        }\n        finally {\n            this.updateState = 0 /* UpdateState.Idle */;\n        }\n        if (hadFocus)\n            this.focus();\n        this.requestMeasure();\n    }\n    updatePlugins(update) {\n        let prevSpecs = update.startState.facet(viewPlugin), specs = update.state.facet(viewPlugin);\n        if (prevSpecs != specs) {\n            let newPlugins = [];\n            for (let spec of specs) {\n                let found = prevSpecs.indexOf(spec);\n                if (found < 0) {\n                    newPlugins.push(new PluginInstance(spec));\n                }\n                else {\n                    let plugin = this.plugins[found];\n                    plugin.mustUpdate = update;\n                    newPlugins.push(plugin);\n                }\n            }\n            for (let plugin of this.plugins)\n                if (plugin.mustUpdate != update)\n                    plugin.destroy(this);\n            this.plugins = newPlugins;\n            this.pluginMap.clear();\n        }\n        else {\n            for (let p of this.plugins)\n                p.mustUpdate = update;\n        }\n        for (let i = 0; i < this.plugins.length; i++)\n            this.plugins[i].update(this);\n        if (prevSpecs != specs)\n            this.inputState.ensureHandlers(this.plugins);\n    }\n    docViewUpdate() {\n        for (let plugin of this.plugins) {\n            let val = plugin.value;\n            if (val && val.docViewUpdate) {\n                try {\n                    val.docViewUpdate(this);\n                }\n                catch (e) {\n                    logException(this.state, e, \"doc view update listener\");\n                }\n            }\n        }\n    }\n    /**\n    @internal\n    */\n    measure(flush = true) {\n        if (this.destroyed)\n            return;\n        if (this.measureScheduled > -1)\n            this.win.cancelAnimationFrame(this.measureScheduled);\n        if (this.observer.delayedAndroidKey) {\n            this.measureScheduled = -1;\n            this.requestMeasure();\n            return;\n        }\n        this.measureScheduled = 0; // Prevent requestMeasure calls from scheduling another animation frame\n        if (flush)\n            this.observer.forceFlush();\n        let updated = null;\n        let sDOM = this.scrollDOM, scrollTop = sDOM.scrollTop * this.scaleY;\n        let { scrollAnchorPos, scrollAnchorHeight } = this.viewState;\n        if (Math.abs(scrollTop - this.viewState.scrollTop) > 1)\n            scrollAnchorHeight = -1;\n        this.viewState.scrollAnchorHeight = -1;\n        try {\n            for (let i = 0;; i++) {\n                if (scrollAnchorHeight < 0) {\n                    if (isScrolledToBottom(sDOM)) {\n                        scrollAnchorPos = -1;\n                        scrollAnchorHeight = this.viewState.heightMap.height;\n                    }\n                    else {\n                        let block = this.viewState.scrollAnchorAt(scrollTop);\n                        scrollAnchorPos = block.from;\n                        scrollAnchorHeight = block.top;\n                    }\n                }\n                this.updateState = 1 /* UpdateState.Measuring */;\n                let changed = this.viewState.measure(this);\n                if (!changed && !this.measureRequests.length && this.viewState.scrollTarget == null)\n                    break;\n                if (i > 5) {\n                    console.warn(this.measureRequests.length\n                        ? \"Measure loop restarted more than 5 times\"\n                        : \"Viewport failed to stabilize\");\n                    break;\n                }\n                let measuring = [];\n                // Only run measure requests in this cycle when the viewport didn't change\n                if (!(changed & 4 /* UpdateFlag.Viewport */))\n                    [this.measureRequests, measuring] = [measuring, this.measureRequests];\n                let measured = measuring.map(m => {\n                    try {\n                        return m.read(this);\n                    }\n                    catch (e) {\n                        logException(this.state, e);\n                        return BadMeasure;\n                    }\n                });\n                let update = ViewUpdate.create(this, this.state, []), redrawn = false;\n                update.flags |= changed;\n                if (!updated)\n                    updated = update;\n                else\n                    updated.flags |= changed;\n                this.updateState = 2 /* UpdateState.Updating */;\n                if (!update.empty) {\n                    this.updatePlugins(update);\n                    this.inputState.update(update);\n                    this.updateAttrs();\n                    redrawn = this.docView.update(update);\n                    if (redrawn)\n                        this.docViewUpdate();\n                }\n                for (let i = 0; i < measuring.length; i++)\n                    if (measured[i] != BadMeasure) {\n                        try {\n                            let m = measuring[i];\n                            if (m.write)\n                                m.write(measured[i], this);\n                        }\n                        catch (e) {\n                            logException(this.state, e);\n                        }\n                    }\n                if (redrawn)\n                    this.docView.updateSelection(true);\n                if (!update.viewportChanged && this.measureRequests.length == 0) {\n                    if (this.viewState.editorHeight) {\n                        if (this.viewState.scrollTarget) {\n                            this.docView.scrollIntoView(this.viewState.scrollTarget);\n                            this.viewState.scrollTarget = null;\n                            scrollAnchorHeight = -1;\n                            continue;\n                        }\n                        else {\n                            let newAnchorHeight = scrollAnchorPos < 0 ? this.viewState.heightMap.height :\n                                this.viewState.lineBlockAt(scrollAnchorPos).top;\n                            let diff = newAnchorHeight - scrollAnchorHeight;\n                            if (diff > 1 || diff < -1) {\n                                scrollTop = scrollTop + diff;\n                                sDOM.scrollTop = scrollTop / this.scaleY;\n                                scrollAnchorHeight = -1;\n                                continue;\n                            }\n                        }\n                    }\n                    break;\n                }\n            }\n        }\n        finally {\n            this.updateState = 0 /* UpdateState.Idle */;\n            this.measureScheduled = -1;\n        }\n        if (updated && !updated.empty)\n            for (let listener of this.state.facet(updateListener))\n                listener(updated);\n    }\n    /**\n    Get the CSS classes for the currently active editor themes.\n    */\n    get themeClasses() {\n        return baseThemeID + \" \" +\n            (this.state.facet(darkTheme) ? baseDarkID : baseLightID) + \" \" +\n            this.state.facet(theme);\n    }\n    updateAttrs() {\n        let editorAttrs = attrsFromFacet(this, editorAttributes, {\n            class: \"cm-editor\" + (this.hasFocus ? \" cm-focused \" : \" \") + this.themeClasses\n        });\n        let contentAttrs = {\n            spellcheck: \"false\",\n            autocorrect: \"off\",\n            autocapitalize: \"off\",\n            writingsuggestions: \"false\",\n            translate: \"no\",\n            contenteditable: !this.state.facet(editable) ? \"false\" : \"true\",\n            class: \"cm-content\",\n            style: `${browser.tabSize}: ${this.state.tabSize}`,\n            role: \"textbox\",\n            \"aria-multiline\": \"true\"\n        };\n        if (this.state.readOnly)\n            contentAttrs[\"aria-readonly\"] = \"true\";\n        attrsFromFacet(this, contentAttributes, contentAttrs);\n        let changed = this.observer.ignore(() => {\n            let changedContent = updateAttrs(this.contentDOM, this.contentAttrs, contentAttrs);\n            let changedEditor = updateAttrs(this.dom, this.editorAttrs, editorAttrs);\n            return changedContent || changedEditor;\n        });\n        this.editorAttrs = editorAttrs;\n        this.contentAttrs = contentAttrs;\n        return changed;\n    }\n    showAnnouncements(trs) {\n        let first = true;\n        for (let tr of trs)\n            for (let effect of tr.effects)\n                if (effect.is(EditorView.announce)) {\n                    if (first)\n                        this.announceDOM.textContent = \"\";\n                    first = false;\n                    let div = this.announceDOM.appendChild(document.createElement(\"div\"));\n                    div.textContent = effect.value;\n                }\n    }\n    mountStyles() {\n        this.styleModules = this.state.facet(styleModule);\n        let nonce = this.state.facet(EditorView.cspNonce);\n        StyleModule.mount(this.root, this.styleModules.concat(baseTheme$1).reverse(), nonce ? { nonce } : undefined);\n    }\n    readMeasured() {\n        if (this.updateState == 2 /* UpdateState.Updating */)\n            throw new Error(\"Reading the editor layout isn't allowed during an update\");\n        if (this.updateState == 0 /* UpdateState.Idle */ && this.measureScheduled > -1)\n            this.measure(false);\n    }\n    /**\n    Schedule a layout measurement, optionally providing callbacks to\n    do custom DOM measuring followed by a DOM write phase. Using\n    this is preferable reading DOM layout directly from, for\n    example, an event handler, because it'll make sure measuring and\n    drawing done by other components is synchronized, avoiding\n    unnecessary DOM layout computations.\n    */\n    requestMeasure(request) {\n        if (this.measureScheduled < 0)\n            this.measureScheduled = this.win.requestAnimationFrame(() => this.measure());\n        if (request) {\n            if (this.measureRequests.indexOf(request) > -1)\n                return;\n            if (request.key != null)\n                for (let i = 0; i < this.measureRequests.length; i++) {\n                    if (this.measureRequests[i].key === request.key) {\n                        this.measureRequests[i] = request;\n                        return;\n                    }\n                }\n            this.measureRequests.push(request);\n        }\n    }\n    /**\n    Get the value of a specific plugin, if present. Note that\n    plugins that crash can be dropped from a view, so even when you\n    know you registered a given plugin, it is recommended to check\n    the return value of this method.\n    */\n    plugin(plugin) {\n        let known = this.pluginMap.get(plugin);\n        if (known === undefined || known && known.plugin != plugin)\n            this.pluginMap.set(plugin, known = this.plugins.find(p => p.plugin == plugin) || null);\n        return known && known.update(this).value;\n    }\n    /**\n    The top position of the document, in screen coordinates. This\n    may be negative when the editor is scrolled down. Points\n    directly to the top of the first line, not above the padding.\n    */\n    get documentTop() {\n        return this.contentDOM.getBoundingClientRect().top + this.viewState.paddingTop;\n    }\n    /**\n    Reports the padding above and below the document.\n    */\n    get documentPadding() {\n        return { top: this.viewState.paddingTop, bottom: this.viewState.paddingBottom };\n    }\n    /**\n    If the editor is transformed with CSS, this provides the scale\n    along the X axis. Otherwise, it will just be 1. Note that\n    transforms other than translation and scaling are not supported.\n    */\n    get scaleX() { return this.viewState.scaleX; }\n    /**\n    Provide the CSS transformed scale along the Y axis.\n    */\n    get scaleY() { return this.viewState.scaleY; }\n    /**\n    Find the text line or block widget at the given vertical\n    position (which is interpreted as relative to the [top of the\n    document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop)).\n    */\n    elementAtHeight(height) {\n        this.readMeasured();\n        return this.viewState.elementAtHeight(height);\n    }\n    /**\n    Find the line block (see\n    [`lineBlockAt`](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt)) at the given\n    height, again interpreted relative to the [top of the\n    document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop).\n    */\n    lineBlockAtHeight(height) {\n        this.readMeasured();\n        return this.viewState.lineBlockAtHeight(height);\n    }\n    /**\n    Get the extent and vertical position of all [line\n    blocks](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) in the viewport. Positions\n    are relative to the [top of the\n    document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop);\n    */\n    get viewportLineBlocks() {\n        return this.viewState.viewportLines;\n    }\n    /**\n    Find the line block around the given document position. A line\n    block is a range delimited on both sides by either a\n    non-[hidden](https://codemirror.net/6/docs/ref/#view.Decoration^replace) line break, or the\n    start/end of the document. It will usually just hold a line of\n    text, but may be broken into multiple textblocks by block\n    widgets.\n    */\n    lineBlockAt(pos) {\n        return this.viewState.lineBlockAt(pos);\n    }\n    /**\n    The editor's total content height.\n    */\n    get contentHeight() {\n        return this.viewState.contentHeight;\n    }\n    /**\n    Move a cursor position by [grapheme\n    cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak). `forward` determines whether\n    the motion is away from the line start, or towards it. In\n    bidirectional text, the line is traversed in visual order, using\n    the editor's [text direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection).\n    When the start position was the last one on the line, the\n    returned position will be across the line break. If there is no\n    further line, the original position is returned.\n    \n    By default, this method moves over a single cluster. The\n    optional `by` argument can be used to move across more. It will\n    be called with the first cluster as argument, and should return\n    a predicate that determines, for each subsequent cluster,\n    whether it should also be moved over.\n    */\n    moveByChar(start, forward, by) {\n        return skipAtoms(this, start, moveByChar(this, start, forward, by));\n    }\n    /**\n    Move a cursor position across the next group of either\n    [letters](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) or non-letter\n    non-whitespace characters.\n    */\n    moveByGroup(start, forward) {\n        return skipAtoms(this, start, moveByChar(this, start, forward, initial => byGroup(this, start.head, initial)));\n    }\n    /**\n    Get the cursor position visually at the start or end of a line.\n    Note that this may differ from the _logical_ position at its\n    start or end (which is simply at `line.from`/`line.to`) if text\n    at the start or end goes against the line's base text direction.\n    */\n    visualLineSide(line, end) {\n        let order = this.bidiSpans(line), dir = this.textDirectionAt(line.from);\n        let span = order[end ? order.length - 1 : 0];\n        return EditorSelection.cursor(span.side(end, dir) + line.from, span.forward(!end, dir) ? 1 : -1);\n    }\n    /**\n    Move to the next line boundary in the given direction. If\n    `includeWrap` is true, line wrapping is on, and there is a\n    further wrap point on the current line, the wrap point will be\n    returned. Otherwise this function will return the start or end\n    of the line.\n    */\n    moveToLineBoundary(start, forward, includeWrap = true) {\n        return moveToLineBoundary(this, start, forward, includeWrap);\n    }\n    /**\n    Move a cursor position vertically. When `distance` isn't given,\n    it defaults to moving to the next line (including wrapped\n    lines). Otherwise, `distance` should provide a positive distance\n    in pixels.\n    \n    When `start` has a\n    [`goalColumn`](https://codemirror.net/6/docs/ref/#state.SelectionRange.goalColumn), the vertical\n    motion will use that as a target horizontal position. Otherwise,\n    the cursor's own horizontal position is used. The returned\n    cursor will have its goal column set to whichever column was\n    used.\n    */\n    moveVertically(start, forward, distance) {\n        return skipAtoms(this, start, moveVertically(this, start, forward, distance));\n    }\n    /**\n    Find the DOM parent node and offset (child offset if `node` is\n    an element, character offset when it is a text node) at the\n    given document position.\n    \n    Note that for positions that aren't currently in\n    `visibleRanges`, the resulting DOM position isn't necessarily\n    meaningful (it may just point before or after a placeholder\n    element).\n    */\n    domAtPos(pos) {\n        return this.docView.domAtPos(pos);\n    }\n    /**\n    Find the document position at the given DOM node. Can be useful\n    for associating positions with DOM events. Will raise an error\n    when `node` isn't part of the editor content.\n    */\n    posAtDOM(node, offset = 0) {\n        return this.docView.posFromDOM(node, offset);\n    }\n    posAtCoords(coords, precise = true) {\n        this.readMeasured();\n        return posAtCoords(this, coords, precise);\n    }\n    /**\n    Get the screen coordinates at the given document position.\n    `side` determines whether the coordinates are based on the\n    element before (-1) or after (1) the position (if no element is\n    available on the given side, the method will transparently use\n    another strategy to get reasonable coordinates).\n    */\n    coordsAtPos(pos, side = 1) {\n        this.readMeasured();\n        let rect = this.docView.coordsAt(pos, side);\n        if (!rect || rect.left == rect.right)\n            return rect;\n        let line = this.state.doc.lineAt(pos), order = this.bidiSpans(line);\n        let span = order[BidiSpan.find(order, pos - line.from, -1, side)];\n        return flattenRect(rect, (span.dir == Direction.LTR) == (side > 0));\n    }\n    /**\n    Return the rectangle around a given character. If `pos` does not\n    point in front of a character that is in the viewport and\n    rendered (i.e. not replaced, not a line break), this will return\n    null. For space characters that are a line wrap point, this will\n    return the position before the line break.\n    */\n    coordsForChar(pos) {\n        this.readMeasured();\n        return this.docView.coordsForChar(pos);\n    }\n    /**\n    The default width of a character in the editor. May not\n    accurately reflect the width of all characters (given variable\n    width fonts or styling of invididual ranges).\n    */\n    get defaultCharacterWidth() { return this.viewState.heightOracle.charWidth; }\n    /**\n    The default height of a line in the editor. May not be accurate\n    for all lines.\n    */\n    get defaultLineHeight() { return this.viewState.heightOracle.lineHeight; }\n    /**\n    The text direction\n    ([`direction`](https://developer.mozilla.org/en-US/docs/Web/CSS/direction)\n    CSS property) of the editor's content element.\n    */\n    get textDirection() { return this.viewState.defaultTextDirection; }\n    /**\n    Find the text direction of the block at the given position, as\n    assigned by CSS. If\n    [`perLineTextDirection`](https://codemirror.net/6/docs/ref/#view.EditorView^perLineTextDirection)\n    isn't enabled, or the given position is outside of the viewport,\n    this will always return the same as\n    [`textDirection`](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection). Note that\n    this may trigger a DOM layout.\n    */\n    textDirectionAt(pos) {\n        let perLine = this.state.facet(perLineTextDirection);\n        if (!perLine || pos < this.viewport.from || pos > this.viewport.to)\n            return this.textDirection;\n        this.readMeasured();\n        return this.docView.textDirectionAt(pos);\n    }\n    /**\n    Whether this editor [wraps lines](https://codemirror.net/6/docs/ref/#view.EditorView.lineWrapping)\n    (as determined by the\n    [`white-space`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space)\n    CSS property of its content element).\n    */\n    get lineWrapping() { return this.viewState.heightOracle.lineWrapping; }\n    /**\n    Returns the bidirectional text structure of the given line\n    (which should be in the current document) as an array of span\n    objects. The order of these spans matches the [text\n    direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection)—if that is\n    left-to-right, the leftmost spans come first, otherwise the\n    rightmost spans come first.\n    */\n    bidiSpans(line) {\n        if (line.length > MaxBidiLine)\n            return trivialOrder(line.length);\n        let dir = this.textDirectionAt(line.from), isolates;\n        for (let entry of this.bidiCache) {\n            if (entry.from == line.from && entry.dir == dir &&\n                (entry.fresh || isolatesEq(entry.isolates, isolates = getIsolatedRanges(this, line))))\n                return entry.order;\n        }\n        if (!isolates)\n            isolates = getIsolatedRanges(this, line);\n        let order = computeOrder(line.text, dir, isolates);\n        this.bidiCache.push(new CachedOrder(line.from, line.to, dir, isolates, true, order));\n        return order;\n    }\n    /**\n    Check whether the editor has focus.\n    */\n    get hasFocus() {\n        var _a;\n        // Safari return false for hasFocus when the context menu is open\n        // or closing, which leads us to ignore selection changes from the\n        // context menu because it looks like the editor isn't focused.\n        // This kludges around that.\n        return (this.dom.ownerDocument.hasFocus() || browser.safari && ((_a = this.inputState) === null || _a === void 0 ? void 0 : _a.lastContextMenu) > Date.now() - 3e4) &&\n            this.root.activeElement == this.contentDOM;\n    }\n    /**\n    Put focus on the editor.\n    */\n    focus() {\n        this.observer.ignore(() => {\n            focusPreventScroll(this.contentDOM);\n            this.docView.updateSelection();\n        });\n    }\n    /**\n    Update the [root](https://codemirror.net/6/docs/ref/##view.EditorViewConfig.root) in which the editor lives. This is only\n    necessary when moving the editor's existing DOM to a new window or shadow root.\n    */\n    setRoot(root) {\n        if (this._root != root) {\n            this._root = root;\n            this.observer.setWindow((root.nodeType == 9 ? root : root.ownerDocument).defaultView || window);\n            this.mountStyles();\n        }\n    }\n    /**\n    Clean up this editor view, removing its element from the\n    document, unregistering event handlers, and notifying\n    plugins. The view instance can no longer be used after\n    calling this.\n    */\n    destroy() {\n        if (this.root.activeElement == this.contentDOM)\n            this.contentDOM.blur();\n        for (let plugin of this.plugins)\n            plugin.destroy(this);\n        this.plugins = [];\n        this.inputState.destroy();\n        this.docView.destroy();\n        this.dom.remove();\n        this.observer.destroy();\n        if (this.measureScheduled > -1)\n            this.win.cancelAnimationFrame(this.measureScheduled);\n        this.destroyed = true;\n    }\n    /**\n    Returns an effect that can be\n    [added](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) to a transaction to\n    cause it to scroll the given position or range into view.\n    */\n    static scrollIntoView(pos, options = {}) {\n        return scrollIntoView.of(new ScrollTarget(typeof pos == \"number\" ? EditorSelection.cursor(pos) : pos, options.y, options.x, options.yMargin, options.xMargin));\n    }\n    /**\n    Return an effect that resets the editor to its current (at the\n    time this method was called) scroll position. Note that this\n    only affects the editor's own scrollable element, not parents.\n    See also\n    [`EditorViewConfig.scrollTo`](https://codemirror.net/6/docs/ref/#view.EditorViewConfig.scrollTo).\n    \n    The effect should be used with a document identical to the one\n    it was created for. Failing to do so is not an error, but may\n    not scroll to the expected position. You can\n    [map](https://codemirror.net/6/docs/ref/#state.StateEffect.map) the effect to account for changes.\n    */\n    scrollSnapshot() {\n        let { scrollTop, scrollLeft } = this.scrollDOM;\n        let ref = this.viewState.scrollAnchorAt(scrollTop);\n        return scrollIntoView.of(new ScrollTarget(EditorSelection.cursor(ref.from), \"start\", \"start\", ref.top - scrollTop, scrollLeft, true));\n    }\n    /**\n    Enable or disable tab-focus mode, which disables key bindings\n    for Tab and Shift-Tab, letting the browser's default\n    focus-changing behavior go through instead. This is useful to\n    prevent trapping keyboard users in your editor.\n    \n    Without argument, this toggles the mode. With a boolean, it\n    enables (true) or disables it (false). Given a number, it\n    temporarily enables the mode until that number of milliseconds\n    have passed or another non-Tab key is pressed.\n    */\n    setTabFocusMode(to) {\n        if (to == null)\n            this.inputState.tabFocusMode = this.inputState.tabFocusMode < 0 ? 0 : -1;\n        else if (typeof to == \"boolean\")\n            this.inputState.tabFocusMode = to ? 0 : -1;\n        else if (this.inputState.tabFocusMode != 0)\n            this.inputState.tabFocusMode = Date.now() + to;\n    }\n    /**\n    Returns an extension that can be used to add DOM event handlers.\n    The value should be an object mapping event names to handler\n    functions. For any given event, such functions are ordered by\n    extension precedence, and the first handler to return true will\n    be assumed to have handled that event, and no other handlers or\n    built-in behavior will be activated for it. These are registered\n    on the [content element](https://codemirror.net/6/docs/ref/#view.EditorView.contentDOM), except\n    for `scroll` handlers, which will be called any time the\n    editor's [scroll element](https://codemirror.net/6/docs/ref/#view.EditorView.scrollDOM) or one of\n    its parent nodes is scrolled.\n    */\n    static domEventHandlers(handlers) {\n        return ViewPlugin.define(() => ({}), { eventHandlers: handlers });\n    }\n    /**\n    Create an extension that registers DOM event observers. Contrary\n    to event [handlers](https://codemirror.net/6/docs/ref/#view.EditorView^domEventHandlers),\n    observers can't be prevented from running by a higher-precedence\n    handler returning true. They also don't prevent other handlers\n    and observers from running when they return true, and should not\n    call `preventDefault`.\n    */\n    static domEventObservers(observers) {\n        return ViewPlugin.define(() => ({}), { eventObservers: observers });\n    }\n    /**\n    Create a theme extension. The first argument can be a\n    [`style-mod`](https://github.com/marijnh/style-mod#documentation)\n    style spec providing the styles for the theme. These will be\n    prefixed with a generated class for the style.\n    \n    Because the selectors will be prefixed with a scope class, rule\n    that directly match the editor's [wrapper\n    element](https://codemirror.net/6/docs/ref/#view.EditorView.dom)—to which the scope class will be\n    added—need to be explicitly differentiated by adding an `&` to\n    the selector for that element—for example\n    `&.cm-focused`.\n    \n    When `dark` is set to true, the theme will be marked as dark,\n    which will cause the `&dark` rules from [base\n    themes](https://codemirror.net/6/docs/ref/#view.EditorView^baseTheme) to be used (as opposed to\n    `&light` when a light theme is active).\n    */\n    static theme(spec, options) {\n        let prefix = StyleModule.newName();\n        let result = [theme.of(prefix), styleModule.of(buildTheme(`.${prefix}`, spec))];\n        if (options && options.dark)\n            result.push(darkTheme.of(true));\n        return result;\n    }\n    /**\n    Create an extension that adds styles to the base theme. Like\n    with [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme), use `&` to indicate the\n    place of the editor wrapper element when directly targeting\n    that. You can also use `&dark` or `&light` instead to only\n    target editors with a dark or light theme.\n    */\n    static baseTheme(spec) {\n        return Prec.lowest(styleModule.of(buildTheme(\".\" + baseThemeID, spec, lightDarkIDs)));\n    }\n    /**\n    Retrieve an editor view instance from the view's DOM\n    representation.\n    */\n    static findFromDOM(dom) {\n        var _a;\n        let content = dom.querySelector(\".cm-content\");\n        let cView = content && ContentView.get(content) || ContentView.get(dom);\n        return ((_a = cView === null || cView === void 0 ? void 0 : cView.rootView) === null || _a === void 0 ? void 0 : _a.view) || null;\n    }\n}\n/**\nFacet to add a [style\nmodule](https://github.com/marijnh/style-mod#documentation) to\nan editor view. The view will ensure that the module is\nmounted in its [document\nroot](https://codemirror.net/6/docs/ref/#view.EditorView.constructor^config.root).\n*/\nEditorView.styleModule = styleModule;\n/**\nAn input handler can override the way changes to the editable\nDOM content are handled. Handlers are passed the document\npositions between which the change was found, and the new\ncontent. When one returns true, no further input handlers are\ncalled and the default behavior is prevented.\n\nThe `insert` argument can be used to get the default transaction\nthat would be applied for this input. This can be useful when\ndispatching the custom behavior as a separate transaction.\n*/\nEditorView.inputHandler = inputHandler;\n/**\nFunctions provided in this facet will be used to transform text\npasted or dropped into the editor.\n*/\nEditorView.clipboardInputFilter = clipboardInputFilter;\n/**\nTransform text copied or dragged from the editor.\n*/\nEditorView.clipboardOutputFilter = clipboardOutputFilter;\n/**\nScroll handlers can override how things are scrolled into view.\nIf they return `true`, no further handling happens for the\nscrolling. If they return false, the default scroll behavior is\napplied. Scroll handlers should never initiate editor updates.\n*/\nEditorView.scrollHandler = scrollHandler;\n/**\nThis facet can be used to provide functions that create effects\nto be dispatched when the editor's focus state changes.\n*/\nEditorView.focusChangeEffect = focusChangeEffect;\n/**\nBy default, the editor assumes all its content has the same\n[text direction](https://codemirror.net/6/docs/ref/#view.Direction). Configure this with a `true`\nvalue to make it read the text direction of every (rendered)\nline separately.\n*/\nEditorView.perLineTextDirection = perLineTextDirection;\n/**\nAllows you to provide a function that should be called when the\nlibrary catches an exception from an extension (mostly from view\nplugins, but may be used by other extensions to route exceptions\nfrom user-code-provided callbacks). This is mostly useful for\ndebugging and logging. See [`logException`](https://codemirror.net/6/docs/ref/#view.logException).\n*/\nEditorView.exceptionSink = exceptionSink;\n/**\nA facet that can be used to register a function to be called\nevery time the view updates.\n*/\nEditorView.updateListener = updateListener;\n/**\nFacet that controls whether the editor content DOM is editable.\nWhen its highest-precedence value is `false`, the element will\nnot have its `contenteditable` attribute set. (Note that this\ndoesn't affect API calls that change the editor content, even\nwhen those are bound to keys or buttons. See the\n[`readOnly`](https://codemirror.net/6/docs/ref/#state.EditorState.readOnly) facet for that.)\n*/\nEditorView.editable = editable;\n/**\nAllows you to influence the way mouse selection happens. The\nfunctions in this facet will be called for a `mousedown` event\non the editor, and can return an object that overrides the way a\nselection is computed from that mouse click or drag.\n*/\nEditorView.mouseSelectionStyle = mouseSelectionStyle;\n/**\nFacet used to configure whether a given selection drag event\nshould move or copy the selection. The given predicate will be\ncalled with the `mousedown` event, and can return `true` when\nthe drag should move the content.\n*/\nEditorView.dragMovesSelection = dragMovesSelection$1;\n/**\nFacet used to configure whether a given selecting click adds a\nnew range to the existing selection or replaces it entirely. The\ndefault behavior is to check `event.metaKey` on macOS, and\n`event.ctrlKey` elsewhere.\n*/\nEditorView.clickAddsSelectionRange = clickAddsSelectionRange;\n/**\nA facet that determines which [decorations](https://codemirror.net/6/docs/ref/#view.Decoration)\nare shown in the view. Decorations can be provided in two\nways—directly, or via a function that takes an editor view.\n\nOnly decoration sets provided directly are allowed to influence\nthe editor's vertical layout structure. The ones provided as\nfunctions are called _after_ the new viewport has been computed,\nand thus **must not** introduce block widgets or replacing\ndecorations that cover line breaks.\n\nIf you want decorated ranges to behave like atomic units for\ncursor motion and deletion purposes, also provide the range set\ncontaining the decorations to\n[`EditorView.atomicRanges`](https://codemirror.net/6/docs/ref/#view.EditorView^atomicRanges).\n*/\nEditorView.decorations = decorations;\n/**\nFacet that works much like\n[`decorations`](https://codemirror.net/6/docs/ref/#view.EditorView^decorations), but puts its\ninputs at the very bottom of the precedence stack, meaning mark\ndecorations provided here will only be split by other, partially\noverlapping \\`outerDecorations\\` ranges, and wrap around all\nregular decorations. Use this for mark elements that should, as\nmuch as possible, remain in one piece.\n*/\nEditorView.outerDecorations = outerDecorations;\n/**\nUsed to provide ranges that should be treated as atoms as far as\ncursor motion is concerned. This causes methods like\n[`moveByChar`](https://codemirror.net/6/docs/ref/#view.EditorView.moveByChar) and\n[`moveVertically`](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) (and the\ncommands built on top of them) to skip across such regions when\na selection endpoint would enter them. This does _not_ prevent\ndirect programmatic [selection\nupdates](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) from moving into such\nregions.\n*/\nEditorView.atomicRanges = atomicRanges;\n/**\nWhen range decorations add a `unicode-bidi: isolate` style, they\nshould also include a\n[`bidiIsolate`](https://codemirror.net/6/docs/ref/#view.MarkDecorationSpec.bidiIsolate) property\nin their decoration spec, and be exposed through this facet, so\nthat the editor can compute the proper text order. (Other values\nfor `unicode-bidi`, except of course `normal`, are not\nsupported.)\n*/\nEditorView.bidiIsolatedRanges = bidiIsolatedRanges;\n/**\nFacet that allows extensions to provide additional scroll\nmargins (space around the sides of the scrolling element that\nshould be considered invisible). This can be useful when the\nplugin introduces elements that cover part of that element (for\nexample a horizontally fixed gutter).\n*/\nEditorView.scrollMargins = scrollMargins;\n/**\nThis facet records whether a dark theme is active. The extension\nreturned by [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme) automatically\nincludes an instance of this when the `dark` option is set to\ntrue.\n*/\nEditorView.darkTheme = darkTheme;\n/**\nProvides a Content Security Policy nonce to use when creating\nthe style sheets for the editor. Holds the empty string when no\nnonce has been provided.\n*/\nEditorView.cspNonce = /*@__PURE__*/Facet.define({ combine: values => values.length ? values[0] : \"\" });\n/**\nFacet that provides additional DOM attributes for the editor's\neditable DOM element.\n*/\nEditorView.contentAttributes = contentAttributes;\n/**\nFacet that provides DOM attributes for the editor's outer\nelement.\n*/\nEditorView.editorAttributes = editorAttributes;\n/**\nAn extension that enables line wrapping in the editor (by\nsetting CSS `white-space` to `pre-wrap` in the content).\n*/\nEditorView.lineWrapping = /*@__PURE__*/EditorView.contentAttributes.of({ \"class\": \"cm-lineWrapping\" });\n/**\nState effect used to include screen reader announcements in a\ntransaction. These will be added to the DOM in a visually hidden\nelement with `aria-live=\"polite\"` set, and should be used to\ndescribe effects that are visually obvious but may not be\nnoticed by screen reader users (such as moving to the next\nsearch match).\n*/\nEditorView.announce = /*@__PURE__*/StateEffect.define();\n// Maximum line length for which we compute accurate bidi info\nconst MaxBidiLine = 4096;\nconst BadMeasure = {};\nclass CachedOrder {\n    constructor(from, to, dir, isolates, fresh, order) {\n        this.from = from;\n        this.to = to;\n        this.dir = dir;\n        this.isolates = isolates;\n        this.fresh = fresh;\n        this.order = order;\n    }\n    static update(cache, changes) {\n        if (changes.empty && !cache.some(c => c.fresh))\n            return cache;\n        let result = [], lastDir = cache.length ? cache[cache.length - 1].dir : Direction.LTR;\n        for (let i = Math.max(0, cache.length - 10); i < cache.length; i++) {\n            let entry = cache[i];\n            if (entry.dir == lastDir && !changes.touchesRange(entry.from, entry.to))\n                result.push(new CachedOrder(changes.mapPos(entry.from, 1), changes.mapPos(entry.to, -1), entry.dir, entry.isolates, false, entry.order));\n        }\n        return result;\n    }\n}\nfunction attrsFromFacet(view, facet, base) {\n    for (let sources = view.state.facet(facet), i = sources.length - 1; i >= 0; i--) {\n        let source = sources[i], value = typeof source == \"function\" ? source(view) : source;\n        if (value)\n            combineAttrs(value, base);\n    }\n    return base;\n}\n\nconst currentPlatform = browser.mac ? \"mac\" : browser.windows ? \"win\" : browser.linux ? \"linux\" : \"key\";\nfunction normalizeKeyName(name, platform) {\n    const parts = name.split(/-(?!$)/);\n    let result = parts[parts.length - 1];\n    if (result == \"Space\")\n        result = \" \";\n    let alt, ctrl, shift, meta;\n    for (let i = 0; i < parts.length - 1; ++i) {\n        const mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod))\n            meta = true;\n        else if (/^a(lt)?$/i.test(mod))\n            alt = true;\n        else if (/^(c|ctrl|control)$/i.test(mod))\n            ctrl = true;\n        else if (/^s(hift)?$/i.test(mod))\n            shift = true;\n        else if (/^mod$/i.test(mod)) {\n            if (platform == \"mac\")\n                meta = true;\n            else\n                ctrl = true;\n        }\n        else\n            throw new Error(\"Unrecognized modifier name: \" + mod);\n    }\n    if (alt)\n        result = \"Alt-\" + result;\n    if (ctrl)\n        result = \"Ctrl-\" + result;\n    if (meta)\n        result = \"Meta-\" + result;\n    if (shift)\n        result = \"Shift-\" + result;\n    return result;\n}\nfunction modifiers(name, event, shift) {\n    if (event.altKey)\n        name = \"Alt-\" + name;\n    if (event.ctrlKey)\n        name = \"Ctrl-\" + name;\n    if (event.metaKey)\n        name = \"Meta-\" + name;\n    if (shift !== false && event.shiftKey)\n        name = \"Shift-\" + name;\n    return name;\n}\nconst handleKeyEvents = /*@__PURE__*/Prec.default(/*@__PURE__*/EditorView.domEventHandlers({\n    keydown(event, view) {\n        return runHandlers(getKeymap(view.state), event, view, \"editor\");\n    }\n}));\n/**\nFacet used for registering keymaps.\n\nYou can add multiple keymaps to an editor. Their priorities\ndetermine their precedence (the ones specified early or with high\npriority get checked first). When a handler has returned `true`\nfor a given key, no further handlers are called.\n*/\nconst keymap = /*@__PURE__*/Facet.define({ enables: handleKeyEvents });\nconst Keymaps = /*@__PURE__*/new WeakMap();\n// This is hidden behind an indirection, rather than directly computed\n// by the facet, to keep internal types out of the facet's type.\nfunction getKeymap(state) {\n    let bindings = state.facet(keymap);\n    let map = Keymaps.get(bindings);\n    if (!map)\n        Keymaps.set(bindings, map = buildKeymap(bindings.reduce((a, b) => a.concat(b), [])));\n    return map;\n}\n/**\nRun the key handlers registered for a given scope. The event\nobject should be a `\"keydown\"` event. Returns true if any of the\nhandlers handled it.\n*/\nfunction runScopeHandlers(view, event, scope) {\n    return runHandlers(getKeymap(view.state), event, view, scope);\n}\nlet storedPrefix = null;\nconst PrefixTimeout = 4000;\nfunction buildKeymap(bindings, platform = currentPlatform) {\n    let bound = Object.create(null);\n    let isPrefix = Object.create(null);\n    let checkPrefix = (name, is) => {\n        let current = isPrefix[name];\n        if (current == null)\n            isPrefix[name] = is;\n        else if (current != is)\n            throw new Error(\"Key binding \" + name + \" is used both as a regular binding and as a multi-stroke prefix\");\n    };\n    let add = (scope, key, command, preventDefault, stopPropagation) => {\n        var _a, _b;\n        let scopeObj = bound[scope] || (bound[scope] = Object.create(null));\n        let parts = key.split(/ (?!$)/).map(k => normalizeKeyName(k, platform));\n        for (let i = 1; i < parts.length; i++) {\n            let prefix = parts.slice(0, i).join(\" \");\n            checkPrefix(prefix, true);\n            if (!scopeObj[prefix])\n                scopeObj[prefix] = {\n                    preventDefault: true,\n                    stopPropagation: false,\n                    run: [(view) => {\n                            let ourObj = storedPrefix = { view, prefix, scope };\n                            setTimeout(() => { if (storedPrefix == ourObj)\n                                storedPrefix = null; }, PrefixTimeout);\n                            return true;\n                        }]\n                };\n        }\n        let full = parts.join(\" \");\n        checkPrefix(full, false);\n        let binding = scopeObj[full] || (scopeObj[full] = {\n            preventDefault: false,\n            stopPropagation: false,\n            run: ((_b = (_a = scopeObj._any) === null || _a === void 0 ? void 0 : _a.run) === null || _b === void 0 ? void 0 : _b.slice()) || []\n        });\n        if (command)\n            binding.run.push(command);\n        if (preventDefault)\n            binding.preventDefault = true;\n        if (stopPropagation)\n            binding.stopPropagation = true;\n    };\n    for (let b of bindings) {\n        let scopes = b.scope ? b.scope.split(\" \") : [\"editor\"];\n        if (b.any)\n            for (let scope of scopes) {\n                let scopeObj = bound[scope] || (bound[scope] = Object.create(null));\n                if (!scopeObj._any)\n                    scopeObj._any = { preventDefault: false, stopPropagation: false, run: [] };\n                let { any } = b;\n                for (let key in scopeObj)\n                    scopeObj[key].run.push(view => any(view, currentKeyEvent));\n            }\n        let name = b[platform] || b.key;\n        if (!name)\n            continue;\n        for (let scope of scopes) {\n            add(scope, name, b.run, b.preventDefault, b.stopPropagation);\n            if (b.shift)\n                add(scope, \"Shift-\" + name, b.shift, b.preventDefault, b.stopPropagation);\n        }\n    }\n    return bound;\n}\nlet currentKeyEvent = null;\nfunction runHandlers(map, event, view, scope) {\n    currentKeyEvent = event;\n    let name = keyName(event);\n    let charCode = codePointAt(name, 0), isChar = codePointSize(charCode) == name.length && name != \" \";\n    let prefix = \"\", handled = false, prevented = false, stopPropagation = false;\n    if (storedPrefix && storedPrefix.view == view && storedPrefix.scope == scope) {\n        prefix = storedPrefix.prefix + \" \";\n        if (modifierCodes.indexOf(event.keyCode) < 0) {\n            prevented = true;\n            storedPrefix = null;\n        }\n    }\n    let ran = new Set;\n    let runFor = (binding) => {\n        if (binding) {\n            for (let cmd of binding.run)\n                if (!ran.has(cmd)) {\n                    ran.add(cmd);\n                    if (cmd(view)) {\n                        if (binding.stopPropagation)\n                            stopPropagation = true;\n                        return true;\n                    }\n                }\n            if (binding.preventDefault) {\n                if (binding.stopPropagation)\n                    stopPropagation = true;\n                prevented = true;\n            }\n        }\n        return false;\n    };\n    let scopeObj = map[scope], baseName, shiftName;\n    if (scopeObj) {\n        if (runFor(scopeObj[prefix + modifiers(name, event, !isChar)])) {\n            handled = true;\n        }\n        else if (isChar && (event.altKey || event.metaKey || event.ctrlKey) &&\n            // Ctrl-Alt may be used for AltGr on Windows\n            !(browser.windows && event.ctrlKey && event.altKey) &&\n            // Alt-combinations on macOS tend to be typed characters\n            !(browser.mac && event.altKey && !(event.ctrlKey || event.metaKey)) &&\n            (baseName = base[event.keyCode]) && baseName != name) {\n            if (runFor(scopeObj[prefix + modifiers(baseName, event, true)])) {\n                handled = true;\n            }\n            else if (event.shiftKey && (shiftName = shift[event.keyCode]) != name && shiftName != baseName &&\n                runFor(scopeObj[prefix + modifiers(shiftName, event, false)])) {\n                handled = true;\n            }\n        }\n        else if (isChar && event.shiftKey &&\n            runFor(scopeObj[prefix + modifiers(name, event, true)])) {\n            handled = true;\n        }\n        if (!handled && runFor(scopeObj._any))\n            handled = true;\n    }\n    if (prevented)\n        handled = true;\n    if (handled && stopPropagation)\n        event.stopPropagation();\n    currentKeyEvent = null;\n    return handled;\n}\n\n/**\nImplementation of [`LayerMarker`](https://codemirror.net/6/docs/ref/#view.LayerMarker) that creates\na rectangle at a given set of coordinates.\n*/\nclass RectangleMarker {\n    /**\n    Create a marker with the given class and dimensions. If `width`\n    is null, the DOM element will get no width style.\n    */\n    constructor(className, \n    /**\n    The left position of the marker (in pixels, document-relative).\n    */\n    left, \n    /**\n    The top position of the marker.\n    */\n    top, \n    /**\n    The width of the marker, or null if it shouldn't get a width assigned.\n    */\n    width, \n    /**\n    The height of the marker.\n    */\n    height) {\n        this.className = className;\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n    }\n    draw() {\n        let elt = document.createElement(\"div\");\n        elt.className = this.className;\n        this.adjust(elt);\n        return elt;\n    }\n    update(elt, prev) {\n        if (prev.className != this.className)\n            return false;\n        this.adjust(elt);\n        return true;\n    }\n    adjust(elt) {\n        elt.style.left = this.left + \"px\";\n        elt.style.top = this.top + \"px\";\n        if (this.width != null)\n            elt.style.width = this.width + \"px\";\n        elt.style.height = this.height + \"px\";\n    }\n    eq(p) {\n        return this.left == p.left && this.top == p.top && this.width == p.width && this.height == p.height &&\n            this.className == p.className;\n    }\n    /**\n    Create a set of rectangles for the given selection range,\n    assigning them theclass`className`. Will create a single\n    rectangle for empty ranges, and a set of selection-style\n    rectangles covering the range's content (in a bidi-aware\n    way) for non-empty ones.\n    */\n    static forRange(view, className, range) {\n        if (range.empty) {\n            let pos = view.coordsAtPos(range.head, range.assoc || 1);\n            if (!pos)\n                return [];\n            let base = getBase(view);\n            return [new RectangleMarker(className, pos.left - base.left, pos.top - base.top, null, pos.bottom - pos.top)];\n        }\n        else {\n            return rectanglesForRange(view, className, range);\n        }\n    }\n}\nfunction getBase(view) {\n    let rect = view.scrollDOM.getBoundingClientRect();\n    let left = view.textDirection == Direction.LTR ? rect.left : rect.right - view.scrollDOM.clientWidth * view.scaleX;\n    return { left: left - view.scrollDOM.scrollLeft * view.scaleX, top: rect.top - view.scrollDOM.scrollTop * view.scaleY };\n}\nfunction wrappedLine(view, pos, side, inside) {\n    let coords = view.coordsAtPos(pos, side * 2);\n    if (!coords)\n        return inside;\n    let editorRect = view.dom.getBoundingClientRect();\n    let y = (coords.top + coords.bottom) / 2;\n    let left = view.posAtCoords({ x: editorRect.left + 1, y });\n    let right = view.posAtCoords({ x: editorRect.right - 1, y });\n    if (left == null || right == null)\n        return inside;\n    return { from: Math.max(inside.from, Math.min(left, right)), to: Math.min(inside.to, Math.max(left, right)) };\n}\nfunction rectanglesForRange(view, className, range) {\n    if (range.to <= view.viewport.from || range.from >= view.viewport.to)\n        return [];\n    let from = Math.max(range.from, view.viewport.from), to = Math.min(range.to, view.viewport.to);\n    let ltr = view.textDirection == Direction.LTR;\n    let content = view.contentDOM, contentRect = content.getBoundingClientRect(), base = getBase(view);\n    let lineElt = content.querySelector(\".cm-line\"), lineStyle = lineElt && window.getComputedStyle(lineElt);\n    let leftSide = contentRect.left +\n        (lineStyle ? parseInt(lineStyle.paddingLeft) + Math.min(0, parseInt(lineStyle.textIndent)) : 0);\n    let rightSide = contentRect.right - (lineStyle ? parseInt(lineStyle.paddingRight) : 0);\n    let startBlock = blockAt(view, from, 1), endBlock = blockAt(view, to, -1);\n    let visualStart = startBlock.type == BlockType.Text ? startBlock : null;\n    let visualEnd = endBlock.type == BlockType.Text ? endBlock : null;\n    if (visualStart && (view.lineWrapping || startBlock.widgetLineBreaks))\n        visualStart = wrappedLine(view, from, 1, visualStart);\n    if (visualEnd && (view.lineWrapping || endBlock.widgetLineBreaks))\n        visualEnd = wrappedLine(view, to, -1, visualEnd);\n    if (visualStart && visualEnd && visualStart.from == visualEnd.from && visualStart.to == visualEnd.to) {\n        return pieces(drawForLine(range.from, range.to, visualStart));\n    }\n    else {\n        let top = visualStart ? drawForLine(range.from, null, visualStart) : drawForWidget(startBlock, false);\n        let bottom = visualEnd ? drawForLine(null, range.to, visualEnd) : drawForWidget(endBlock, true);\n        let between = [];\n        if ((visualStart || startBlock).to < (visualEnd || endBlock).from - (visualStart && visualEnd ? 1 : 0) ||\n            startBlock.widgetLineBreaks > 1 && top.bottom + view.defaultLineHeight / 2 < bottom.top)\n            between.push(piece(leftSide, top.bottom, rightSide, bottom.top));\n        else if (top.bottom < bottom.top && view.elementAtHeight((top.bottom + bottom.top) / 2).type == BlockType.Text)\n            top.bottom = bottom.top = (top.bottom + bottom.top) / 2;\n        return pieces(top).concat(between).concat(pieces(bottom));\n    }\n    function piece(left, top, right, bottom) {\n        return new RectangleMarker(className, left - base.left, top - base.top, right - left, bottom - top);\n    }\n    function pieces({ top, bottom, horizontal }) {\n        let pieces = [];\n        for (let i = 0; i < horizontal.length; i += 2)\n            pieces.push(piece(horizontal[i], top, horizontal[i + 1], bottom));\n        return pieces;\n    }\n    // Gets passed from/to in line-local positions\n    function drawForLine(from, to, line) {\n        let top = 1e9, bottom = -1e9, horizontal = [];\n        function addSpan(from, fromOpen, to, toOpen, dir) {\n            // Passing 2/-2 is a kludge to force the view to return\n            // coordinates on the proper side of block widgets, since\n            // normalizing the side there, though appropriate for most\n            // coordsAtPos queries, would break selection drawing.\n            let fromCoords = view.coordsAtPos(from, (from == line.to ? -2 : 2));\n            let toCoords = view.coordsAtPos(to, (to == line.from ? 2 : -2));\n            if (!fromCoords || !toCoords)\n                return;\n            top = Math.min(fromCoords.top, toCoords.top, top);\n            bottom = Math.max(fromCoords.bottom, toCoords.bottom, bottom);\n            if (dir == Direction.LTR)\n                horizontal.push(ltr && fromOpen ? leftSide : fromCoords.left, ltr && toOpen ? rightSide : toCoords.right);\n            else\n                horizontal.push(!ltr && toOpen ? leftSide : toCoords.left, !ltr && fromOpen ? rightSide : fromCoords.right);\n        }\n        let start = from !== null && from !== void 0 ? from : line.from, end = to !== null && to !== void 0 ? to : line.to;\n        // Split the range by visible range and document line\n        for (let r of view.visibleRanges)\n            if (r.to > start && r.from < end) {\n                for (let pos = Math.max(r.from, start), endPos = Math.min(r.to, end);;) {\n                    let docLine = view.state.doc.lineAt(pos);\n                    for (let span of view.bidiSpans(docLine)) {\n                        let spanFrom = span.from + docLine.from, spanTo = span.to + docLine.from;\n                        if (spanFrom >= endPos)\n                            break;\n                        if (spanTo > pos)\n                            addSpan(Math.max(spanFrom, pos), from == null && spanFrom <= start, Math.min(spanTo, endPos), to == null && spanTo >= end, span.dir);\n                    }\n                    pos = docLine.to + 1;\n                    if (pos >= endPos)\n                        break;\n                }\n            }\n        if (horizontal.length == 0)\n            addSpan(start, from == null, end, to == null, view.textDirection);\n        return { top, bottom, horizontal };\n    }\n    function drawForWidget(block, top) {\n        let y = contentRect.top + (top ? block.top : block.bottom);\n        return { top: y, bottom: y, horizontal: [] };\n    }\n}\nfunction sameMarker(a, b) {\n    return a.constructor == b.constructor && a.eq(b);\n}\nclass LayerView {\n    constructor(view, layer) {\n        this.view = view;\n        this.layer = layer;\n        this.drawn = [];\n        this.scaleX = 1;\n        this.scaleY = 1;\n        this.measureReq = { read: this.measure.bind(this), write: this.draw.bind(this) };\n        this.dom = view.scrollDOM.appendChild(document.createElement(\"div\"));\n        this.dom.classList.add(\"cm-layer\");\n        if (layer.above)\n            this.dom.classList.add(\"cm-layer-above\");\n        if (layer.class)\n            this.dom.classList.add(layer.class);\n        this.scale();\n        this.dom.setAttribute(\"aria-hidden\", \"true\");\n        this.setOrder(view.state);\n        view.requestMeasure(this.measureReq);\n        if (layer.mount)\n            layer.mount(this.dom, view);\n    }\n    update(update) {\n        if (update.startState.facet(layerOrder) != update.state.facet(layerOrder))\n            this.setOrder(update.state);\n        if (this.layer.update(update, this.dom) || update.geometryChanged) {\n            this.scale();\n            update.view.requestMeasure(this.measureReq);\n        }\n    }\n    docViewUpdate(view) {\n        if (this.layer.updateOnDocViewUpdate !== false)\n            view.requestMeasure(this.measureReq);\n    }\n    setOrder(state) {\n        let pos = 0, order = state.facet(layerOrder);\n        while (pos < order.length && order[pos] != this.layer)\n            pos++;\n        this.dom.style.zIndex = String((this.layer.above ? 150 : -1) - pos);\n    }\n    measure() {\n        return this.layer.markers(this.view);\n    }\n    scale() {\n        let { scaleX, scaleY } = this.view;\n        if (scaleX != this.scaleX || scaleY != this.scaleY) {\n            this.scaleX = scaleX;\n            this.scaleY = scaleY;\n            this.dom.style.transform = `scale(${1 / scaleX}, ${1 / scaleY})`;\n        }\n    }\n    draw(markers) {\n        if (markers.length != this.drawn.length || markers.some((p, i) => !sameMarker(p, this.drawn[i]))) {\n            let old = this.dom.firstChild, oldI = 0;\n            for (let marker of markers) {\n                if (marker.update && old && marker.constructor && this.drawn[oldI].constructor &&\n                    marker.update(old, this.drawn[oldI])) {\n                    old = old.nextSibling;\n                    oldI++;\n                }\n                else {\n                    this.dom.insertBefore(marker.draw(), old);\n                }\n            }\n            while (old) {\n                let next = old.nextSibling;\n                old.remove();\n                old = next;\n            }\n            this.drawn = markers;\n        }\n    }\n    destroy() {\n        if (this.layer.destroy)\n            this.layer.destroy(this.dom, this.view);\n        this.dom.remove();\n    }\n}\nconst layerOrder = /*@__PURE__*/Facet.define();\n/**\nDefine a layer.\n*/\nfunction layer(config) {\n    return [\n        ViewPlugin.define(v => new LayerView(v, config)),\n        layerOrder.of(config)\n    ];\n}\n\nconst selectionConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            cursorBlinkRate: 1200,\n            drawRangeCursor: true\n        }, {\n            cursorBlinkRate: (a, b) => Math.min(a, b),\n            drawRangeCursor: (a, b) => a || b\n        });\n    }\n});\n/**\nReturns an extension that hides the browser's native selection and\ncursor, replacing the selection with a background behind the text\n(with the `cm-selectionBackground` class), and the\ncursors with elements overlaid over the code (using\n`cm-cursor-primary` and `cm-cursor-secondary`).\n\nThis allows the editor to display secondary selection ranges, and\ntends to produce a type of selection more in line with that users\nexpect in a text editor (the native selection styling will often\nleave gaps between lines and won't fill the horizontal space after\na line when the selection continues past it).\n\nIt does have a performance cost, in that it requires an extra DOM\nlayout cycle for many updates (the selection is drawn based on DOM\nlayout information that's only available after laying out the\ncontent).\n*/\nfunction drawSelection(config = {}) {\n    return [\n        selectionConfig.of(config),\n        cursorLayer,\n        selectionLayer,\n        hideNativeSelection,\n        nativeSelectionHidden.of(true)\n    ];\n}\n/**\nRetrieve the [`drawSelection`](https://codemirror.net/6/docs/ref/#view.drawSelection) configuration\nfor this state. (Note that this will return a set of defaults even\nif `drawSelection` isn't enabled.)\n*/\nfunction getDrawSelectionConfig(state) {\n    return state.facet(selectionConfig);\n}\nfunction configChanged(update) {\n    return update.startState.facet(selectionConfig) != update.state.facet(selectionConfig);\n}\nconst cursorLayer = /*@__PURE__*/layer({\n    above: true,\n    markers(view) {\n        let { state } = view, conf = state.facet(selectionConfig);\n        let cursors = [];\n        for (let r of state.selection.ranges) {\n            let prim = r == state.selection.main;\n            if (r.empty || conf.drawRangeCursor) {\n                let className = prim ? \"cm-cursor cm-cursor-primary\" : \"cm-cursor cm-cursor-secondary\";\n                let cursor = r.empty ? r : EditorSelection.cursor(r.head, r.head > r.anchor ? -1 : 1);\n                for (let piece of RectangleMarker.forRange(view, className, cursor))\n                    cursors.push(piece);\n            }\n        }\n        return cursors;\n    },\n    update(update, dom) {\n        if (update.transactions.some(tr => tr.selection))\n            dom.style.animationName = dom.style.animationName == \"cm-blink\" ? \"cm-blink2\" : \"cm-blink\";\n        let confChange = configChanged(update);\n        if (confChange)\n            setBlinkRate(update.state, dom);\n        return update.docChanged || update.selectionSet || confChange;\n    },\n    mount(dom, view) {\n        setBlinkRate(view.state, dom);\n    },\n    class: \"cm-cursorLayer\"\n});\nfunction setBlinkRate(state, dom) {\n    dom.style.animationDuration = state.facet(selectionConfig).cursorBlinkRate + \"ms\";\n}\nconst selectionLayer = /*@__PURE__*/layer({\n    above: false,\n    markers(view) {\n        return view.state.selection.ranges.map(r => r.empty ? [] : RectangleMarker.forRange(view, \"cm-selectionBackground\", r))\n            .reduce((a, b) => a.concat(b));\n    },\n    update(update, dom) {\n        return update.docChanged || update.selectionSet || update.viewportChanged || configChanged(update);\n    },\n    class: \"cm-selectionLayer\"\n});\nconst hideNativeSelection = /*@__PURE__*/Prec.highest(/*@__PURE__*/EditorView.theme({\n    \".cm-line\": {\n        \"& ::selection, &::selection\": { backgroundColor: \"transparent !important\" },\n        caretColor: \"transparent !important\"\n    },\n    \".cm-content\": {\n        caretColor: \"transparent !important\",\n        \"& :focus\": {\n            caretColor: \"initial !important\",\n            \"&::selection, & ::selection\": {\n                backgroundColor: \"Highlight !important\"\n            }\n        }\n    }\n}));\n\nconst setDropCursorPos = /*@__PURE__*/StateEffect.define({\n    map(pos, mapping) { return pos == null ? null : mapping.mapPos(pos); }\n});\nconst dropCursorPos = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(pos, tr) {\n        if (pos != null)\n            pos = tr.changes.mapPos(pos);\n        return tr.effects.reduce((pos, e) => e.is(setDropCursorPos) ? e.value : pos, pos);\n    }\n});\nconst drawDropCursor = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.cursor = null;\n        this.measureReq = { read: this.readPos.bind(this), write: this.drawCursor.bind(this) };\n    }\n    update(update) {\n        var _a;\n        let cursorPos = update.state.field(dropCursorPos);\n        if (cursorPos == null) {\n            if (this.cursor != null) {\n                (_a = this.cursor) === null || _a === void 0 ? void 0 : _a.remove();\n                this.cursor = null;\n            }\n        }\n        else {\n            if (!this.cursor) {\n                this.cursor = this.view.scrollDOM.appendChild(document.createElement(\"div\"));\n                this.cursor.className = \"cm-dropCursor\";\n            }\n            if (update.startState.field(dropCursorPos) != cursorPos || update.docChanged || update.geometryChanged)\n                this.view.requestMeasure(this.measureReq);\n        }\n    }\n    readPos() {\n        let { view } = this;\n        let pos = view.state.field(dropCursorPos);\n        let rect = pos != null && view.coordsAtPos(pos);\n        if (!rect)\n            return null;\n        let outer = view.scrollDOM.getBoundingClientRect();\n        return {\n            left: rect.left - outer.left + view.scrollDOM.scrollLeft * view.scaleX,\n            top: rect.top - outer.top + view.scrollDOM.scrollTop * view.scaleY,\n            height: rect.bottom - rect.top\n        };\n    }\n    drawCursor(pos) {\n        if (this.cursor) {\n            let { scaleX, scaleY } = this.view;\n            if (pos) {\n                this.cursor.style.left = pos.left / scaleX + \"px\";\n                this.cursor.style.top = pos.top / scaleY + \"px\";\n                this.cursor.style.height = pos.height / scaleY + \"px\";\n            }\n            else {\n                this.cursor.style.left = \"-100000px\";\n            }\n        }\n    }\n    destroy() {\n        if (this.cursor)\n            this.cursor.remove();\n    }\n    setDropPos(pos) {\n        if (this.view.state.field(dropCursorPos) != pos)\n            this.view.dispatch({ effects: setDropCursorPos.of(pos) });\n    }\n}, {\n    eventObservers: {\n        dragover(event) {\n            this.setDropPos(this.view.posAtCoords({ x: event.clientX, y: event.clientY }));\n        },\n        dragleave(event) {\n            if (event.target == this.view.contentDOM || !this.view.contentDOM.contains(event.relatedTarget))\n                this.setDropPos(null);\n        },\n        dragend() {\n            this.setDropPos(null);\n        },\n        drop() {\n            this.setDropPos(null);\n        }\n    }\n});\n/**\nDraws a cursor at the current drop position when something is\ndragged over the editor.\n*/\nfunction dropCursor() {\n    return [dropCursorPos, drawDropCursor];\n}\n\nfunction iterMatches(doc, re, from, to, f) {\n    re.lastIndex = 0;\n    for (let cursor = doc.iterRange(from, to), pos = from, m; !cursor.next().done; pos += cursor.value.length) {\n        if (!cursor.lineBreak)\n            while (m = re.exec(cursor.value))\n                f(pos + m.index, m);\n    }\n}\nfunction matchRanges(view, maxLength) {\n    let visible = view.visibleRanges;\n    if (visible.length == 1 && visible[0].from == view.viewport.from &&\n        visible[0].to == view.viewport.to)\n        return visible;\n    let result = [];\n    for (let { from, to } of visible) {\n        from = Math.max(view.state.doc.lineAt(from).from, from - maxLength);\n        to = Math.min(view.state.doc.lineAt(to).to, to + maxLength);\n        if (result.length && result[result.length - 1].to >= from)\n            result[result.length - 1].to = to;\n        else\n            result.push({ from, to });\n    }\n    return result;\n}\n/**\nHelper class used to make it easier to maintain decorations on\nvisible code that matches a given regular expression. To be used\nin a [view plugin](https://codemirror.net/6/docs/ref/#view.ViewPlugin). Instances of this object\nrepresent a matching configuration.\n*/\nclass MatchDecorator {\n    /**\n    Create a decorator.\n    */\n    constructor(config) {\n        const { regexp, decoration, decorate, boundary, maxLength = 1000 } = config;\n        if (!regexp.global)\n            throw new RangeError(\"The regular expression given to MatchDecorator should have its 'g' flag set\");\n        this.regexp = regexp;\n        if (decorate) {\n            this.addMatch = (match, view, from, add) => decorate(add, from, from + match[0].length, match, view);\n        }\n        else if (typeof decoration == \"function\") {\n            this.addMatch = (match, view, from, add) => {\n                let deco = decoration(match, view, from);\n                if (deco)\n                    add(from, from + match[0].length, deco);\n            };\n        }\n        else if (decoration) {\n            this.addMatch = (match, _view, from, add) => add(from, from + match[0].length, decoration);\n        }\n        else {\n            throw new RangeError(\"Either 'decorate' or 'decoration' should be provided to MatchDecorator\");\n        }\n        this.boundary = boundary;\n        this.maxLength = maxLength;\n    }\n    /**\n    Compute the full set of decorations for matches in the given\n    view's viewport. You'll want to call this when initializing your\n    plugin.\n    */\n    createDeco(view) {\n        let build = new RangeSetBuilder(), add = build.add.bind(build);\n        for (let { from, to } of matchRanges(view, this.maxLength))\n            iterMatches(view.state.doc, this.regexp, from, to, (from, m) => this.addMatch(m, view, from, add));\n        return build.finish();\n    }\n    /**\n    Update a set of decorations for a view update. `deco` _must_ be\n    the set of decorations produced by _this_ `MatchDecorator` for\n    the view state before the update.\n    */\n    updateDeco(update, deco) {\n        let changeFrom = 1e9, changeTo = -1;\n        if (update.docChanged)\n            update.changes.iterChanges((_f, _t, from, to) => {\n                if (to >= update.view.viewport.from && from <= update.view.viewport.to) {\n                    changeFrom = Math.min(from, changeFrom);\n                    changeTo = Math.max(to, changeTo);\n                }\n            });\n        if (update.viewportMoved || changeTo - changeFrom > 1000)\n            return this.createDeco(update.view);\n        if (changeTo > -1)\n            return this.updateRange(update.view, deco.map(update.changes), changeFrom, changeTo);\n        return deco;\n    }\n    updateRange(view, deco, updateFrom, updateTo) {\n        for (let r of view.visibleRanges) {\n            let from = Math.max(r.from, updateFrom), to = Math.min(r.to, updateTo);\n            if (to >= from) {\n                let fromLine = view.state.doc.lineAt(from), toLine = fromLine.to < to ? view.state.doc.lineAt(to) : fromLine;\n                let start = Math.max(r.from, fromLine.from), end = Math.min(r.to, toLine.to);\n                if (this.boundary) {\n                    for (; from > fromLine.from; from--)\n                        if (this.boundary.test(fromLine.text[from - 1 - fromLine.from])) {\n                            start = from;\n                            break;\n                        }\n                    for (; to < toLine.to; to++)\n                        if (this.boundary.test(toLine.text[to - toLine.from])) {\n                            end = to;\n                            break;\n                        }\n                }\n                let ranges = [], m;\n                let add = (from, to, deco) => ranges.push(deco.range(from, to));\n                if (fromLine == toLine) {\n                    this.regexp.lastIndex = start - fromLine.from;\n                    while ((m = this.regexp.exec(fromLine.text)) && m.index < end - fromLine.from)\n                        this.addMatch(m, view, m.index + fromLine.from, add);\n                }\n                else {\n                    iterMatches(view.state.doc, this.regexp, start, end, (from, m) => this.addMatch(m, view, from, add));\n                }\n                deco = deco.update({ filterFrom: start, filterTo: end, filter: (from, to) => from < start || to > end, add: ranges });\n            }\n        }\n        return deco;\n    }\n}\n\nconst UnicodeRegexpSupport = /x/.unicode != null ? \"gu\" : \"g\";\nconst Specials = /*@__PURE__*/new RegExp(\"[\\u0000-\\u0008\\u000a-\\u001f\\u007f-\\u009f\\u00ad\\u061c\\u200b\\u200e\\u200f\\u2028\\u2029\\u202d\\u202e\\u2066\\u2067\\u2069\\ufeff\\ufff9-\\ufffc]\", UnicodeRegexpSupport);\nconst Names = {\n    0: \"null\",\n    7: \"bell\",\n    8: \"backspace\",\n    10: \"newline\",\n    11: \"vertical tab\",\n    13: \"carriage return\",\n    27: \"escape\",\n    8203: \"zero width space\",\n    8204: \"zero width non-joiner\",\n    8205: \"zero width joiner\",\n    8206: \"left-to-right mark\",\n    8207: \"right-to-left mark\",\n    8232: \"line separator\",\n    8237: \"left-to-right override\",\n    8238: \"right-to-left override\",\n    8294: \"left-to-right isolate\",\n    8295: \"right-to-left isolate\",\n    8297: \"pop directional isolate\",\n    8233: \"paragraph separator\",\n    65279: \"zero width no-break space\",\n    65532: \"object replacement\"\n};\nlet _supportsTabSize = null;\nfunction supportsTabSize() {\n    var _a;\n    if (_supportsTabSize == null && typeof document != \"undefined\" && document.body) {\n        let styles = document.body.style;\n        _supportsTabSize = ((_a = styles.tabSize) !== null && _a !== void 0 ? _a : styles.MozTabSize) != null;\n    }\n    return _supportsTabSize || false;\n}\nconst specialCharConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        let config = combineConfig(configs, {\n            render: null,\n            specialChars: Specials,\n            addSpecialChars: null\n        });\n        if (config.replaceTabs = !supportsTabSize())\n            config.specialChars = new RegExp(\"\\t|\" + config.specialChars.source, UnicodeRegexpSupport);\n        if (config.addSpecialChars)\n            config.specialChars = new RegExp(config.specialChars.source + \"|\" + config.addSpecialChars.source, UnicodeRegexpSupport);\n        return config;\n    }\n});\n/**\nReturns an extension that installs highlighting of special\ncharacters.\n*/\nfunction highlightSpecialChars(\n/**\nConfiguration options.\n*/\nconfig = {}) {\n    return [specialCharConfig.of(config), specialCharPlugin()];\n}\nlet _plugin = null;\nfunction specialCharPlugin() {\n    return _plugin || (_plugin = ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.decorations = Decoration.none;\n            this.decorationCache = Object.create(null);\n            this.decorator = this.makeDecorator(view.state.facet(specialCharConfig));\n            this.decorations = this.decorator.createDeco(view);\n        }\n        makeDecorator(conf) {\n            return new MatchDecorator({\n                regexp: conf.specialChars,\n                decoration: (m, view, pos) => {\n                    let { doc } = view.state;\n                    let code = codePointAt(m[0], 0);\n                    if (code == 9) {\n                        let line = doc.lineAt(pos);\n                        let size = view.state.tabSize, col = countColumn(line.text, size, pos - line.from);\n                        return Decoration.replace({\n                            widget: new TabWidget((size - (col % size)) * this.view.defaultCharacterWidth / this.view.scaleX)\n                        });\n                    }\n                    return this.decorationCache[code] ||\n                        (this.decorationCache[code] = Decoration.replace({ widget: new SpecialCharWidget(conf, code) }));\n                },\n                boundary: conf.replaceTabs ? undefined : /[^]/\n            });\n        }\n        update(update) {\n            let conf = update.state.facet(specialCharConfig);\n            if (update.startState.facet(specialCharConfig) != conf) {\n                this.decorator = this.makeDecorator(conf);\n                this.decorations = this.decorator.createDeco(update.view);\n            }\n            else {\n                this.decorations = this.decorator.updateDeco(update, this.decorations);\n            }\n        }\n    }, {\n        decorations: v => v.decorations\n    }));\n}\nconst DefaultPlaceholder = \"\\u2022\";\n// Assigns placeholder characters from the Control Pictures block to\n// ASCII control characters\nfunction placeholder$1(code) {\n    if (code >= 32)\n        return DefaultPlaceholder;\n    if (code == 10)\n        return \"\\u2424\";\n    return String.fromCharCode(9216 + code);\n}\nclass SpecialCharWidget extends WidgetType {\n    constructor(options, code) {\n        super();\n        this.options = options;\n        this.code = code;\n    }\n    eq(other) { return other.code == this.code; }\n    toDOM(view) {\n        let ph = placeholder$1(this.code);\n        let desc = view.state.phrase(\"Control character\") + \" \" + (Names[this.code] || \"0x\" + this.code.toString(16));\n        let custom = this.options.render && this.options.render(this.code, desc, ph);\n        if (custom)\n            return custom;\n        let span = document.createElement(\"span\");\n        span.textContent = ph;\n        span.title = desc;\n        span.setAttribute(\"aria-label\", desc);\n        span.className = \"cm-specialChar\";\n        return span;\n    }\n    ignoreEvent() { return false; }\n}\nclass TabWidget extends WidgetType {\n    constructor(width) {\n        super();\n        this.width = width;\n    }\n    eq(other) { return other.width == this.width; }\n    toDOM() {\n        let span = document.createElement(\"span\");\n        span.textContent = \"\\t\";\n        span.className = \"cm-tab\";\n        span.style.width = this.width + \"px\";\n        return span;\n    }\n    ignoreEvent() { return false; }\n}\n\nconst plugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor() {\n        this.height = 1000;\n        this.attrs = { style: \"padding-bottom: 1000px\" };\n    }\n    update(update) {\n        let { view } = update;\n        let height = view.viewState.editorHeight -\n            view.defaultLineHeight - view.documentPadding.top - 0.5;\n        if (height >= 0 && height != this.height) {\n            this.height = height;\n            this.attrs = { style: `padding-bottom: ${height}px` };\n        }\n    }\n});\n/**\nReturns an extension that makes sure the content has a bottom\nmargin equivalent to the height of the editor, minus one line\nheight, so that every line in the document can be scrolled to the\ntop of the editor.\n\nThis is only meaningful when the editor is scrollable, and should\nnot be enabled in editors that take the size of their content.\n*/\nfunction scrollPastEnd() {\n    return [plugin, contentAttributes.of(view => { var _a; return ((_a = view.plugin(plugin)) === null || _a === void 0 ? void 0 : _a.attrs) || null; })];\n}\n\n/**\nMark lines that have a cursor on them with the `\"cm-activeLine\"`\nDOM class.\n*/\nfunction highlightActiveLine() {\n    return activeLineHighlighter;\n}\nconst lineDeco = /*@__PURE__*/Decoration.line({ class: \"cm-activeLine\" });\nconst activeLineHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.decorations = this.getDeco(view);\n    }\n    update(update) {\n        if (update.docChanged || update.selectionSet)\n            this.decorations = this.getDeco(update.view);\n    }\n    getDeco(view) {\n        let lastLineStart = -1, deco = [];\n        for (let r of view.state.selection.ranges) {\n            let line = view.lineBlockAt(r.head);\n            if (line.from > lastLineStart) {\n                deco.push(lineDeco.range(line.from));\n                lastLineStart = line.from;\n            }\n        }\n        return Decoration.set(deco);\n    }\n}, {\n    decorations: v => v.decorations\n});\n\nclass Placeholder extends WidgetType {\n    constructor(content) {\n        super();\n        this.content = content;\n    }\n    toDOM(view) {\n        let wrap = document.createElement(\"span\");\n        wrap.className = \"cm-placeholder\";\n        wrap.style.pointerEvents = \"none\";\n        wrap.appendChild(typeof this.content == \"string\" ? document.createTextNode(this.content) :\n            typeof this.content == \"function\" ? this.content(view) :\n                this.content.cloneNode(true));\n        wrap.setAttribute(\"aria-hidden\", \"true\");\n        return wrap;\n    }\n    coordsAt(dom) {\n        let rects = dom.firstChild ? clientRectsFor(dom.firstChild) : [];\n        if (!rects.length)\n            return null;\n        let style = window.getComputedStyle(dom.parentNode);\n        let rect = flattenRect(rects[0], style.direction != \"rtl\");\n        let lineHeight = parseInt(style.lineHeight);\n        if (rect.bottom - rect.top > lineHeight * 1.5)\n            return { left: rect.left, right: rect.right, top: rect.top, bottom: rect.top + lineHeight };\n        return rect;\n    }\n    ignoreEvent() { return false; }\n}\n/**\nExtension that enables a placeholder—a piece of example content\nto show when the editor is empty.\n*/\nfunction placeholder(content) {\n    let plugin = ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.placeholder = content\n                ? Decoration.set([Decoration.widget({ widget: new Placeholder(content), side: 1 }).range(0)])\n                : Decoration.none;\n        }\n        get decorations() { return this.view.state.doc.length ? Decoration.none : this.placeholder; }\n    }, { decorations: v => v.decorations });\n    return typeof content == \"string\" ? [\n        plugin, EditorView.contentAttributes.of({ \"aria-placeholder\": content })\n    ] : plugin;\n}\n\n// Don't compute precise column positions for line offsets above this\n// (since it could get expensive). Assume offset==column for them.\nconst MaxOff = 2000;\nfunction rectangleFor(state, a, b) {\n    let startLine = Math.min(a.line, b.line), endLine = Math.max(a.line, b.line);\n    let ranges = [];\n    if (a.off > MaxOff || b.off > MaxOff || a.col < 0 || b.col < 0) {\n        let startOff = Math.min(a.off, b.off), endOff = Math.max(a.off, b.off);\n        for (let i = startLine; i <= endLine; i++) {\n            let line = state.doc.line(i);\n            if (line.length <= endOff)\n                ranges.push(EditorSelection.range(line.from + startOff, line.to + endOff));\n        }\n    }\n    else {\n        let startCol = Math.min(a.col, b.col), endCol = Math.max(a.col, b.col);\n        for (let i = startLine; i <= endLine; i++) {\n            let line = state.doc.line(i);\n            let start = findColumn(line.text, startCol, state.tabSize, true);\n            if (start < 0) {\n                ranges.push(EditorSelection.cursor(line.to));\n            }\n            else {\n                let end = findColumn(line.text, endCol, state.tabSize);\n                ranges.push(EditorSelection.range(line.from + start, line.from + end));\n            }\n        }\n    }\n    return ranges;\n}\nfunction absoluteColumn(view, x) {\n    let ref = view.coordsAtPos(view.viewport.from);\n    return ref ? Math.round(Math.abs((ref.left - x) / view.defaultCharacterWidth)) : -1;\n}\nfunction getPos(view, event) {\n    let offset = view.posAtCoords({ x: event.clientX, y: event.clientY }, false);\n    let line = view.state.doc.lineAt(offset), off = offset - line.from;\n    let col = off > MaxOff ? -1\n        : off == line.length ? absoluteColumn(view, event.clientX)\n            : countColumn(line.text, view.state.tabSize, offset - line.from);\n    return { line: line.number, col, off };\n}\nfunction rectangleSelectionStyle(view, event) {\n    let start = getPos(view, event), startSel = view.state.selection;\n    if (!start)\n        return null;\n    return {\n        update(update) {\n            if (update.docChanged) {\n                let newStart = update.changes.mapPos(update.startState.doc.line(start.line).from);\n                let newLine = update.state.doc.lineAt(newStart);\n                start = { line: newLine.number, col: start.col, off: Math.min(start.off, newLine.length) };\n                startSel = startSel.map(update.changes);\n            }\n        },\n        get(event, _extend, multiple) {\n            let cur = getPos(view, event);\n            if (!cur)\n                return startSel;\n            let ranges = rectangleFor(view.state, start, cur);\n            if (!ranges.length)\n                return startSel;\n            if (multiple)\n                return EditorSelection.create(ranges.concat(startSel.ranges));\n            else\n                return EditorSelection.create(ranges);\n        }\n    };\n}\n/**\nCreate an extension that enables rectangular selections. By\ndefault, it will react to left mouse drag with the Alt key held\ndown. When such a selection occurs, the text within the rectangle\nthat was dragged over will be selected, as one selection\n[range](https://codemirror.net/6/docs/ref/#state.SelectionRange) per line.\n*/\nfunction rectangularSelection(options) {\n    let filter = (options === null || options === void 0 ? void 0 : options.eventFilter) || (e => e.altKey && e.button == 0);\n    return EditorView.mouseSelectionStyle.of((view, event) => filter(event) ? rectangleSelectionStyle(view, event) : null);\n}\nconst keys = {\n    Alt: [18, e => !!e.altKey],\n    Control: [17, e => !!e.ctrlKey],\n    Shift: [16, e => !!e.shiftKey],\n    Meta: [91, e => !!e.metaKey]\n};\nconst showCrosshair = { style: \"cursor: crosshair\" };\n/**\nReturns an extension that turns the pointer cursor into a\ncrosshair when a given modifier key, defaulting to Alt, is held\ndown. Can serve as a visual hint that rectangular selection is\ngoing to happen when paired with\n[`rectangularSelection`](https://codemirror.net/6/docs/ref/#view.rectangularSelection).\n*/\nfunction crosshairCursor(options = {}) {\n    let [code, getter] = keys[options.key || \"Alt\"];\n    let plugin = ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.isDown = false;\n        }\n        set(isDown) {\n            if (this.isDown != isDown) {\n                this.isDown = isDown;\n                this.view.update([]);\n            }\n        }\n    }, {\n        eventObservers: {\n            keydown(e) {\n                this.set(e.keyCode == code || getter(e));\n            },\n            keyup(e) {\n                if (e.keyCode == code || !getter(e))\n                    this.set(false);\n            },\n            mousemove(e) {\n                this.set(getter(e));\n            }\n        }\n    });\n    return [\n        plugin,\n        EditorView.contentAttributes.of(view => { var _a; return ((_a = view.plugin(plugin)) === null || _a === void 0 ? void 0 : _a.isDown) ? showCrosshair : null; })\n    ];\n}\n\nconst Outside = \"-10000px\";\nclass TooltipViewManager {\n    constructor(view, facet, createTooltipView, removeTooltipView) {\n        this.facet = facet;\n        this.createTooltipView = createTooltipView;\n        this.removeTooltipView = removeTooltipView;\n        this.input = view.state.facet(facet);\n        this.tooltips = this.input.filter(t => t);\n        let prev = null;\n        this.tooltipViews = this.tooltips.map(t => prev = createTooltipView(t, prev));\n    }\n    update(update, above) {\n        var _a;\n        let input = update.state.facet(this.facet);\n        let tooltips = input.filter(x => x);\n        if (input === this.input) {\n            for (let t of this.tooltipViews)\n                if (t.update)\n                    t.update(update);\n            return false;\n        }\n        let tooltipViews = [], newAbove = above ? [] : null;\n        for (let i = 0; i < tooltips.length; i++) {\n            let tip = tooltips[i], known = -1;\n            if (!tip)\n                continue;\n            for (let i = 0; i < this.tooltips.length; i++) {\n                let other = this.tooltips[i];\n                if (other && other.create == tip.create)\n                    known = i;\n            }\n            if (known < 0) {\n                tooltipViews[i] = this.createTooltipView(tip, i ? tooltipViews[i - 1] : null);\n                if (newAbove)\n                    newAbove[i] = !!tip.above;\n            }\n            else {\n                let tooltipView = tooltipViews[i] = this.tooltipViews[known];\n                if (newAbove)\n                    newAbove[i] = above[known];\n                if (tooltipView.update)\n                    tooltipView.update(update);\n            }\n        }\n        for (let t of this.tooltipViews)\n            if (tooltipViews.indexOf(t) < 0) {\n                this.removeTooltipView(t);\n                (_a = t.destroy) === null || _a === void 0 ? void 0 : _a.call(t);\n            }\n        if (above) {\n            newAbove.forEach((val, i) => above[i] = val);\n            above.length = newAbove.length;\n        }\n        this.input = input;\n        this.tooltips = tooltips;\n        this.tooltipViews = tooltipViews;\n        return true;\n    }\n}\n/**\nCreates an extension that configures tooltip behavior.\n*/\nfunction tooltips(config = {}) {\n    return tooltipConfig.of(config);\n}\nfunction windowSpace(view) {\n    let docElt = view.dom.ownerDocument.documentElement;\n    return { top: 0, left: 0, bottom: docElt.clientHeight, right: docElt.clientWidth };\n}\nconst tooltipConfig = /*@__PURE__*/Facet.define({\n    combine: values => {\n        var _a, _b, _c;\n        return ({\n            position: browser.ios ? \"absolute\" : ((_a = values.find(conf => conf.position)) === null || _a === void 0 ? void 0 : _a.position) || \"fixed\",\n            parent: ((_b = values.find(conf => conf.parent)) === null || _b === void 0 ? void 0 : _b.parent) || null,\n            tooltipSpace: ((_c = values.find(conf => conf.tooltipSpace)) === null || _c === void 0 ? void 0 : _c.tooltipSpace) || windowSpace,\n        });\n    }\n});\nconst knownHeight = /*@__PURE__*/new WeakMap();\nconst tooltipPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.above = [];\n        this.inView = true;\n        this.madeAbsolute = false;\n        this.lastTransaction = 0;\n        this.measureTimeout = -1;\n        let config = view.state.facet(tooltipConfig);\n        this.position = config.position;\n        this.parent = config.parent;\n        this.classes = view.themeClasses;\n        this.createContainer();\n        this.measureReq = { read: this.readMeasure.bind(this), write: this.writeMeasure.bind(this), key: this };\n        this.resizeObserver = typeof ResizeObserver == \"function\" ? new ResizeObserver(() => this.measureSoon()) : null;\n        this.manager = new TooltipViewManager(view, showTooltip, (t, p) => this.createTooltip(t, p), t => {\n            if (this.resizeObserver)\n                this.resizeObserver.unobserve(t.dom);\n            t.dom.remove();\n        });\n        this.above = this.manager.tooltips.map(t => !!t.above);\n        this.intersectionObserver = typeof IntersectionObserver == \"function\" ? new IntersectionObserver(entries => {\n            if (Date.now() > this.lastTransaction - 50 &&\n                entries.length > 0 && entries[entries.length - 1].intersectionRatio < 1)\n                this.measureSoon();\n        }, { threshold: [1] }) : null;\n        this.observeIntersection();\n        view.win.addEventListener(\"resize\", this.measureSoon = this.measureSoon.bind(this));\n        this.maybeMeasure();\n    }\n    createContainer() {\n        if (this.parent) {\n            this.container = document.createElement(\"div\");\n            this.container.style.position = \"relative\";\n            this.container.className = this.view.themeClasses;\n            this.parent.appendChild(this.container);\n        }\n        else {\n            this.container = this.view.dom;\n        }\n    }\n    observeIntersection() {\n        if (this.intersectionObserver) {\n            this.intersectionObserver.disconnect();\n            for (let tooltip of this.manager.tooltipViews)\n                this.intersectionObserver.observe(tooltip.dom);\n        }\n    }\n    measureSoon() {\n        if (this.measureTimeout < 0)\n            this.measureTimeout = setTimeout(() => {\n                this.measureTimeout = -1;\n                this.maybeMeasure();\n            }, 50);\n    }\n    update(update) {\n        if (update.transactions.length)\n            this.lastTransaction = Date.now();\n        let updated = this.manager.update(update, this.above);\n        if (updated)\n            this.observeIntersection();\n        let shouldMeasure = updated || update.geometryChanged;\n        let newConfig = update.state.facet(tooltipConfig);\n        if (newConfig.position != this.position && !this.madeAbsolute) {\n            this.position = newConfig.position;\n            for (let t of this.manager.tooltipViews)\n                t.dom.style.position = this.position;\n            shouldMeasure = true;\n        }\n        if (newConfig.parent != this.parent) {\n            if (this.parent)\n                this.container.remove();\n            this.parent = newConfig.parent;\n            this.createContainer();\n            for (let t of this.manager.tooltipViews)\n                this.container.appendChild(t.dom);\n            shouldMeasure = true;\n        }\n        else if (this.parent && this.view.themeClasses != this.classes) {\n            this.classes = this.container.className = this.view.themeClasses;\n        }\n        if (shouldMeasure)\n            this.maybeMeasure();\n    }\n    createTooltip(tooltip, prev) {\n        let tooltipView = tooltip.create(this.view);\n        let before = prev ? prev.dom : null;\n        tooltipView.dom.classList.add(\"cm-tooltip\");\n        if (tooltip.arrow && !tooltipView.dom.querySelector(\".cm-tooltip > .cm-tooltip-arrow\")) {\n            let arrow = document.createElement(\"div\");\n            arrow.className = \"cm-tooltip-arrow\";\n            tooltipView.dom.appendChild(arrow);\n        }\n        tooltipView.dom.style.position = this.position;\n        tooltipView.dom.style.top = Outside;\n        tooltipView.dom.style.left = \"0px\";\n        this.container.insertBefore(tooltipView.dom, before);\n        if (tooltipView.mount)\n            tooltipView.mount(this.view);\n        if (this.resizeObserver)\n            this.resizeObserver.observe(tooltipView.dom);\n        return tooltipView;\n    }\n    destroy() {\n        var _a, _b, _c;\n        this.view.win.removeEventListener(\"resize\", this.measureSoon);\n        for (let tooltipView of this.manager.tooltipViews) {\n            tooltipView.dom.remove();\n            (_a = tooltipView.destroy) === null || _a === void 0 ? void 0 : _a.call(tooltipView);\n        }\n        if (this.parent)\n            this.container.remove();\n        (_b = this.resizeObserver) === null || _b === void 0 ? void 0 : _b.disconnect();\n        (_c = this.intersectionObserver) === null || _c === void 0 ? void 0 : _c.disconnect();\n        clearTimeout(this.measureTimeout);\n    }\n    readMeasure() {\n        let scaleX = 1, scaleY = 1, makeAbsolute = false;\n        if (this.position == \"fixed\" && this.manager.tooltipViews.length) {\n            let { dom } = this.manager.tooltipViews[0];\n            if (browser.gecko) {\n                // Firefox sets the element's `offsetParent` to the\n                // transformed element when a transform interferes with fixed\n                // positioning.\n                makeAbsolute = dom.offsetParent != this.container.ownerDocument.body;\n            }\n            else if (dom.style.top == Outside && dom.style.left == \"0px\") {\n                // On other browsers, we have to awkwardly try and use other\n                // information to detect a transform.\n                let rect = dom.getBoundingClientRect();\n                makeAbsolute = Math.abs(rect.top + 10000) > 1 || Math.abs(rect.left) > 1;\n            }\n        }\n        if (makeAbsolute || this.position == \"absolute\") {\n            if (this.parent) {\n                let rect = this.parent.getBoundingClientRect();\n                if (rect.width && rect.height) {\n                    scaleX = rect.width / this.parent.offsetWidth;\n                    scaleY = rect.height / this.parent.offsetHeight;\n                }\n            }\n            else {\n                ({ scaleX, scaleY } = this.view.viewState);\n            }\n        }\n        let visible = this.view.scrollDOM.getBoundingClientRect(), margins = getScrollMargins(this.view);\n        return {\n            visible: {\n                left: visible.left + margins.left, top: visible.top + margins.top,\n                right: visible.right - margins.right, bottom: visible.bottom - margins.bottom\n            },\n            parent: this.parent ? this.container.getBoundingClientRect() : this.view.dom.getBoundingClientRect(),\n            pos: this.manager.tooltips.map((t, i) => {\n                let tv = this.manager.tooltipViews[i];\n                return tv.getCoords ? tv.getCoords(t.pos) : this.view.coordsAtPos(t.pos);\n            }),\n            size: this.manager.tooltipViews.map(({ dom }) => dom.getBoundingClientRect()),\n            space: this.view.state.facet(tooltipConfig).tooltipSpace(this.view),\n            scaleX, scaleY, makeAbsolute\n        };\n    }\n    writeMeasure(measured) {\n        var _a;\n        if (measured.makeAbsolute) {\n            this.madeAbsolute = true;\n            this.position = \"absolute\";\n            for (let t of this.manager.tooltipViews)\n                t.dom.style.position = \"absolute\";\n        }\n        let { visible, space, scaleX, scaleY } = measured;\n        let others = [];\n        for (let i = 0; i < this.manager.tooltips.length; i++) {\n            let tooltip = this.manager.tooltips[i], tView = this.manager.tooltipViews[i], { dom } = tView;\n            let pos = measured.pos[i], size = measured.size[i];\n            // Hide tooltips that are outside of the editor.\n            if (!pos || tooltip.clip !== false && (pos.bottom <= Math.max(visible.top, space.top) ||\n                pos.top >= Math.min(visible.bottom, space.bottom) ||\n                pos.right < Math.max(visible.left, space.left) - .1 ||\n                pos.left > Math.min(visible.right, space.right) + .1)) {\n                dom.style.top = Outside;\n                continue;\n            }\n            let arrow = tooltip.arrow ? tView.dom.querySelector(\".cm-tooltip-arrow\") : null;\n            let arrowHeight = arrow ? 7 /* Arrow.Size */ : 0;\n            let width = size.right - size.left, height = (_a = knownHeight.get(tView)) !== null && _a !== void 0 ? _a : size.bottom - size.top;\n            let offset = tView.offset || noOffset, ltr = this.view.textDirection == Direction.LTR;\n            let left = size.width > space.right - space.left\n                ? (ltr ? space.left : space.right - size.width)\n                : ltr ? Math.max(space.left, Math.min(pos.left - (arrow ? 14 /* Arrow.Offset */ : 0) + offset.x, space.right - width))\n                    : Math.min(Math.max(space.left, pos.left - width + (arrow ? 14 /* Arrow.Offset */ : 0) - offset.x), space.right - width);\n            let above = this.above[i];\n            if (!tooltip.strictSide && (above\n                ? pos.top - height - arrowHeight - offset.y < space.top\n                : pos.bottom + height + arrowHeight + offset.y > space.bottom) &&\n                above == (space.bottom - pos.bottom > pos.top - space.top))\n                above = this.above[i] = !above;\n            let spaceVert = (above ? pos.top - space.top : space.bottom - pos.bottom) - arrowHeight;\n            if (spaceVert < height && tView.resize !== false) {\n                if (spaceVert < this.view.defaultLineHeight) {\n                    dom.style.top = Outside;\n                    continue;\n                }\n                knownHeight.set(tView, height);\n                dom.style.height = (height = spaceVert) / scaleY + \"px\";\n            }\n            else if (dom.style.height) {\n                dom.style.height = \"\";\n            }\n            let top = above ? pos.top - height - arrowHeight - offset.y : pos.bottom + arrowHeight + offset.y;\n            let right = left + width;\n            if (tView.overlap !== true)\n                for (let r of others)\n                    if (r.left < right && r.right > left && r.top < top + height && r.bottom > top)\n                        top = above ? r.top - height - 2 - arrowHeight : r.bottom + arrowHeight + 2;\n            if (this.position == \"absolute\") {\n                dom.style.top = (top - measured.parent.top) / scaleY + \"px\";\n                setLeftStyle(dom, (left - measured.parent.left) / scaleX);\n            }\n            else {\n                dom.style.top = top / scaleY + \"px\";\n                setLeftStyle(dom, left / scaleX);\n            }\n            if (arrow) {\n                let arrowLeft = pos.left + (ltr ? offset.x : -offset.x) - (left + 14 /* Arrow.Offset */ - 7 /* Arrow.Size */);\n                arrow.style.left = arrowLeft / scaleX + \"px\";\n            }\n            if (tView.overlap !== true)\n                others.push({ left, top, right, bottom: top + height });\n            dom.classList.toggle(\"cm-tooltip-above\", above);\n            dom.classList.toggle(\"cm-tooltip-below\", !above);\n            if (tView.positioned)\n                tView.positioned(measured.space);\n        }\n    }\n    maybeMeasure() {\n        if (this.manager.tooltips.length) {\n            if (this.view.inView)\n                this.view.requestMeasure(this.measureReq);\n            if (this.inView != this.view.inView) {\n                this.inView = this.view.inView;\n                if (!this.inView)\n                    for (let tv of this.manager.tooltipViews)\n                        tv.dom.style.top = Outside;\n            }\n        }\n    }\n}, {\n    eventObservers: {\n        scroll() { this.maybeMeasure(); }\n    }\n});\nfunction setLeftStyle(elt, value) {\n    let current = parseInt(elt.style.left, 10);\n    if (isNaN(current) || Math.abs(value - current) > 1)\n        elt.style.left = value + \"px\";\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-tooltip\": {\n        zIndex: 500,\n        boxSizing: \"border-box\"\n    },\n    \"&light .cm-tooltip\": {\n        border: \"1px solid #bbb\",\n        backgroundColor: \"#f5f5f5\"\n    },\n    \"&light .cm-tooltip-section:not(:first-child)\": {\n        borderTop: \"1px solid #bbb\",\n    },\n    \"&dark .cm-tooltip\": {\n        backgroundColor: \"#333338\",\n        color: \"white\"\n    },\n    \".cm-tooltip-arrow\": {\n        height: `${7 /* Arrow.Size */}px`,\n        width: `${7 /* Arrow.Size */ * 2}px`,\n        position: \"absolute\",\n        zIndex: -1,\n        overflow: \"hidden\",\n        \"&:before, &:after\": {\n            content: \"''\",\n            position: \"absolute\",\n            width: 0,\n            height: 0,\n            borderLeft: `${7 /* Arrow.Size */}px solid transparent`,\n            borderRight: `${7 /* Arrow.Size */}px solid transparent`,\n        },\n        \".cm-tooltip-above &\": {\n            bottom: `-${7 /* Arrow.Size */}px`,\n            \"&:before\": {\n                borderTop: `${7 /* Arrow.Size */}px solid #bbb`,\n            },\n            \"&:after\": {\n                borderTop: `${7 /* Arrow.Size */}px solid #f5f5f5`,\n                bottom: \"1px\"\n            }\n        },\n        \".cm-tooltip-below &\": {\n            top: `-${7 /* Arrow.Size */}px`,\n            \"&:before\": {\n                borderBottom: `${7 /* Arrow.Size */}px solid #bbb`,\n            },\n            \"&:after\": {\n                borderBottom: `${7 /* Arrow.Size */}px solid #f5f5f5`,\n                top: \"1px\"\n            }\n        },\n    },\n    \"&dark .cm-tooltip .cm-tooltip-arrow\": {\n        \"&:before\": {\n            borderTopColor: \"#333338\",\n            borderBottomColor: \"#333338\"\n        },\n        \"&:after\": {\n            borderTopColor: \"transparent\",\n            borderBottomColor: \"transparent\"\n        }\n    }\n});\nconst noOffset = { x: 0, y: 0 };\n/**\nFacet to which an extension can add a value to show a tooltip.\n*/\nconst showTooltip = /*@__PURE__*/Facet.define({\n    enables: [tooltipPlugin, baseTheme]\n});\nconst showHoverTooltip = /*@__PURE__*/Facet.define({\n    combine: inputs => inputs.reduce((a, i) => a.concat(i), [])\n});\nclass HoverTooltipHost {\n    // Needs to be static so that host tooltip instances always match\n    static create(view) {\n        return new HoverTooltipHost(view);\n    }\n    constructor(view) {\n        this.view = view;\n        this.mounted = false;\n        this.dom = document.createElement(\"div\");\n        this.dom.classList.add(\"cm-tooltip-hover\");\n        this.manager = new TooltipViewManager(view, showHoverTooltip, (t, p) => this.createHostedView(t, p), t => t.dom.remove());\n    }\n    createHostedView(tooltip, prev) {\n        let hostedView = tooltip.create(this.view);\n        hostedView.dom.classList.add(\"cm-tooltip-section\");\n        this.dom.insertBefore(hostedView.dom, prev ? prev.dom.nextSibling : this.dom.firstChild);\n        if (this.mounted && hostedView.mount)\n            hostedView.mount(this.view);\n        return hostedView;\n    }\n    mount(view) {\n        for (let hostedView of this.manager.tooltipViews) {\n            if (hostedView.mount)\n                hostedView.mount(view);\n        }\n        this.mounted = true;\n    }\n    positioned(space) {\n        for (let hostedView of this.manager.tooltipViews) {\n            if (hostedView.positioned)\n                hostedView.positioned(space);\n        }\n    }\n    update(update) {\n        this.manager.update(update);\n    }\n    destroy() {\n        var _a;\n        for (let t of this.manager.tooltipViews)\n            (_a = t.destroy) === null || _a === void 0 ? void 0 : _a.call(t);\n    }\n    passProp(name) {\n        let value = undefined;\n        for (let view of this.manager.tooltipViews) {\n            let given = view[name];\n            if (given !== undefined) {\n                if (value === undefined)\n                    value = given;\n                else if (value !== given)\n                    return undefined;\n            }\n        }\n        return value;\n    }\n    get offset() { return this.passProp(\"offset\"); }\n    get getCoords() { return this.passProp(\"getCoords\"); }\n    get overlap() { return this.passProp(\"overlap\"); }\n    get resize() { return this.passProp(\"resize\"); }\n}\nconst showHoverTooltipHost = /*@__PURE__*/showTooltip.compute([showHoverTooltip], state => {\n    let tooltips = state.facet(showHoverTooltip);\n    if (tooltips.length === 0)\n        return null;\n    return {\n        pos: Math.min(...tooltips.map(t => t.pos)),\n        end: Math.max(...tooltips.map(t => { var _a; return (_a = t.end) !== null && _a !== void 0 ? _a : t.pos; })),\n        create: HoverTooltipHost.create,\n        above: tooltips[0].above,\n        arrow: tooltips.some(t => t.arrow),\n    };\n});\nclass HoverPlugin {\n    constructor(view, source, field, setHover, hoverTime) {\n        this.view = view;\n        this.source = source;\n        this.field = field;\n        this.setHover = setHover;\n        this.hoverTime = hoverTime;\n        this.hoverTimeout = -1;\n        this.restartTimeout = -1;\n        this.pending = null;\n        this.lastMove = { x: 0, y: 0, target: view.dom, time: 0 };\n        this.checkHover = this.checkHover.bind(this);\n        view.dom.addEventListener(\"mouseleave\", this.mouseleave = this.mouseleave.bind(this));\n        view.dom.addEventListener(\"mousemove\", this.mousemove = this.mousemove.bind(this));\n    }\n    update() {\n        if (this.pending) {\n            this.pending = null;\n            clearTimeout(this.restartTimeout);\n            this.restartTimeout = setTimeout(() => this.startHover(), 20);\n        }\n    }\n    get active() {\n        return this.view.state.field(this.field);\n    }\n    checkHover() {\n        this.hoverTimeout = -1;\n        if (this.active.length)\n            return;\n        let hovered = Date.now() - this.lastMove.time;\n        if (hovered < this.hoverTime)\n            this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime - hovered);\n        else\n            this.startHover();\n    }\n    startHover() {\n        clearTimeout(this.restartTimeout);\n        let { view, lastMove } = this;\n        let desc = view.docView.nearest(lastMove.target);\n        if (!desc)\n            return;\n        let pos, side = 1;\n        if (desc instanceof WidgetView) {\n            pos = desc.posAtStart;\n        }\n        else {\n            pos = view.posAtCoords(lastMove);\n            if (pos == null)\n                return;\n            let posCoords = view.coordsAtPos(pos);\n            if (!posCoords ||\n                lastMove.y < posCoords.top || lastMove.y > posCoords.bottom ||\n                lastMove.x < posCoords.left - view.defaultCharacterWidth ||\n                lastMove.x > posCoords.right + view.defaultCharacterWidth)\n                return;\n            let bidi = view.bidiSpans(view.state.doc.lineAt(pos)).find(s => s.from <= pos && s.to >= pos);\n            let rtl = bidi && bidi.dir == Direction.RTL ? -1 : 1;\n            side = (lastMove.x < posCoords.left ? -rtl : rtl);\n        }\n        let open = this.source(view, pos, side);\n        if (open === null || open === void 0 ? void 0 : open.then) {\n            let pending = this.pending = { pos };\n            open.then(result => {\n                if (this.pending == pending) {\n                    this.pending = null;\n                    if (result && !(Array.isArray(result) && !result.length))\n                        view.dispatch({ effects: this.setHover.of(Array.isArray(result) ? result : [result]) });\n                }\n            }, e => logException(view.state, e, \"hover tooltip\"));\n        }\n        else if (open && !(Array.isArray(open) && !open.length)) {\n            view.dispatch({ effects: this.setHover.of(Array.isArray(open) ? open : [open]) });\n        }\n    }\n    get tooltip() {\n        let plugin = this.view.plugin(tooltipPlugin);\n        let index = plugin ? plugin.manager.tooltips.findIndex(t => t.create == HoverTooltipHost.create) : -1;\n        return index > -1 ? plugin.manager.tooltipViews[index] : null;\n    }\n    mousemove(event) {\n        var _a, _b;\n        this.lastMove = { x: event.clientX, y: event.clientY, target: event.target, time: Date.now() };\n        if (this.hoverTimeout < 0)\n            this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime);\n        let { active, tooltip } = this;\n        if (active.length && tooltip && !isInTooltip(tooltip.dom, event) || this.pending) {\n            let { pos } = active[0] || this.pending, end = (_b = (_a = active[0]) === null || _a === void 0 ? void 0 : _a.end) !== null && _b !== void 0 ? _b : pos;\n            if ((pos == end ? this.view.posAtCoords(this.lastMove) != pos\n                : !isOverRange(this.view, pos, end, event.clientX, event.clientY))) {\n                this.view.dispatch({ effects: this.setHover.of([]) });\n                this.pending = null;\n            }\n        }\n    }\n    mouseleave(event) {\n        clearTimeout(this.hoverTimeout);\n        this.hoverTimeout = -1;\n        let { active } = this;\n        if (active.length) {\n            let { tooltip } = this;\n            let inTooltip = tooltip && tooltip.dom.contains(event.relatedTarget);\n            if (!inTooltip)\n                this.view.dispatch({ effects: this.setHover.of([]) });\n            else\n                this.watchTooltipLeave(tooltip.dom);\n        }\n    }\n    watchTooltipLeave(tooltip) {\n        let watch = (event) => {\n            tooltip.removeEventListener(\"mouseleave\", watch);\n            if (this.active.length && !this.view.dom.contains(event.relatedTarget))\n                this.view.dispatch({ effects: this.setHover.of([]) });\n        };\n        tooltip.addEventListener(\"mouseleave\", watch);\n    }\n    destroy() {\n        clearTimeout(this.hoverTimeout);\n        this.view.dom.removeEventListener(\"mouseleave\", this.mouseleave);\n        this.view.dom.removeEventListener(\"mousemove\", this.mousemove);\n    }\n}\nconst tooltipMargin = 4;\nfunction isInTooltip(tooltip, event) {\n    let { left, right, top, bottom } = tooltip.getBoundingClientRect(), arrow;\n    if (arrow = tooltip.querySelector(\".cm-tooltip-arrow\")) {\n        let arrowRect = arrow.getBoundingClientRect();\n        top = Math.min(arrowRect.top, top);\n        bottom = Math.max(arrowRect.bottom, bottom);\n    }\n    return event.clientX >= left - tooltipMargin && event.clientX <= right + tooltipMargin &&\n        event.clientY >= top - tooltipMargin && event.clientY <= bottom + tooltipMargin;\n}\nfunction isOverRange(view, from, to, x, y, margin) {\n    let rect = view.scrollDOM.getBoundingClientRect();\n    let docBottom = view.documentTop + view.documentPadding.top + view.contentHeight;\n    if (rect.left > x || rect.right < x || rect.top > y || Math.min(rect.bottom, docBottom) < y)\n        return false;\n    let pos = view.posAtCoords({ x, y }, false);\n    return pos >= from && pos <= to;\n}\n/**\nSet up a hover tooltip, which shows up when the pointer hovers\nover ranges of text. The callback is called when the mouse hovers\nover the document text. It should, if there is a tooltip\nassociated with position `pos`, return the tooltip description\n(either directly or in a promise). The `side` argument indicates\non which side of the position the pointer is—it will be -1 if the\npointer is before the position, 1 if after the position.\n\nNote that all hover tooltips are hosted within a single tooltip\ncontainer element. This allows multiple tooltips over the same\nrange to be \"merged\" together without overlapping.\n\nThe return value is a valid [editor extension](https://codemirror.net/6/docs/ref/#state.Extension)\nbut also provides an `active` property holding a state field that\ncan be used to read the currently active tooltips produced by this\nextension.\n*/\nfunction hoverTooltip(source, options = {}) {\n    let setHover = StateEffect.define();\n    let hoverState = StateField.define({\n        create() { return []; },\n        update(value, tr) {\n            if (value.length) {\n                if (options.hideOnChange && (tr.docChanged || tr.selection))\n                    value = [];\n                else if (options.hideOn)\n                    value = value.filter(v => !options.hideOn(tr, v));\n                if (tr.docChanged) {\n                    let mapped = [];\n                    for (let tooltip of value) {\n                        let newPos = tr.changes.mapPos(tooltip.pos, -1, MapMode.TrackDel);\n                        if (newPos != null) {\n                            let copy = Object.assign(Object.create(null), tooltip);\n                            copy.pos = newPos;\n                            if (copy.end != null)\n                                copy.end = tr.changes.mapPos(copy.end);\n                            mapped.push(copy);\n                        }\n                    }\n                    value = mapped;\n                }\n            }\n            for (let effect of tr.effects) {\n                if (effect.is(setHover))\n                    value = effect.value;\n                if (effect.is(closeHoverTooltipEffect))\n                    value = [];\n            }\n            return value;\n        },\n        provide: f => showHoverTooltip.from(f)\n    });\n    return {\n        active: hoverState,\n        extension: [\n            hoverState,\n            ViewPlugin.define(view => new HoverPlugin(view, source, hoverState, setHover, options.hoverTime || 300 /* Hover.Time */)),\n            showHoverTooltipHost\n        ]\n    };\n}\n/**\nGet the active tooltip view for a given tooltip, if available.\n*/\nfunction getTooltip(view, tooltip) {\n    let plugin = view.plugin(tooltipPlugin);\n    if (!plugin)\n        return null;\n    let found = plugin.manager.tooltips.indexOf(tooltip);\n    return found < 0 ? null : plugin.manager.tooltipViews[found];\n}\n/**\nReturns true if any hover tooltips are currently active.\n*/\nfunction hasHoverTooltips(state) {\n    return state.facet(showHoverTooltip).some(x => x);\n}\nconst closeHoverTooltipEffect = /*@__PURE__*/StateEffect.define();\n/**\nTransaction effect that closes all hover tooltips.\n*/\nconst closeHoverTooltips = /*@__PURE__*/closeHoverTooltipEffect.of(null);\n/**\nTell the tooltip extension to recompute the position of the active\ntooltips. This can be useful when something happens (such as a\nre-positioning or CSS change affecting the editor) that could\ninvalidate the existing tooltip positions.\n*/\nfunction repositionTooltips(view) {\n    let plugin = view.plugin(tooltipPlugin);\n    if (plugin)\n        plugin.maybeMeasure();\n}\n\nconst panelConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        let topContainer, bottomContainer;\n        for (let c of configs) {\n            topContainer = topContainer || c.topContainer;\n            bottomContainer = bottomContainer || c.bottomContainer;\n        }\n        return { topContainer, bottomContainer };\n    }\n});\n/**\nConfigures the panel-managing extension.\n*/\nfunction panels(config) {\n    return config ? [panelConfig.of(config)] : [];\n}\n/**\nGet the active panel created by the given constructor, if any.\nThis can be useful when you need access to your panels' DOM\nstructure.\n*/\nfunction getPanel(view, panel) {\n    let plugin = view.plugin(panelPlugin);\n    let index = plugin ? plugin.specs.indexOf(panel) : -1;\n    return index > -1 ? plugin.panels[index] : null;\n}\nconst panelPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.input = view.state.facet(showPanel);\n        this.specs = this.input.filter(s => s);\n        this.panels = this.specs.map(spec => spec(view));\n        let conf = view.state.facet(panelConfig);\n        this.top = new PanelGroup(view, true, conf.topContainer);\n        this.bottom = new PanelGroup(view, false, conf.bottomContainer);\n        this.top.sync(this.panels.filter(p => p.top));\n        this.bottom.sync(this.panels.filter(p => !p.top));\n        for (let p of this.panels) {\n            p.dom.classList.add(\"cm-panel\");\n            if (p.mount)\n                p.mount();\n        }\n    }\n    update(update) {\n        let conf = update.state.facet(panelConfig);\n        if (this.top.container != conf.topContainer) {\n            this.top.sync([]);\n            this.top = new PanelGroup(update.view, true, conf.topContainer);\n        }\n        if (this.bottom.container != conf.bottomContainer) {\n            this.bottom.sync([]);\n            this.bottom = new PanelGroup(update.view, false, conf.bottomContainer);\n        }\n        this.top.syncClasses();\n        this.bottom.syncClasses();\n        let input = update.state.facet(showPanel);\n        if (input != this.input) {\n            let specs = input.filter(x => x);\n            let panels = [], top = [], bottom = [], mount = [];\n            for (let spec of specs) {\n                let known = this.specs.indexOf(spec), panel;\n                if (known < 0) {\n                    panel = spec(update.view);\n                    mount.push(panel);\n                }\n                else {\n                    panel = this.panels[known];\n                    if (panel.update)\n                        panel.update(update);\n                }\n                panels.push(panel);\n                (panel.top ? top : bottom).push(panel);\n            }\n            this.specs = specs;\n            this.panels = panels;\n            this.top.sync(top);\n            this.bottom.sync(bottom);\n            for (let p of mount) {\n                p.dom.classList.add(\"cm-panel\");\n                if (p.mount)\n                    p.mount();\n            }\n        }\n        else {\n            for (let p of this.panels)\n                if (p.update)\n                    p.update(update);\n        }\n    }\n    destroy() {\n        this.top.sync([]);\n        this.bottom.sync([]);\n    }\n}, {\n    provide: plugin => EditorView.scrollMargins.of(view => {\n        let value = view.plugin(plugin);\n        return value && { top: value.top.scrollMargin(), bottom: value.bottom.scrollMargin() };\n    })\n});\nclass PanelGroup {\n    constructor(view, top, container) {\n        this.view = view;\n        this.top = top;\n        this.container = container;\n        this.dom = undefined;\n        this.classes = \"\";\n        this.panels = [];\n        this.syncClasses();\n    }\n    sync(panels) {\n        for (let p of this.panels)\n            if (p.destroy && panels.indexOf(p) < 0)\n                p.destroy();\n        this.panels = panels;\n        this.syncDOM();\n    }\n    syncDOM() {\n        if (this.panels.length == 0) {\n            if (this.dom) {\n                this.dom.remove();\n                this.dom = undefined;\n            }\n            return;\n        }\n        if (!this.dom) {\n            this.dom = document.createElement(\"div\");\n            this.dom.className = this.top ? \"cm-panels cm-panels-top\" : \"cm-panels cm-panels-bottom\";\n            this.dom.style[this.top ? \"top\" : \"bottom\"] = \"0\";\n            let parent = this.container || this.view.dom;\n            parent.insertBefore(this.dom, this.top ? parent.firstChild : null);\n        }\n        let curDOM = this.dom.firstChild;\n        for (let panel of this.panels) {\n            if (panel.dom.parentNode == this.dom) {\n                while (curDOM != panel.dom)\n                    curDOM = rm(curDOM);\n                curDOM = curDOM.nextSibling;\n            }\n            else {\n                this.dom.insertBefore(panel.dom, curDOM);\n            }\n        }\n        while (curDOM)\n            curDOM = rm(curDOM);\n    }\n    scrollMargin() {\n        return !this.dom || this.container ? 0\n            : Math.max(0, this.top ?\n                this.dom.getBoundingClientRect().bottom - Math.max(0, this.view.scrollDOM.getBoundingClientRect().top) :\n                Math.min(innerHeight, this.view.scrollDOM.getBoundingClientRect().bottom) - this.dom.getBoundingClientRect().top);\n    }\n    syncClasses() {\n        if (!this.container || this.classes == this.view.themeClasses)\n            return;\n        for (let cls of this.classes.split(\" \"))\n            if (cls)\n                this.container.classList.remove(cls);\n        for (let cls of (this.classes = this.view.themeClasses).split(\" \"))\n            if (cls)\n                this.container.classList.add(cls);\n    }\n}\nfunction rm(node) {\n    let next = node.nextSibling;\n    node.remove();\n    return next;\n}\n/**\nOpening a panel is done by providing a constructor function for\nthe panel through this facet. (The panel is closed again when its\nconstructor is no longer provided.) Values of `null` are ignored.\n*/\nconst showPanel = /*@__PURE__*/Facet.define({\n    enables: panelPlugin\n});\n\n/**\nShow a panel above or below the editor to show the user a message\nor prompt them for input. Returns an effect that can be dispatched\nto close the dialog, and a promise that resolves when the dialog\nis closed or a form inside of it is submitted.\n\nYou are encouraged, if your handling of the result of the promise\ndispatches a transaction, to include the `close` effect in it. If\nyou don't, this function will automatically dispatch a separate\ntransaction right after.\n*/\nfunction showDialog(view, config) {\n    let resolve;\n    let promise = new Promise(r => resolve = r);\n    let panelCtor = (view) => createDialog(view, config, resolve);\n    if (view.state.field(dialogField, false)) {\n        view.dispatch({ effects: openDialogEffect.of(panelCtor) });\n    }\n    else {\n        view.dispatch({ effects: StateEffect.appendConfig.of(dialogField.init(() => [panelCtor])) });\n    }\n    let close = closeDialogEffect.of(panelCtor);\n    return { close, result: promise.then(form => {\n            let queue = view.win.queueMicrotask || ((f) => view.win.setTimeout(f, 10));\n            queue(() => {\n                if (view.state.field(dialogField).indexOf(panelCtor) > -1)\n                    view.dispatch({ effects: close });\n            });\n            return form;\n        }) };\n}\n/**\nFind the [`Panel`](https://codemirror.net/6/docs/ref/#view.Panel) for an open dialog, using a class\nname as identifier.\n*/\nfunction getDialog(view, className) {\n    let dialogs = view.state.field(dialogField, false) || [];\n    for (let open of dialogs) {\n        let panel = getPanel(view, open);\n        if (panel && panel.dom.classList.contains(className))\n            return panel;\n    }\n    return null;\n}\nconst dialogField = /*@__PURE__*/StateField.define({\n    create() { return []; },\n    update(dialogs, tr) {\n        for (let e of tr.effects) {\n            if (e.is(openDialogEffect))\n                dialogs = [e.value].concat(dialogs);\n            else if (e.is(closeDialogEffect))\n                dialogs = dialogs.filter(d => d != e.value);\n        }\n        return dialogs;\n    },\n    provide: f => showPanel.computeN([f], state => state.field(f))\n});\nconst openDialogEffect = /*@__PURE__*/StateEffect.define();\nconst closeDialogEffect = /*@__PURE__*/StateEffect.define();\nfunction createDialog(view, config, result) {\n    let content = config.content ? config.content(view, () => done(null)) : null;\n    if (!content) {\n        content = elt(\"form\");\n        if (config.input) {\n            let input = elt(\"input\", config.input);\n            if (/^(text|password|number|email|tel|url)$/.test(input.type))\n                input.classList.add(\"cm-textfield\");\n            if (!input.name)\n                input.name = \"input\";\n            content.appendChild(elt(\"label\", (config.label || \"\") + \": \", input));\n        }\n        else {\n            content.appendChild(document.createTextNode(config.label || \"\"));\n        }\n        content.appendChild(document.createTextNode(\" \"));\n        content.appendChild(elt(\"button\", { class: \"cm-button\", type: \"submit\" }, config.submitLabel || \"OK\"));\n    }\n    let forms = content.nodeName == \"FORM\" ? [content] : content.querySelectorAll(\"form\");\n    for (let i = 0; i < forms.length; i++) {\n        let form = forms[i];\n        form.addEventListener(\"keydown\", (event) => {\n            if (event.keyCode == 27) { // Escape\n                event.preventDefault();\n                done(null);\n            }\n            else if (event.keyCode == 13) { // Enter\n                event.preventDefault();\n                done(form);\n            }\n        });\n        form.addEventListener(\"submit\", (event) => {\n            event.preventDefault();\n            done(form);\n        });\n    }\n    let panel = elt(\"div\", content, elt(\"button\", {\n        onclick: () => done(null),\n        \"aria-label\": view.state.phrase(\"close\"),\n        class: \"cm-dialog-close\",\n        type: \"button\"\n    }, [\"×\"]));\n    if (config.class)\n        panel.className = config.class;\n    panel.classList.add(\"cm-dialog\");\n    function done(form) {\n        if (panel.contains(panel.ownerDocument.activeElement))\n            view.focus();\n        result(form);\n    }\n    return {\n        dom: panel,\n        top: config.top,\n        mount: () => {\n            if (config.focus) {\n                let focus;\n                if (typeof config.focus == \"string\")\n                    focus = content.querySelector(config.focus);\n                else\n                    focus = content.querySelector(\"input\") || content.querySelector(\"button\");\n                if (focus && \"select\" in focus)\n                    focus.select();\n                else if (focus && \"focus\" in focus)\n                    focus.focus();\n            }\n        }\n    };\n}\n\n/**\nA gutter marker represents a bit of information attached to a line\nin a specific gutter. Your own custom markers have to extend this\nclass.\n*/\nclass GutterMarker extends RangeValue {\n    /**\n    @internal\n    */\n    compare(other) {\n        return this == other || this.constructor == other.constructor && this.eq(other);\n    }\n    /**\n    Compare this marker to another marker of the same type.\n    */\n    eq(other) { return false; }\n    /**\n    Called if the marker has a `toDOM` method and its representation\n    was removed from a gutter.\n    */\n    destroy(dom) { }\n}\nGutterMarker.prototype.elementClass = \"\";\nGutterMarker.prototype.toDOM = undefined;\nGutterMarker.prototype.mapMode = MapMode.TrackBefore;\nGutterMarker.prototype.startSide = GutterMarker.prototype.endSide = -1;\nGutterMarker.prototype.point = true;\n/**\nFacet used to add a class to all gutter elements for a given line.\nMarkers given to this facet should _only_ define an\n[`elementclass`](https://codemirror.net/6/docs/ref/#view.GutterMarker.elementClass), not a\n[`toDOM`](https://codemirror.net/6/docs/ref/#view.GutterMarker.toDOM) (or the marker will appear\nin all gutters for the line).\n*/\nconst gutterLineClass = /*@__PURE__*/Facet.define();\n/**\nFacet used to add a class to all gutter elements next to a widget.\nShould not provide widgets with a `toDOM` method.\n*/\nconst gutterWidgetClass = /*@__PURE__*/Facet.define();\nconst defaults = {\n    class: \"\",\n    renderEmptyElements: false,\n    elementStyle: \"\",\n    markers: () => RangeSet.empty,\n    lineMarker: () => null,\n    widgetMarker: () => null,\n    lineMarkerChange: null,\n    initialSpacer: null,\n    updateSpacer: null,\n    domEventHandlers: {},\n    side: \"before\"\n};\nconst activeGutters = /*@__PURE__*/Facet.define();\n/**\nDefine an editor gutter. The order in which the gutters appear is\ndetermined by their extension priority.\n*/\nfunction gutter(config) {\n    return [gutters(), activeGutters.of({ ...defaults, ...config })];\n}\nconst unfixGutters = /*@__PURE__*/Facet.define({\n    combine: values => values.some(x => x)\n});\n/**\nThe gutter-drawing plugin is automatically enabled when you add a\ngutter, but you can use this function to explicitly configure it.\n\nUnless `fixed` is explicitly set to `false`, the gutters are\nfixed, meaning they don't scroll along with the content\nhorizontally (except on Internet Explorer, which doesn't support\nCSS [`position:\nsticky`](https://developer.mozilla.org/en-US/docs/Web/CSS/position#sticky)).\n*/\nfunction gutters(config) {\n    let result = [\n        gutterView,\n    ];\n    if (config && config.fixed === false)\n        result.push(unfixGutters.of(true));\n    return result;\n}\nconst gutterView = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.domAfter = null;\n        this.prevViewport = view.viewport;\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-gutters cm-gutters-before\";\n        this.dom.setAttribute(\"aria-hidden\", \"true\");\n        this.dom.style.minHeight = (this.view.contentHeight / this.view.scaleY) + \"px\";\n        this.gutters = view.state.facet(activeGutters).map(conf => new SingleGutterView(view, conf));\n        this.fixed = !view.state.facet(unfixGutters);\n        for (let gutter of this.gutters) {\n            if (gutter.config.side == \"after\")\n                this.getDOMAfter().appendChild(gutter.dom);\n            else\n                this.dom.appendChild(gutter.dom);\n        }\n        if (this.fixed) {\n            // FIXME IE11 fallback, which doesn't support position: sticky,\n            // by using position: relative + event handlers that realign the\n            // gutter (or just force fixed=false on IE11?)\n            this.dom.style.position = \"sticky\";\n        }\n        this.syncGutters(false);\n        view.scrollDOM.insertBefore(this.dom, view.contentDOM);\n    }\n    getDOMAfter() {\n        if (!this.domAfter) {\n            this.domAfter = document.createElement(\"div\");\n            this.domAfter.className = \"cm-gutters cm-gutters-after\";\n            this.domAfter.setAttribute(\"aria-hidden\", \"true\");\n            this.domAfter.style.minHeight = (this.view.contentHeight / this.view.scaleY) + \"px\";\n            this.domAfter.style.position = this.fixed ? \"sticky\" : \"\";\n            this.view.scrollDOM.appendChild(this.domAfter);\n        }\n        return this.domAfter;\n    }\n    update(update) {\n        if (this.updateGutters(update)) {\n            // Detach during sync when the viewport changed significantly\n            // (such as during scrolling), since for large updates that is\n            // faster.\n            let vpA = this.prevViewport, vpB = update.view.viewport;\n            let vpOverlap = Math.min(vpA.to, vpB.to) - Math.max(vpA.from, vpB.from);\n            this.syncGutters(vpOverlap < (vpB.to - vpB.from) * 0.8);\n        }\n        if (update.geometryChanged) {\n            let min = (this.view.contentHeight / this.view.scaleY) + \"px\";\n            this.dom.style.minHeight = min;\n            if (this.domAfter)\n                this.domAfter.style.minHeight = min;\n        }\n        if (this.view.state.facet(unfixGutters) != !this.fixed) {\n            this.fixed = !this.fixed;\n            this.dom.style.position = this.fixed ? \"sticky\" : \"\";\n            if (this.domAfter)\n                this.domAfter.style.position = this.fixed ? \"sticky\" : \"\";\n        }\n        this.prevViewport = update.view.viewport;\n    }\n    syncGutters(detach) {\n        let after = this.dom.nextSibling;\n        if (detach) {\n            this.dom.remove();\n            if (this.domAfter)\n                this.domAfter.remove();\n        }\n        let lineClasses = RangeSet.iter(this.view.state.facet(gutterLineClass), this.view.viewport.from);\n        let classSet = [];\n        let contexts = this.gutters.map(gutter => new UpdateContext(gutter, this.view.viewport, -this.view.documentPadding.top));\n        for (let line of this.view.viewportLineBlocks) {\n            if (classSet.length)\n                classSet = [];\n            if (Array.isArray(line.type)) {\n                let first = true;\n                for (let b of line.type) {\n                    if (b.type == BlockType.Text && first) {\n                        advanceCursor(lineClasses, classSet, b.from);\n                        for (let cx of contexts)\n                            cx.line(this.view, b, classSet);\n                        first = false;\n                    }\n                    else if (b.widget) {\n                        for (let cx of contexts)\n                            cx.widget(this.view, b);\n                    }\n                }\n            }\n            else if (line.type == BlockType.Text) {\n                advanceCursor(lineClasses, classSet, line.from);\n                for (let cx of contexts)\n                    cx.line(this.view, line, classSet);\n            }\n            else if (line.widget) {\n                for (let cx of contexts)\n                    cx.widget(this.view, line);\n            }\n        }\n        for (let cx of contexts)\n            cx.finish();\n        if (detach) {\n            this.view.scrollDOM.insertBefore(this.dom, after);\n            if (this.domAfter)\n                this.view.scrollDOM.appendChild(this.domAfter);\n        }\n    }\n    updateGutters(update) {\n        let prev = update.startState.facet(activeGutters), cur = update.state.facet(activeGutters);\n        let change = update.docChanged || update.heightChanged || update.viewportChanged ||\n            !RangeSet.eq(update.startState.facet(gutterLineClass), update.state.facet(gutterLineClass), update.view.viewport.from, update.view.viewport.to);\n        if (prev == cur) {\n            for (let gutter of this.gutters)\n                if (gutter.update(update))\n                    change = true;\n        }\n        else {\n            change = true;\n            let gutters = [];\n            for (let conf of cur) {\n                let known = prev.indexOf(conf);\n                if (known < 0) {\n                    gutters.push(new SingleGutterView(this.view, conf));\n                }\n                else {\n                    this.gutters[known].update(update);\n                    gutters.push(this.gutters[known]);\n                }\n            }\n            for (let g of this.gutters) {\n                g.dom.remove();\n                if (gutters.indexOf(g) < 0)\n                    g.destroy();\n            }\n            for (let g of gutters) {\n                if (g.config.side == \"after\")\n                    this.getDOMAfter().appendChild(g.dom);\n                else\n                    this.dom.appendChild(g.dom);\n            }\n            this.gutters = gutters;\n        }\n        return change;\n    }\n    destroy() {\n        for (let view of this.gutters)\n            view.destroy();\n        this.dom.remove();\n        if (this.domAfter)\n            this.domAfter.remove();\n    }\n}, {\n    provide: plugin => EditorView.scrollMargins.of(view => {\n        let value = view.plugin(plugin);\n        if (!value || value.gutters.length == 0 || !value.fixed)\n            return null;\n        let before = value.dom.offsetWidth * view.scaleX, after = value.domAfter ? value.domAfter.offsetWidth * view.scaleX : 0;\n        return view.textDirection == Direction.LTR\n            ? { left: before, right: after }\n            : { right: before, left: after };\n    })\n});\nfunction asArray(val) { return (Array.isArray(val) ? val : [val]); }\nfunction advanceCursor(cursor, collect, pos) {\n    while (cursor.value && cursor.from <= pos) {\n        if (cursor.from == pos)\n            collect.push(cursor.value);\n        cursor.next();\n    }\n}\nclass UpdateContext {\n    constructor(gutter, viewport, height) {\n        this.gutter = gutter;\n        this.height = height;\n        this.i = 0;\n        this.cursor = RangeSet.iter(gutter.markers, viewport.from);\n    }\n    addElement(view, block, markers) {\n        let { gutter } = this, above = (block.top - this.height) / view.scaleY, height = block.height / view.scaleY;\n        if (this.i == gutter.elements.length) {\n            let newElt = new GutterElement(view, height, above, markers);\n            gutter.elements.push(newElt);\n            gutter.dom.appendChild(newElt.dom);\n        }\n        else {\n            gutter.elements[this.i].update(view, height, above, markers);\n        }\n        this.height = block.bottom;\n        this.i++;\n    }\n    line(view, line, extraMarkers) {\n        let localMarkers = [];\n        advanceCursor(this.cursor, localMarkers, line.from);\n        if (extraMarkers.length)\n            localMarkers = localMarkers.concat(extraMarkers);\n        let forLine = this.gutter.config.lineMarker(view, line, localMarkers);\n        if (forLine)\n            localMarkers.unshift(forLine);\n        let gutter = this.gutter;\n        if (localMarkers.length == 0 && !gutter.config.renderEmptyElements)\n            return;\n        this.addElement(view, line, localMarkers);\n    }\n    widget(view, block) {\n        let marker = this.gutter.config.widgetMarker(view, block.widget, block), markers = marker ? [marker] : null;\n        for (let cls of view.state.facet(gutterWidgetClass)) {\n            let marker = cls(view, block.widget, block);\n            if (marker)\n                (markers || (markers = [])).push(marker);\n        }\n        if (markers)\n            this.addElement(view, block, markers);\n    }\n    finish() {\n        let gutter = this.gutter;\n        while (gutter.elements.length > this.i) {\n            let last = gutter.elements.pop();\n            gutter.dom.removeChild(last.dom);\n            last.destroy();\n        }\n    }\n}\nclass SingleGutterView {\n    constructor(view, config) {\n        this.view = view;\n        this.config = config;\n        this.elements = [];\n        this.spacer = null;\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-gutter\" + (this.config.class ? \" \" + this.config.class : \"\");\n        for (let prop in config.domEventHandlers) {\n            this.dom.addEventListener(prop, (event) => {\n                let target = event.target, y;\n                if (target != this.dom && this.dom.contains(target)) {\n                    while (target.parentNode != this.dom)\n                        target = target.parentNode;\n                    let rect = target.getBoundingClientRect();\n                    y = (rect.top + rect.bottom) / 2;\n                }\n                else {\n                    y = event.clientY;\n                }\n                let line = view.lineBlockAtHeight(y - view.documentTop);\n                if (config.domEventHandlers[prop](view, line, event))\n                    event.preventDefault();\n            });\n        }\n        this.markers = asArray(config.markers(view));\n        if (config.initialSpacer) {\n            this.spacer = new GutterElement(view, 0, 0, [config.initialSpacer(view)]);\n            this.dom.appendChild(this.spacer.dom);\n            this.spacer.dom.style.cssText += \"visibility: hidden; pointer-events: none\";\n        }\n    }\n    update(update) {\n        let prevMarkers = this.markers;\n        this.markers = asArray(this.config.markers(update.view));\n        if (this.spacer && this.config.updateSpacer) {\n            let updated = this.config.updateSpacer(this.spacer.markers[0], update);\n            if (updated != this.spacer.markers[0])\n                this.spacer.update(update.view, 0, 0, [updated]);\n        }\n        let vp = update.view.viewport;\n        return !RangeSet.eq(this.markers, prevMarkers, vp.from, vp.to) ||\n            (this.config.lineMarkerChange ? this.config.lineMarkerChange(update) : false);\n    }\n    destroy() {\n        for (let elt of this.elements)\n            elt.destroy();\n    }\n}\nclass GutterElement {\n    constructor(view, height, above, markers) {\n        this.height = -1;\n        this.above = 0;\n        this.markers = [];\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-gutterElement\";\n        this.update(view, height, above, markers);\n    }\n    update(view, height, above, markers) {\n        if (this.height != height) {\n            this.height = height;\n            this.dom.style.height = height + \"px\";\n        }\n        if (this.above != above)\n            this.dom.style.marginTop = (this.above = above) ? above + \"px\" : \"\";\n        if (!sameMarkers(this.markers, markers))\n            this.setMarkers(view, markers);\n    }\n    setMarkers(view, markers) {\n        let cls = \"cm-gutterElement\", domPos = this.dom.firstChild;\n        for (let iNew = 0, iOld = 0;;) {\n            let skipTo = iOld, marker = iNew < markers.length ? markers[iNew++] : null, matched = false;\n            if (marker) {\n                let c = marker.elementClass;\n                if (c)\n                    cls += \" \" + c;\n                for (let i = iOld; i < this.markers.length; i++)\n                    if (this.markers[i].compare(marker)) {\n                        skipTo = i;\n                        matched = true;\n                        break;\n                    }\n            }\n            else {\n                skipTo = this.markers.length;\n            }\n            while (iOld < skipTo) {\n                let next = this.markers[iOld++];\n                if (next.toDOM) {\n                    next.destroy(domPos);\n                    let after = domPos.nextSibling;\n                    domPos.remove();\n                    domPos = after;\n                }\n            }\n            if (!marker)\n                break;\n            if (marker.toDOM) {\n                if (matched)\n                    domPos = domPos.nextSibling;\n                else\n                    this.dom.insertBefore(marker.toDOM(view), domPos);\n            }\n            if (matched)\n                iOld++;\n        }\n        this.dom.className = cls;\n        this.markers = markers;\n    }\n    destroy() {\n        this.setMarkers(null, []); // First argument not used unless creating markers\n    }\n}\nfunction sameMarkers(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].compare(b[i]))\n            return false;\n    return true;\n}\n/**\nFacet used to provide markers to the line number gutter.\n*/\nconst lineNumberMarkers = /*@__PURE__*/Facet.define();\n/**\nFacet used to create markers in the line number gutter next to widgets.\n*/\nconst lineNumberWidgetMarker = /*@__PURE__*/Facet.define();\nconst lineNumberConfig = /*@__PURE__*/Facet.define({\n    combine(values) {\n        return combineConfig(values, { formatNumber: String, domEventHandlers: {} }, {\n            domEventHandlers(a, b) {\n                let result = Object.assign({}, a);\n                for (let event in b) {\n                    let exists = result[event], add = b[event];\n                    result[event] = exists ? (view, line, event) => exists(view, line, event) || add(view, line, event) : add;\n                }\n                return result;\n            }\n        });\n    }\n});\nclass NumberMarker extends GutterMarker {\n    constructor(number) {\n        super();\n        this.number = number;\n    }\n    eq(other) { return this.number == other.number; }\n    toDOM() { return document.createTextNode(this.number); }\n}\nfunction formatNumber(view, number) {\n    return view.state.facet(lineNumberConfig).formatNumber(number, view.state);\n}\nconst lineNumberGutter = /*@__PURE__*/activeGutters.compute([lineNumberConfig], state => ({\n    class: \"cm-lineNumbers\",\n    renderEmptyElements: false,\n    markers(view) { return view.state.facet(lineNumberMarkers); },\n    lineMarker(view, line, others) {\n        if (others.some(m => m.toDOM))\n            return null;\n        return new NumberMarker(formatNumber(view, view.state.doc.lineAt(line.from).number));\n    },\n    widgetMarker: (view, widget, block) => {\n        for (let m of view.state.facet(lineNumberWidgetMarker)) {\n            let result = m(view, widget, block);\n            if (result)\n                return result;\n        }\n        return null;\n    },\n    lineMarkerChange: update => update.startState.facet(lineNumberConfig) != update.state.facet(lineNumberConfig),\n    initialSpacer(view) {\n        return new NumberMarker(formatNumber(view, maxLineNumber(view.state.doc.lines)));\n    },\n    updateSpacer(spacer, update) {\n        let max = formatNumber(update.view, maxLineNumber(update.view.state.doc.lines));\n        return max == spacer.number ? spacer : new NumberMarker(max);\n    },\n    domEventHandlers: state.facet(lineNumberConfig).domEventHandlers,\n    side: \"before\"\n}));\n/**\nCreate a line number gutter extension.\n*/\nfunction lineNumbers(config = {}) {\n    return [\n        lineNumberConfig.of(config),\n        gutters(),\n        lineNumberGutter\n    ];\n}\nfunction maxLineNumber(lines) {\n    let last = 9;\n    while (last < lines)\n        last = last * 10 + 9;\n    return last;\n}\nconst activeLineGutterMarker = /*@__PURE__*/new class extends GutterMarker {\n    constructor() {\n        super(...arguments);\n        this.elementClass = \"cm-activeLineGutter\";\n    }\n};\nconst activeLineGutterHighlighter = /*@__PURE__*/gutterLineClass.compute([\"selection\"], state => {\n    let marks = [], last = -1;\n    for (let range of state.selection.ranges) {\n        let linePos = state.doc.lineAt(range.head).from;\n        if (linePos > last) {\n            last = linePos;\n            marks.push(activeLineGutterMarker.range(linePos));\n        }\n    }\n    return RangeSet.of(marks);\n});\n/**\nReturns an extension that adds a `cm-activeLineGutter` class to\nall gutter elements on the [active\nline](https://codemirror.net/6/docs/ref/#view.highlightActiveLine).\n*/\nfunction highlightActiveLineGutter() {\n    return activeLineGutterHighlighter;\n}\n\nfunction matcher(decorator) {\n    return ViewPlugin.define(view => ({\n        decorations: decorator.createDeco(view),\n        update(u) {\n            this.decorations = decorator.updateDeco(u, this.decorations);\n        },\n    }), {\n        decorations: v => v.decorations\n    });\n}\nconst tabDeco = /*@__PURE__*/Decoration.mark({ class: \"cm-highlightTab\" });\nconst spaceDeco = /*@__PURE__*/Decoration.mark({ class: \"cm-highlightSpace\" });\nconst whitespaceHighlighter = /*@__PURE__*/matcher(/*@__PURE__*/new MatchDecorator({\n    regexp: /\\t| /g,\n    decoration: match => match[0] == \"\\t\" ? tabDeco : spaceDeco,\n    boundary: /\\S/,\n}));\n/**\nReturns an extension that highlights whitespace, adding a\n`cm-highlightSpace` class to stretches of spaces, and a\n`cm-highlightTab` class to individual tab characters. By default,\nthe former are shown as faint dots, and the latter as arrows.\n*/\nfunction highlightWhitespace() {\n    return whitespaceHighlighter;\n}\nconst trailingHighlighter = /*@__PURE__*/matcher(/*@__PURE__*/new MatchDecorator({\n    regexp: /\\s+$/g,\n    decoration: /*@__PURE__*/Decoration.mark({ class: \"cm-trailingSpace\" })\n}));\n/**\nReturns an extension that adds a `cm-trailingSpace` class to all\ntrailing whitespace.\n*/\nfunction highlightTrailingWhitespace() {\n    return trailingHighlighter;\n}\n\n/**\n@internal\n*/\nconst __test = { HeightMap, HeightOracle, MeasuredHeights, QueryType, ChangedRange, computeOrder,\n    moveVisually, clearHeightChangeFlag, getHeightChangeFlag: () => heightChangeFlag };\n\nexport { BidiSpan, BlockInfo, BlockType, Decoration, Direction, EditorView, GutterMarker, MatchDecorator, RectangleMarker, ViewPlugin, ViewUpdate, WidgetType, __test, closeHoverTooltips, crosshairCursor, drawSelection, dropCursor, getDialog, getDrawSelectionConfig, getPanel, getTooltip, gutter, gutterLineClass, gutterWidgetClass, gutters, hasHoverTooltips, highlightActiveLine, highlightActiveLineGutter, highlightSpecialChars, highlightTrailingWhitespace, highlightWhitespace, hoverTooltip, keymap, layer, lineNumberMarkers, lineNumberWidgetMarker, lineNumbers, logException, panels, placeholder, rectangularSelection, repositionTooltips, runScopeHandlers, scrollPastEnd, showDialog, showPanel, showTooltip, tooltips };\n","/**\nThe default maximum length of a `TreeBuffer` node.\n*/\nconst DefaultBufferLength = 1024;\nlet nextPropID = 0;\nclass Range {\n    constructor(from, to) {\n        this.from = from;\n        this.to = to;\n    }\n}\n/**\nEach [node type](#common.NodeType) or [individual tree](#common.Tree)\ncan have metadata associated with it in props. Instances of this\nclass represent prop names.\n*/\nclass NodeProp {\n    /**\n    Create a new node prop type.\n    */\n    constructor(config = {}) {\n        this.id = nextPropID++;\n        this.perNode = !!config.perNode;\n        this.deserialize = config.deserialize || (() => {\n            throw new Error(\"This node type doesn't define a deserialize function\");\n        });\n    }\n    /**\n    This is meant to be used with\n    [`NodeSet.extend`](#common.NodeSet.extend) or\n    [`LRParser.configure`](#lr.ParserConfig.props) to compute\n    prop values for each node type in the set. Takes a [match\n    object](#common.NodeType^match) or function that returns undefined\n    if the node type doesn't get this prop, and the prop's value if\n    it does.\n    */\n    add(match) {\n        if (this.perNode)\n            throw new RangeError(\"Can't add per-node props to node types\");\n        if (typeof match != \"function\")\n            match = NodeType.match(match);\n        return (type) => {\n            let result = match(type);\n            return result === undefined ? null : [this, result];\n        };\n    }\n}\n/**\nProp that is used to describe matching delimiters. For opening\ndelimiters, this holds an array of node names (written as a\nspace-separated string when declaring this prop in a grammar)\nfor the node types of closing delimiters that match it.\n*/\nNodeProp.closedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/**\nThe inverse of [`closedBy`](#common.NodeProp^closedBy). This is\nattached to closing delimiters, holding an array of node names\nof types of matching opening delimiters.\n*/\nNodeProp.openedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/**\nUsed to assign node types to groups (for example, all node\ntypes that represent an expression could be tagged with an\n`\"Expression\"` group).\n*/\nNodeProp.group = new NodeProp({ deserialize: str => str.split(\" \") });\n/**\nAttached to nodes to indicate these should be\n[displayed](https://codemirror.net/docs/ref/#language.syntaxTree)\nin a bidirectional text isolate, so that direction-neutral\ncharacters on their sides don't incorrectly get associated with\nsurrounding text. You'll generally want to set this for nodes\nthat contain arbitrary text, like strings and comments, and for\nnodes that appear _inside_ arbitrary text, like HTML tags. When\nnot given a value, in a grammar declaration, defaults to\n`\"auto\"`.\n*/\nNodeProp.isolate = new NodeProp({ deserialize: value => {\n        if (value && value != \"rtl\" && value != \"ltr\" && value != \"auto\")\n            throw new RangeError(\"Invalid value for isolate: \" + value);\n        return value || \"auto\";\n    } });\n/**\nThe hash of the [context](#lr.ContextTracker.constructor)\nthat the node was parsed in, if any. Used to limit reuse of\ncontextual nodes.\n*/\nNodeProp.contextHash = new NodeProp({ perNode: true });\n/**\nThe distance beyond the end of the node that the tokenizer\nlooked ahead for any of the tokens inside the node. (The LR\nparser only stores this when it is larger than 25, for\nefficiency reasons.)\n*/\nNodeProp.lookAhead = new NodeProp({ perNode: true });\n/**\nThis per-node prop is used to replace a given node, or part of a\nnode, with another tree. This is useful to include trees from\ndifferent languages in mixed-language parsers.\n*/\nNodeProp.mounted = new NodeProp({ perNode: true });\n/**\nA mounted tree, which can be [stored](#common.NodeProp^mounted) on\na tree node to indicate that parts of its content are\nrepresented by another tree.\n*/\nclass MountedTree {\n    constructor(\n    /**\n    The inner tree.\n    */\n    tree, \n    /**\n    If this is null, this tree replaces the entire node (it will\n    be included in the regular iteration instead of its host\n    node). If not, only the given ranges are considered to be\n    covered by this tree. This is used for trees that are mixed in\n    a way that isn't strictly hierarchical. Such mounted trees are\n    only entered by [`resolveInner`](#common.Tree.resolveInner)\n    and [`enter`](#common.SyntaxNode.enter).\n    */\n    overlay, \n    /**\n    The parser used to create this subtree.\n    */\n    parser) {\n        this.tree = tree;\n        this.overlay = overlay;\n        this.parser = parser;\n    }\n    /**\n    @internal\n    */\n    static get(tree) {\n        return tree && tree.props && tree.props[NodeProp.mounted.id];\n    }\n}\nconst noProps = Object.create(null);\n/**\nEach node in a syntax tree has a node type associated with it.\n*/\nclass NodeType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name of the node type. Not necessarily unique, but if the\n    grammar was written properly, different node types with the\n    same name within a node set should play the same semantic\n    role.\n    */\n    name, \n    /**\n    @internal\n    */\n    props, \n    /**\n    The id of this node in its set. Corresponds to the term ids\n    used in the parser.\n    */\n    id, \n    /**\n    @internal\n    */\n    flags = 0) {\n        this.name = name;\n        this.props = props;\n        this.id = id;\n        this.flags = flags;\n    }\n    /**\n    Define a node type.\n    */\n    static define(spec) {\n        let props = spec.props && spec.props.length ? Object.create(null) : noProps;\n        let flags = (spec.top ? 1 /* NodeFlag.Top */ : 0) | (spec.skipped ? 2 /* NodeFlag.Skipped */ : 0) |\n            (spec.error ? 4 /* NodeFlag.Error */ : 0) | (spec.name == null ? 8 /* NodeFlag.Anonymous */ : 0);\n        let type = new NodeType(spec.name || \"\", props, spec.id, flags);\n        if (spec.props)\n            for (let src of spec.props) {\n                if (!Array.isArray(src))\n                    src = src(type);\n                if (src) {\n                    if (src[0].perNode)\n                        throw new RangeError(\"Can't store a per-node prop on a node type\");\n                    props[src[0].id] = src[1];\n                }\n            }\n        return type;\n    }\n    /**\n    Retrieves a node prop for this type. Will return `undefined` if\n    the prop isn't present on this node.\n    */\n    prop(prop) { return this.props[prop.id]; }\n    /**\n    True when this is the top node of a grammar.\n    */\n    get isTop() { return (this.flags & 1 /* NodeFlag.Top */) > 0; }\n    /**\n    True when this node is produced by a skip rule.\n    */\n    get isSkipped() { return (this.flags & 2 /* NodeFlag.Skipped */) > 0; }\n    /**\n    Indicates whether this is an error node.\n    */\n    get isError() { return (this.flags & 4 /* NodeFlag.Error */) > 0; }\n    /**\n    When true, this node type doesn't correspond to a user-declared\n    named node, for example because it is used to cache repetition.\n    */\n    get isAnonymous() { return (this.flags & 8 /* NodeFlag.Anonymous */) > 0; }\n    /**\n    Returns true when this node's name or one of its\n    [groups](#common.NodeProp^group) matches the given string.\n    */\n    is(name) {\n        if (typeof name == 'string') {\n            if (this.name == name)\n                return true;\n            let group = this.prop(NodeProp.group);\n            return group ? group.indexOf(name) > -1 : false;\n        }\n        return this.id == name;\n    }\n    /**\n    Create a function from node types to arbitrary values by\n    specifying an object whose property names are node or\n    [group](#common.NodeProp^group) names. Often useful with\n    [`NodeProp.add`](#common.NodeProp.add). You can put multiple\n    names, separated by spaces, in a single property name to map\n    multiple node names to a single value.\n    */\n    static match(map) {\n        let direct = Object.create(null);\n        for (let prop in map)\n            for (let name of prop.split(\" \"))\n                direct[name] = map[prop];\n        return (node) => {\n            for (let groups = node.prop(NodeProp.group), i = -1; i < (groups ? groups.length : 0); i++) {\n                let found = direct[i < 0 ? node.name : groups[i]];\n                if (found)\n                    return found;\n            }\n        };\n    }\n}\n/**\nAn empty dummy node type to use when no actual type is available.\n*/\nNodeType.none = new NodeType(\"\", Object.create(null), 0, 8 /* NodeFlag.Anonymous */);\n/**\nA node set holds a collection of node types. It is used to\ncompactly represent trees by storing their type ids, rather than a\nfull pointer to the type object, in a numeric array. Each parser\n[has](#lr.LRParser.nodeSet) a node set, and [tree\nbuffers](#common.TreeBuffer) can only store collections of nodes\nfrom the same set. A set can have a maximum of 2**16 (65536) node\ntypes in it, so that the ids fit into 16-bit typed array slots.\n*/\nclass NodeSet {\n    /**\n    Create a set with the given types. The `id` property of each\n    type should correspond to its position within the array.\n    */\n    constructor(\n    /**\n    The node types in this set, by id.\n    */\n    types) {\n        this.types = types;\n        for (let i = 0; i < types.length; i++)\n            if (types[i].id != i)\n                throw new RangeError(\"Node type ids should correspond to array positions when creating a node set\");\n    }\n    /**\n    Create a copy of this set with some node properties added. The\n    arguments to this method can be created with\n    [`NodeProp.add`](#common.NodeProp.add).\n    */\n    extend(...props) {\n        let newTypes = [];\n        for (let type of this.types) {\n            let newProps = null;\n            for (let source of props) {\n                let add = source(type);\n                if (add) {\n                    if (!newProps)\n                        newProps = Object.assign({}, type.props);\n                    newProps[add[0].id] = add[1];\n                }\n            }\n            newTypes.push(newProps ? new NodeType(type.name, newProps, type.id, type.flags) : type);\n        }\n        return new NodeSet(newTypes);\n    }\n}\nconst CachedNode = new WeakMap(), CachedInnerNode = new WeakMap();\n/**\nOptions that control iteration. Can be combined with the `|`\noperator to enable multiple ones.\n*/\nvar IterMode;\n(function (IterMode) {\n    /**\n    When enabled, iteration will only visit [`Tree`](#common.Tree)\n    objects, not nodes packed into\n    [`TreeBuffer`](#common.TreeBuffer)s.\n    */\n    IterMode[IterMode[\"ExcludeBuffers\"] = 1] = \"ExcludeBuffers\";\n    /**\n    Enable this to make iteration include anonymous nodes (such as\n    the nodes that wrap repeated grammar constructs into a balanced\n    tree).\n    */\n    IterMode[IterMode[\"IncludeAnonymous\"] = 2] = \"IncludeAnonymous\";\n    /**\n    By default, regular [mounted](#common.NodeProp^mounted) nodes\n    replace their base node in iteration. Enable this to ignore them\n    instead.\n    */\n    IterMode[IterMode[\"IgnoreMounts\"] = 4] = \"IgnoreMounts\";\n    /**\n    This option only applies in\n    [`enter`](#common.SyntaxNode.enter)-style methods. It tells the\n    library to not enter mounted overlays if one covers the given\n    position.\n    */\n    IterMode[IterMode[\"IgnoreOverlays\"] = 8] = \"IgnoreOverlays\";\n})(IterMode || (IterMode = {}));\n/**\nA piece of syntax tree. There are two ways to approach these\ntrees: the way they are actually stored in memory, and the\nconvenient way.\n\nSyntax trees are stored as a tree of `Tree` and `TreeBuffer`\nobjects. By packing detail information into `TreeBuffer` leaf\nnodes, the representation is made a lot more memory-efficient.\n\nHowever, when you want to actually work with tree nodes, this\nrepresentation is very awkward, so most client code will want to\nuse the [`TreeCursor`](#common.TreeCursor) or\n[`SyntaxNode`](#common.SyntaxNode) interface instead, which provides\na view on some part of this data structure, and can be used to\nmove around to adjacent nodes.\n*/\nclass Tree {\n    /**\n    Construct a new tree. See also [`Tree.build`](#common.Tree^build).\n    */\n    constructor(\n    /**\n    The type of the top node.\n    */\n    type, \n    /**\n    This node's child nodes.\n    */\n    children, \n    /**\n    The positions (offsets relative to the start of this tree) of\n    the children.\n    */\n    positions, \n    /**\n    The total length of this tree\n    */\n    length, \n    /**\n    Per-node [node props](#common.NodeProp) to associate with this node.\n    */\n    props) {\n        this.type = type;\n        this.children = children;\n        this.positions = positions;\n        this.length = length;\n        /**\n        @internal\n        */\n        this.props = null;\n        if (props && props.length) {\n            this.props = Object.create(null);\n            for (let [prop, value] of props)\n                this.props[typeof prop == \"number\" ? prop : prop.id] = value;\n        }\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let mounted = MountedTree.get(this);\n        if (mounted && !mounted.overlay)\n            return mounted.tree.toString();\n        let children = \"\";\n        for (let ch of this.children) {\n            let str = ch.toString();\n            if (str) {\n                if (children)\n                    children += \",\";\n                children += str;\n            }\n        }\n        return !this.type.name ? children :\n            (/\\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) +\n                (children.length ? \"(\" + children + \")\" : \"\");\n    }\n    /**\n    Get a [tree cursor](#common.TreeCursor) positioned at the top of\n    the tree. Mode can be used to [control](#common.IterMode) which\n    nodes the cursor visits.\n    */\n    cursor(mode = 0) {\n        return new TreeCursor(this.topNode, mode);\n    }\n    /**\n    Get a [tree cursor](#common.TreeCursor) pointing into this tree\n    at the given position and side (see\n    [`moveTo`](#common.TreeCursor.moveTo).\n    */\n    cursorAt(pos, side = 0, mode = 0) {\n        let scope = CachedNode.get(this) || this.topNode;\n        let cursor = new TreeCursor(scope);\n        cursor.moveTo(pos, side);\n        CachedNode.set(this, cursor._tree);\n        return cursor;\n    }\n    /**\n    Get a [syntax node](#common.SyntaxNode) object for the top of the\n    tree.\n    */\n    get topNode() {\n        return new TreeNode(this, 0, 0, null);\n    }\n    /**\n    Get the [syntax node](#common.SyntaxNode) at the given position.\n    If `side` is -1, this will move into nodes that end at the\n    position. If 1, it'll move into nodes that start at the\n    position. With 0, it'll only enter nodes that cover the position\n    from both sides.\n    \n    Note that this will not enter\n    [overlays](#common.MountedTree.overlay), and you often want\n    [`resolveInner`](#common.Tree.resolveInner) instead.\n    */\n    resolve(pos, side = 0) {\n        let node = resolveNode(CachedNode.get(this) || this.topNode, pos, side, false);\n        CachedNode.set(this, node);\n        return node;\n    }\n    /**\n    Like [`resolve`](#common.Tree.resolve), but will enter\n    [overlaid](#common.MountedTree.overlay) nodes, producing a syntax node\n    pointing into the innermost overlaid tree at the given position\n    (with parent links going through all parent structure, including\n    the host trees).\n    */\n    resolveInner(pos, side = 0) {\n        let node = resolveNode(CachedInnerNode.get(this) || this.topNode, pos, side, true);\n        CachedInnerNode.set(this, node);\n        return node;\n    }\n    /**\n    In some situations, it can be useful to iterate through all\n    nodes around a position, including those in overlays that don't\n    directly cover the position. This method gives you an iterator\n    that will produce all nodes, from small to big, around the given\n    position.\n    */\n    resolveStack(pos, side = 0) {\n        return stackIterator(this, pos, side);\n    }\n    /**\n    Iterate over the tree and its children, calling `enter` for any\n    node that touches the `from`/`to` region (if given) before\n    running over such a node's children, and `leave` (if given) when\n    leaving the node. When `enter` returns `false`, that node will\n    not have its children iterated over (or `leave` called).\n    */\n    iterate(spec) {\n        let { enter, leave, from = 0, to = this.length } = spec;\n        let mode = spec.mode || 0, anon = (mode & IterMode.IncludeAnonymous) > 0;\n        for (let c = this.cursor(mode | IterMode.IncludeAnonymous);;) {\n            let entered = false;\n            if (c.from <= to && c.to >= from && (!anon && c.type.isAnonymous || enter(c) !== false)) {\n                if (c.firstChild())\n                    continue;\n                entered = true;\n            }\n            for (;;) {\n                if (entered && leave && (anon || !c.type.isAnonymous))\n                    leave(c);\n                if (c.nextSibling())\n                    break;\n                if (!c.parent())\n                    return;\n                entered = true;\n            }\n        }\n    }\n    /**\n    Get the value of the given [node prop](#common.NodeProp) for this\n    node. Works with both per-node and per-type props.\n    */\n    prop(prop) {\n        return !prop.perNode ? this.type.prop(prop) : this.props ? this.props[prop.id] : undefined;\n    }\n    /**\n    Returns the node's [per-node props](#common.NodeProp.perNode) in a\n    format that can be passed to the [`Tree`](#common.Tree)\n    constructor.\n    */\n    get propValues() {\n        let result = [];\n        if (this.props)\n            for (let id in this.props)\n                result.push([+id, this.props[id]]);\n        return result;\n    }\n    /**\n    Balance the direct children of this tree, producing a copy of\n    which may have children grouped into subtrees with type\n    [`NodeType.none`](#common.NodeType^none).\n    */\n    balance(config = {}) {\n        return this.children.length <= 8 /* Balance.BranchFactor */ ? this :\n            balanceRange(NodeType.none, this.children, this.positions, 0, this.children.length, 0, this.length, (children, positions, length) => new Tree(this.type, children, positions, length, this.propValues), config.makeTree || ((children, positions, length) => new Tree(NodeType.none, children, positions, length)));\n    }\n    /**\n    Build a tree from a postfix-ordered buffer of node information,\n    or a cursor over such a buffer.\n    */\n    static build(data) { return buildTree(data); }\n}\n/**\nThe empty tree\n*/\nTree.empty = new Tree(NodeType.none, [], [], 0);\nclass FlatBufferCursor {\n    constructor(buffer, index) {\n        this.buffer = buffer;\n        this.index = index;\n    }\n    get id() { return this.buffer[this.index - 4]; }\n    get start() { return this.buffer[this.index - 3]; }\n    get end() { return this.buffer[this.index - 2]; }\n    get size() { return this.buffer[this.index - 1]; }\n    get pos() { return this.index; }\n    next() { this.index -= 4; }\n    fork() { return new FlatBufferCursor(this.buffer, this.index); }\n}\n/**\nTree buffers contain (type, start, end, endIndex) quads for each\nnode. In such a buffer, nodes are stored in prefix order (parents\nbefore children, with the endIndex of the parent indicating which\nchildren belong to it).\n*/\nclass TreeBuffer {\n    /**\n    Create a tree buffer.\n    */\n    constructor(\n    /**\n    The buffer's content.\n    */\n    buffer, \n    /**\n    The total length of the group of nodes in the buffer.\n    */\n    length, \n    /**\n    The node set used in this buffer.\n    */\n    set) {\n        this.buffer = buffer;\n        this.length = length;\n        this.set = set;\n    }\n    /**\n    @internal\n    */\n    get type() { return NodeType.none; }\n    /**\n    @internal\n    */\n    toString() {\n        let result = [];\n        for (let index = 0; index < this.buffer.length;) {\n            result.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result.join(\",\");\n    }\n    /**\n    @internal\n    */\n    childString(index) {\n        let id = this.buffer[index], endIndex = this.buffer[index + 3];\n        let type = this.set.types[id], result = type.name;\n        if (/\\W/.test(result) && !type.isError)\n            result = JSON.stringify(result);\n        index += 4;\n        if (endIndex == index)\n            return result;\n        let children = [];\n        while (index < endIndex) {\n            children.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result + \"(\" + children.join(\",\") + \")\";\n    }\n    /**\n    @internal\n    */\n    findChild(startIndex, endIndex, dir, pos, side) {\n        let { buffer } = this, pick = -1;\n        for (let i = startIndex; i != endIndex; i = buffer[i + 3]) {\n            if (checkSide(side, pos, buffer[i + 1], buffer[i + 2])) {\n                pick = i;\n                if (dir > 0)\n                    break;\n            }\n        }\n        return pick;\n    }\n    /**\n    @internal\n    */\n    slice(startI, endI, from) {\n        let b = this.buffer;\n        let copy = new Uint16Array(endI - startI), len = 0;\n        for (let i = startI, j = 0; i < endI;) {\n            copy[j++] = b[i++];\n            copy[j++] = b[i++] - from;\n            let to = copy[j++] = b[i++] - from;\n            copy[j++] = b[i++] - startI;\n            len = Math.max(len, to);\n        }\n        return new TreeBuffer(copy, len, this.set);\n    }\n}\nfunction checkSide(side, pos, from, to) {\n    switch (side) {\n        case -2 /* Side.Before */: return from < pos;\n        case -1 /* Side.AtOrBefore */: return to >= pos && from < pos;\n        case 0 /* Side.Around */: return from < pos && to > pos;\n        case 1 /* Side.AtOrAfter */: return from <= pos && to > pos;\n        case 2 /* Side.After */: return to > pos;\n        case 4 /* Side.DontCare */: return true;\n    }\n}\nfunction resolveNode(node, pos, side, overlays) {\n    var _a;\n    // Move up to a node that actually holds the position, if possible\n    while (node.from == node.to ||\n        (side < 1 ? node.from >= pos : node.from > pos) ||\n        (side > -1 ? node.to <= pos : node.to < pos)) {\n        let parent = !overlays && node instanceof TreeNode && node.index < 0 ? null : node.parent;\n        if (!parent)\n            return node;\n        node = parent;\n    }\n    let mode = overlays ? 0 : IterMode.IgnoreOverlays;\n    // Must go up out of overlays when those do not overlap with pos\n    if (overlays)\n        for (let scan = node, parent = scan.parent; parent; scan = parent, parent = scan.parent) {\n            if (scan instanceof TreeNode && scan.index < 0 && ((_a = parent.enter(pos, side, mode)) === null || _a === void 0 ? void 0 : _a.from) != scan.from)\n                node = parent;\n        }\n    for (;;) {\n        let inner = node.enter(pos, side, mode);\n        if (!inner)\n            return node;\n        node = inner;\n    }\n}\nclass BaseNode {\n    cursor(mode = 0) { return new TreeCursor(this, mode); }\n    getChild(type, before = null, after = null) {\n        let r = getChildren(this, type, before, after);\n        return r.length ? r[0] : null;\n    }\n    getChildren(type, before = null, after = null) {\n        return getChildren(this, type, before, after);\n    }\n    resolve(pos, side = 0) {\n        return resolveNode(this, pos, side, false);\n    }\n    resolveInner(pos, side = 0) {\n        return resolveNode(this, pos, side, true);\n    }\n    matchContext(context) {\n        return matchNodeContext(this.parent, context);\n    }\n    enterUnfinishedNodesBefore(pos) {\n        let scan = this.childBefore(pos), node = this;\n        while (scan) {\n            let last = scan.lastChild;\n            if (!last || last.to != scan.to)\n                break;\n            if (last.type.isError && last.from == last.to) {\n                node = scan;\n                scan = last.prevSibling;\n            }\n            else {\n                scan = last;\n            }\n        }\n        return node;\n    }\n    get node() { return this; }\n    get next() { return this.parent; }\n}\nclass TreeNode extends BaseNode {\n    constructor(_tree, from, \n    // Index in parent node, set to -1 if the node is not a direct child of _parent.node (overlay)\n    index, _parent) {\n        super();\n        this._tree = _tree;\n        this.from = from;\n        this.index = index;\n        this._parent = _parent;\n    }\n    get type() { return this._tree.type; }\n    get name() { return this._tree.type.name; }\n    get to() { return this.from + this._tree.length; }\n    nextChild(i, dir, pos, side, mode = 0) {\n        for (let parent = this;;) {\n            for (let { children, positions } = parent._tree, e = dir > 0 ? children.length : -1; i != e; i += dir) {\n                let next = children[i], start = positions[i] + parent.from;\n                if (!checkSide(side, pos, start, start + next.length))\n                    continue;\n                if (next instanceof TreeBuffer) {\n                    if (mode & IterMode.ExcludeBuffers)\n                        continue;\n                    let index = next.findChild(0, next.buffer.length, dir, pos - start, side);\n                    if (index > -1)\n                        return new BufferNode(new BufferContext(parent, next, i, start), null, index);\n                }\n                else if ((mode & IterMode.IncludeAnonymous) || (!next.type.isAnonymous || hasChild(next))) {\n                    let mounted;\n                    if (!(mode & IterMode.IgnoreMounts) && (mounted = MountedTree.get(next)) && !mounted.overlay)\n                        return new TreeNode(mounted.tree, start, i, parent);\n                    let inner = new TreeNode(next, start, i, parent);\n                    return (mode & IterMode.IncludeAnonymous) || !inner.type.isAnonymous ? inner\n                        : inner.nextChild(dir < 0 ? next.children.length - 1 : 0, dir, pos, side);\n                }\n            }\n            if ((mode & IterMode.IncludeAnonymous) || !parent.type.isAnonymous)\n                return null;\n            if (parent.index >= 0)\n                i = parent.index + dir;\n            else\n                i = dir < 0 ? -1 : parent._parent._tree.children.length;\n            parent = parent._parent;\n            if (!parent)\n                return null;\n        }\n    }\n    get firstChild() { return this.nextChild(0, 1, 0, 4 /* Side.DontCare */); }\n    get lastChild() { return this.nextChild(this._tree.children.length - 1, -1, 0, 4 /* Side.DontCare */); }\n    childAfter(pos) { return this.nextChild(0, 1, pos, 2 /* Side.After */); }\n    childBefore(pos) { return this.nextChild(this._tree.children.length - 1, -1, pos, -2 /* Side.Before */); }\n    enter(pos, side, mode = 0) {\n        let mounted;\n        if (!(mode & IterMode.IgnoreOverlays) && (mounted = MountedTree.get(this._tree)) && mounted.overlay) {\n            let rPos = pos - this.from;\n            for (let { from, to } of mounted.overlay) {\n                if ((side > 0 ? from <= rPos : from < rPos) &&\n                    (side < 0 ? to >= rPos : to > rPos))\n                    return new TreeNode(mounted.tree, mounted.overlay[0].from + this.from, -1, this);\n            }\n        }\n        return this.nextChild(0, 1, pos, side, mode);\n    }\n    nextSignificantParent() {\n        let val = this;\n        while (val.type.isAnonymous && val._parent)\n            val = val._parent;\n        return val;\n    }\n    get parent() {\n        return this._parent ? this._parent.nextSignificantParent() : null;\n    }\n    get nextSibling() {\n        return this._parent && this.index >= 0 ? this._parent.nextChild(this.index + 1, 1, 0, 4 /* Side.DontCare */) : null;\n    }\n    get prevSibling() {\n        return this._parent && this.index >= 0 ? this._parent.nextChild(this.index - 1, -1, 0, 4 /* Side.DontCare */) : null;\n    }\n    get tree() { return this._tree; }\n    toTree() { return this._tree; }\n    /**\n    @internal\n    */\n    toString() { return this._tree.toString(); }\n}\nfunction getChildren(node, type, before, after) {\n    let cur = node.cursor(), result = [];\n    if (!cur.firstChild())\n        return result;\n    if (before != null)\n        for (let found = false; !found;) {\n            found = cur.type.is(before);\n            if (!cur.nextSibling())\n                return result;\n        }\n    for (;;) {\n        if (after != null && cur.type.is(after))\n            return result;\n        if (cur.type.is(type))\n            result.push(cur.node);\n        if (!cur.nextSibling())\n            return after == null ? result : [];\n    }\n}\nfunction matchNodeContext(node, context, i = context.length - 1) {\n    for (let p = node; i >= 0; p = p.parent) {\n        if (!p)\n            return false;\n        if (!p.type.isAnonymous) {\n            if (context[i] && context[i] != p.name)\n                return false;\n            i--;\n        }\n    }\n    return true;\n}\nclass BufferContext {\n    constructor(parent, buffer, index, start) {\n        this.parent = parent;\n        this.buffer = buffer;\n        this.index = index;\n        this.start = start;\n    }\n}\nclass BufferNode extends BaseNode {\n    get name() { return this.type.name; }\n    get from() { return this.context.start + this.context.buffer.buffer[this.index + 1]; }\n    get to() { return this.context.start + this.context.buffer.buffer[this.index + 2]; }\n    constructor(context, _parent, index) {\n        super();\n        this.context = context;\n        this._parent = _parent;\n        this.index = index;\n        this.type = context.buffer.set.types[context.buffer.buffer[index]];\n    }\n    child(dir, pos, side) {\n        let { buffer } = this.context;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, pos - this.context.start, side);\n        return index < 0 ? null : new BufferNode(this.context, this, index);\n    }\n    get firstChild() { return this.child(1, 0, 4 /* Side.DontCare */); }\n    get lastChild() { return this.child(-1, 0, 4 /* Side.DontCare */); }\n    childAfter(pos) { return this.child(1, pos, 2 /* Side.After */); }\n    childBefore(pos) { return this.child(-1, pos, -2 /* Side.Before */); }\n    enter(pos, side, mode = 0) {\n        if (mode & IterMode.ExcludeBuffers)\n            return null;\n        let { buffer } = this.context;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], side > 0 ? 1 : -1, pos - this.context.start, side);\n        return index < 0 ? null : new BufferNode(this.context, this, index);\n    }\n    get parent() {\n        return this._parent || this.context.parent.nextSignificantParent();\n    }\n    externalSibling(dir) {\n        return this._parent ? null : this.context.parent.nextChild(this.context.index + dir, dir, 0, 4 /* Side.DontCare */);\n    }\n    get nextSibling() {\n        let { buffer } = this.context;\n        let after = buffer.buffer[this.index + 3];\n        if (after < (this._parent ? buffer.buffer[this._parent.index + 3] : buffer.buffer.length))\n            return new BufferNode(this.context, this._parent, after);\n        return this.externalSibling(1);\n    }\n    get prevSibling() {\n        let { buffer } = this.context;\n        let parentStart = this._parent ? this._parent.index + 4 : 0;\n        if (this.index == parentStart)\n            return this.externalSibling(-1);\n        return new BufferNode(this.context, this._parent, buffer.findChild(parentStart, this.index, -1, 0, 4 /* Side.DontCare */));\n    }\n    get tree() { return null; }\n    toTree() {\n        let children = [], positions = [];\n        let { buffer } = this.context;\n        let startI = this.index + 4, endI = buffer.buffer[this.index + 3];\n        if (endI > startI) {\n            let from = buffer.buffer[this.index + 1];\n            children.push(buffer.slice(startI, endI, from));\n            positions.push(0);\n        }\n        return new Tree(this.type, children, positions, this.to - this.from);\n    }\n    /**\n    @internal\n    */\n    toString() { return this.context.buffer.childString(this.index); }\n}\nfunction iterStack(heads) {\n    if (!heads.length)\n        return null;\n    let pick = 0, picked = heads[0];\n    for (let i = 1; i < heads.length; i++) {\n        let node = heads[i];\n        if (node.from > picked.from || node.to < picked.to) {\n            picked = node;\n            pick = i;\n        }\n    }\n    let next = picked instanceof TreeNode && picked.index < 0 ? null : picked.parent;\n    let newHeads = heads.slice();\n    if (next)\n        newHeads[pick] = next;\n    else\n        newHeads.splice(pick, 1);\n    return new StackIterator(newHeads, picked);\n}\nclass StackIterator {\n    constructor(heads, node) {\n        this.heads = heads;\n        this.node = node;\n    }\n    get next() { return iterStack(this.heads); }\n}\nfunction stackIterator(tree, pos, side) {\n    let inner = tree.resolveInner(pos, side), layers = null;\n    for (let scan = inner instanceof TreeNode ? inner : inner.context.parent; scan; scan = scan.parent) {\n        if (scan.index < 0) { // This is an overlay root\n            let parent = scan.parent;\n            (layers || (layers = [inner])).push(parent.resolve(pos, side));\n            scan = parent;\n        }\n        else {\n            let mount = MountedTree.get(scan.tree);\n            // Relevant overlay branching off\n            if (mount && mount.overlay && mount.overlay[0].from <= pos && mount.overlay[mount.overlay.length - 1].to >= pos) {\n                let root = new TreeNode(mount.tree, mount.overlay[0].from + scan.from, -1, scan);\n                (layers || (layers = [inner])).push(resolveNode(root, pos, side, false));\n            }\n        }\n    }\n    return layers ? iterStack(layers) : inner;\n}\n/**\nA tree cursor object focuses on a given node in a syntax tree, and\nallows you to move to adjacent nodes.\n*/\nclass TreeCursor {\n    /**\n    Shorthand for `.type.name`.\n    */\n    get name() { return this.type.name; }\n    /**\n    @internal\n    */\n    constructor(node, \n    /**\n    @internal\n    */\n    mode = 0) {\n        this.mode = mode;\n        /**\n        @internal\n        */\n        this.buffer = null;\n        this.stack = [];\n        /**\n        @internal\n        */\n        this.index = 0;\n        this.bufferNode = null;\n        if (node instanceof TreeNode) {\n            this.yieldNode(node);\n        }\n        else {\n            this._tree = node.context.parent;\n            this.buffer = node.context;\n            for (let n = node._parent; n; n = n._parent)\n                this.stack.unshift(n.index);\n            this.bufferNode = node;\n            this.yieldBuf(node.index);\n        }\n    }\n    yieldNode(node) {\n        if (!node)\n            return false;\n        this._tree = node;\n        this.type = node.type;\n        this.from = node.from;\n        this.to = node.to;\n        return true;\n    }\n    yieldBuf(index, type) {\n        this.index = index;\n        let { start, buffer } = this.buffer;\n        this.type = type || buffer.set.types[buffer.buffer[index]];\n        this.from = start + buffer.buffer[index + 1];\n        this.to = start + buffer.buffer[index + 2];\n        return true;\n    }\n    /**\n    @internal\n    */\n    yield(node) {\n        if (!node)\n            return false;\n        if (node instanceof TreeNode) {\n            this.buffer = null;\n            return this.yieldNode(node);\n        }\n        this.buffer = node.context;\n        return this.yieldBuf(node.index, node.type);\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();\n    }\n    /**\n    @internal\n    */\n    enterChild(dir, pos, side) {\n        if (!this.buffer)\n            return this.yield(this._tree.nextChild(dir < 0 ? this._tree._tree.children.length - 1 : 0, dir, pos, side, this.mode));\n        let { buffer } = this.buffer;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, pos - this.buffer.start, side);\n        if (index < 0)\n            return false;\n        this.stack.push(this.index);\n        return this.yieldBuf(index);\n    }\n    /**\n    Move the cursor to this node's first child. When this returns\n    false, the node has no child, and the cursor has not been moved.\n    */\n    firstChild() { return this.enterChild(1, 0, 4 /* Side.DontCare */); }\n    /**\n    Move the cursor to this node's last child.\n    */\n    lastChild() { return this.enterChild(-1, 0, 4 /* Side.DontCare */); }\n    /**\n    Move the cursor to the first child that ends after `pos`.\n    */\n    childAfter(pos) { return this.enterChild(1, pos, 2 /* Side.After */); }\n    /**\n    Move to the last child that starts before `pos`.\n    */\n    childBefore(pos) { return this.enterChild(-1, pos, -2 /* Side.Before */); }\n    /**\n    Move the cursor to the child around `pos`. If side is -1 the\n    child may end at that position, when 1 it may start there. This\n    will also enter [overlaid](#common.MountedTree.overlay)\n    [mounted](#common.NodeProp^mounted) trees unless `overlays` is\n    set to false.\n    */\n    enter(pos, side, mode = this.mode) {\n        if (!this.buffer)\n            return this.yield(this._tree.enter(pos, side, mode));\n        return mode & IterMode.ExcludeBuffers ? false : this.enterChild(1, pos, side);\n    }\n    /**\n    Move to the node's parent node, if this isn't the top node.\n    */\n    parent() {\n        if (!this.buffer)\n            return this.yieldNode((this.mode & IterMode.IncludeAnonymous) ? this._tree._parent : this._tree.parent);\n        if (this.stack.length)\n            return this.yieldBuf(this.stack.pop());\n        let parent = (this.mode & IterMode.IncludeAnonymous) ? this.buffer.parent : this.buffer.parent.nextSignificantParent();\n        this.buffer = null;\n        return this.yieldNode(parent);\n    }\n    /**\n    @internal\n    */\n    sibling(dir) {\n        if (!this.buffer)\n            return !this._tree._parent ? false\n                : this.yield(this._tree.index < 0 ? null\n                    : this._tree._parent.nextChild(this._tree.index + dir, dir, 0, 4 /* Side.DontCare */, this.mode));\n        let { buffer } = this.buffer, d = this.stack.length - 1;\n        if (dir < 0) {\n            let parentStart = d < 0 ? 0 : this.stack[d] + 4;\n            if (this.index != parentStart)\n                return this.yieldBuf(buffer.findChild(parentStart, this.index, -1, 0, 4 /* Side.DontCare */));\n        }\n        else {\n            let after = buffer.buffer[this.index + 3];\n            if (after < (d < 0 ? buffer.buffer.length : buffer.buffer[this.stack[d] + 3]))\n                return this.yieldBuf(after);\n        }\n        return d < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + dir, dir, 0, 4 /* Side.DontCare */, this.mode)) : false;\n    }\n    /**\n    Move to this node's next sibling, if any.\n    */\n    nextSibling() { return this.sibling(1); }\n    /**\n    Move to this node's previous sibling, if any.\n    */\n    prevSibling() { return this.sibling(-1); }\n    atLastNode(dir) {\n        let index, parent, { buffer } = this;\n        if (buffer) {\n            if (dir > 0) {\n                if (this.index < buffer.buffer.buffer.length)\n                    return false;\n            }\n            else {\n                for (let i = 0; i < this.index; i++)\n                    if (buffer.buffer.buffer[i + 3] < this.index)\n                        return false;\n            }\n            ({ index, parent } = buffer);\n        }\n        else {\n            ({ index, _parent: parent } = this._tree);\n        }\n        for (; parent; { index, _parent: parent } = parent) {\n            if (index > -1)\n                for (let i = index + dir, e = dir < 0 ? -1 : parent._tree.children.length; i != e; i += dir) {\n                    let child = parent._tree.children[i];\n                    if ((this.mode & IterMode.IncludeAnonymous) ||\n                        child instanceof TreeBuffer ||\n                        !child.type.isAnonymous ||\n                        hasChild(child))\n                        return false;\n                }\n        }\n        return true;\n    }\n    move(dir, enter) {\n        if (enter && this.enterChild(dir, 0, 4 /* Side.DontCare */))\n            return true;\n        for (;;) {\n            if (this.sibling(dir))\n                return true;\n            if (this.atLastNode(dir) || !this.parent())\n                return false;\n        }\n    }\n    /**\n    Move to the next node in a\n    [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order,_NLR)\n    traversal, going from a node to its first child or, if the\n    current node is empty or `enter` is false, its next sibling or\n    the next sibling of the first parent node that has one.\n    */\n    next(enter = true) { return this.move(1, enter); }\n    /**\n    Move to the next node in a last-to-first pre-order traversal. A\n    node is followed by its last child or, if it has none, its\n    previous sibling or the previous sibling of the first parent\n    node that has one.\n    */\n    prev(enter = true) { return this.move(-1, enter); }\n    /**\n    Move the cursor to the innermost node that covers `pos`. If\n    `side` is -1, it will enter nodes that end at `pos`. If it is 1,\n    it will enter nodes that start at `pos`.\n    */\n    moveTo(pos, side = 0) {\n        // Move up to a node that actually holds the position, if possible\n        while (this.from == this.to ||\n            (side < 1 ? this.from >= pos : this.from > pos) ||\n            (side > -1 ? this.to <= pos : this.to < pos))\n            if (!this.parent())\n                break;\n        // Then scan down into child nodes as far as possible\n        while (this.enterChild(1, pos, side)) { }\n        return this;\n    }\n    /**\n    Get a [syntax node](#common.SyntaxNode) at the cursor's current\n    position.\n    */\n    get node() {\n        if (!this.buffer)\n            return this._tree;\n        let cache = this.bufferNode, result = null, depth = 0;\n        if (cache && cache.context == this.buffer) {\n            scan: for (let index = this.index, d = this.stack.length; d >= 0;) {\n                for (let c = cache; c; c = c._parent)\n                    if (c.index == index) {\n                        if (index == this.index)\n                            return c;\n                        result = c;\n                        depth = d + 1;\n                        break scan;\n                    }\n                index = this.stack[--d];\n            }\n        }\n        for (let i = depth; i < this.stack.length; i++)\n            result = new BufferNode(this.buffer, result, this.stack[i]);\n        return this.bufferNode = new BufferNode(this.buffer, result, this.index);\n    }\n    /**\n    Get the [tree](#common.Tree) that represents the current node, if\n    any. Will return null when the node is in a [tree\n    buffer](#common.TreeBuffer).\n    */\n    get tree() {\n        return this.buffer ? null : this._tree._tree;\n    }\n    /**\n    Iterate over the current node and all its descendants, calling\n    `enter` when entering a node and `leave`, if given, when leaving\n    one. When `enter` returns `false`, any children of that node are\n    skipped, and `leave` isn't called for it.\n    */\n    iterate(enter, leave) {\n        for (let depth = 0;;) {\n            let mustLeave = false;\n            if (this.type.isAnonymous || enter(this) !== false) {\n                if (this.firstChild()) {\n                    depth++;\n                    continue;\n                }\n                if (!this.type.isAnonymous)\n                    mustLeave = true;\n            }\n            for (;;) {\n                if (mustLeave && leave)\n                    leave(this);\n                mustLeave = this.type.isAnonymous;\n                if (!depth)\n                    return;\n                if (this.nextSibling())\n                    break;\n                this.parent();\n                depth--;\n                mustLeave = true;\n            }\n        }\n    }\n    /**\n    Test whether the current node matches a given context—a sequence\n    of direct parent node names. Empty strings in the context array\n    are treated as wildcards.\n    */\n    matchContext(context) {\n        if (!this.buffer)\n            return matchNodeContext(this.node.parent, context);\n        let { buffer } = this.buffer, { types } = buffer.set;\n        for (let i = context.length - 1, d = this.stack.length - 1; i >= 0; d--) {\n            if (d < 0)\n                return matchNodeContext(this._tree, context, i);\n            let type = types[buffer.buffer[this.stack[d]]];\n            if (!type.isAnonymous) {\n                if (context[i] && context[i] != type.name)\n                    return false;\n                i--;\n            }\n        }\n        return true;\n    }\n}\nfunction hasChild(tree) {\n    return tree.children.some(ch => ch instanceof TreeBuffer || !ch.type.isAnonymous || hasChild(ch));\n}\nfunction buildTree(data) {\n    var _a;\n    let { buffer, nodeSet, maxBufferLength = DefaultBufferLength, reused = [], minRepeatType = nodeSet.types.length } = data;\n    let cursor = Array.isArray(buffer) ? new FlatBufferCursor(buffer, buffer.length) : buffer;\n    let types = nodeSet.types;\n    let contextHash = 0, lookAhead = 0;\n    function takeNode(parentStart, minPos, children, positions, inRepeat, depth) {\n        let { id, start, end, size } = cursor;\n        let lookAheadAtStart = lookAhead, contextAtStart = contextHash;\n        while (size < 0) {\n            cursor.next();\n            if (size == -1 /* SpecialRecord.Reuse */) {\n                let node = reused[id];\n                children.push(node);\n                positions.push(start - parentStart);\n                return;\n            }\n            else if (size == -3 /* SpecialRecord.ContextChange */) { // Context change\n                contextHash = id;\n                return;\n            }\n            else if (size == -4 /* SpecialRecord.LookAhead */) {\n                lookAhead = id;\n                return;\n            }\n            else {\n                throw new RangeError(`Unrecognized record size: ${size}`);\n            }\n        }\n        let type = types[id], node, buffer;\n        let startPos = start - parentStart;\n        if (end - start <= maxBufferLength && (buffer = findBufferSize(cursor.pos - minPos, inRepeat))) {\n            // Small enough for a buffer, and no reused nodes inside\n            let data = new Uint16Array(buffer.size - buffer.skip);\n            let endPos = cursor.pos - buffer.size, index = data.length;\n            while (cursor.pos > endPos)\n                index = copyToBuffer(buffer.start, data, index);\n            node = new TreeBuffer(data, end - buffer.start, nodeSet);\n            startPos = buffer.start - parentStart;\n        }\n        else { // Make it a node\n            let endPos = cursor.pos - size;\n            cursor.next();\n            let localChildren = [], localPositions = [];\n            let localInRepeat = id >= minRepeatType ? id : -1;\n            let lastGroup = 0, lastEnd = end;\n            while (cursor.pos > endPos) {\n                if (localInRepeat >= 0 && cursor.id == localInRepeat && cursor.size >= 0) {\n                    if (cursor.end <= lastEnd - maxBufferLength) {\n                        makeRepeatLeaf(localChildren, localPositions, start, lastGroup, cursor.end, lastEnd, localInRepeat, lookAheadAtStart, contextAtStart);\n                        lastGroup = localChildren.length;\n                        lastEnd = cursor.end;\n                    }\n                    cursor.next();\n                }\n                else if (depth > 2500 /* CutOff.Depth */) {\n                    takeFlatNode(start, endPos, localChildren, localPositions);\n                }\n                else {\n                    takeNode(start, endPos, localChildren, localPositions, localInRepeat, depth + 1);\n                }\n            }\n            if (localInRepeat >= 0 && lastGroup > 0 && lastGroup < localChildren.length)\n                makeRepeatLeaf(localChildren, localPositions, start, lastGroup, start, lastEnd, localInRepeat, lookAheadAtStart, contextAtStart);\n            localChildren.reverse();\n            localPositions.reverse();\n            if (localInRepeat > -1 && lastGroup > 0) {\n                let make = makeBalanced(type, contextAtStart);\n                node = balanceRange(type, localChildren, localPositions, 0, localChildren.length, 0, end - start, make, make);\n            }\n            else {\n                node = makeTree(type, localChildren, localPositions, end - start, lookAheadAtStart - end, contextAtStart);\n            }\n        }\n        children.push(node);\n        positions.push(startPos);\n    }\n    function takeFlatNode(parentStart, minPos, children, positions) {\n        let nodes = []; // Temporary, inverted array of leaf nodes found, with absolute positions\n        let nodeCount = 0, stopAt = -1;\n        while (cursor.pos > minPos) {\n            let { id, start, end, size } = cursor;\n            if (size > 4) { // Not a leaf\n                cursor.next();\n            }\n            else if (stopAt > -1 && start < stopAt) {\n                break;\n            }\n            else {\n                if (stopAt < 0)\n                    stopAt = end - maxBufferLength;\n                nodes.push(id, start, end);\n                nodeCount++;\n                cursor.next();\n            }\n        }\n        if (nodeCount) {\n            let buffer = new Uint16Array(nodeCount * 4);\n            let start = nodes[nodes.length - 2];\n            for (let i = nodes.length - 3, j = 0; i >= 0; i -= 3) {\n                buffer[j++] = nodes[i];\n                buffer[j++] = nodes[i + 1] - start;\n                buffer[j++] = nodes[i + 2] - start;\n                buffer[j++] = j;\n            }\n            children.push(new TreeBuffer(buffer, nodes[2] - start, nodeSet));\n            positions.push(start - parentStart);\n        }\n    }\n    function makeBalanced(type, contextHash) {\n        return (children, positions, length) => {\n            let lookAhead = 0, lastI = children.length - 1, last, lookAheadProp;\n            if (lastI >= 0 && (last = children[lastI]) instanceof Tree) {\n                if (!lastI && last.type == type && last.length == length)\n                    return last;\n                if (lookAheadProp = last.prop(NodeProp.lookAhead))\n                    lookAhead = positions[lastI] + last.length + lookAheadProp;\n            }\n            return makeTree(type, children, positions, length, lookAhead, contextHash);\n        };\n    }\n    function makeRepeatLeaf(children, positions, base, i, from, to, type, lookAhead, contextHash) {\n        let localChildren = [], localPositions = [];\n        while (children.length > i) {\n            localChildren.push(children.pop());\n            localPositions.push(positions.pop() + base - from);\n        }\n        children.push(makeTree(nodeSet.types[type], localChildren, localPositions, to - from, lookAhead - to, contextHash));\n        positions.push(from - base);\n    }\n    function makeTree(type, children, positions, length, lookAhead, contextHash, props) {\n        if (contextHash) {\n            let pair = [NodeProp.contextHash, contextHash];\n            props = props ? [pair].concat(props) : [pair];\n        }\n        if (lookAhead > 25) {\n            let pair = [NodeProp.lookAhead, lookAhead];\n            props = props ? [pair].concat(props) : [pair];\n        }\n        return new Tree(type, children, positions, length, props);\n    }\n    function findBufferSize(maxSize, inRepeat) {\n        // Scan through the buffer to find previous siblings that fit\n        // together in a TreeBuffer, and don't contain any reused nodes\n        // (which can't be stored in a buffer).\n        // If `inRepeat` is > -1, ignore node boundaries of that type for\n        // nesting, but make sure the end falls either at the start\n        // (`maxSize`) or before such a node.\n        let fork = cursor.fork();\n        let size = 0, start = 0, skip = 0, minStart = fork.end - maxBufferLength;\n        let result = { size: 0, start: 0, skip: 0 };\n        scan: for (let minPos = fork.pos - maxSize; fork.pos > minPos;) {\n            let nodeSize = fork.size;\n            // Pretend nested repeat nodes of the same type don't exist\n            if (fork.id == inRepeat && nodeSize >= 0) {\n                // Except that we store the current state as a valid return\n                // value.\n                result.size = size;\n                result.start = start;\n                result.skip = skip;\n                skip += 4;\n                size += 4;\n                fork.next();\n                continue;\n            }\n            let startPos = fork.pos - nodeSize;\n            if (nodeSize < 0 || startPos < minPos || fork.start < minStart)\n                break;\n            let localSkipped = fork.id >= minRepeatType ? 4 : 0;\n            let nodeStart = fork.start;\n            fork.next();\n            while (fork.pos > startPos) {\n                if (fork.size < 0) {\n                    if (fork.size == -3 /* SpecialRecord.ContextChange */)\n                        localSkipped += 4;\n                    else\n                        break scan;\n                }\n                else if (fork.id >= minRepeatType) {\n                    localSkipped += 4;\n                }\n                fork.next();\n            }\n            start = nodeStart;\n            size += nodeSize;\n            skip += localSkipped;\n        }\n        if (inRepeat < 0 || size == maxSize) {\n            result.size = size;\n            result.start = start;\n            result.skip = skip;\n        }\n        return result.size > 4 ? result : undefined;\n    }\n    function copyToBuffer(bufferStart, buffer, index) {\n        let { id, start, end, size } = cursor;\n        cursor.next();\n        if (size >= 0 && id < minRepeatType) {\n            let startIndex = index;\n            if (size > 4) {\n                let endPos = cursor.pos - (size - 4);\n                while (cursor.pos > endPos)\n                    index = copyToBuffer(bufferStart, buffer, index);\n            }\n            buffer[--index] = startIndex;\n            buffer[--index] = end - bufferStart;\n            buffer[--index] = start - bufferStart;\n            buffer[--index] = id;\n        }\n        else if (size == -3 /* SpecialRecord.ContextChange */) {\n            contextHash = id;\n        }\n        else if (size == -4 /* SpecialRecord.LookAhead */) {\n            lookAhead = id;\n        }\n        return index;\n    }\n    let children = [], positions = [];\n    while (cursor.pos > 0)\n        takeNode(data.start || 0, data.bufferStart || 0, children, positions, -1, 0);\n    let length = (_a = data.length) !== null && _a !== void 0 ? _a : (children.length ? positions[0] + children[0].length : 0);\n    return new Tree(types[data.topID], children.reverse(), positions.reverse(), length);\n}\nconst nodeSizeCache = new WeakMap;\nfunction nodeSize(balanceType, node) {\n    if (!balanceType.isAnonymous || node instanceof TreeBuffer || node.type != balanceType)\n        return 1;\n    let size = nodeSizeCache.get(node);\n    if (size == null) {\n        size = 1;\n        for (let child of node.children) {\n            if (child.type != balanceType || !(child instanceof Tree)) {\n                size = 1;\n                break;\n            }\n            size += nodeSize(balanceType, child);\n        }\n        nodeSizeCache.set(node, size);\n    }\n    return size;\n}\nfunction balanceRange(\n// The type the balanced tree's inner nodes.\nbalanceType, \n// The direct children and their positions\nchildren, positions, \n// The index range in children/positions to use\nfrom, to, \n// The start position of the nodes, relative to their parent.\nstart, \n// Length of the outer node\nlength, \n// Function to build the top node of the balanced tree\nmkTop, \n// Function to build internal nodes for the balanced tree\nmkTree) {\n    let total = 0;\n    for (let i = from; i < to; i++)\n        total += nodeSize(balanceType, children[i]);\n    let maxChild = Math.ceil((total * 1.5) / 8 /* Balance.BranchFactor */);\n    let localChildren = [], localPositions = [];\n    function divide(children, positions, from, to, offset) {\n        for (let i = from; i < to;) {\n            let groupFrom = i, groupStart = positions[i], groupSize = nodeSize(balanceType, children[i]);\n            i++;\n            for (; i < to; i++) {\n                let nextSize = nodeSize(balanceType, children[i]);\n                if (groupSize + nextSize >= maxChild)\n                    break;\n                groupSize += nextSize;\n            }\n            if (i == groupFrom + 1) {\n                if (groupSize > maxChild) {\n                    let only = children[groupFrom]; // Only trees can have a size > 1\n                    divide(only.children, only.positions, 0, only.children.length, positions[groupFrom] + offset);\n                    continue;\n                }\n                localChildren.push(children[groupFrom]);\n            }\n            else {\n                let length = positions[i - 1] + children[i - 1].length - groupStart;\n                localChildren.push(balanceRange(balanceType, children, positions, groupFrom, i, groupStart, length, null, mkTree));\n            }\n            localPositions.push(groupStart + offset - start);\n        }\n    }\n    divide(children, positions, from, to, 0);\n    return (mkTop || mkTree)(localChildren, localPositions, length);\n}\n/**\nProvides a way to associate values with pieces of trees. As long\nas that part of the tree is reused, the associated values can be\nretrieved from an updated tree.\n*/\nclass NodeWeakMap {\n    constructor() {\n        this.map = new WeakMap();\n    }\n    setBuffer(buffer, index, value) {\n        let inner = this.map.get(buffer);\n        if (!inner)\n            this.map.set(buffer, inner = new Map);\n        inner.set(index, value);\n    }\n    getBuffer(buffer, index) {\n        let inner = this.map.get(buffer);\n        return inner && inner.get(index);\n    }\n    /**\n    Set the value for this syntax node.\n    */\n    set(node, value) {\n        if (node instanceof BufferNode)\n            this.setBuffer(node.context.buffer, node.index, value);\n        else if (node instanceof TreeNode)\n            this.map.set(node.tree, value);\n    }\n    /**\n    Retrieve value for this syntax node, if it exists in the map.\n    */\n    get(node) {\n        return node instanceof BufferNode ? this.getBuffer(node.context.buffer, node.index)\n            : node instanceof TreeNode ? this.map.get(node.tree) : undefined;\n    }\n    /**\n    Set the value for the node that a cursor currently points to.\n    */\n    cursorSet(cursor, value) {\n        if (cursor.buffer)\n            this.setBuffer(cursor.buffer.buffer, cursor.index, value);\n        else\n            this.map.set(cursor.tree, value);\n    }\n    /**\n    Retrieve the value for the node that a cursor currently points\n    to.\n    */\n    cursorGet(cursor) {\n        return cursor.buffer ? this.getBuffer(cursor.buffer.buffer, cursor.index) : this.map.get(cursor.tree);\n    }\n}\n\n/**\nTree fragments are used during [incremental\nparsing](#common.Parser.startParse) to track parts of old trees\nthat can be reused in a new parse. An array of fragments is used\nto track regions of an old tree whose nodes might be reused in new\nparses. Use the static\n[`applyChanges`](#common.TreeFragment^applyChanges) method to\nupdate fragments for document changes.\n*/\nclass TreeFragment {\n    /**\n    Construct a tree fragment. You'll usually want to use\n    [`addTree`](#common.TreeFragment^addTree) and\n    [`applyChanges`](#common.TreeFragment^applyChanges) instead of\n    calling this directly.\n    */\n    constructor(\n    /**\n    The start of the unchanged range pointed to by this fragment.\n    This refers to an offset in the _updated_ document (as opposed\n    to the original tree).\n    */\n    from, \n    /**\n    The end of the unchanged range.\n    */\n    to, \n    /**\n    The tree that this fragment is based on.\n    */\n    tree, \n    /**\n    The offset between the fragment's tree and the document that\n    this fragment can be used against. Add this when going from\n    document to tree positions, subtract it to go from tree to\n    document positions.\n    */\n    offset, openStart = false, openEnd = false) {\n        this.from = from;\n        this.to = to;\n        this.tree = tree;\n        this.offset = offset;\n        this.open = (openStart ? 1 /* Open.Start */ : 0) | (openEnd ? 2 /* Open.End */ : 0);\n    }\n    /**\n    Whether the start of the fragment represents the start of a\n    parse, or the end of a change. (In the second case, it may not\n    be safe to reuse some nodes at the start, depending on the\n    parsing algorithm.)\n    */\n    get openStart() { return (this.open & 1 /* Open.Start */) > 0; }\n    /**\n    Whether the end of the fragment represents the end of a\n    full-document parse, or the start of a change.\n    */\n    get openEnd() { return (this.open & 2 /* Open.End */) > 0; }\n    /**\n    Create a set of fragments from a freshly parsed tree, or update\n    an existing set of fragments by replacing the ones that overlap\n    with a tree with content from the new tree. When `partial` is\n    true, the parse is treated as incomplete, and the resulting\n    fragment has [`openEnd`](#common.TreeFragment.openEnd) set to\n    true.\n    */\n    static addTree(tree, fragments = [], partial = false) {\n        let result = [new TreeFragment(0, tree.length, tree, 0, false, partial)];\n        for (let f of fragments)\n            if (f.to > tree.length)\n                result.push(f);\n        return result;\n    }\n    /**\n    Apply a set of edits to an array of fragments, removing or\n    splitting fragments as necessary to remove edited ranges, and\n    adjusting offsets for fragments that moved.\n    */\n    static applyChanges(fragments, changes, minGap = 128) {\n        if (!changes.length)\n            return fragments;\n        let result = [];\n        let fI = 1, nextF = fragments.length ? fragments[0] : null;\n        for (let cI = 0, pos = 0, off = 0;; cI++) {\n            let nextC = cI < changes.length ? changes[cI] : null;\n            let nextPos = nextC ? nextC.fromA : 1e9;\n            if (nextPos - pos >= minGap)\n                while (nextF && nextF.from < nextPos) {\n                    let cut = nextF;\n                    if (pos >= cut.from || nextPos <= cut.to || off) {\n                        let fFrom = Math.max(cut.from, pos) - off, fTo = Math.min(cut.to, nextPos) - off;\n                        cut = fFrom >= fTo ? null : new TreeFragment(fFrom, fTo, cut.tree, cut.offset + off, cI > 0, !!nextC);\n                    }\n                    if (cut)\n                        result.push(cut);\n                    if (nextF.to > nextPos)\n                        break;\n                    nextF = fI < fragments.length ? fragments[fI++] : null;\n                }\n            if (!nextC)\n                break;\n            pos = nextC.toA;\n            off = nextC.toA - nextC.toB;\n        }\n        return result;\n    }\n}\n/**\nA superclass that parsers should extend.\n*/\nclass Parser {\n    /**\n    Start a parse, returning a [partial parse](#common.PartialParse)\n    object. [`fragments`](#common.TreeFragment) can be passed in to\n    make the parse incremental.\n    \n    By default, the entire input is parsed. You can pass `ranges`,\n    which should be a sorted array of non-empty, non-overlapping\n    ranges, to parse only those ranges. The tree returned in that\n    case will start at `ranges[0].from`.\n    */\n    startParse(input, fragments, ranges) {\n        if (typeof input == \"string\")\n            input = new StringInput(input);\n        ranges = !ranges ? [new Range(0, input.length)] : ranges.length ? ranges.map(r => new Range(r.from, r.to)) : [new Range(0, 0)];\n        return this.createParse(input, fragments || [], ranges);\n    }\n    /**\n    Run a full parse, returning the resulting tree.\n    */\n    parse(input, fragments, ranges) {\n        let parse = this.startParse(input, fragments, ranges);\n        for (;;) {\n            let done = parse.advance();\n            if (done)\n                return done;\n        }\n    }\n}\nclass StringInput {\n    constructor(string) {\n        this.string = string;\n    }\n    get length() { return this.string.length; }\n    chunk(from) { return this.string.slice(from); }\n    get lineChunks() { return false; }\n    read(from, to) { return this.string.slice(from, to); }\n}\n\n/**\nCreate a parse wrapper that, after the inner parse completes,\nscans its tree for mixed language regions with the `nest`\nfunction, runs the resulting [inner parses](#common.NestedParse),\nand then [mounts](#common.NodeProp^mounted) their results onto the\ntree.\n*/\nfunction parseMixed(nest) {\n    return (parse, input, fragments, ranges) => new MixedParse(parse, nest, input, fragments, ranges);\n}\nclass InnerParse {\n    constructor(parser, parse, overlay, target, from) {\n        this.parser = parser;\n        this.parse = parse;\n        this.overlay = overlay;\n        this.target = target;\n        this.from = from;\n    }\n}\nfunction checkRanges(ranges) {\n    if (!ranges.length || ranges.some(r => r.from >= r.to))\n        throw new RangeError(\"Invalid inner parse ranges given: \" + JSON.stringify(ranges));\n}\nclass ActiveOverlay {\n    constructor(parser, predicate, mounts, index, start, target, prev) {\n        this.parser = parser;\n        this.predicate = predicate;\n        this.mounts = mounts;\n        this.index = index;\n        this.start = start;\n        this.target = target;\n        this.prev = prev;\n        this.depth = 0;\n        this.ranges = [];\n    }\n}\nconst stoppedInner = new NodeProp({ perNode: true });\nclass MixedParse {\n    constructor(base, nest, input, fragments, ranges) {\n        this.nest = nest;\n        this.input = input;\n        this.fragments = fragments;\n        this.ranges = ranges;\n        this.inner = [];\n        this.innerDone = 0;\n        this.baseTree = null;\n        this.stoppedAt = null;\n        this.baseParse = base;\n    }\n    advance() {\n        if (this.baseParse) {\n            let done = this.baseParse.advance();\n            if (!done)\n                return null;\n            this.baseParse = null;\n            this.baseTree = done;\n            this.startInner();\n            if (this.stoppedAt != null)\n                for (let inner of this.inner)\n                    inner.parse.stopAt(this.stoppedAt);\n        }\n        if (this.innerDone == this.inner.length) {\n            let result = this.baseTree;\n            if (this.stoppedAt != null)\n                result = new Tree(result.type, result.children, result.positions, result.length, result.propValues.concat([[stoppedInner, this.stoppedAt]]));\n            return result;\n        }\n        let inner = this.inner[this.innerDone], done = inner.parse.advance();\n        if (done) {\n            this.innerDone++;\n            // This is a somewhat dodgy but super helpful hack where we\n            // patch up nodes created by the inner parse (and thus\n            // presumably not aliased anywhere else) to hold the information\n            // about the inner parse.\n            let props = Object.assign(Object.create(null), inner.target.props);\n            props[NodeProp.mounted.id] = new MountedTree(done, inner.overlay, inner.parser);\n            inner.target.props = props;\n        }\n        return null;\n    }\n    get parsedPos() {\n        if (this.baseParse)\n            return 0;\n        let pos = this.input.length;\n        for (let i = this.innerDone; i < this.inner.length; i++) {\n            if (this.inner[i].from < pos)\n                pos = Math.min(pos, this.inner[i].parse.parsedPos);\n        }\n        return pos;\n    }\n    stopAt(pos) {\n        this.stoppedAt = pos;\n        if (this.baseParse)\n            this.baseParse.stopAt(pos);\n        else\n            for (let i = this.innerDone; i < this.inner.length; i++)\n                this.inner[i].parse.stopAt(pos);\n    }\n    startInner() {\n        let fragmentCursor = new FragmentCursor(this.fragments);\n        let overlay = null;\n        let covered = null;\n        let cursor = new TreeCursor(new TreeNode(this.baseTree, this.ranges[0].from, 0, null), IterMode.IncludeAnonymous | IterMode.IgnoreMounts);\n        scan: for (let nest, isCovered;;) {\n            let enter = true, range;\n            if (this.stoppedAt != null && cursor.from >= this.stoppedAt) {\n                enter = false;\n            }\n            else if (fragmentCursor.hasNode(cursor)) {\n                if (overlay) {\n                    let match = overlay.mounts.find(m => m.frag.from <= cursor.from && m.frag.to >= cursor.to && m.mount.overlay);\n                    if (match)\n                        for (let r of match.mount.overlay) {\n                            let from = r.from + match.pos, to = r.to + match.pos;\n                            if (from >= cursor.from && to <= cursor.to && !overlay.ranges.some(r => r.from < to && r.to > from))\n                                overlay.ranges.push({ from, to });\n                        }\n                }\n                enter = false;\n            }\n            else if (covered && (isCovered = checkCover(covered.ranges, cursor.from, cursor.to))) {\n                enter = isCovered != 2 /* Cover.Full */;\n            }\n            else if (!cursor.type.isAnonymous && (nest = this.nest(cursor, this.input)) &&\n                (cursor.from < cursor.to || !nest.overlay)) {\n                if (!cursor.tree)\n                    materialize(cursor);\n                let oldMounts = fragmentCursor.findMounts(cursor.from, nest.parser);\n                if (typeof nest.overlay == \"function\") {\n                    overlay = new ActiveOverlay(nest.parser, nest.overlay, oldMounts, this.inner.length, cursor.from, cursor.tree, overlay);\n                }\n                else {\n                    let ranges = punchRanges(this.ranges, nest.overlay ||\n                        (cursor.from < cursor.to ? [new Range(cursor.from, cursor.to)] : []));\n                    if (ranges.length)\n                        checkRanges(ranges);\n                    if (ranges.length || !nest.overlay)\n                        this.inner.push(new InnerParse(nest.parser, ranges.length ? nest.parser.startParse(this.input, enterFragments(oldMounts, ranges), ranges)\n                            : nest.parser.startParse(\"\"), nest.overlay ? nest.overlay.map(r => new Range(r.from - cursor.from, r.to - cursor.from)) : null, cursor.tree, ranges.length ? ranges[0].from : cursor.from));\n                    if (!nest.overlay)\n                        enter = false;\n                    else if (ranges.length)\n                        covered = { ranges, depth: 0, prev: covered };\n                }\n            }\n            else if (overlay && (range = overlay.predicate(cursor))) {\n                if (range === true)\n                    range = new Range(cursor.from, cursor.to);\n                if (range.from < range.to) {\n                    let last = overlay.ranges.length - 1;\n                    if (last >= 0 && overlay.ranges[last].to == range.from)\n                        overlay.ranges[last] = { from: overlay.ranges[last].from, to: range.to };\n                    else\n                        overlay.ranges.push(range);\n                }\n            }\n            if (enter && cursor.firstChild()) {\n                if (overlay)\n                    overlay.depth++;\n                if (covered)\n                    covered.depth++;\n            }\n            else {\n                for (;;) {\n                    if (cursor.nextSibling())\n                        break;\n                    if (!cursor.parent())\n                        break scan;\n                    if (overlay && !--overlay.depth) {\n                        let ranges = punchRanges(this.ranges, overlay.ranges);\n                        if (ranges.length) {\n                            checkRanges(ranges);\n                            this.inner.splice(overlay.index, 0, new InnerParse(overlay.parser, overlay.parser.startParse(this.input, enterFragments(overlay.mounts, ranges), ranges), overlay.ranges.map(r => new Range(r.from - overlay.start, r.to - overlay.start)), overlay.target, ranges[0].from));\n                        }\n                        overlay = overlay.prev;\n                    }\n                    if (covered && !--covered.depth)\n                        covered = covered.prev;\n                }\n            }\n        }\n    }\n}\nfunction checkCover(covered, from, to) {\n    for (let range of covered) {\n        if (range.from >= to)\n            break;\n        if (range.to > from)\n            return range.from <= from && range.to >= to ? 2 /* Cover.Full */ : 1 /* Cover.Partial */;\n    }\n    return 0 /* Cover.None */;\n}\n// Take a piece of buffer and convert it into a stand-alone\n// TreeBuffer.\nfunction sliceBuf(buf, startI, endI, nodes, positions, off) {\n    if (startI < endI) {\n        let from = buf.buffer[startI + 1];\n        nodes.push(buf.slice(startI, endI, from));\n        positions.push(from - off);\n    }\n}\n// This function takes a node that's in a buffer, and converts it, and\n// its parent buffer nodes, into a Tree. This is again acting on the\n// assumption that the trees and buffers have been constructed by the\n// parse that was ran via the mix parser, and thus aren't shared with\n// any other code, making violations of the immutability safe.\nfunction materialize(cursor) {\n    let { node } = cursor, stack = [];\n    let buffer = node.context.buffer;\n    // Scan up to the nearest tree\n    do {\n        stack.push(cursor.index);\n        cursor.parent();\n    } while (!cursor.tree);\n    // Find the index of the buffer in that tree\n    let base = cursor.tree, i = base.children.indexOf(buffer);\n    let buf = base.children[i], b = buf.buffer, newStack = [i];\n    // Split a level in the buffer, putting the nodes before and after\n    // the child that contains `node` into new buffers.\n    function split(startI, endI, type, innerOffset, length, stackPos) {\n        let targetI = stack[stackPos];\n        let children = [], positions = [];\n        sliceBuf(buf, startI, targetI, children, positions, innerOffset);\n        let from = b[targetI + 1], to = b[targetI + 2];\n        newStack.push(children.length);\n        let child = stackPos\n            ? split(targetI + 4, b[targetI + 3], buf.set.types[b[targetI]], from, to - from, stackPos - 1)\n            : node.toTree();\n        children.push(child);\n        positions.push(from - innerOffset);\n        sliceBuf(buf, b[targetI + 3], endI, children, positions, innerOffset);\n        return new Tree(type, children, positions, length);\n    }\n    base.children[i] = split(0, b.length, NodeType.none, 0, buf.length, stack.length - 1);\n    // Move the cursor back to the target node\n    for (let index of newStack) {\n        let tree = cursor.tree.children[index], pos = cursor.tree.positions[index];\n        cursor.yield(new TreeNode(tree, pos + cursor.from, index, cursor._tree));\n    }\n}\nclass StructureCursor {\n    constructor(root, offset) {\n        this.offset = offset;\n        this.done = false;\n        this.cursor = root.cursor(IterMode.IncludeAnonymous | IterMode.IgnoreMounts);\n    }\n    // Move to the first node (in pre-order) that starts at or after `pos`.\n    moveTo(pos) {\n        let { cursor } = this, p = pos - this.offset;\n        while (!this.done && cursor.from < p) {\n            if (cursor.to >= pos && cursor.enter(p, 1, IterMode.IgnoreOverlays | IterMode.ExcludeBuffers)) ;\n            else if (!cursor.next(false))\n                this.done = true;\n        }\n    }\n    hasNode(cursor) {\n        this.moveTo(cursor.from);\n        if (!this.done && this.cursor.from + this.offset == cursor.from && this.cursor.tree) {\n            for (let tree = this.cursor.tree;;) {\n                if (tree == cursor.tree)\n                    return true;\n                if (tree.children.length && tree.positions[0] == 0 && tree.children[0] instanceof Tree)\n                    tree = tree.children[0];\n                else\n                    break;\n            }\n        }\n        return false;\n    }\n}\nclass FragmentCursor {\n    constructor(fragments) {\n        var _a;\n        this.fragments = fragments;\n        this.curTo = 0;\n        this.fragI = 0;\n        if (fragments.length) {\n            let first = this.curFrag = fragments[0];\n            this.curTo = (_a = first.tree.prop(stoppedInner)) !== null && _a !== void 0 ? _a : first.to;\n            this.inner = new StructureCursor(first.tree, -first.offset);\n        }\n        else {\n            this.curFrag = this.inner = null;\n        }\n    }\n    hasNode(node) {\n        while (this.curFrag && node.from >= this.curTo)\n            this.nextFrag();\n        return this.curFrag && this.curFrag.from <= node.from && this.curTo >= node.to && this.inner.hasNode(node);\n    }\n    nextFrag() {\n        var _a;\n        this.fragI++;\n        if (this.fragI == this.fragments.length) {\n            this.curFrag = this.inner = null;\n        }\n        else {\n            let frag = this.curFrag = this.fragments[this.fragI];\n            this.curTo = (_a = frag.tree.prop(stoppedInner)) !== null && _a !== void 0 ? _a : frag.to;\n            this.inner = new StructureCursor(frag.tree, -frag.offset);\n        }\n    }\n    findMounts(pos, parser) {\n        var _a;\n        let result = [];\n        if (this.inner) {\n            this.inner.cursor.moveTo(pos, 1);\n            for (let pos = this.inner.cursor.node; pos; pos = pos.parent) {\n                let mount = (_a = pos.tree) === null || _a === void 0 ? void 0 : _a.prop(NodeProp.mounted);\n                if (mount && mount.parser == parser) {\n                    for (let i = this.fragI; i < this.fragments.length; i++) {\n                        let frag = this.fragments[i];\n                        if (frag.from >= pos.to)\n                            break;\n                        if (frag.tree == this.curFrag.tree)\n                            result.push({\n                                frag,\n                                pos: pos.from - frag.offset,\n                                mount\n                            });\n                    }\n                }\n            }\n        }\n        return result;\n    }\n}\nfunction punchRanges(outer, ranges) {\n    let copy = null, current = ranges;\n    for (let i = 1, j = 0; i < outer.length; i++) {\n        let gapFrom = outer[i - 1].to, gapTo = outer[i].from;\n        for (; j < current.length; j++) {\n            let r = current[j];\n            if (r.from >= gapTo)\n                break;\n            if (r.to <= gapFrom)\n                continue;\n            if (!copy)\n                current = copy = ranges.slice();\n            if (r.from < gapFrom) {\n                copy[j] = new Range(r.from, gapFrom);\n                if (r.to > gapTo)\n                    copy.splice(j + 1, 0, new Range(gapTo, r.to));\n            }\n            else if (r.to > gapTo) {\n                copy[j--] = new Range(gapTo, r.to);\n            }\n            else {\n                copy.splice(j--, 1);\n            }\n        }\n    }\n    return current;\n}\nfunction findCoverChanges(a, b, from, to) {\n    let iA = 0, iB = 0, inA = false, inB = false, pos = -1e9;\n    let result = [];\n    for (;;) {\n        let nextA = iA == a.length ? 1e9 : inA ? a[iA].to : a[iA].from;\n        let nextB = iB == b.length ? 1e9 : inB ? b[iB].to : b[iB].from;\n        if (inA != inB) {\n            let start = Math.max(pos, from), end = Math.min(nextA, nextB, to);\n            if (start < end)\n                result.push(new Range(start, end));\n        }\n        pos = Math.min(nextA, nextB);\n        if (pos == 1e9)\n            break;\n        if (nextA == pos) {\n            if (!inA)\n                inA = true;\n            else {\n                inA = false;\n                iA++;\n            }\n        }\n        if (nextB == pos) {\n            if (!inB)\n                inB = true;\n            else {\n                inB = false;\n                iB++;\n            }\n        }\n    }\n    return result;\n}\n// Given a number of fragments for the outer tree, and a set of ranges\n// to parse, find fragments for inner trees mounted around those\n// ranges, if any.\nfunction enterFragments(mounts, ranges) {\n    let result = [];\n    for (let { pos, mount, frag } of mounts) {\n        let startPos = pos + (mount.overlay ? mount.overlay[0].from : 0), endPos = startPos + mount.tree.length;\n        let from = Math.max(frag.from, startPos), to = Math.min(frag.to, endPos);\n        if (mount.overlay) {\n            let overlay = mount.overlay.map(r => new Range(r.from + pos, r.to + pos));\n            let changes = findCoverChanges(ranges, overlay, from, to);\n            for (let i = 0, pos = from;; i++) {\n                let last = i == changes.length, end = last ? to : changes[i].from;\n                if (end > pos)\n                    result.push(new TreeFragment(pos, end, mount.tree, -startPos, frag.from >= pos || frag.openStart, frag.to <= end || frag.openEnd));\n                if (last)\n                    break;\n                pos = changes[i].to;\n            }\n        }\n        else {\n            result.push(new TreeFragment(from, to, mount.tree, -startPos, frag.from >= startPos || frag.openStart, frag.to <= endPos || frag.openEnd));\n        }\n    }\n    return result;\n}\n\nexport { DefaultBufferLength, IterMode, MountedTree, NodeProp, NodeSet, NodeType, NodeWeakMap, Parser, Tree, TreeBuffer, TreeCursor, TreeFragment, parseMixed };\n","import { NodeProp } from '@lezer/common';\n\nlet nextTagID = 0;\n/**\nHighlighting tags are markers that denote a highlighting category.\nThey are [associated](#highlight.styleTags) with parts of a syntax\ntree by a language mode, and then mapped to an actual CSS style by\na [highlighter](#highlight.Highlighter).\n\nBecause syntax tree node types and highlight styles have to be\nable to talk the same language, CodeMirror uses a mostly _closed_\n[vocabulary](#highlight.tags) of syntax tags (as opposed to\ntraditional open string-based systems, which make it hard for\nhighlighting themes to cover all the tokens produced by the\nvarious languages).\n\nIt _is_ possible to [define](#highlight.Tag^define) your own\nhighlighting tags for system-internal use (where you control both\nthe language package and the highlighter), but such tags will not\nbe picked up by regular highlighters (though you can derive them\nfrom standard tags to allow highlighters to fall back to those).\n*/\nclass Tag {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The optional name of the base tag @internal\n    */\n    name, \n    /**\n    The set of this tag and all its parent tags, starting with\n    this one itself and sorted in order of decreasing specificity.\n    */\n    set, \n    /**\n    The base unmodified tag that this one is based on, if it's\n    modified @internal\n    */\n    base, \n    /**\n    The modifiers applied to this.base @internal\n    */\n    modified) {\n        this.name = name;\n        this.set = set;\n        this.base = base;\n        this.modified = modified;\n        /**\n        @internal\n        */\n        this.id = nextTagID++;\n    }\n    toString() {\n        let { name } = this;\n        for (let mod of this.modified)\n            if (mod.name)\n                name = `${mod.name}(${name})`;\n        return name;\n    }\n    static define(nameOrParent, parent) {\n        let name = typeof nameOrParent == \"string\" ? nameOrParent : \"?\";\n        if (nameOrParent instanceof Tag)\n            parent = nameOrParent;\n        if (parent === null || parent === void 0 ? void 0 : parent.base)\n            throw new Error(\"Can not derive from a modified tag\");\n        let tag = new Tag(name, [], null, []);\n        tag.set.push(tag);\n        if (parent)\n            for (let t of parent.set)\n                tag.set.push(t);\n        return tag;\n    }\n    /**\n    Define a tag _modifier_, which is a function that, given a tag,\n    will return a tag that is a subtag of the original. Applying the\n    same modifier to a twice tag will return the same value (`m1(t1)\n    == m1(t1)`) and applying multiple modifiers will, regardless or\n    order, produce the same tag (`m1(m2(t1)) == m2(m1(t1))`).\n    \n    When multiple modifiers are applied to a given base tag, each\n    smaller set of modifiers is registered as a parent, so that for\n    example `m1(m2(m3(t1)))` is a subtype of `m1(m2(t1))`,\n    `m1(m3(t1)`, and so on.\n    */\n    static defineModifier(name) {\n        let mod = new Modifier(name);\n        return (tag) => {\n            if (tag.modified.indexOf(mod) > -1)\n                return tag;\n            return Modifier.get(tag.base || tag, tag.modified.concat(mod).sort((a, b) => a.id - b.id));\n        };\n    }\n}\nlet nextModifierID = 0;\nclass Modifier {\n    constructor(name) {\n        this.name = name;\n        this.instances = [];\n        this.id = nextModifierID++;\n    }\n    static get(base, mods) {\n        if (!mods.length)\n            return base;\n        let exists = mods[0].instances.find(t => t.base == base && sameArray(mods, t.modified));\n        if (exists)\n            return exists;\n        let set = [], tag = new Tag(base.name, set, base, mods);\n        for (let m of mods)\n            m.instances.push(tag);\n        let configs = powerSet(mods);\n        for (let parent of base.set)\n            if (!parent.modified.length)\n                for (let config of configs)\n                    set.push(Modifier.get(parent, config));\n        return tag;\n    }\n}\nfunction sameArray(a, b) {\n    return a.length == b.length && a.every((x, i) => x == b[i]);\n}\nfunction powerSet(array) {\n    let sets = [[]];\n    for (let i = 0; i < array.length; i++) {\n        for (let j = 0, e = sets.length; j < e; j++) {\n            sets.push(sets[j].concat(array[i]));\n        }\n    }\n    return sets.sort((a, b) => b.length - a.length);\n}\n/**\nThis function is used to add a set of tags to a language syntax\nvia [`NodeSet.extend`](#common.NodeSet.extend) or\n[`LRParser.configure`](#lr.LRParser.configure).\n\nThe argument object maps node selectors to [highlighting\ntags](#highlight.Tag) or arrays of tags.\n\nNode selectors may hold one or more (space-separated) node paths.\nSuch a path can be a [node name](#common.NodeType.name), or\nmultiple node names (or `*` wildcards) separated by slash\ncharacters, as in `\"Block/Declaration/VariableName\"`. Such a path\nmatches the final node but only if its direct parent nodes are the\nother nodes mentioned. A `*` in such a path matches any parent,\nbut only a single level—wildcards that match multiple parents\naren't supported, both for efficiency reasons and because Lezer\ntrees make it rather hard to reason about what they would match.)\n\nA path can be ended with `/...` to indicate that the tag assigned\nto the node should also apply to all child nodes, even if they\nmatch their own style (by default, only the innermost style is\nused).\n\nWhen a path ends in `!`, as in `Attribute!`, no further matching\nhappens for the node's child nodes, and the entire node gets the\ngiven style.\n\nIn this notation, node names that contain `/`, `!`, `*`, or `...`\nmust be quoted as JSON strings.\n\nFor example:\n\n```javascript\nparser.withProps(\n  styleTags({\n    // Style Number and BigNumber nodes\n    \"Number BigNumber\": tags.number,\n    // Style Escape nodes whose parent is String\n    \"String/Escape\": tags.escape,\n    // Style anything inside Attributes nodes\n    \"Attributes!\": tags.meta,\n    // Add a style to all content inside Italic nodes\n    \"Italic/...\": tags.emphasis,\n    // Style InvalidString nodes as both `string` and `invalid`\n    \"InvalidString\": [tags.string, tags.invalid],\n    // Style the node named \"/\" as punctuation\n    '\"/\"': tags.punctuation\n  })\n)\n```\n*/\nfunction styleTags(spec) {\n    let byName = Object.create(null);\n    for (let prop in spec) {\n        let tags = spec[prop];\n        if (!Array.isArray(tags))\n            tags = [tags];\n        for (let part of prop.split(\" \"))\n            if (part) {\n                let pieces = [], mode = 2 /* Mode.Normal */, rest = part;\n                for (let pos = 0;;) {\n                    if (rest == \"...\" && pos > 0 && pos + 3 == part.length) {\n                        mode = 1 /* Mode.Inherit */;\n                        break;\n                    }\n                    let m = /^\"(?:[^\"\\\\]|\\\\.)*?\"|[^\\/!]+/.exec(rest);\n                    if (!m)\n                        throw new RangeError(\"Invalid path: \" + part);\n                    pieces.push(m[0] == \"*\" ? \"\" : m[0][0] == '\"' ? JSON.parse(m[0]) : m[0]);\n                    pos += m[0].length;\n                    if (pos == part.length)\n                        break;\n                    let next = part[pos++];\n                    if (pos == part.length && next == \"!\") {\n                        mode = 0 /* Mode.Opaque */;\n                        break;\n                    }\n                    if (next != \"/\")\n                        throw new RangeError(\"Invalid path: \" + part);\n                    rest = part.slice(pos);\n                }\n                let last = pieces.length - 1, inner = pieces[last];\n                if (!inner)\n                    throw new RangeError(\"Invalid path: \" + part);\n                let rule = new Rule(tags, mode, last > 0 ? pieces.slice(0, last) : null);\n                byName[inner] = rule.sort(byName[inner]);\n            }\n    }\n    return ruleNodeProp.add(byName);\n}\nconst ruleNodeProp = new NodeProp();\nclass Rule {\n    constructor(tags, mode, context, next) {\n        this.tags = tags;\n        this.mode = mode;\n        this.context = context;\n        this.next = next;\n    }\n    get opaque() { return this.mode == 0 /* Mode.Opaque */; }\n    get inherit() { return this.mode == 1 /* Mode.Inherit */; }\n    sort(other) {\n        if (!other || other.depth < this.depth) {\n            this.next = other;\n            return this;\n        }\n        other.next = this.sort(other.next);\n        return other;\n    }\n    get depth() { return this.context ? this.context.length : 0; }\n}\nRule.empty = new Rule([], 2 /* Mode.Normal */, null);\n/**\nDefine a [highlighter](#highlight.Highlighter) from an array of\ntag/class pairs. Classes associated with more specific tags will\ntake precedence.\n*/\nfunction tagHighlighter(tags, options) {\n    let map = Object.create(null);\n    for (let style of tags) {\n        if (!Array.isArray(style.tag))\n            map[style.tag.id] = style.class;\n        else\n            for (let tag of style.tag)\n                map[tag.id] = style.class;\n    }\n    let { scope, all = null } = options || {};\n    return {\n        style: (tags) => {\n            let cls = all;\n            for (let tag of tags) {\n                for (let sub of tag.set) {\n                    let tagClass = map[sub.id];\n                    if (tagClass) {\n                        cls = cls ? cls + \" \" + tagClass : tagClass;\n                        break;\n                    }\n                }\n            }\n            return cls;\n        },\n        scope\n    };\n}\nfunction highlightTags(highlighters, tags) {\n    let result = null;\n    for (let highlighter of highlighters) {\n        let value = highlighter.style(tags);\n        if (value)\n            result = result ? result + \" \" + value : value;\n    }\n    return result;\n}\n/**\nHighlight the given [tree](#common.Tree) with the given\n[highlighter](#highlight.Highlighter). Often, the higher-level\n[`highlightCode`](#highlight.highlightCode) function is easier to\nuse.\n*/\nfunction highlightTree(tree, highlighter, \n/**\nAssign styling to a region of the text. Will be called, in order\nof position, for any ranges where more than zero classes apply.\n`classes` is a space separated string of CSS classes.\n*/\nputStyle, \n/**\nThe start of the range to highlight.\n*/\nfrom = 0, \n/**\nThe end of the range.\n*/\nto = tree.length) {\n    let builder = new HighlightBuilder(from, Array.isArray(highlighter) ? highlighter : [highlighter], putStyle);\n    builder.highlightRange(tree.cursor(), from, to, \"\", builder.highlighters);\n    builder.flush(to);\n}\n/**\nHighlight the given tree with the given highlighter, calling\n`putText` for every piece of text, either with a set of classes or\nwith the empty string when unstyled, and `putBreak` for every line\nbreak.\n*/\nfunction highlightCode(code, tree, highlighter, putText, putBreak, from = 0, to = code.length) {\n    let pos = from;\n    function writeTo(p, classes) {\n        if (p <= pos)\n            return;\n        for (let text = code.slice(pos, p), i = 0;;) {\n            let nextBreak = text.indexOf(\"\\n\", i);\n            let upto = nextBreak < 0 ? text.length : nextBreak;\n            if (upto > i)\n                putText(text.slice(i, upto), classes);\n            if (nextBreak < 0)\n                break;\n            putBreak();\n            i = nextBreak + 1;\n        }\n        pos = p;\n    }\n    highlightTree(tree, highlighter, (from, to, classes) => {\n        writeTo(from, \"\");\n        writeTo(to, classes);\n    }, from, to);\n    writeTo(to, \"\");\n}\nclass HighlightBuilder {\n    constructor(at, highlighters, span) {\n        this.at = at;\n        this.highlighters = highlighters;\n        this.span = span;\n        this.class = \"\";\n    }\n    startSpan(at, cls) {\n        if (cls != this.class) {\n            this.flush(at);\n            if (at > this.at)\n                this.at = at;\n            this.class = cls;\n        }\n    }\n    flush(to) {\n        if (to > this.at && this.class)\n            this.span(this.at, to, this.class);\n    }\n    highlightRange(cursor, from, to, inheritedClass, highlighters) {\n        let { type, from: start, to: end } = cursor;\n        if (start >= to || end <= from)\n            return;\n        if (type.isTop)\n            highlighters = this.highlighters.filter(h => !h.scope || h.scope(type));\n        let cls = inheritedClass;\n        let rule = getStyleTags(cursor) || Rule.empty;\n        let tagCls = highlightTags(highlighters, rule.tags);\n        if (tagCls) {\n            if (cls)\n                cls += \" \";\n            cls += tagCls;\n            if (rule.mode == 1 /* Mode.Inherit */)\n                inheritedClass += (inheritedClass ? \" \" : \"\") + tagCls;\n        }\n        this.startSpan(Math.max(from, start), cls);\n        if (rule.opaque)\n            return;\n        let mounted = cursor.tree && cursor.tree.prop(NodeProp.mounted);\n        if (mounted && mounted.overlay) {\n            let inner = cursor.node.enter(mounted.overlay[0].from + start, 1);\n            let innerHighlighters = this.highlighters.filter(h => !h.scope || h.scope(mounted.tree.type));\n            let hasChild = cursor.firstChild();\n            for (let i = 0, pos = start;; i++) {\n                let next = i < mounted.overlay.length ? mounted.overlay[i] : null;\n                let nextPos = next ? next.from + start : end;\n                let rangeFrom = Math.max(from, pos), rangeTo = Math.min(to, nextPos);\n                if (rangeFrom < rangeTo && hasChild) {\n                    while (cursor.from < rangeTo) {\n                        this.highlightRange(cursor, rangeFrom, rangeTo, inheritedClass, highlighters);\n                        this.startSpan(Math.min(rangeTo, cursor.to), cls);\n                        if (cursor.to >= nextPos || !cursor.nextSibling())\n                            break;\n                    }\n                }\n                if (!next || nextPos > to)\n                    break;\n                pos = next.to + start;\n                if (pos > from) {\n                    this.highlightRange(inner.cursor(), Math.max(from, next.from + start), Math.min(to, pos), \"\", innerHighlighters);\n                    this.startSpan(Math.min(to, pos), cls);\n                }\n            }\n            if (hasChild)\n                cursor.parent();\n        }\n        else if (cursor.firstChild()) {\n            if (mounted)\n                inheritedClass = \"\";\n            do {\n                if (cursor.to <= from)\n                    continue;\n                if (cursor.from >= to)\n                    break;\n                this.highlightRange(cursor, from, to, inheritedClass, highlighters);\n                this.startSpan(Math.min(to, cursor.to), cls);\n            } while (cursor.nextSibling());\n            cursor.parent();\n        }\n    }\n}\n/**\nMatch a syntax node's [highlight rules](#highlight.styleTags). If\nthere's a match, return its set of tags, and whether it is\nopaque (uses a `!`) or applies to all child nodes (`/...`).\n*/\nfunction getStyleTags(node) {\n    let rule = node.type.prop(ruleNodeProp);\n    while (rule && rule.context && !node.matchContext(rule.context))\n        rule = rule.next;\n    return rule || null;\n}\nconst t = Tag.define;\nconst comment = t(), name = t(), typeName = t(name), propertyName = t(name), literal = t(), string = t(literal), number = t(literal), content = t(), heading = t(content), keyword = t(), operator = t(), punctuation = t(), bracket = t(punctuation), meta = t();\n/**\nThe default set of highlighting [tags](#highlight.Tag).\n\nThis collection is heavily biased towards programming languages,\nand necessarily incomplete. A full ontology of syntactic\nconstructs would fill a stack of books, and be impractical to\nwrite themes for. So try to make do with this set. If all else\nfails, [open an\nissue](https://github.com/codemirror/codemirror.next) to propose a\nnew tag, or [define](#highlight.Tag^define) a local custom tag for\nyour use case.\n\nNote that it is not obligatory to always attach the most specific\ntag possible to an element—if your grammar can't easily\ndistinguish a certain type of element (such as a local variable),\nit is okay to style it as its more general variant (a variable).\n\nFor tags that extend some parent tag, the documentation links to\nthe parent.\n*/\nconst tags = {\n    /**\n    A comment.\n    */\n    comment,\n    /**\n    A line [comment](#highlight.tags.comment).\n    */\n    lineComment: t(comment),\n    /**\n    A block [comment](#highlight.tags.comment).\n    */\n    blockComment: t(comment),\n    /**\n    A documentation [comment](#highlight.tags.comment).\n    */\n    docComment: t(comment),\n    /**\n    Any kind of identifier.\n    */\n    name,\n    /**\n    The [name](#highlight.tags.name) of a variable.\n    */\n    variableName: t(name),\n    /**\n    A type [name](#highlight.tags.name).\n    */\n    typeName: typeName,\n    /**\n    A tag name (subtag of [`typeName`](#highlight.tags.typeName)).\n    */\n    tagName: t(typeName),\n    /**\n    A property or field [name](#highlight.tags.name).\n    */\n    propertyName: propertyName,\n    /**\n    An attribute name (subtag of [`propertyName`](#highlight.tags.propertyName)).\n    */\n    attributeName: t(propertyName),\n    /**\n    The [name](#highlight.tags.name) of a class.\n    */\n    className: t(name),\n    /**\n    A label [name](#highlight.tags.name).\n    */\n    labelName: t(name),\n    /**\n    A namespace [name](#highlight.tags.name).\n    */\n    namespace: t(name),\n    /**\n    The [name](#highlight.tags.name) of a macro.\n    */\n    macroName: t(name),\n    /**\n    A literal value.\n    */\n    literal,\n    /**\n    A string [literal](#highlight.tags.literal).\n    */\n    string,\n    /**\n    A documentation [string](#highlight.tags.string).\n    */\n    docString: t(string),\n    /**\n    A character literal (subtag of [string](#highlight.tags.string)).\n    */\n    character: t(string),\n    /**\n    An attribute value (subtag of [string](#highlight.tags.string)).\n    */\n    attributeValue: t(string),\n    /**\n    A number [literal](#highlight.tags.literal).\n    */\n    number,\n    /**\n    An integer [number](#highlight.tags.number) literal.\n    */\n    integer: t(number),\n    /**\n    A floating-point [number](#highlight.tags.number) literal.\n    */\n    float: t(number),\n    /**\n    A boolean [literal](#highlight.tags.literal).\n    */\n    bool: t(literal),\n    /**\n    Regular expression [literal](#highlight.tags.literal).\n    */\n    regexp: t(literal),\n    /**\n    An escape [literal](#highlight.tags.literal), for example a\n    backslash escape in a string.\n    */\n    escape: t(literal),\n    /**\n    A color [literal](#highlight.tags.literal).\n    */\n    color: t(literal),\n    /**\n    A URL [literal](#highlight.tags.literal).\n    */\n    url: t(literal),\n    /**\n    A language keyword.\n    */\n    keyword,\n    /**\n    The [keyword](#highlight.tags.keyword) for the self or this\n    object.\n    */\n    self: t(keyword),\n    /**\n    The [keyword](#highlight.tags.keyword) for null.\n    */\n    null: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) denoting some atomic value.\n    */\n    atom: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) that represents a unit.\n    */\n    unit: t(keyword),\n    /**\n    A modifier [keyword](#highlight.tags.keyword).\n    */\n    modifier: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) that acts as an operator.\n    */\n    operatorKeyword: t(keyword),\n    /**\n    A control-flow related [keyword](#highlight.tags.keyword).\n    */\n    controlKeyword: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) that defines something.\n    */\n    definitionKeyword: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) related to defining or\n    interfacing with modules.\n    */\n    moduleKeyword: t(keyword),\n    /**\n    An operator.\n    */\n    operator,\n    /**\n    An [operator](#highlight.tags.operator) that dereferences something.\n    */\n    derefOperator: t(operator),\n    /**\n    Arithmetic-related [operator](#highlight.tags.operator).\n    */\n    arithmeticOperator: t(operator),\n    /**\n    Logical [operator](#highlight.tags.operator).\n    */\n    logicOperator: t(operator),\n    /**\n    Bit [operator](#highlight.tags.operator).\n    */\n    bitwiseOperator: t(operator),\n    /**\n    Comparison [operator](#highlight.tags.operator).\n    */\n    compareOperator: t(operator),\n    /**\n    [Operator](#highlight.tags.operator) that updates its operand.\n    */\n    updateOperator: t(operator),\n    /**\n    [Operator](#highlight.tags.operator) that defines something.\n    */\n    definitionOperator: t(operator),\n    /**\n    Type-related [operator](#highlight.tags.operator).\n    */\n    typeOperator: t(operator),\n    /**\n    Control-flow [operator](#highlight.tags.operator).\n    */\n    controlOperator: t(operator),\n    /**\n    Program or markup punctuation.\n    */\n    punctuation,\n    /**\n    [Punctuation](#highlight.tags.punctuation) that separates\n    things.\n    */\n    separator: t(punctuation),\n    /**\n    Bracket-style [punctuation](#highlight.tags.punctuation).\n    */\n    bracket,\n    /**\n    Angle [brackets](#highlight.tags.bracket) (usually `<` and `>`\n    tokens).\n    */\n    angleBracket: t(bracket),\n    /**\n    Square [brackets](#highlight.tags.bracket) (usually `[` and `]`\n    tokens).\n    */\n    squareBracket: t(bracket),\n    /**\n    Parentheses (usually `(` and `)` tokens). Subtag of\n    [bracket](#highlight.tags.bracket).\n    */\n    paren: t(bracket),\n    /**\n    Braces (usually `{` and `}` tokens). Subtag of\n    [bracket](#highlight.tags.bracket).\n    */\n    brace: t(bracket),\n    /**\n    Content, for example plain text in XML or markup documents.\n    */\n    content,\n    /**\n    [Content](#highlight.tags.content) that represents a heading.\n    */\n    heading,\n    /**\n    A level 1 [heading](#highlight.tags.heading).\n    */\n    heading1: t(heading),\n    /**\n    A level 2 [heading](#highlight.tags.heading).\n    */\n    heading2: t(heading),\n    /**\n    A level 3 [heading](#highlight.tags.heading).\n    */\n    heading3: t(heading),\n    /**\n    A level 4 [heading](#highlight.tags.heading).\n    */\n    heading4: t(heading),\n    /**\n    A level 5 [heading](#highlight.tags.heading).\n    */\n    heading5: t(heading),\n    /**\n    A level 6 [heading](#highlight.tags.heading).\n    */\n    heading6: t(heading),\n    /**\n    A prose [content](#highlight.tags.content) separator (such as a horizontal rule).\n    */\n    contentSeparator: t(content),\n    /**\n    [Content](#highlight.tags.content) that represents a list.\n    */\n    list: t(content),\n    /**\n    [Content](#highlight.tags.content) that represents a quote.\n    */\n    quote: t(content),\n    /**\n    [Content](#highlight.tags.content) that is emphasized.\n    */\n    emphasis: t(content),\n    /**\n    [Content](#highlight.tags.content) that is styled strong.\n    */\n    strong: t(content),\n    /**\n    [Content](#highlight.tags.content) that is part of a link.\n    */\n    link: t(content),\n    /**\n    [Content](#highlight.tags.content) that is styled as code or\n    monospace.\n    */\n    monospace: t(content),\n    /**\n    [Content](#highlight.tags.content) that has a strike-through\n    style.\n    */\n    strikethrough: t(content),\n    /**\n    Inserted text in a change-tracking format.\n    */\n    inserted: t(),\n    /**\n    Deleted text.\n    */\n    deleted: t(),\n    /**\n    Changed text.\n    */\n    changed: t(),\n    /**\n    An invalid or unsyntactic element.\n    */\n    invalid: t(),\n    /**\n    Metadata or meta-instruction.\n    */\n    meta,\n    /**\n    [Metadata](#highlight.tags.meta) that applies to the entire\n    document.\n    */\n    documentMeta: t(meta),\n    /**\n    [Metadata](#highlight.tags.meta) that annotates or adds\n    attributes to a given syntactic element.\n    */\n    annotation: t(meta),\n    /**\n    Processing instruction or preprocessor directive. Subtag of\n    [meta](#highlight.tags.meta).\n    */\n    processingInstruction: t(meta),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that indicates that a\n    given element is being defined. Expected to be used with the\n    various [name](#highlight.tags.name) tags.\n    */\n    definition: Tag.defineModifier(\"definition\"),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that indicates that\n    something is constant. Mostly expected to be used with\n    [variable names](#highlight.tags.variableName).\n    */\n    constant: Tag.defineModifier(\"constant\"),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) used to indicate that\n    a [variable](#highlight.tags.variableName) or [property\n    name](#highlight.tags.propertyName) is being called or defined\n    as a function.\n    */\n    function: Tag.defineModifier(\"function\"),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that can be applied to\n    [names](#highlight.tags.name) to indicate that they belong to\n    the language's standard environment.\n    */\n    standard: Tag.defineModifier(\"standard\"),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that indicates a given\n    [names](#highlight.tags.name) is local to some scope.\n    */\n    local: Tag.defineModifier(\"local\"),\n    /**\n    A generic variant [modifier](#highlight.Tag^defineModifier) that\n    can be used to tag language-specific alternative variants of\n    some common tag. It is recommended for themes to define special\n    forms of at least the [string](#highlight.tags.string) and\n    [variable name](#highlight.tags.variableName) tags, since those\n    come up a lot.\n    */\n    special: Tag.defineModifier(\"special\")\n};\nfor (let name in tags) {\n    let val = tags[name];\n    if (val instanceof Tag)\n        val.name = name;\n}\n/**\nThis is a highlighter that adds stable, predictable classes to\ntokens, for styling with external CSS.\n\nThe following tags are mapped to their name prefixed with `\"tok-\"`\n(for example `\"tok-comment\"`):\n\n* [`link`](#highlight.tags.link)\n* [`heading`](#highlight.tags.heading)\n* [`emphasis`](#highlight.tags.emphasis)\n* [`strong`](#highlight.tags.strong)\n* [`keyword`](#highlight.tags.keyword)\n* [`atom`](#highlight.tags.atom)\n* [`bool`](#highlight.tags.bool)\n* [`url`](#highlight.tags.url)\n* [`labelName`](#highlight.tags.labelName)\n* [`inserted`](#highlight.tags.inserted)\n* [`deleted`](#highlight.tags.deleted)\n* [`literal`](#highlight.tags.literal)\n* [`string`](#highlight.tags.string)\n* [`number`](#highlight.tags.number)\n* [`variableName`](#highlight.tags.variableName)\n* [`typeName`](#highlight.tags.typeName)\n* [`namespace`](#highlight.tags.namespace)\n* [`className`](#highlight.tags.className)\n* [`macroName`](#highlight.tags.macroName)\n* [`propertyName`](#highlight.tags.propertyName)\n* [`operator`](#highlight.tags.operator)\n* [`comment`](#highlight.tags.comment)\n* [`meta`](#highlight.tags.meta)\n* [`punctuation`](#highlight.tags.punctuation)\n* [`invalid`](#highlight.tags.invalid)\n\nIn addition, these mappings are provided:\n\n* [`regexp`](#highlight.tags.regexp),\n  [`escape`](#highlight.tags.escape), and\n  [`special`](#highlight.tags.special)[`(string)`](#highlight.tags.string)\n  are mapped to `\"tok-string2\"`\n* [`special`](#highlight.tags.special)[`(variableName)`](#highlight.tags.variableName)\n  to `\"tok-variableName2\"`\n* [`local`](#highlight.tags.local)[`(variableName)`](#highlight.tags.variableName)\n  to `\"tok-variableName tok-local\"`\n* [`definition`](#highlight.tags.definition)[`(variableName)`](#highlight.tags.variableName)\n  to `\"tok-variableName tok-definition\"`\n* [`definition`](#highlight.tags.definition)[`(propertyName)`](#highlight.tags.propertyName)\n  to `\"tok-propertyName tok-definition\"`\n*/\nconst classHighlighter = tagHighlighter([\n    { tag: tags.link, class: \"tok-link\" },\n    { tag: tags.heading, class: \"tok-heading\" },\n    { tag: tags.emphasis, class: \"tok-emphasis\" },\n    { tag: tags.strong, class: \"tok-strong\" },\n    { tag: tags.keyword, class: \"tok-keyword\" },\n    { tag: tags.atom, class: \"tok-atom\" },\n    { tag: tags.bool, class: \"tok-bool\" },\n    { tag: tags.url, class: \"tok-url\" },\n    { tag: tags.labelName, class: \"tok-labelName\" },\n    { tag: tags.inserted, class: \"tok-inserted\" },\n    { tag: tags.deleted, class: \"tok-deleted\" },\n    { tag: tags.literal, class: \"tok-literal\" },\n    { tag: tags.string, class: \"tok-string\" },\n    { tag: tags.number, class: \"tok-number\" },\n    { tag: [tags.regexp, tags.escape, tags.special(tags.string)], class: \"tok-string2\" },\n    { tag: tags.variableName, class: \"tok-variableName\" },\n    { tag: tags.local(tags.variableName), class: \"tok-variableName tok-local\" },\n    { tag: tags.definition(tags.variableName), class: \"tok-variableName tok-definition\" },\n    { tag: tags.special(tags.variableName), class: \"tok-variableName2\" },\n    { tag: tags.definition(tags.propertyName), class: \"tok-propertyName tok-definition\" },\n    { tag: tags.typeName, class: \"tok-typeName\" },\n    { tag: tags.namespace, class: \"tok-namespace\" },\n    { tag: tags.className, class: \"tok-className\" },\n    { tag: tags.macroName, class: \"tok-macroName\" },\n    { tag: tags.propertyName, class: \"tok-propertyName\" },\n    { tag: tags.operator, class: \"tok-operator\" },\n    { tag: tags.comment, class: \"tok-comment\" },\n    { tag: tags.meta, class: \"tok-meta\" },\n    { tag: tags.invalid, class: \"tok-invalid\" },\n    { tag: tags.punctuation, class: \"tok-punctuation\" }\n]);\n\nexport { Tag, classHighlighter, getStyleTags, highlightCode, highlightTree, styleTags, tagHighlighter, tags };\n","import { NodeProp, IterMode, Tree, TreeFragment, Parser, NodeType, NodeSet } from '@lezer/common';\nimport { StateEffect, StateField, Facet, EditorState, countColumn, combineConfig, RangeSet, RangeSetBuilder, Prec } from '@codemirror/state';\nimport { ViewPlugin, logException, EditorView, Decoration, WidgetType, gutter, GutterMarker, Direction } from '@codemirror/view';\nimport { tags, tagHighlighter, highlightTree, styleTags } from '@lezer/highlight';\nimport { StyleModule } from 'style-mod';\n\nvar _a;\n/**\nNode prop stored in a parser's top syntax node to provide the\nfacet that stores language-specific data for that language.\n*/\nconst languageDataProp = /*@__PURE__*/new NodeProp();\n/**\nHelper function to define a facet (to be added to the top syntax\nnode(s) for a language via\n[`languageDataProp`](https://codemirror.net/6/docs/ref/#language.languageDataProp)), that will be\nused to associate language data with the language. You\nprobably only need this when subclassing\n[`Language`](https://codemirror.net/6/docs/ref/#language.Language).\n*/\nfunction defineLanguageFacet(baseData) {\n    return Facet.define({\n        combine: baseData ? values => values.concat(baseData) : undefined\n    });\n}\n/**\nSyntax node prop used to register sublanguages. Should be added to\nthe top level node type for the language.\n*/\nconst sublanguageProp = /*@__PURE__*/new NodeProp();\n/**\nA language object manages parsing and per-language\n[metadata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt). Parse data is\nmanaged as a [Lezer](https://lezer.codemirror.net) tree. The class\ncan be used directly, via the [`LRLanguage`](https://codemirror.net/6/docs/ref/#language.LRLanguage)\nsubclass for [Lezer](https://lezer.codemirror.net/) LR parsers, or\nvia the [`StreamLanguage`](https://codemirror.net/6/docs/ref/#language.StreamLanguage) subclass\nfor stream parsers.\n*/\nclass Language {\n    /**\n    Construct a language object. If you need to invoke this\n    directly, first define a data facet with\n    [`defineLanguageFacet`](https://codemirror.net/6/docs/ref/#language.defineLanguageFacet), and then\n    configure your parser to [attach](https://codemirror.net/6/docs/ref/#language.languageDataProp) it\n    to the language's outer syntax node.\n    */\n    constructor(\n    /**\n    The [language data](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt) facet\n    used for this language.\n    */\n    data, parser, extraExtensions = [], \n    /**\n    A language name.\n    */\n    name = \"\") {\n        this.data = data;\n        this.name = name;\n        // Kludge to define EditorState.tree as a debugging helper,\n        // without the EditorState package actually knowing about\n        // languages and lezer trees.\n        if (!EditorState.prototype.hasOwnProperty(\"tree\"))\n            Object.defineProperty(EditorState.prototype, \"tree\", { get() { return syntaxTree(this); } });\n        this.parser = parser;\n        this.extension = [\n            language.of(this),\n            EditorState.languageData.of((state, pos, side) => {\n                let top = topNodeAt(state, pos, side), data = top.type.prop(languageDataProp);\n                if (!data)\n                    return [];\n                let base = state.facet(data), sub = top.type.prop(sublanguageProp);\n                if (sub) {\n                    let innerNode = top.resolve(pos - top.from, side);\n                    for (let sublang of sub)\n                        if (sublang.test(innerNode, state)) {\n                            let data = state.facet(sublang.facet);\n                            return sublang.type == \"replace\" ? data : data.concat(base);\n                        }\n                }\n                return base;\n            })\n        ].concat(extraExtensions);\n    }\n    /**\n    Query whether this language is active at the given position.\n    */\n    isActiveAt(state, pos, side = -1) {\n        return topNodeAt(state, pos, side).type.prop(languageDataProp) == this.data;\n    }\n    /**\n    Find the document regions that were parsed using this language.\n    The returned regions will _include_ any nested languages rooted\n    in this language, when those exist.\n    */\n    findRegions(state) {\n        let lang = state.facet(language);\n        if ((lang === null || lang === void 0 ? void 0 : lang.data) == this.data)\n            return [{ from: 0, to: state.doc.length }];\n        if (!lang || !lang.allowsNesting)\n            return [];\n        let result = [];\n        let explore = (tree, from) => {\n            if (tree.prop(languageDataProp) == this.data) {\n                result.push({ from, to: from + tree.length });\n                return;\n            }\n            let mount = tree.prop(NodeProp.mounted);\n            if (mount) {\n                if (mount.tree.prop(languageDataProp) == this.data) {\n                    if (mount.overlay)\n                        for (let r of mount.overlay)\n                            result.push({ from: r.from + from, to: r.to + from });\n                    else\n                        result.push({ from: from, to: from + tree.length });\n                    return;\n                }\n                else if (mount.overlay) {\n                    let size = result.length;\n                    explore(mount.tree, mount.overlay[0].from + from);\n                    if (result.length > size)\n                        return;\n                }\n            }\n            for (let i = 0; i < tree.children.length; i++) {\n                let ch = tree.children[i];\n                if (ch instanceof Tree)\n                    explore(ch, tree.positions[i] + from);\n            }\n        };\n        explore(syntaxTree(state), 0);\n        return result;\n    }\n    /**\n    Indicates whether this language allows nested languages. The\n    default implementation returns true.\n    */\n    get allowsNesting() { return true; }\n}\n/**\n@internal\n*/\nLanguage.setState = /*@__PURE__*/StateEffect.define();\nfunction topNodeAt(state, pos, side) {\n    let topLang = state.facet(language), tree = syntaxTree(state).topNode;\n    if (!topLang || topLang.allowsNesting) {\n        for (let node = tree; node; node = node.enter(pos, side, IterMode.ExcludeBuffers))\n            if (node.type.isTop)\n                tree = node;\n    }\n    return tree;\n}\n/**\nA subclass of [`Language`](https://codemirror.net/6/docs/ref/#language.Language) for use with Lezer\n[LR parsers](https://lezer.codemirror.net/docs/ref#lr.LRParser)\nparsers.\n*/\nclass LRLanguage extends Language {\n    constructor(data, parser, name) {\n        super(data, parser, [], name);\n        this.parser = parser;\n    }\n    /**\n    Define a language from a parser.\n    */\n    static define(spec) {\n        let data = defineLanguageFacet(spec.languageData);\n        return new LRLanguage(data, spec.parser.configure({\n            props: [languageDataProp.add(type => type.isTop ? data : undefined)]\n        }), spec.name);\n    }\n    /**\n    Create a new instance of this language with a reconfigured\n    version of its parser and optionally a new name.\n    */\n    configure(options, name) {\n        return new LRLanguage(this.data, this.parser.configure(options), name || this.name);\n    }\n    get allowsNesting() { return this.parser.hasWrappers(); }\n}\n/**\nGet the syntax tree for a state, which is the current (possibly\nincomplete) parse tree of the active\n[language](https://codemirror.net/6/docs/ref/#language.Language), or the empty tree if there is no\nlanguage available.\n*/\nfunction syntaxTree(state) {\n    let field = state.field(Language.state, false);\n    return field ? field.tree : Tree.empty;\n}\n/**\nTry to get a parse tree that spans at least up to `upto`. The\nmethod will do at most `timeout` milliseconds of work to parse\nup to that point if the tree isn't already available.\n*/\nfunction ensureSyntaxTree(state, upto, timeout = 50) {\n    var _a;\n    let parse = (_a = state.field(Language.state, false)) === null || _a === void 0 ? void 0 : _a.context;\n    if (!parse)\n        return null;\n    let oldVieport = parse.viewport;\n    parse.updateViewport({ from: 0, to: upto });\n    let result = parse.isDone(upto) || parse.work(timeout, upto) ? parse.tree : null;\n    parse.updateViewport(oldVieport);\n    return result;\n}\n/**\nQueries whether there is a full syntax tree available up to the\ngiven document position. If there isn't, the background parse\nprocess _might_ still be working and update the tree further, but\nthere is no guarantee of that—the parser will [stop\nworking](https://codemirror.net/6/docs/ref/#language.syntaxParserRunning) when it has spent a\ncertain amount of time or has moved beyond the visible viewport.\nAlways returns false if no language has been enabled.\n*/\nfunction syntaxTreeAvailable(state, upto = state.doc.length) {\n    var _a;\n    return ((_a = state.field(Language.state, false)) === null || _a === void 0 ? void 0 : _a.context.isDone(upto)) || false;\n}\n/**\nMove parsing forward, and update the editor state afterwards to\nreflect the new tree. Will work for at most `timeout`\nmilliseconds. Returns true if the parser managed get to the given\nposition in that time.\n*/\nfunction forceParsing(view, upto = view.viewport.to, timeout = 100) {\n    let success = ensureSyntaxTree(view.state, upto, timeout);\n    if (success != syntaxTree(view.state))\n        view.dispatch({});\n    return !!success;\n}\n/**\nTells you whether the language parser is planning to do more\nparsing work (in a `requestIdleCallback` pseudo-thread) or has\nstopped running, either because it parsed the entire document,\nbecause it spent too much time and was cut off, or because there\nis no language parser enabled.\n*/\nfunction syntaxParserRunning(view) {\n    var _a;\n    return ((_a = view.plugin(parseWorker)) === null || _a === void 0 ? void 0 : _a.isWorking()) || false;\n}\n/**\nLezer-style\n[`Input`](https://lezer.codemirror.net/docs/ref#common.Input)\nobject for a [`Text`](https://codemirror.net/6/docs/ref/#state.Text) object.\n*/\nclass DocInput {\n    /**\n    Create an input object for the given document.\n    */\n    constructor(doc) {\n        this.doc = doc;\n        this.cursorPos = 0;\n        this.string = \"\";\n        this.cursor = doc.iter();\n    }\n    get length() { return this.doc.length; }\n    syncTo(pos) {\n        this.string = this.cursor.next(pos - this.cursorPos).value;\n        this.cursorPos = pos + this.string.length;\n        return this.cursorPos - this.string.length;\n    }\n    chunk(pos) {\n        this.syncTo(pos);\n        return this.string;\n    }\n    get lineChunks() { return true; }\n    read(from, to) {\n        let stringStart = this.cursorPos - this.string.length;\n        if (from < stringStart || to >= this.cursorPos)\n            return this.doc.sliceString(from, to);\n        else\n            return this.string.slice(from - stringStart, to - stringStart);\n    }\n}\nlet currentContext = null;\n/**\nA parse context provided to parsers working on the editor content.\n*/\nclass ParseContext {\n    constructor(parser, \n    /**\n    The current editor state.\n    */\n    state, \n    /**\n    Tree fragments that can be reused by incremental re-parses.\n    */\n    fragments = [], \n    /**\n    @internal\n    */\n    tree, \n    /**\n    @internal\n    */\n    treeLen, \n    /**\n    The current editor viewport (or some overapproximation\n    thereof). Intended to be used for opportunistically avoiding\n    work (in which case\n    [`skipUntilInView`](https://codemirror.net/6/docs/ref/#language.ParseContext.skipUntilInView)\n    should be called to make sure the parser is restarted when the\n    skipped region becomes visible).\n    */\n    viewport, \n    /**\n    @internal\n    */\n    skipped, \n    /**\n    This is where skipping parsers can register a promise that,\n    when resolved, will schedule a new parse. It is cleared when\n    the parse worker picks up the promise. @internal\n    */\n    scheduleOn) {\n        this.parser = parser;\n        this.state = state;\n        this.fragments = fragments;\n        this.tree = tree;\n        this.treeLen = treeLen;\n        this.viewport = viewport;\n        this.skipped = skipped;\n        this.scheduleOn = scheduleOn;\n        this.parse = null;\n        /**\n        @internal\n        */\n        this.tempSkipped = [];\n    }\n    /**\n    @internal\n    */\n    static create(parser, state, viewport) {\n        return new ParseContext(parser, state, [], Tree.empty, 0, viewport, [], null);\n    }\n    startParse() {\n        return this.parser.startParse(new DocInput(this.state.doc), this.fragments);\n    }\n    /**\n    @internal\n    */\n    work(until, upto) {\n        if (upto != null && upto >= this.state.doc.length)\n            upto = undefined;\n        if (this.tree != Tree.empty && this.isDone(upto !== null && upto !== void 0 ? upto : this.state.doc.length)) {\n            this.takeTree();\n            return true;\n        }\n        return this.withContext(() => {\n            var _a;\n            if (typeof until == \"number\") {\n                let endTime = Date.now() + until;\n                until = () => Date.now() > endTime;\n            }\n            if (!this.parse)\n                this.parse = this.startParse();\n            if (upto != null && (this.parse.stoppedAt == null || this.parse.stoppedAt > upto) &&\n                upto < this.state.doc.length)\n                this.parse.stopAt(upto);\n            for (;;) {\n                let done = this.parse.advance();\n                if (done) {\n                    this.fragments = this.withoutTempSkipped(TreeFragment.addTree(done, this.fragments, this.parse.stoppedAt != null));\n                    this.treeLen = (_a = this.parse.stoppedAt) !== null && _a !== void 0 ? _a : this.state.doc.length;\n                    this.tree = done;\n                    this.parse = null;\n                    if (this.treeLen < (upto !== null && upto !== void 0 ? upto : this.state.doc.length))\n                        this.parse = this.startParse();\n                    else\n                        return true;\n                }\n                if (until())\n                    return false;\n            }\n        });\n    }\n    /**\n    @internal\n    */\n    takeTree() {\n        let pos, tree;\n        if (this.parse && (pos = this.parse.parsedPos) >= this.treeLen) {\n            if (this.parse.stoppedAt == null || this.parse.stoppedAt > pos)\n                this.parse.stopAt(pos);\n            this.withContext(() => { while (!(tree = this.parse.advance())) { } });\n            this.treeLen = pos;\n            this.tree = tree;\n            this.fragments = this.withoutTempSkipped(TreeFragment.addTree(this.tree, this.fragments, true));\n            this.parse = null;\n        }\n    }\n    withContext(f) {\n        let prev = currentContext;\n        currentContext = this;\n        try {\n            return f();\n        }\n        finally {\n            currentContext = prev;\n        }\n    }\n    withoutTempSkipped(fragments) {\n        for (let r; r = this.tempSkipped.pop();)\n            fragments = cutFragments(fragments, r.from, r.to);\n        return fragments;\n    }\n    /**\n    @internal\n    */\n    changes(changes, newState) {\n        let { fragments, tree, treeLen, viewport, skipped } = this;\n        this.takeTree();\n        if (!changes.empty) {\n            let ranges = [];\n            changes.iterChangedRanges((fromA, toA, fromB, toB) => ranges.push({ fromA, toA, fromB, toB }));\n            fragments = TreeFragment.applyChanges(fragments, ranges);\n            tree = Tree.empty;\n            treeLen = 0;\n            viewport = { from: changes.mapPos(viewport.from, -1), to: changes.mapPos(viewport.to, 1) };\n            if (this.skipped.length) {\n                skipped = [];\n                for (let r of this.skipped) {\n                    let from = changes.mapPos(r.from, 1), to = changes.mapPos(r.to, -1);\n                    if (from < to)\n                        skipped.push({ from, to });\n                }\n            }\n        }\n        return new ParseContext(this.parser, newState, fragments, tree, treeLen, viewport, skipped, this.scheduleOn);\n    }\n    /**\n    @internal\n    */\n    updateViewport(viewport) {\n        if (this.viewport.from == viewport.from && this.viewport.to == viewport.to)\n            return false;\n        this.viewport = viewport;\n        let startLen = this.skipped.length;\n        for (let i = 0; i < this.skipped.length; i++) {\n            let { from, to } = this.skipped[i];\n            if (from < viewport.to && to > viewport.from) {\n                this.fragments = cutFragments(this.fragments, from, to);\n                this.skipped.splice(i--, 1);\n            }\n        }\n        if (this.skipped.length >= startLen)\n            return false;\n        this.reset();\n        return true;\n    }\n    /**\n    @internal\n    */\n    reset() {\n        if (this.parse) {\n            this.takeTree();\n            this.parse = null;\n        }\n    }\n    /**\n    Notify the parse scheduler that the given region was skipped\n    because it wasn't in view, and the parse should be restarted\n    when it comes into view.\n    */\n    skipUntilInView(from, to) {\n        this.skipped.push({ from, to });\n    }\n    /**\n    Returns a parser intended to be used as placeholder when\n    asynchronously loading a nested parser. It'll skip its input and\n    mark it as not-really-parsed, so that the next update will parse\n    it again.\n    \n    When `until` is given, a reparse will be scheduled when that\n    promise resolves.\n    */\n    static getSkippingParser(until) {\n        return new class extends Parser {\n            createParse(input, fragments, ranges) {\n                let from = ranges[0].from, to = ranges[ranges.length - 1].to;\n                let parser = {\n                    parsedPos: from,\n                    advance() {\n                        let cx = currentContext;\n                        if (cx) {\n                            for (let r of ranges)\n                                cx.tempSkipped.push(r);\n                            if (until)\n                                cx.scheduleOn = cx.scheduleOn ? Promise.all([cx.scheduleOn, until]) : until;\n                        }\n                        this.parsedPos = to;\n                        return new Tree(NodeType.none, [], [], to - from);\n                    },\n                    stoppedAt: null,\n                    stopAt() { }\n                };\n                return parser;\n            }\n        };\n    }\n    /**\n    @internal\n    */\n    isDone(upto) {\n        upto = Math.min(upto, this.state.doc.length);\n        let frags = this.fragments;\n        return this.treeLen >= upto && frags.length && frags[0].from == 0 && frags[0].to >= upto;\n    }\n    /**\n    Get the context for the current parse, or `null` if no editor\n    parse is in progress.\n    */\n    static get() { return currentContext; }\n}\nfunction cutFragments(fragments, from, to) {\n    return TreeFragment.applyChanges(fragments, [{ fromA: from, toA: to, fromB: from, toB: to }]);\n}\nclass LanguageState {\n    constructor(\n    // A mutable parse state that is used to preserve work done during\n    // the lifetime of a state when moving to the next state.\n    context) {\n        this.context = context;\n        this.tree = context.tree;\n    }\n    apply(tr) {\n        if (!tr.docChanged && this.tree == this.context.tree)\n            return this;\n        let newCx = this.context.changes(tr.changes, tr.state);\n        // If the previous parse wasn't done, go forward only up to its\n        // end position or the end of the viewport, to avoid slowing down\n        // state updates with parse work beyond the viewport.\n        let upto = this.context.treeLen == tr.startState.doc.length ? undefined\n            : Math.max(tr.changes.mapPos(this.context.treeLen), newCx.viewport.to);\n        if (!newCx.work(20 /* Work.Apply */, upto))\n            newCx.takeTree();\n        return new LanguageState(newCx);\n    }\n    static init(state) {\n        let vpTo = Math.min(3000 /* Work.InitViewport */, state.doc.length);\n        let parseState = ParseContext.create(state.facet(language).parser, state, { from: 0, to: vpTo });\n        if (!parseState.work(20 /* Work.Apply */, vpTo))\n            parseState.takeTree();\n        return new LanguageState(parseState);\n    }\n}\nLanguage.state = /*@__PURE__*/StateField.define({\n    create: LanguageState.init,\n    update(value, tr) {\n        for (let e of tr.effects)\n            if (e.is(Language.setState))\n                return e.value;\n        if (tr.startState.facet(language) != tr.state.facet(language))\n            return LanguageState.init(tr.state);\n        return value.apply(tr);\n    }\n});\nlet requestIdle = (callback) => {\n    let timeout = setTimeout(() => callback(), 500 /* Work.MaxPause */);\n    return () => clearTimeout(timeout);\n};\nif (typeof requestIdleCallback != \"undefined\")\n    requestIdle = (callback) => {\n        let idle = -1, timeout = setTimeout(() => {\n            idle = requestIdleCallback(callback, { timeout: 500 /* Work.MaxPause */ - 100 /* Work.MinPause */ });\n        }, 100 /* Work.MinPause */);\n        return () => idle < 0 ? clearTimeout(timeout) : cancelIdleCallback(idle);\n    };\nconst isInputPending = typeof navigator != \"undefined\" && ((_a = navigator.scheduling) === null || _a === void 0 ? void 0 : _a.isInputPending)\n    ? () => navigator.scheduling.isInputPending() : null;\nconst parseWorker = /*@__PURE__*/ViewPlugin.fromClass(class ParseWorker {\n    constructor(view) {\n        this.view = view;\n        this.working = null;\n        this.workScheduled = 0;\n        // End of the current time chunk\n        this.chunkEnd = -1;\n        // Milliseconds of budget left for this chunk\n        this.chunkBudget = -1;\n        this.work = this.work.bind(this);\n        this.scheduleWork();\n    }\n    update(update) {\n        let cx = this.view.state.field(Language.state).context;\n        if (cx.updateViewport(update.view.viewport) || this.view.viewport.to > cx.treeLen)\n            this.scheduleWork();\n        if (update.docChanged || update.selectionSet) {\n            if (this.view.hasFocus)\n                this.chunkBudget += 50 /* Work.ChangeBonus */;\n            this.scheduleWork();\n        }\n        this.checkAsyncSchedule(cx);\n    }\n    scheduleWork() {\n        if (this.working)\n            return;\n        let { state } = this.view, field = state.field(Language.state);\n        if (field.tree != field.context.tree || !field.context.isDone(state.doc.length))\n            this.working = requestIdle(this.work);\n    }\n    work(deadline) {\n        this.working = null;\n        let now = Date.now();\n        if (this.chunkEnd < now && (this.chunkEnd < 0 || this.view.hasFocus)) { // Start a new chunk\n            this.chunkEnd = now + 30000 /* Work.ChunkTime */;\n            this.chunkBudget = 3000 /* Work.ChunkBudget */;\n        }\n        if (this.chunkBudget <= 0)\n            return; // No more budget\n        let { state, viewport: { to: vpTo } } = this.view, field = state.field(Language.state);\n        if (field.tree == field.context.tree && field.context.isDone(vpTo + 100000 /* Work.MaxParseAhead */))\n            return;\n        let endTime = Date.now() + Math.min(this.chunkBudget, 100 /* Work.Slice */, deadline && !isInputPending ? Math.max(25 /* Work.MinSlice */, deadline.timeRemaining() - 5) : 1e9);\n        let viewportFirst = field.context.treeLen < vpTo && state.doc.length > vpTo + 1000;\n        let done = field.context.work(() => {\n            return isInputPending && isInputPending() || Date.now() > endTime;\n        }, vpTo + (viewportFirst ? 0 : 100000 /* Work.MaxParseAhead */));\n        this.chunkBudget -= Date.now() - now;\n        if (done || this.chunkBudget <= 0) {\n            field.context.takeTree();\n            this.view.dispatch({ effects: Language.setState.of(new LanguageState(field.context)) });\n        }\n        if (this.chunkBudget > 0 && !(done && !viewportFirst))\n            this.scheduleWork();\n        this.checkAsyncSchedule(field.context);\n    }\n    checkAsyncSchedule(cx) {\n        if (cx.scheduleOn) {\n            this.workScheduled++;\n            cx.scheduleOn\n                .then(() => this.scheduleWork())\n                .catch(err => logException(this.view.state, err))\n                .then(() => this.workScheduled--);\n            cx.scheduleOn = null;\n        }\n    }\n    destroy() {\n        if (this.working)\n            this.working();\n    }\n    isWorking() {\n        return !!(this.working || this.workScheduled > 0);\n    }\n}, {\n    eventHandlers: { focus() { this.scheduleWork(); } }\n});\n/**\nThe facet used to associate a language with an editor state. Used\nby `Language` object's `extension` property (so you don't need to\nmanually wrap your languages in this). Can be used to access the\ncurrent language on a state.\n*/\nconst language = /*@__PURE__*/Facet.define({\n    combine(languages) { return languages.length ? languages[0] : null; },\n    enables: language => [\n        Language.state,\n        parseWorker,\n        EditorView.contentAttributes.compute([language], state => {\n            let lang = state.facet(language);\n            return lang && lang.name ? { \"data-language\": lang.name } : {};\n        })\n    ]\n});\n/**\nThis class bundles a [language](https://codemirror.net/6/docs/ref/#language.Language) with an\noptional set of supporting extensions. Language packages are\nencouraged to export a function that optionally takes a\nconfiguration object and returns a `LanguageSupport` instance, as\nthe main way for client code to use the package.\n*/\nclass LanguageSupport {\n    /**\n    Create a language support object.\n    */\n    constructor(\n    /**\n    The language object.\n    */\n    language, \n    /**\n    An optional set of supporting extensions. When nesting a\n    language in another language, the outer language is encouraged\n    to include the supporting extensions for its inner languages\n    in its own set of support extensions.\n    */\n    support = []) {\n        this.language = language;\n        this.support = support;\n        this.extension = [language, support];\n    }\n}\n/**\nLanguage descriptions are used to store metadata about languages\nand to dynamically load them. Their main role is finding the\nappropriate language for a filename or dynamically loading nested\nparsers.\n*/\nclass LanguageDescription {\n    constructor(\n    /**\n    The name of this language.\n    */\n    name, \n    /**\n    Alternative names for the mode (lowercased, includes `this.name`).\n    */\n    alias, \n    /**\n    File extensions associated with this language.\n    */\n    extensions, \n    /**\n    Optional filename pattern that should be associated with this\n    language.\n    */\n    filename, loadFunc, \n    /**\n    If the language has been loaded, this will hold its value.\n    */\n    support = undefined) {\n        this.name = name;\n        this.alias = alias;\n        this.extensions = extensions;\n        this.filename = filename;\n        this.loadFunc = loadFunc;\n        this.support = support;\n        this.loading = null;\n    }\n    /**\n    Start loading the the language. Will return a promise that\n    resolves to a [`LanguageSupport`](https://codemirror.net/6/docs/ref/#language.LanguageSupport)\n    object when the language successfully loads.\n    */\n    load() {\n        return this.loading || (this.loading = this.loadFunc().then(support => this.support = support, err => { this.loading = null; throw err; }));\n    }\n    /**\n    Create a language description.\n    */\n    static of(spec) {\n        let { load, support } = spec;\n        if (!load) {\n            if (!support)\n                throw new RangeError(\"Must pass either 'load' or 'support' to LanguageDescription.of\");\n            load = () => Promise.resolve(support);\n        }\n        return new LanguageDescription(spec.name, (spec.alias || []).concat(spec.name).map(s => s.toLowerCase()), spec.extensions || [], spec.filename, load, support);\n    }\n    /**\n    Look for a language in the given array of descriptions that\n    matches the filename. Will first match\n    [`filename`](https://codemirror.net/6/docs/ref/#language.LanguageDescription.filename) patterns,\n    and then [extensions](https://codemirror.net/6/docs/ref/#language.LanguageDescription.extensions),\n    and return the first language that matches.\n    */\n    static matchFilename(descs, filename) {\n        for (let d of descs)\n            if (d.filename && d.filename.test(filename))\n                return d;\n        let ext = /\\.([^.]+)$/.exec(filename);\n        if (ext)\n            for (let d of descs)\n                if (d.extensions.indexOf(ext[1]) > -1)\n                    return d;\n        return null;\n    }\n    /**\n    Look for a language whose name or alias matches the the given\n    name (case-insensitively). If `fuzzy` is true, and no direct\n    matchs is found, this'll also search for a language whose name\n    or alias occurs in the string (for names shorter than three\n    characters, only when surrounded by non-word characters).\n    */\n    static matchLanguageName(descs, name, fuzzy = true) {\n        name = name.toLowerCase();\n        for (let d of descs)\n            if (d.alias.some(a => a == name))\n                return d;\n        if (fuzzy)\n            for (let d of descs)\n                for (let a of d.alias) {\n                    let found = name.indexOf(a);\n                    if (found > -1 && (a.length > 2 || !/\\w/.test(name[found - 1]) && !/\\w/.test(name[found + a.length])))\n                        return d;\n                }\n        return null;\n    }\n}\n\n/**\nFacet that defines a way to provide a function that computes the\nappropriate indentation depth, as a column number (see\n[`indentString`](https://codemirror.net/6/docs/ref/#language.indentString)), at the start of a given\nline. A return value of `null` indicates no indentation can be\ndetermined, and the line should inherit the indentation of the one\nabove it. A return value of `undefined` defers to the next indent\nservice.\n*/\nconst indentService = /*@__PURE__*/Facet.define();\n/**\nFacet for overriding the unit by which indentation happens. Should\nbe a string consisting entirely of the same whitespace character.\nWhen not set, this defaults to 2 spaces.\n*/\nconst indentUnit = /*@__PURE__*/Facet.define({\n    combine: values => {\n        if (!values.length)\n            return \"  \";\n        let unit = values[0];\n        if (!unit || /\\S/.test(unit) || Array.from(unit).some(e => e != unit[0]))\n            throw new Error(\"Invalid indent unit: \" + JSON.stringify(values[0]));\n        return unit;\n    }\n});\n/**\nReturn the _column width_ of an indent unit in the state.\nDetermined by the [`indentUnit`](https://codemirror.net/6/docs/ref/#language.indentUnit)\nfacet, and [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) when that\ncontains tabs.\n*/\nfunction getIndentUnit(state) {\n    let unit = state.facet(indentUnit);\n    return unit.charCodeAt(0) == 9 ? state.tabSize * unit.length : unit.length;\n}\n/**\nCreate an indentation string that covers columns 0 to `cols`.\nWill use tabs for as much of the columns as possible when the\n[`indentUnit`](https://codemirror.net/6/docs/ref/#language.indentUnit) facet contains\ntabs.\n*/\nfunction indentString(state, cols) {\n    let result = \"\", ts = state.tabSize, ch = state.facet(indentUnit)[0];\n    if (ch == \"\\t\") {\n        while (cols >= ts) {\n            result += \"\\t\";\n            cols -= ts;\n        }\n        ch = \" \";\n    }\n    for (let i = 0; i < cols; i++)\n        result += ch;\n    return result;\n}\n/**\nGet the indentation, as a column number, at the given position.\nWill first consult any [indent services](https://codemirror.net/6/docs/ref/#language.indentService)\nthat are registered, and if none of those return an indentation,\nthis will check the syntax tree for the [indent node\nprop](https://codemirror.net/6/docs/ref/#language.indentNodeProp) and use that if found. Returns a\nnumber when an indentation could be determined, and null\notherwise.\n*/\nfunction getIndentation(context, pos) {\n    if (context instanceof EditorState)\n        context = new IndentContext(context);\n    for (let service of context.state.facet(indentService)) {\n        let result = service(context, pos);\n        if (result !== undefined)\n            return result;\n    }\n    let tree = syntaxTree(context.state);\n    return tree.length >= pos ? syntaxIndentation(context, tree, pos) : null;\n}\n/**\nCreate a change set that auto-indents all lines touched by the\ngiven document range.\n*/\nfunction indentRange(state, from, to) {\n    let updated = Object.create(null);\n    let context = new IndentContext(state, { overrideIndentation: start => { var _a; return (_a = updated[start]) !== null && _a !== void 0 ? _a : -1; } });\n    let changes = [];\n    for (let pos = from; pos <= to;) {\n        let line = state.doc.lineAt(pos);\n        pos = line.to + 1;\n        let indent = getIndentation(context, line.from);\n        if (indent == null)\n            continue;\n        if (!/\\S/.test(line.text))\n            indent = 0;\n        let cur = /^\\s*/.exec(line.text)[0];\n        let norm = indentString(state, indent);\n        if (cur != norm) {\n            updated[line.from] = indent;\n            changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n    }\n    return state.changes(changes);\n}\n/**\nIndentation contexts are used when calling [indentation\nservices](https://codemirror.net/6/docs/ref/#language.indentService). They provide helper utilities\nuseful in indentation logic, and can selectively override the\nindentation reported for some lines.\n*/\nclass IndentContext {\n    /**\n    Create an indent context.\n    */\n    constructor(\n    /**\n    The editor state.\n    */\n    state, \n    /**\n    @internal\n    */\n    options = {}) {\n        this.state = state;\n        this.options = options;\n        this.unit = getIndentUnit(state);\n    }\n    /**\n    Get a description of the line at the given position, taking\n    [simulated line\n    breaks](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)\n    into account. If there is such a break at `pos`, the `bias`\n    argument determines whether the part of the line line before or\n    after the break is used.\n    */\n    lineAt(pos, bias = 1) {\n        let line = this.state.doc.lineAt(pos);\n        let { simulateBreak, simulateDoubleBreak } = this.options;\n        if (simulateBreak != null && simulateBreak >= line.from && simulateBreak <= line.to) {\n            if (simulateDoubleBreak && simulateBreak == pos)\n                return { text: \"\", from: pos };\n            else if (bias < 0 ? simulateBreak < pos : simulateBreak <= pos)\n                return { text: line.text.slice(simulateBreak - line.from), from: simulateBreak };\n            else\n                return { text: line.text.slice(0, simulateBreak - line.from), from: line.from };\n        }\n        return line;\n    }\n    /**\n    Get the text directly after `pos`, either the entire line\n    or the next 100 characters, whichever is shorter.\n    */\n    textAfterPos(pos, bias = 1) {\n        if (this.options.simulateDoubleBreak && pos == this.options.simulateBreak)\n            return \"\";\n        let { text, from } = this.lineAt(pos, bias);\n        return text.slice(pos - from, Math.min(text.length, pos + 100 - from));\n    }\n    /**\n    Find the column for the given position.\n    */\n    column(pos, bias = 1) {\n        let { text, from } = this.lineAt(pos, bias);\n        let result = this.countColumn(text, pos - from);\n        let override = this.options.overrideIndentation ? this.options.overrideIndentation(from) : -1;\n        if (override > -1)\n            result += override - this.countColumn(text, text.search(/\\S|$/));\n        return result;\n    }\n    /**\n    Find the column position (taking tabs into account) of the given\n    position in the given string.\n    */\n    countColumn(line, pos = line.length) {\n        return countColumn(line, this.state.tabSize, pos);\n    }\n    /**\n    Find the indentation column of the line at the given point.\n    */\n    lineIndent(pos, bias = 1) {\n        let { text, from } = this.lineAt(pos, bias);\n        let override = this.options.overrideIndentation;\n        if (override) {\n            let overriden = override(from);\n            if (overriden > -1)\n                return overriden;\n        }\n        return this.countColumn(text, text.search(/\\S|$/));\n    }\n    /**\n    Returns the [simulated line\n    break](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)\n    for this context, if any.\n    */\n    get simulatedBreak() {\n        return this.options.simulateBreak || null;\n    }\n}\n/**\nA syntax tree node prop used to associate indentation strategies\nwith node types. Such a strategy is a function from an indentation\ncontext to a column number (see also\n[`indentString`](https://codemirror.net/6/docs/ref/#language.indentString)) or null, where null\nindicates that no definitive indentation can be determined.\n*/\nconst indentNodeProp = /*@__PURE__*/new NodeProp();\n// Compute the indentation for a given position from the syntax tree.\nfunction syntaxIndentation(cx, ast, pos) {\n    let stack = ast.resolveStack(pos);\n    let inner = ast.resolveInner(pos, -1).resolve(pos, 0).enterUnfinishedNodesBefore(pos);\n    if (inner != stack.node) {\n        let add = [];\n        for (let cur = inner; cur && !(cur.from < stack.node.from || cur.to > stack.node.to ||\n            cur.from == stack.node.from && cur.type == stack.node.type); cur = cur.parent)\n            add.push(cur);\n        for (let i = add.length - 1; i >= 0; i--)\n            stack = { node: add[i], next: stack };\n    }\n    return indentFor(stack, cx, pos);\n}\nfunction indentFor(stack, cx, pos) {\n    for (let cur = stack; cur; cur = cur.next) {\n        let strategy = indentStrategy(cur.node);\n        if (strategy)\n            return strategy(TreeIndentContext.create(cx, pos, cur));\n    }\n    return 0;\n}\nfunction ignoreClosed(cx) {\n    return cx.pos == cx.options.simulateBreak && cx.options.simulateDoubleBreak;\n}\nfunction indentStrategy(tree) {\n    let strategy = tree.type.prop(indentNodeProp);\n    if (strategy)\n        return strategy;\n    let first = tree.firstChild, close;\n    if (first && (close = first.type.prop(NodeProp.closedBy))) {\n        let last = tree.lastChild, closed = last && close.indexOf(last.name) > -1;\n        return cx => delimitedStrategy(cx, true, 1, undefined, closed && !ignoreClosed(cx) ? last.from : undefined);\n    }\n    return tree.parent == null ? topIndent : null;\n}\nfunction topIndent() { return 0; }\n/**\nObjects of this type provide context information and helper\nmethods to indentation functions registered on syntax nodes.\n*/\nclass TreeIndentContext extends IndentContext {\n    constructor(base, \n    /**\n    The position at which indentation is being computed.\n    */\n    pos, \n    /**\n    @internal\n    */\n    context) {\n        super(base.state, base.options);\n        this.base = base;\n        this.pos = pos;\n        this.context = context;\n    }\n    /**\n    The syntax tree node to which the indentation strategy\n    applies.\n    */\n    get node() { return this.context.node; }\n    /**\n    @internal\n    */\n    static create(base, pos, context) {\n        return new TreeIndentContext(base, pos, context);\n    }\n    /**\n    Get the text directly after `this.pos`, either the entire line\n    or the next 100 characters, whichever is shorter.\n    */\n    get textAfter() {\n        return this.textAfterPos(this.pos);\n    }\n    /**\n    Get the indentation at the reference line for `this.node`, which\n    is the line on which it starts, unless there is a node that is\n    _not_ a parent of this node covering the start of that line. If\n    so, the line at the start of that node is tried, again skipping\n    on if it is covered by another such node.\n    */\n    get baseIndent() {\n        return this.baseIndentFor(this.node);\n    }\n    /**\n    Get the indentation for the reference line of the given node\n    (see [`baseIndent`](https://codemirror.net/6/docs/ref/#language.TreeIndentContext.baseIndent)).\n    */\n    baseIndentFor(node) {\n        let line = this.state.doc.lineAt(node.from);\n        // Skip line starts that are covered by a sibling (or cousin, etc)\n        for (;;) {\n            let atBreak = node.resolve(line.from);\n            while (atBreak.parent && atBreak.parent.from == atBreak.from)\n                atBreak = atBreak.parent;\n            if (isParent(atBreak, node))\n                break;\n            line = this.state.doc.lineAt(atBreak.from);\n        }\n        return this.lineIndent(line.from);\n    }\n    /**\n    Continue looking for indentations in the node's parent nodes,\n    and return the result of that.\n    */\n    continue() {\n        return indentFor(this.context.next, this.base, this.pos);\n    }\n}\nfunction isParent(parent, of) {\n    for (let cur = of; cur; cur = cur.parent)\n        if (parent == cur)\n            return true;\n    return false;\n}\n// Check whether a delimited node is aligned (meaning there are\n// non-skipped nodes on the same line as the opening delimiter). And\n// if so, return the opening token.\nfunction bracketedAligned(context) {\n    let tree = context.node;\n    let openToken = tree.childAfter(tree.from), last = tree.lastChild;\n    if (!openToken)\n        return null;\n    let sim = context.options.simulateBreak;\n    let openLine = context.state.doc.lineAt(openToken.from);\n    let lineEnd = sim == null || sim <= openLine.from ? openLine.to : Math.min(openLine.to, sim);\n    for (let pos = openToken.to;;) {\n        let next = tree.childAfter(pos);\n        if (!next || next == last)\n            return null;\n        if (!next.type.isSkipped) {\n            if (next.from >= lineEnd)\n                return null;\n            let space = /^ */.exec(openLine.text.slice(openToken.to - openLine.from))[0].length;\n            return { from: openToken.from, to: openToken.to + space };\n        }\n        pos = next.to;\n    }\n}\n/**\nAn indentation strategy for delimited (usually bracketed) nodes.\nWill, by default, indent one unit more than the parent's base\nindent unless the line starts with a closing token. When `align`\nis true and there are non-skipped nodes on the node's opening\nline, the content of the node will be aligned with the end of the\nopening node, like this:\n\n    foo(bar,\n        baz)\n*/\nfunction delimitedIndent({ closing, align = true, units = 1 }) {\n    return (context) => delimitedStrategy(context, align, units, closing);\n}\nfunction delimitedStrategy(context, align, units, closing, closedAt) {\n    let after = context.textAfter, space = after.match(/^\\s*/)[0].length;\n    let closed = closing && after.slice(space, space + closing.length) == closing || closedAt == context.pos + space;\n    let aligned = align ? bracketedAligned(context) : null;\n    if (aligned)\n        return closed ? context.column(aligned.from) : context.column(aligned.to);\n    return context.baseIndent + (closed ? 0 : context.unit * units);\n}\n/**\nAn indentation strategy that aligns a node's content to its base\nindentation.\n*/\nconst flatIndent = (context) => context.baseIndent;\n/**\nCreates an indentation strategy that, by default, indents\ncontinued lines one unit more than the node's base indentation.\nYou can provide `except` to prevent indentation of lines that\nmatch a pattern (for example `/^else\\b/` in `if`/`else`\nconstructs), and you can change the amount of units used with the\n`units` option.\n*/\nfunction continuedIndent({ except, units = 1 } = {}) {\n    return (context) => {\n        let matchExcept = except && except.test(context.textAfter);\n        return context.baseIndent + (matchExcept ? 0 : units * context.unit);\n    };\n}\nconst DontIndentBeyond = 200;\n/**\nEnables reindentation on input. When a language defines an\n`indentOnInput` field in its [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt), which must hold a regular\nexpression, the line at the cursor will be reindented whenever new\ntext is typed and the input from the start of the line up to the\ncursor matches that regexp.\n\nTo avoid unneccesary reindents, it is recommended to start the\nregexp with `^` (usually followed by `\\s*`), and end it with `$`.\nFor example, `/^\\s*\\}$/` will reindent when a closing brace is\nadded at the start of a line.\n*/\nfunction indentOnInput() {\n    return EditorState.transactionFilter.of(tr => {\n        if (!tr.docChanged || !tr.isUserEvent(\"input.type\") && !tr.isUserEvent(\"input.complete\"))\n            return tr;\n        let rules = tr.startState.languageDataAt(\"indentOnInput\", tr.startState.selection.main.head);\n        if (!rules.length)\n            return tr;\n        let doc = tr.newDoc, { head } = tr.newSelection.main, line = doc.lineAt(head);\n        if (head > line.from + DontIndentBeyond)\n            return tr;\n        let lineStart = doc.sliceString(line.from, head);\n        if (!rules.some(r => r.test(lineStart)))\n            return tr;\n        let { state } = tr, last = -1, changes = [];\n        for (let { head } of state.selection.ranges) {\n            let line = state.doc.lineAt(head);\n            if (line.from == last)\n                continue;\n            last = line.from;\n            let indent = getIndentation(state, line.from);\n            if (indent == null)\n                continue;\n            let cur = /^\\s*/.exec(line.text)[0];\n            let norm = indentString(state, indent);\n            if (cur != norm)\n                changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n        return changes.length ? [tr, { changes, sequential: true }] : tr;\n    });\n}\n\n/**\nA facet that registers a code folding service. When called with\nthe extent of a line, such a function should return a foldable\nrange that starts on that line (but continues beyond it), if one\ncan be found.\n*/\nconst foldService = /*@__PURE__*/Facet.define();\n/**\nThis node prop is used to associate folding information with\nsyntax node types. Given a syntax node, it should check whether\nthat tree is foldable and return the range that can be collapsed\nwhen it is.\n*/\nconst foldNodeProp = /*@__PURE__*/new NodeProp();\n/**\n[Fold](https://codemirror.net/6/docs/ref/#language.foldNodeProp) function that folds everything but\nthe first and the last child of a syntax node. Useful for nodes\nthat start and end with delimiters.\n*/\nfunction foldInside(node) {\n    let first = node.firstChild, last = node.lastChild;\n    return first && first.to < last.from ? { from: first.to, to: last.type.isError ? node.to : last.from } : null;\n}\nfunction syntaxFolding(state, start, end) {\n    let tree = syntaxTree(state);\n    if (tree.length < end)\n        return null;\n    let stack = tree.resolveStack(end, 1);\n    let found = null;\n    for (let iter = stack; iter; iter = iter.next) {\n        let cur = iter.node;\n        if (cur.to <= end || cur.from > end)\n            continue;\n        if (found && cur.from < start)\n            break;\n        let prop = cur.type.prop(foldNodeProp);\n        if (prop && (cur.to < tree.length - 50 || tree.length == state.doc.length || !isUnfinished(cur))) {\n            let value = prop(cur, state);\n            if (value && value.from <= end && value.from >= start && value.to > end)\n                found = value;\n        }\n    }\n    return found;\n}\nfunction isUnfinished(node) {\n    let ch = node.lastChild;\n    return ch && ch.to == node.to && ch.type.isError;\n}\n/**\nCheck whether the given line is foldable. First asks any fold\nservices registered through\n[`foldService`](https://codemirror.net/6/docs/ref/#language.foldService), and if none of them return\na result, tries to query the [fold node\nprop](https://codemirror.net/6/docs/ref/#language.foldNodeProp) of syntax nodes that cover the end\nof the line.\n*/\nfunction foldable(state, lineStart, lineEnd) {\n    for (let service of state.facet(foldService)) {\n        let result = service(state, lineStart, lineEnd);\n        if (result)\n            return result;\n    }\n    return syntaxFolding(state, lineStart, lineEnd);\n}\nfunction mapRange(range, mapping) {\n    let from = mapping.mapPos(range.from, 1), to = mapping.mapPos(range.to, -1);\n    return from >= to ? undefined : { from, to };\n}\n/**\nState effect that can be attached to a transaction to fold the\ngiven range. (You probably only need this in exceptional\ncircumstances—usually you'll just want to let\n[`foldCode`](https://codemirror.net/6/docs/ref/#language.foldCode) and the [fold\ngutter](https://codemirror.net/6/docs/ref/#language.foldGutter) create the transactions.)\n*/\nconst foldEffect = /*@__PURE__*/StateEffect.define({ map: mapRange });\n/**\nState effect that unfolds the given range (if it was folded).\n*/\nconst unfoldEffect = /*@__PURE__*/StateEffect.define({ map: mapRange });\nfunction selectedLines(view) {\n    let lines = [];\n    for (let { head } of view.state.selection.ranges) {\n        if (lines.some(l => l.from <= head && l.to >= head))\n            continue;\n        lines.push(view.lineBlockAt(head));\n    }\n    return lines;\n}\n/**\nThe state field that stores the folded ranges (as a [decoration\nset](https://codemirror.net/6/docs/ref/#view.DecorationSet)). Can be passed to\n[`EditorState.toJSON`](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) and\n[`fromJSON`](https://codemirror.net/6/docs/ref/#state.EditorState^fromJSON) to serialize the fold\nstate.\n*/\nconst foldState = /*@__PURE__*/StateField.define({\n    create() {\n        return Decoration.none;\n    },\n    update(folded, tr) {\n        if (tr.isUserEvent(\"delete\"))\n            tr.changes.iterChangedRanges((fromA, toA) => folded = clearTouchedFolds(folded, fromA, toA));\n        folded = folded.map(tr.changes);\n        for (let e of tr.effects) {\n            if (e.is(foldEffect) && !foldExists(folded, e.value.from, e.value.to)) {\n                let { preparePlaceholder } = tr.state.facet(foldConfig);\n                let widget = !preparePlaceholder ? foldWidget :\n                    Decoration.replace({ widget: new PreparedFoldWidget(preparePlaceholder(tr.state, e.value)) });\n                folded = folded.update({ add: [widget.range(e.value.from, e.value.to)] });\n            }\n            else if (e.is(unfoldEffect)) {\n                folded = folded.update({ filter: (from, to) => e.value.from != from || e.value.to != to,\n                    filterFrom: e.value.from, filterTo: e.value.to });\n            }\n        }\n        // Clear folded ranges that cover the selection head\n        if (tr.selection)\n            folded = clearTouchedFolds(folded, tr.selection.main.head);\n        return folded;\n    },\n    provide: f => EditorView.decorations.from(f),\n    toJSON(folded, state) {\n        let ranges = [];\n        folded.between(0, state.doc.length, (from, to) => { ranges.push(from, to); });\n        return ranges;\n    },\n    fromJSON(value) {\n        if (!Array.isArray(value) || value.length % 2)\n            throw new RangeError(\"Invalid JSON for fold state\");\n        let ranges = [];\n        for (let i = 0; i < value.length;) {\n            let from = value[i++], to = value[i++];\n            if (typeof from != \"number\" || typeof to != \"number\")\n                throw new RangeError(\"Invalid JSON for fold state\");\n            ranges.push(foldWidget.range(from, to));\n        }\n        return Decoration.set(ranges, true);\n    }\n});\nfunction clearTouchedFolds(folded, from, to = from) {\n    let touched = false;\n    folded.between(from, to, (a, b) => { if (a < to && b > from)\n        touched = true; });\n    return !touched ? folded : folded.update({\n        filterFrom: from,\n        filterTo: to,\n        filter: (a, b) => a >= to || b <= from\n    });\n}\n/**\nGet a [range set](https://codemirror.net/6/docs/ref/#state.RangeSet) containing the folded ranges\nin the given state.\n*/\nfunction foldedRanges(state) {\n    return state.field(foldState, false) || RangeSet.empty;\n}\nfunction findFold(state, from, to) {\n    var _a;\n    let found = null;\n    (_a = state.field(foldState, false)) === null || _a === void 0 ? void 0 : _a.between(from, to, (from, to) => {\n        if (!found || found.from > from)\n            found = { from, to };\n    });\n    return found;\n}\nfunction foldExists(folded, from, to) {\n    let found = false;\n    folded.between(from, from, (a, b) => { if (a == from && b == to)\n        found = true; });\n    return found;\n}\nfunction maybeEnable(state, other) {\n    return state.field(foldState, false) ? other : other.concat(StateEffect.appendConfig.of(codeFolding()));\n}\n/**\nFold the lines that are selected, if possible.\n*/\nconst foldCode = view => {\n    for (let line of selectedLines(view)) {\n        let range = foldable(view.state, line.from, line.to);\n        if (range) {\n            view.dispatch({ effects: maybeEnable(view.state, [foldEffect.of(range), announceFold(view, range)]) });\n            return true;\n        }\n    }\n    return false;\n};\n/**\nUnfold folded ranges on selected lines.\n*/\nconst unfoldCode = view => {\n    if (!view.state.field(foldState, false))\n        return false;\n    let effects = [];\n    for (let line of selectedLines(view)) {\n        let folded = findFold(view.state, line.from, line.to);\n        if (folded)\n            effects.push(unfoldEffect.of(folded), announceFold(view, folded, false));\n    }\n    if (effects.length)\n        view.dispatch({ effects });\n    return effects.length > 0;\n};\nfunction announceFold(view, range, fold = true) {\n    let lineFrom = view.state.doc.lineAt(range.from).number, lineTo = view.state.doc.lineAt(range.to).number;\n    return EditorView.announce.of(`${view.state.phrase(fold ? \"Folded lines\" : \"Unfolded lines\")} ${lineFrom} ${view.state.phrase(\"to\")} ${lineTo}.`);\n}\n/**\nFold all top-level foldable ranges. Note that, in most cases,\nfolding information will depend on the [syntax\ntree](https://codemirror.net/6/docs/ref/#language.syntaxTree), and folding everything may not work\nreliably when the document hasn't been fully parsed (either\nbecause the editor state was only just initialized, or because the\ndocument is so big that the parser decided not to parse it\nentirely).\n*/\nconst foldAll = view => {\n    let { state } = view, effects = [];\n    for (let pos = 0; pos < state.doc.length;) {\n        let line = view.lineBlockAt(pos), range = foldable(state, line.from, line.to);\n        if (range)\n            effects.push(foldEffect.of(range));\n        pos = (range ? view.lineBlockAt(range.to) : line).to + 1;\n    }\n    if (effects.length)\n        view.dispatch({ effects: maybeEnable(view.state, effects) });\n    return !!effects.length;\n};\n/**\nUnfold all folded code.\n*/\nconst unfoldAll = view => {\n    let field = view.state.field(foldState, false);\n    if (!field || !field.size)\n        return false;\n    let effects = [];\n    field.between(0, view.state.doc.length, (from, to) => { effects.push(unfoldEffect.of({ from, to })); });\n    view.dispatch({ effects });\n    return true;\n};\n// Find the foldable region containing the given line, if one exists\nfunction foldableContainer(view, lineBlock) {\n    // Look backwards through line blocks until we find a foldable region that\n    // intersects with the line\n    for (let line = lineBlock;;) {\n        let foldableRegion = foldable(view.state, line.from, line.to);\n        if (foldableRegion && foldableRegion.to > lineBlock.from)\n            return foldableRegion;\n        if (!line.from)\n            return null;\n        line = view.lineBlockAt(line.from - 1);\n    }\n}\n/**\nToggle folding at cursors. Unfolds if there is an existing fold\nstarting in that line, tries to find a foldable range around it\notherwise.\n*/\nconst toggleFold = (view) => {\n    let effects = [];\n    for (let line of selectedLines(view)) {\n        let folded = findFold(view.state, line.from, line.to);\n        if (folded) {\n            effects.push(unfoldEffect.of(folded), announceFold(view, folded, false));\n        }\n        else {\n            let foldRange = foldableContainer(view, line);\n            if (foldRange)\n                effects.push(foldEffect.of(foldRange), announceFold(view, foldRange));\n        }\n    }\n    if (effects.length > 0)\n        view.dispatch({ effects: maybeEnable(view.state, effects) });\n    return !!effects.length;\n};\n/**\nDefault fold-related key bindings.\n\n - Ctrl-Shift-[ (Cmd-Alt-[ on macOS): [`foldCode`](https://codemirror.net/6/docs/ref/#language.foldCode).\n - Ctrl-Shift-] (Cmd-Alt-] on macOS): [`unfoldCode`](https://codemirror.net/6/docs/ref/#language.unfoldCode).\n - Ctrl-Alt-[: [`foldAll`](https://codemirror.net/6/docs/ref/#language.foldAll).\n - Ctrl-Alt-]: [`unfoldAll`](https://codemirror.net/6/docs/ref/#language.unfoldAll).\n*/\nconst foldKeymap = [\n    { key: \"Ctrl-Shift-[\", mac: \"Cmd-Alt-[\", run: foldCode },\n    { key: \"Ctrl-Shift-]\", mac: \"Cmd-Alt-]\", run: unfoldCode },\n    { key: \"Ctrl-Alt-[\", run: foldAll },\n    { key: \"Ctrl-Alt-]\", run: unfoldAll }\n];\nconst defaultConfig = {\n    placeholderDOM: null,\n    preparePlaceholder: null,\n    placeholderText: \"…\"\n};\nconst foldConfig = /*@__PURE__*/Facet.define({\n    combine(values) { return combineConfig(values, defaultConfig); }\n});\n/**\nCreate an extension that configures code folding.\n*/\nfunction codeFolding(config) {\n    let result = [foldState, baseTheme$1];\n    if (config)\n        result.push(foldConfig.of(config));\n    return result;\n}\nfunction widgetToDOM(view, prepared) {\n    let { state } = view, conf = state.facet(foldConfig);\n    let onclick = (event) => {\n        let line = view.lineBlockAt(view.posAtDOM(event.target));\n        let folded = findFold(view.state, line.from, line.to);\n        if (folded)\n            view.dispatch({ effects: unfoldEffect.of(folded) });\n        event.preventDefault();\n    };\n    if (conf.placeholderDOM)\n        return conf.placeholderDOM(view, onclick, prepared);\n    let element = document.createElement(\"span\");\n    element.textContent = conf.placeholderText;\n    element.setAttribute(\"aria-label\", state.phrase(\"folded code\"));\n    element.title = state.phrase(\"unfold\");\n    element.className = \"cm-foldPlaceholder\";\n    element.onclick = onclick;\n    return element;\n}\nconst foldWidget = /*@__PURE__*/Decoration.replace({ widget: /*@__PURE__*/new class extends WidgetType {\n        toDOM(view) { return widgetToDOM(view, null); }\n    } });\nclass PreparedFoldWidget extends WidgetType {\n    constructor(value) {\n        super();\n        this.value = value;\n    }\n    eq(other) { return this.value == other.value; }\n    toDOM(view) { return widgetToDOM(view, this.value); }\n}\nconst foldGutterDefaults = {\n    openText: \"⌄\",\n    closedText: \"›\",\n    markerDOM: null,\n    domEventHandlers: {},\n    foldingChanged: () => false\n};\nclass FoldMarker extends GutterMarker {\n    constructor(config, open) {\n        super();\n        this.config = config;\n        this.open = open;\n    }\n    eq(other) { return this.config == other.config && this.open == other.open; }\n    toDOM(view) {\n        if (this.config.markerDOM)\n            return this.config.markerDOM(this.open);\n        let span = document.createElement(\"span\");\n        span.textContent = this.open ? this.config.openText : this.config.closedText;\n        span.title = view.state.phrase(this.open ? \"Fold line\" : \"Unfold line\");\n        return span;\n    }\n}\n/**\nCreate an extension that registers a fold gutter, which shows a\nfold status indicator before foldable lines (which can be clicked\nto fold or unfold the line).\n*/\nfunction foldGutter(config = {}) {\n    let fullConfig = { ...foldGutterDefaults, ...config };\n    let canFold = new FoldMarker(fullConfig, true), canUnfold = new FoldMarker(fullConfig, false);\n    let markers = ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.from = view.viewport.from;\n            this.markers = this.buildMarkers(view);\n        }\n        update(update) {\n            if (update.docChanged || update.viewportChanged ||\n                update.startState.facet(language) != update.state.facet(language) ||\n                update.startState.field(foldState, false) != update.state.field(foldState, false) ||\n                syntaxTree(update.startState) != syntaxTree(update.state) ||\n                fullConfig.foldingChanged(update))\n                this.markers = this.buildMarkers(update.view);\n        }\n        buildMarkers(view) {\n            let builder = new RangeSetBuilder();\n            for (let line of view.viewportLineBlocks) {\n                let mark = findFold(view.state, line.from, line.to) ? canUnfold\n                    : foldable(view.state, line.from, line.to) ? canFold : null;\n                if (mark)\n                    builder.add(line.from, line.from, mark);\n            }\n            return builder.finish();\n        }\n    });\n    let { domEventHandlers } = fullConfig;\n    return [\n        markers,\n        gutter({\n            class: \"cm-foldGutter\",\n            markers(view) { var _a; return ((_a = view.plugin(markers)) === null || _a === void 0 ? void 0 : _a.markers) || RangeSet.empty; },\n            initialSpacer() {\n                return new FoldMarker(fullConfig, false);\n            },\n            domEventHandlers: {\n                ...domEventHandlers,\n                click: (view, line, event) => {\n                    if (domEventHandlers.click && domEventHandlers.click(view, line, event))\n                        return true;\n                    let folded = findFold(view.state, line.from, line.to);\n                    if (folded) {\n                        view.dispatch({ effects: unfoldEffect.of(folded) });\n                        return true;\n                    }\n                    let range = foldable(view.state, line.from, line.to);\n                    if (range) {\n                        view.dispatch({ effects: foldEffect.of(range) });\n                        return true;\n                    }\n                    return false;\n                }\n            }\n        }),\n        codeFolding()\n    ];\n}\nconst baseTheme$1 = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-foldPlaceholder\": {\n        backgroundColor: \"#eee\",\n        border: \"1px solid #ddd\",\n        color: \"#888\",\n        borderRadius: \".2em\",\n        margin: \"0 1px\",\n        padding: \"0 1px\",\n        cursor: \"pointer\"\n    },\n    \".cm-foldGutter span\": {\n        padding: \"0 1px\",\n        cursor: \"pointer\"\n    }\n});\n\n/**\nA highlight style associates CSS styles with higlighting\n[tags](https://lezer.codemirror.net/docs/ref#highlight.Tag).\n*/\nclass HighlightStyle {\n    constructor(\n    /**\n    The tag styles used to create this highlight style.\n    */\n    specs, options) {\n        this.specs = specs;\n        let modSpec;\n        function def(spec) {\n            let cls = StyleModule.newName();\n            (modSpec || (modSpec = Object.create(null)))[\".\" + cls] = spec;\n            return cls;\n        }\n        const all = typeof options.all == \"string\" ? options.all : options.all ? def(options.all) : undefined;\n        const scopeOpt = options.scope;\n        this.scope = scopeOpt instanceof Language ? (type) => type.prop(languageDataProp) == scopeOpt.data\n            : scopeOpt ? (type) => type == scopeOpt : undefined;\n        this.style = tagHighlighter(specs.map(style => ({\n            tag: style.tag,\n            class: style.class || def(Object.assign({}, style, { tag: null }))\n        })), {\n            all,\n        }).style;\n        this.module = modSpec ? new StyleModule(modSpec) : null;\n        this.themeType = options.themeType;\n    }\n    /**\n    Create a highlighter style that associates the given styles to\n    the given tags. The specs must be objects that hold a style tag\n    or array of tags in their `tag` property, and either a single\n    `class` property providing a static CSS class (for highlighter\n    that rely on external styling), or a\n    [`style-mod`](https://github.com/marijnh/style-mod#documentation)-style\n    set of CSS properties (which define the styling for those tags).\n    \n    The CSS rules created for a highlighter will be emitted in the\n    order of the spec's properties. That means that for elements that\n    have multiple tags associated with them, styles defined further\n    down in the list will have a higher CSS precedence than styles\n    defined earlier.\n    */\n    static define(specs, options) {\n        return new HighlightStyle(specs, options || {});\n    }\n}\nconst highlighterFacet = /*@__PURE__*/Facet.define();\nconst fallbackHighlighter = /*@__PURE__*/Facet.define({\n    combine(values) { return values.length ? [values[0]] : null; }\n});\nfunction getHighlighters(state) {\n    let main = state.facet(highlighterFacet);\n    return main.length ? main : state.facet(fallbackHighlighter);\n}\n/**\nWrap a highlighter in an editor extension that uses it to apply\nsyntax highlighting to the editor content.\n\nWhen multiple (non-fallback) styles are provided, the styling\napplied is the union of the classes they emit.\n*/\nfunction syntaxHighlighting(highlighter, options) {\n    let ext = [treeHighlighter], themeType;\n    if (highlighter instanceof HighlightStyle) {\n        if (highlighter.module)\n            ext.push(EditorView.styleModule.of(highlighter.module));\n        themeType = highlighter.themeType;\n    }\n    if (options === null || options === void 0 ? void 0 : options.fallback)\n        ext.push(fallbackHighlighter.of(highlighter));\n    else if (themeType)\n        ext.push(highlighterFacet.computeN([EditorView.darkTheme], state => {\n            return state.facet(EditorView.darkTheme) == (themeType == \"dark\") ? [highlighter] : [];\n        }));\n    else\n        ext.push(highlighterFacet.of(highlighter));\n    return ext;\n}\n/**\nReturns the CSS classes (if any) that the highlighters active in\nthe state would assign to the given style\n[tags](https://lezer.codemirror.net/docs/ref#highlight.Tag) and\n(optional) language\n[scope](https://codemirror.net/6/docs/ref/#language.HighlightStyle^define^options.scope).\n*/\nfunction highlightingFor(state, tags, scope) {\n    let highlighters = getHighlighters(state);\n    let result = null;\n    if (highlighters)\n        for (let highlighter of highlighters) {\n            if (!highlighter.scope || scope && highlighter.scope(scope)) {\n                let cls = highlighter.style(tags);\n                if (cls)\n                    result = result ? result + \" \" + cls : cls;\n            }\n        }\n    return result;\n}\nclass TreeHighlighter {\n    constructor(view) {\n        this.markCache = Object.create(null);\n        this.tree = syntaxTree(view.state);\n        this.decorations = this.buildDeco(view, getHighlighters(view.state));\n        this.decoratedTo = view.viewport.to;\n    }\n    update(update) {\n        let tree = syntaxTree(update.state), highlighters = getHighlighters(update.state);\n        let styleChange = highlighters != getHighlighters(update.startState);\n        let { viewport } = update.view, decoratedToMapped = update.changes.mapPos(this.decoratedTo, 1);\n        if (tree.length < viewport.to && !styleChange && tree.type == this.tree.type && decoratedToMapped >= viewport.to) {\n            this.decorations = this.decorations.map(update.changes);\n            this.decoratedTo = decoratedToMapped;\n        }\n        else if (tree != this.tree || update.viewportChanged || styleChange) {\n            this.tree = tree;\n            this.decorations = this.buildDeco(update.view, highlighters);\n            this.decoratedTo = viewport.to;\n        }\n    }\n    buildDeco(view, highlighters) {\n        if (!highlighters || !this.tree.length)\n            return Decoration.none;\n        let builder = new RangeSetBuilder();\n        for (let { from, to } of view.visibleRanges) {\n            highlightTree(this.tree, highlighters, (from, to, style) => {\n                builder.add(from, to, this.markCache[style] || (this.markCache[style] = Decoration.mark({ class: style })));\n            }, from, to);\n        }\n        return builder.finish();\n    }\n}\nconst treeHighlighter = /*@__PURE__*/Prec.high(/*@__PURE__*/ViewPlugin.fromClass(TreeHighlighter, {\n    decorations: v => v.decorations\n}));\n/**\nA default highlight style (works well with light themes).\n*/\nconst defaultHighlightStyle = /*@__PURE__*/HighlightStyle.define([\n    { tag: tags.meta,\n        color: \"#404740\" },\n    { tag: tags.link,\n        textDecoration: \"underline\" },\n    { tag: tags.heading,\n        textDecoration: \"underline\",\n        fontWeight: \"bold\" },\n    { tag: tags.emphasis,\n        fontStyle: \"italic\" },\n    { tag: tags.strong,\n        fontWeight: \"bold\" },\n    { tag: tags.strikethrough,\n        textDecoration: \"line-through\" },\n    { tag: tags.keyword,\n        color: \"#708\" },\n    { tag: [tags.atom, tags.bool, tags.url, tags.contentSeparator, tags.labelName],\n        color: \"#219\" },\n    { tag: [tags.literal, tags.inserted],\n        color: \"#164\" },\n    { tag: [tags.string, tags.deleted],\n        color: \"#a11\" },\n    { tag: [tags.regexp, tags.escape, /*@__PURE__*/tags.special(tags.string)],\n        color: \"#e40\" },\n    { tag: /*@__PURE__*/tags.definition(tags.variableName),\n        color: \"#00f\" },\n    { tag: /*@__PURE__*/tags.local(tags.variableName),\n        color: \"#30a\" },\n    { tag: [tags.typeName, tags.namespace],\n        color: \"#085\" },\n    { tag: tags.className,\n        color: \"#167\" },\n    { tag: [/*@__PURE__*/tags.special(tags.variableName), tags.macroName],\n        color: \"#256\" },\n    { tag: /*@__PURE__*/tags.definition(tags.propertyName),\n        color: \"#00c\" },\n    { tag: tags.comment,\n        color: \"#940\" },\n    { tag: tags.invalid,\n        color: \"#f00\" }\n]);\n\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \"&.cm-focused .cm-matchingBracket\": { backgroundColor: \"#328c8252\" },\n    \"&.cm-focused .cm-nonmatchingBracket\": { backgroundColor: \"#bb555544\" }\n});\nconst DefaultScanDist = 10000, DefaultBrackets = \"()[]{}\";\nconst bracketMatchingConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            afterCursor: true,\n            brackets: DefaultBrackets,\n            maxScanDistance: DefaultScanDist,\n            renderMatch: defaultRenderMatch\n        });\n    }\n});\nconst matchingMark = /*@__PURE__*/Decoration.mark({ class: \"cm-matchingBracket\" }), nonmatchingMark = /*@__PURE__*/Decoration.mark({ class: \"cm-nonmatchingBracket\" });\nfunction defaultRenderMatch(match) {\n    let decorations = [];\n    let mark = match.matched ? matchingMark : nonmatchingMark;\n    decorations.push(mark.range(match.start.from, match.start.to));\n    if (match.end)\n        decorations.push(mark.range(match.end.from, match.end.to));\n    return decorations;\n}\nconst bracketMatchingState = /*@__PURE__*/StateField.define({\n    create() { return Decoration.none; },\n    update(deco, tr) {\n        if (!tr.docChanged && !tr.selection)\n            return deco;\n        let decorations = [];\n        let config = tr.state.facet(bracketMatchingConfig);\n        for (let range of tr.state.selection.ranges) {\n            if (!range.empty)\n                continue;\n            let match = matchBrackets(tr.state, range.head, -1, config)\n                || (range.head > 0 && matchBrackets(tr.state, range.head - 1, 1, config))\n                || (config.afterCursor &&\n                    (matchBrackets(tr.state, range.head, 1, config) ||\n                        (range.head < tr.state.doc.length && matchBrackets(tr.state, range.head + 1, -1, config))));\n            if (match)\n                decorations = decorations.concat(config.renderMatch(match, tr.state));\n        }\n        return Decoration.set(decorations, true);\n    },\n    provide: f => EditorView.decorations.from(f)\n});\nconst bracketMatchingUnique = [\n    bracketMatchingState,\n    baseTheme\n];\n/**\nCreate an extension that enables bracket matching. Whenever the\ncursor is next to a bracket, that bracket and the one it matches\nare highlighted. Or, when no matching bracket is found, another\nhighlighting style is used to indicate this.\n*/\nfunction bracketMatching(config = {}) {\n    return [bracketMatchingConfig.of(config), bracketMatchingUnique];\n}\n/**\nWhen larger syntax nodes, such as HTML tags, are marked as\nopening/closing, it can be a bit messy to treat the whole node as\na matchable bracket. This node prop allows you to define, for such\na node, a ‘handle’—the part of the node that is highlighted, and\nthat the cursor must be on to activate highlighting in the first\nplace.\n*/\nconst bracketMatchingHandle = /*@__PURE__*/new NodeProp();\nfunction matchingNodes(node, dir, brackets) {\n    let byProp = node.prop(dir < 0 ? NodeProp.openedBy : NodeProp.closedBy);\n    if (byProp)\n        return byProp;\n    if (node.name.length == 1) {\n        let index = brackets.indexOf(node.name);\n        if (index > -1 && index % 2 == (dir < 0 ? 1 : 0))\n            return [brackets[index + dir]];\n    }\n    return null;\n}\nfunction findHandle(node) {\n    let hasHandle = node.type.prop(bracketMatchingHandle);\n    return hasHandle ? hasHandle(node.node) : node;\n}\n/**\nFind the matching bracket for the token at `pos`, scanning\ndirection `dir`. Only the `brackets` and `maxScanDistance`\nproperties are used from `config`, if given. Returns null if no\nbracket was found at `pos`, or a match result otherwise.\n*/\nfunction matchBrackets(state, pos, dir, config = {}) {\n    let maxScanDistance = config.maxScanDistance || DefaultScanDist, brackets = config.brackets || DefaultBrackets;\n    let tree = syntaxTree(state), node = tree.resolveInner(pos, dir);\n    for (let cur = node; cur; cur = cur.parent) {\n        let matches = matchingNodes(cur.type, dir, brackets);\n        if (matches && cur.from < cur.to) {\n            let handle = findHandle(cur);\n            if (handle && (dir > 0 ? pos >= handle.from && pos < handle.to : pos > handle.from && pos <= handle.to))\n                return matchMarkedBrackets(state, pos, dir, cur, handle, matches, brackets);\n        }\n    }\n    return matchPlainBrackets(state, pos, dir, tree, node.type, maxScanDistance, brackets);\n}\nfunction matchMarkedBrackets(_state, _pos, dir, token, handle, matching, brackets) {\n    let parent = token.parent, firstToken = { from: handle.from, to: handle.to };\n    let depth = 0, cursor = parent === null || parent === void 0 ? void 0 : parent.cursor();\n    if (cursor && (dir < 0 ? cursor.childBefore(token.from) : cursor.childAfter(token.to)))\n        do {\n            if (dir < 0 ? cursor.to <= token.from : cursor.from >= token.to) {\n                if (depth == 0 && matching.indexOf(cursor.type.name) > -1 && cursor.from < cursor.to) {\n                    let endHandle = findHandle(cursor);\n                    return { start: firstToken, end: endHandle ? { from: endHandle.from, to: endHandle.to } : undefined, matched: true };\n                }\n                else if (matchingNodes(cursor.type, dir, brackets)) {\n                    depth++;\n                }\n                else if (matchingNodes(cursor.type, -dir, brackets)) {\n                    if (depth == 0) {\n                        let endHandle = findHandle(cursor);\n                        return {\n                            start: firstToken,\n                            end: endHandle && endHandle.from < endHandle.to ? { from: endHandle.from, to: endHandle.to } : undefined,\n                            matched: false\n                        };\n                    }\n                    depth--;\n                }\n            }\n        } while (dir < 0 ? cursor.prevSibling() : cursor.nextSibling());\n    return { start: firstToken, matched: false };\n}\nfunction matchPlainBrackets(state, pos, dir, tree, tokenType, maxScanDistance, brackets) {\n    let startCh = dir < 0 ? state.sliceDoc(pos - 1, pos) : state.sliceDoc(pos, pos + 1);\n    let bracket = brackets.indexOf(startCh);\n    if (bracket < 0 || (bracket % 2 == 0) != (dir > 0))\n        return null;\n    let startToken = { from: dir < 0 ? pos - 1 : pos, to: dir > 0 ? pos + 1 : pos };\n    let iter = state.doc.iterRange(pos, dir > 0 ? state.doc.length : 0), depth = 0;\n    for (let distance = 0; !(iter.next()).done && distance <= maxScanDistance;) {\n        let text = iter.value;\n        if (dir < 0)\n            distance += text.length;\n        let basePos = pos + distance * dir;\n        for (let pos = dir > 0 ? 0 : text.length - 1, end = dir > 0 ? text.length : -1; pos != end; pos += dir) {\n            let found = brackets.indexOf(text[pos]);\n            if (found < 0 || tree.resolveInner(basePos + pos, 1).type != tokenType)\n                continue;\n            if ((found % 2 == 0) == (dir > 0)) {\n                depth++;\n            }\n            else if (depth == 1) { // Closing\n                return { start: startToken, end: { from: basePos + pos, to: basePos + pos + 1 }, matched: (found >> 1) == (bracket >> 1) };\n            }\n            else {\n                depth--;\n            }\n        }\n        if (dir > 0)\n            distance += text.length;\n    }\n    return iter.done ? { start: startToken, matched: false } : null;\n}\n\n// Counts the column offset in a string, taking tabs into account.\n// Used mostly to find indentation.\nfunction countCol(string, end, tabSize, startIndex = 0, startValue = 0) {\n    if (end == null) {\n        end = string.search(/[^\\s\\u00a0]/);\n        if (end == -1)\n            end = string.length;\n    }\n    let n = startValue;\n    for (let i = startIndex; i < end; i++) {\n        if (string.charCodeAt(i) == 9)\n            n += tabSize - (n % tabSize);\n        else\n            n++;\n    }\n    return n;\n}\n/**\nEncapsulates a single line of input. Given to stream syntax code,\nwhich uses it to tokenize the content.\n*/\nclass StringStream {\n    /**\n    Create a stream.\n    */\n    constructor(\n    /**\n    The line.\n    */\n    string, tabSize, \n    /**\n    The current indent unit size.\n    */\n    indentUnit, overrideIndent) {\n        this.string = string;\n        this.tabSize = tabSize;\n        this.indentUnit = indentUnit;\n        this.overrideIndent = overrideIndent;\n        /**\n        The current position on the line.\n        */\n        this.pos = 0;\n        /**\n        The start position of the current token.\n        */\n        this.start = 0;\n        this.lastColumnPos = 0;\n        this.lastColumnValue = 0;\n    }\n    /**\n    True if we are at the end of the line.\n    */\n    eol() { return this.pos >= this.string.length; }\n    /**\n    True if we are at the start of the line.\n    */\n    sol() { return this.pos == 0; }\n    /**\n    Get the next code unit after the current position, or undefined\n    if we're at the end of the line.\n    */\n    peek() { return this.string.charAt(this.pos) || undefined; }\n    /**\n    Read the next code unit and advance `this.pos`.\n    */\n    next() {\n        if (this.pos < this.string.length)\n            return this.string.charAt(this.pos++);\n    }\n    /**\n    Match the next character against the given string, regular\n    expression, or predicate. Consume and return it if it matches.\n    */\n    eat(match) {\n        let ch = this.string.charAt(this.pos);\n        let ok;\n        if (typeof match == \"string\")\n            ok = ch == match;\n        else\n            ok = ch && (match instanceof RegExp ? match.test(ch) : match(ch));\n        if (ok) {\n            ++this.pos;\n            return ch;\n        }\n    }\n    /**\n    Continue matching characters that match the given string,\n    regular expression, or predicate function. Return true if any\n    characters were consumed.\n    */\n    eatWhile(match) {\n        let start = this.pos;\n        while (this.eat(match)) { }\n        return this.pos > start;\n    }\n    /**\n    Consume whitespace ahead of `this.pos`. Return true if any was\n    found.\n    */\n    eatSpace() {\n        let start = this.pos;\n        while (/[\\s\\u00a0]/.test(this.string.charAt(this.pos)))\n            ++this.pos;\n        return this.pos > start;\n    }\n    /**\n    Move to the end of the line.\n    */\n    skipToEnd() { this.pos = this.string.length; }\n    /**\n    Move to directly before the given character, if found on the\n    current line.\n    */\n    skipTo(ch) {\n        let found = this.string.indexOf(ch, this.pos);\n        if (found > -1) {\n            this.pos = found;\n            return true;\n        }\n    }\n    /**\n    Move back `n` characters.\n    */\n    backUp(n) { this.pos -= n; }\n    /**\n    Get the column position at `this.pos`.\n    */\n    column() {\n        if (this.lastColumnPos < this.start) {\n            this.lastColumnValue = countCol(this.string, this.start, this.tabSize, this.lastColumnPos, this.lastColumnValue);\n            this.lastColumnPos = this.start;\n        }\n        return this.lastColumnValue;\n    }\n    /**\n    Get the indentation column of the current line.\n    */\n    indentation() {\n        var _a;\n        return (_a = this.overrideIndent) !== null && _a !== void 0 ? _a : countCol(this.string, null, this.tabSize);\n    }\n    /**\n    Match the input against the given string or regular expression\n    (which should start with a `^`). Return true or the regexp match\n    if it matches.\n    \n    Unless `consume` is set to `false`, this will move `this.pos`\n    past the matched text.\n    \n    When matching a string `caseInsensitive` can be set to true to\n    make the match case-insensitive.\n    */\n    match(pattern, consume, caseInsensitive) {\n        if (typeof pattern == \"string\") {\n            let cased = (str) => caseInsensitive ? str.toLowerCase() : str;\n            let substr = this.string.substr(this.pos, pattern.length);\n            if (cased(substr) == cased(pattern)) {\n                if (consume !== false)\n                    this.pos += pattern.length;\n                return true;\n            }\n            else\n                return null;\n        }\n        else {\n            let match = this.string.slice(this.pos).match(pattern);\n            if (match && match.index > 0)\n                return null;\n            if (match && consume !== false)\n                this.pos += match[0].length;\n            return match;\n        }\n    }\n    /**\n    Get the current token.\n    */\n    current() { return this.string.slice(this.start, this.pos); }\n}\n\nfunction fullParser(spec) {\n    return {\n        name: spec.name || \"\",\n        token: spec.token,\n        blankLine: spec.blankLine || (() => { }),\n        startState: spec.startState || (() => true),\n        copyState: spec.copyState || defaultCopyState,\n        indent: spec.indent || (() => null),\n        languageData: spec.languageData || {},\n        tokenTable: spec.tokenTable || noTokens,\n        mergeTokens: spec.mergeTokens !== false\n    };\n}\nfunction defaultCopyState(state) {\n    if (typeof state != \"object\")\n        return state;\n    let newState = {};\n    for (let prop in state) {\n        let val = state[prop];\n        newState[prop] = (val instanceof Array ? val.slice() : val);\n    }\n    return newState;\n}\nconst IndentedFrom = /*@__PURE__*/new WeakMap();\n/**\nA [language](https://codemirror.net/6/docs/ref/#language.Language) class based on a CodeMirror\n5-style [streaming parser](https://codemirror.net/6/docs/ref/#language.StreamParser).\n*/\nclass StreamLanguage extends Language {\n    constructor(parser) {\n        let data = defineLanguageFacet(parser.languageData);\n        let p = fullParser(parser), self;\n        let impl = new class extends Parser {\n            createParse(input, fragments, ranges) {\n                return new Parse(self, input, fragments, ranges);\n            }\n        };\n        super(data, impl, [], parser.name);\n        this.topNode = docID(data, this);\n        self = this;\n        this.streamParser = p;\n        this.stateAfter = new NodeProp({ perNode: true });\n        this.tokenTable = parser.tokenTable ? new TokenTable(p.tokenTable) : defaultTokenTable;\n    }\n    /**\n    Define a stream language.\n    */\n    static define(spec) { return new StreamLanguage(spec); }\n    /**\n    @internal\n    */\n    getIndent(cx) {\n        let from = undefined;\n        let { overrideIndentation } = cx.options;\n        if (overrideIndentation) {\n            from = IndentedFrom.get(cx.state);\n            if (from != null && from < cx.pos - 1e4)\n                from = undefined;\n        }\n        let start = findState(this, cx.node.tree, cx.node.from, cx.node.from, from !== null && from !== void 0 ? from : cx.pos), statePos, state;\n        if (start) {\n            state = start.state;\n            statePos = start.pos + 1;\n        }\n        else {\n            state = this.streamParser.startState(cx.unit);\n            statePos = cx.node.from;\n        }\n        if (cx.pos - statePos > 10000 /* C.MaxIndentScanDist */)\n            return null;\n        while (statePos < cx.pos) {\n            let line = cx.state.doc.lineAt(statePos), end = Math.min(cx.pos, line.to);\n            if (line.length) {\n                let indentation = overrideIndentation ? overrideIndentation(line.from) : -1;\n                let stream = new StringStream(line.text, cx.state.tabSize, cx.unit, indentation < 0 ? undefined : indentation);\n                while (stream.pos < end - line.from)\n                    readToken(this.streamParser.token, stream, state);\n            }\n            else {\n                this.streamParser.blankLine(state, cx.unit);\n            }\n            if (end == cx.pos)\n                break;\n            statePos = line.to + 1;\n        }\n        let line = cx.lineAt(cx.pos);\n        if (overrideIndentation && from == null)\n            IndentedFrom.set(cx.state, line.from);\n        return this.streamParser.indent(state, /^\\s*(.*)/.exec(line.text)[1], cx);\n    }\n    get allowsNesting() { return false; }\n}\nfunction findState(lang, tree, off, startPos, before) {\n    let state = off >= startPos && off + tree.length <= before && tree.prop(lang.stateAfter);\n    if (state)\n        return { state: lang.streamParser.copyState(state), pos: off + tree.length };\n    for (let i = tree.children.length - 1; i >= 0; i--) {\n        let child = tree.children[i], pos = off + tree.positions[i];\n        let found = child instanceof Tree && pos < before && findState(lang, child, pos, startPos, before);\n        if (found)\n            return found;\n    }\n    return null;\n}\nfunction cutTree(lang, tree, from, to, inside) {\n    if (inside && from <= 0 && to >= tree.length)\n        return tree;\n    if (!inside && from == 0 && tree.type == lang.topNode)\n        inside = true;\n    for (let i = tree.children.length - 1; i >= 0; i--) {\n        let pos = tree.positions[i], child = tree.children[i], inner;\n        if (pos < to && child instanceof Tree) {\n            if (!(inner = cutTree(lang, child, from - pos, to - pos, inside)))\n                break;\n            return !inside ? inner\n                : new Tree(tree.type, tree.children.slice(0, i).concat(inner), tree.positions.slice(0, i + 1), pos + inner.length);\n        }\n    }\n    return null;\n}\nfunction findStartInFragments(lang, fragments, startPos, endPos, editorState) {\n    for (let f of fragments) {\n        let from = f.from + (f.openStart ? 25 : 0), to = f.to - (f.openEnd ? 25 : 0);\n        let found = from <= startPos && to > startPos && findState(lang, f.tree, 0 - f.offset, startPos, to), tree;\n        if (found && found.pos <= endPos && (tree = cutTree(lang, f.tree, startPos + f.offset, found.pos + f.offset, false)))\n            return { state: found.state, tree };\n    }\n    return { state: lang.streamParser.startState(editorState ? getIndentUnit(editorState) : 4), tree: Tree.empty };\n}\nclass Parse {\n    constructor(lang, input, fragments, ranges) {\n        this.lang = lang;\n        this.input = input;\n        this.fragments = fragments;\n        this.ranges = ranges;\n        this.stoppedAt = null;\n        this.chunks = [];\n        this.chunkPos = [];\n        this.chunk = [];\n        this.chunkReused = undefined;\n        this.rangeIndex = 0;\n        this.to = ranges[ranges.length - 1].to;\n        let context = ParseContext.get(), from = ranges[0].from;\n        let { state, tree } = findStartInFragments(lang, fragments, from, this.to, context === null || context === void 0 ? void 0 : context.state);\n        this.state = state;\n        this.parsedPos = this.chunkStart = from + tree.length;\n        for (let i = 0; i < tree.children.length; i++) {\n            this.chunks.push(tree.children[i]);\n            this.chunkPos.push(tree.positions[i]);\n        }\n        if (context && this.parsedPos < context.viewport.from - 100000 /* C.MaxDistanceBeforeViewport */ &&\n            ranges.some(r => r.from <= context.viewport.from && r.to >= context.viewport.from)) {\n            this.state = this.lang.streamParser.startState(getIndentUnit(context.state));\n            context.skipUntilInView(this.parsedPos, context.viewport.from);\n            this.parsedPos = context.viewport.from;\n        }\n        this.moveRangeIndex();\n    }\n    advance() {\n        let context = ParseContext.get();\n        let parseEnd = this.stoppedAt == null ? this.to : Math.min(this.to, this.stoppedAt);\n        let end = Math.min(parseEnd, this.chunkStart + 512 /* C.ChunkSize */);\n        if (context)\n            end = Math.min(end, context.viewport.to);\n        while (this.parsedPos < end)\n            this.parseLine(context);\n        if (this.chunkStart < this.parsedPos)\n            this.finishChunk();\n        if (this.parsedPos >= parseEnd)\n            return this.finish();\n        if (context && this.parsedPos >= context.viewport.to) {\n            context.skipUntilInView(this.parsedPos, parseEnd);\n            return this.finish();\n        }\n        return null;\n    }\n    stopAt(pos) {\n        this.stoppedAt = pos;\n    }\n    lineAfter(pos) {\n        let chunk = this.input.chunk(pos);\n        if (!this.input.lineChunks) {\n            let eol = chunk.indexOf(\"\\n\");\n            if (eol > -1)\n                chunk = chunk.slice(0, eol);\n        }\n        else if (chunk == \"\\n\") {\n            chunk = \"\";\n        }\n        return pos + chunk.length <= this.to ? chunk : chunk.slice(0, this.to - pos);\n    }\n    nextLine() {\n        let from = this.parsedPos, line = this.lineAfter(from), end = from + line.length;\n        for (let index = this.rangeIndex;;) {\n            let rangeEnd = this.ranges[index].to;\n            if (rangeEnd >= end)\n                break;\n            line = line.slice(0, rangeEnd - (end - line.length));\n            index++;\n            if (index == this.ranges.length)\n                break;\n            let rangeStart = this.ranges[index].from;\n            let after = this.lineAfter(rangeStart);\n            line += after;\n            end = rangeStart + after.length;\n        }\n        return { line, end };\n    }\n    skipGapsTo(pos, offset, side) {\n        for (;;) {\n            let end = this.ranges[this.rangeIndex].to, offPos = pos + offset;\n            if (side > 0 ? end > offPos : end >= offPos)\n                break;\n            let start = this.ranges[++this.rangeIndex].from;\n            offset += start - end;\n        }\n        return offset;\n    }\n    moveRangeIndex() {\n        while (this.ranges[this.rangeIndex].to < this.parsedPos)\n            this.rangeIndex++;\n    }\n    emitToken(id, from, to, offset) {\n        let size = 4;\n        if (this.ranges.length > 1) {\n            offset = this.skipGapsTo(from, offset, 1);\n            from += offset;\n            let len0 = this.chunk.length;\n            offset = this.skipGapsTo(to, offset, -1);\n            to += offset;\n            size += this.chunk.length - len0;\n        }\n        let last = this.chunk.length - 4;\n        if (this.lang.streamParser.mergeTokens && size == 4 && last >= 0 &&\n            this.chunk[last] == id && this.chunk[last + 2] == from)\n            this.chunk[last + 2] = to;\n        else\n            this.chunk.push(id, from, to, size);\n        return offset;\n    }\n    parseLine(context) {\n        let { line, end } = this.nextLine(), offset = 0, { streamParser } = this.lang;\n        let stream = new StringStream(line, context ? context.state.tabSize : 4, context ? getIndentUnit(context.state) : 2);\n        if (stream.eol()) {\n            streamParser.blankLine(this.state, stream.indentUnit);\n        }\n        else {\n            while (!stream.eol()) {\n                let token = readToken(streamParser.token, stream, this.state);\n                if (token)\n                    offset = this.emitToken(this.lang.tokenTable.resolve(token), this.parsedPos + stream.start, this.parsedPos + stream.pos, offset);\n                if (stream.start > 10000 /* C.MaxLineLength */)\n                    break;\n            }\n        }\n        this.parsedPos = end;\n        this.moveRangeIndex();\n        if (this.parsedPos < this.to)\n            this.parsedPos++;\n    }\n    finishChunk() {\n        let tree = Tree.build({\n            buffer: this.chunk,\n            start: this.chunkStart,\n            length: this.parsedPos - this.chunkStart,\n            nodeSet,\n            topID: 0,\n            maxBufferLength: 512 /* C.ChunkSize */,\n            reused: this.chunkReused\n        });\n        tree = new Tree(tree.type, tree.children, tree.positions, tree.length, [[this.lang.stateAfter, this.lang.streamParser.copyState(this.state)]]);\n        this.chunks.push(tree);\n        this.chunkPos.push(this.chunkStart - this.ranges[0].from);\n        this.chunk = [];\n        this.chunkReused = undefined;\n        this.chunkStart = this.parsedPos;\n    }\n    finish() {\n        return new Tree(this.lang.topNode, this.chunks, this.chunkPos, this.parsedPos - this.ranges[0].from).balance();\n    }\n}\nfunction readToken(token, stream, state) {\n    stream.start = stream.pos;\n    for (let i = 0; i < 10; i++) {\n        let result = token(stream, state);\n        if (stream.pos > stream.start)\n            return result;\n    }\n    throw new Error(\"Stream parser failed to advance stream.\");\n}\nconst noTokens = /*@__PURE__*/Object.create(null);\nconst typeArray = [NodeType.none];\nconst nodeSet = /*@__PURE__*/new NodeSet(typeArray);\nconst warned = [];\n// Cache of node types by name and tags\nconst byTag = /*@__PURE__*/Object.create(null);\nconst defaultTable = /*@__PURE__*/Object.create(null);\nfor (let [legacyName, name] of [\n    [\"variable\", \"variableName\"],\n    [\"variable-2\", \"variableName.special\"],\n    [\"string-2\", \"string.special\"],\n    [\"def\", \"variableName.definition\"],\n    [\"tag\", \"tagName\"],\n    [\"attribute\", \"attributeName\"],\n    [\"type\", \"typeName\"],\n    [\"builtin\", \"variableName.standard\"],\n    [\"qualifier\", \"modifier\"],\n    [\"error\", \"invalid\"],\n    [\"header\", \"heading\"],\n    [\"property\", \"propertyName\"]\n])\n    defaultTable[legacyName] = /*@__PURE__*/createTokenType(noTokens, name);\nclass TokenTable {\n    constructor(extra) {\n        this.extra = extra;\n        this.table = Object.assign(Object.create(null), defaultTable);\n    }\n    resolve(tag) {\n        return !tag ? 0 : this.table[tag] || (this.table[tag] = createTokenType(this.extra, tag));\n    }\n}\nconst defaultTokenTable = /*@__PURE__*/new TokenTable(noTokens);\nfunction warnForPart(part, msg) {\n    if (warned.indexOf(part) > -1)\n        return;\n    warned.push(part);\n    console.warn(msg);\n}\nfunction createTokenType(extra, tagStr) {\n    let tags$1 = [];\n    for (let name of tagStr.split(\" \")) {\n        let found = [];\n        for (let part of name.split(\".\")) {\n            let value = (extra[part] || tags[part]);\n            if (!value) {\n                warnForPart(part, `Unknown highlighting tag ${part}`);\n            }\n            else if (typeof value == \"function\") {\n                if (!found.length)\n                    warnForPart(part, `Modifier ${part} used at start of tag`);\n                else\n                    found = found.map(value);\n            }\n            else {\n                if (found.length)\n                    warnForPart(part, `Tag ${part} used as modifier`);\n                else\n                    found = Array.isArray(value) ? value : [value];\n            }\n        }\n        for (let tag of found)\n            tags$1.push(tag);\n    }\n    if (!tags$1.length)\n        return 0;\n    let name = tagStr.replace(/ /g, \"_\"), key = name + \" \" + tags$1.map(t => t.id);\n    let known = byTag[key];\n    if (known)\n        return known.id;\n    let type = byTag[key] = NodeType.define({\n        id: typeArray.length,\n        name,\n        props: [styleTags({ [name]: tags$1 })]\n    });\n    typeArray.push(type);\n    return type.id;\n}\nfunction docID(data, lang) {\n    let type = NodeType.define({ id: typeArray.length, name: \"Document\", props: [\n            languageDataProp.add(() => data),\n            indentNodeProp.add(() => cx => lang.getIndent(cx))\n        ], top: true });\n    typeArray.push(type);\n    return type;\n}\n\nfunction buildForLine(line) {\n    return line.length <= 4096 && /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac\\ufb50-\\ufdff]/.test(line);\n}\nfunction textHasRTL(text) {\n    for (let i = text.iter(); !i.next().done;)\n        if (buildForLine(i.value))\n            return true;\n    return false;\n}\nfunction changeAddsRTL(change) {\n    let added = false;\n    change.iterChanges((fA, tA, fB, tB, ins) => {\n        if (!added && textHasRTL(ins))\n            added = true;\n    });\n    return added;\n}\nconst alwaysIsolate = /*@__PURE__*/Facet.define({ combine: values => values.some(x => x) });\n/**\nMake sure nodes\n[marked](https://lezer.codemirror.net/docs/ref/#common.NodeProp^isolate)\nas isolating for bidirectional text are rendered in a way that\nisolates them from the surrounding text.\n*/\nfunction bidiIsolates(options = {}) {\n    let extensions = [isolateMarks];\n    if (options.alwaysIsolate)\n        extensions.push(alwaysIsolate.of(true));\n    return extensions;\n}\nconst isolateMarks = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.always = view.state.facet(alwaysIsolate) ||\n            view.textDirection != Direction.LTR ||\n            view.state.facet(EditorView.perLineTextDirection);\n        this.hasRTL = !this.always && textHasRTL(view.state.doc);\n        this.tree = syntaxTree(view.state);\n        this.decorations = this.always || this.hasRTL ? buildDeco(view, this.tree, this.always) : Decoration.none;\n    }\n    update(update) {\n        let always = update.state.facet(alwaysIsolate) ||\n            update.view.textDirection != Direction.LTR ||\n            update.state.facet(EditorView.perLineTextDirection);\n        if (!always && !this.hasRTL && changeAddsRTL(update.changes))\n            this.hasRTL = true;\n        if (!always && !this.hasRTL)\n            return;\n        let tree = syntaxTree(update.state);\n        if (always != this.always || tree != this.tree || update.docChanged || update.viewportChanged) {\n            this.tree = tree;\n            this.always = always;\n            this.decorations = buildDeco(update.view, tree, always);\n        }\n    }\n}, {\n    provide: plugin => {\n        function access(view) {\n            var _a, _b;\n            return (_b = (_a = view.plugin(plugin)) === null || _a === void 0 ? void 0 : _a.decorations) !== null && _b !== void 0 ? _b : Decoration.none;\n        }\n        return [EditorView.outerDecorations.of(access),\n            Prec.lowest(EditorView.bidiIsolatedRanges.of(access))];\n    }\n});\nfunction buildDeco(view, tree, always) {\n    let deco = new RangeSetBuilder();\n    let ranges = view.visibleRanges;\n    if (!always)\n        ranges = clipRTLLines(ranges, view.state.doc);\n    for (let { from, to } of ranges) {\n        tree.iterate({\n            enter: node => {\n                let iso = node.type.prop(NodeProp.isolate);\n                if (iso)\n                    deco.add(node.from, node.to, marks[iso]);\n            },\n            from, to\n        });\n    }\n    return deco.finish();\n}\nfunction clipRTLLines(ranges, doc) {\n    let cur = doc.iter(), pos = 0, result = [], last = null;\n    for (let { from, to } of ranges) {\n        if (last && last.to > from) {\n            from = last.to;\n            if (from >= to)\n                continue;\n        }\n        if (pos + cur.value.length < from) {\n            cur.next(from - (pos + cur.value.length));\n            pos = from;\n        }\n        for (;;) {\n            let start = pos, end = pos + cur.value.length;\n            if (!cur.lineBreak && buildForLine(cur.value)) {\n                if (last && last.to > start - 10)\n                    last.to = Math.min(to, end);\n                else\n                    result.push(last = { from: start, to: Math.min(to, end) });\n            }\n            if (end >= to)\n                break;\n            pos = end;\n            cur.next();\n        }\n    }\n    return result;\n}\nconst marks = {\n    rtl: /*@__PURE__*/Decoration.mark({ class: \"cm-iso\", inclusive: true, attributes: { dir: \"rtl\" }, bidiIsolate: Direction.RTL }),\n    ltr: /*@__PURE__*/Decoration.mark({ class: \"cm-iso\", inclusive: true, attributes: { dir: \"ltr\" }, bidiIsolate: Direction.LTR }),\n    auto: /*@__PURE__*/Decoration.mark({ class: \"cm-iso\", inclusive: true, attributes: { dir: \"auto\" }, bidiIsolate: null })\n};\n\nexport { DocInput, HighlightStyle, IndentContext, LRLanguage, Language, LanguageDescription, LanguageSupport, ParseContext, StreamLanguage, StringStream, TreeIndentContext, bidiIsolates, bracketMatching, bracketMatchingHandle, codeFolding, continuedIndent, defaultHighlightStyle, defineLanguageFacet, delimitedIndent, ensureSyntaxTree, flatIndent, foldAll, foldCode, foldEffect, foldGutter, foldInside, foldKeymap, foldNodeProp, foldService, foldState, foldable, foldedRanges, forceParsing, getIndentUnit, getIndentation, highlightingFor, indentNodeProp, indentOnInput, indentRange, indentService, indentString, indentUnit, language, languageDataProp, matchBrackets, sublanguageProp, syntaxHighlighting, syntaxParserRunning, syntaxTree, syntaxTreeAvailable, toggleFold, unfoldAll, unfoldCode, unfoldEffect };\n","import { Annotation, StateEffect, EditorSelection, codePointAt, codePointSize, fromCodePoint, Facet, combineConfig, StateField, Prec, Text, Transaction, MapMode, RangeValue, RangeSet, CharCategory } from '@codemirror/state';\nimport { Direction, logException, showTooltip, EditorView, ViewPlugin, getTooltip, Decoration, WidgetType, keymap } from '@codemirror/view';\nimport { syntaxTree, indentUnit } from '@codemirror/language';\n\n/**\nAn instance of this is passed to completion source functions.\n*/\nclass CompletionContext {\n    /**\n    Create a new completion context. (Mostly useful for testing\n    completion sources—in the editor, the extension will create\n    these for you.)\n    */\n    constructor(\n    /**\n    The editor state that the completion happens in.\n    */\n    state, \n    /**\n    The position at which the completion is happening.\n    */\n    pos, \n    /**\n    Indicates whether completion was activated explicitly, or\n    implicitly by typing. The usual way to respond to this is to\n    only return completions when either there is part of a\n    completable entity before the cursor, or `explicit` is true.\n    */\n    explicit, \n    /**\n    The editor view. May be undefined if the context was created\n    in a situation where there is no such view available, such as\n    in synchronous updates via\n    [`CompletionResult.update`](https://codemirror.net/6/docs/ref/#autocomplete.CompletionResult.update)\n    or when called by test code.\n    */\n    view) {\n        this.state = state;\n        this.pos = pos;\n        this.explicit = explicit;\n        this.view = view;\n        /**\n        @internal\n        */\n        this.abortListeners = [];\n        /**\n        @internal\n        */\n        this.abortOnDocChange = false;\n    }\n    /**\n    Get the extent, content, and (if there is a token) type of the\n    token before `this.pos`.\n    */\n    tokenBefore(types) {\n        let token = syntaxTree(this.state).resolveInner(this.pos, -1);\n        while (token && types.indexOf(token.name) < 0)\n            token = token.parent;\n        return token ? { from: token.from, to: this.pos,\n            text: this.state.sliceDoc(token.from, this.pos),\n            type: token.type } : null;\n    }\n    /**\n    Get the match of the given expression directly before the\n    cursor.\n    */\n    matchBefore(expr) {\n        let line = this.state.doc.lineAt(this.pos);\n        let start = Math.max(line.from, this.pos - 250);\n        let str = line.text.slice(start - line.from, this.pos - line.from);\n        let found = str.search(ensureAnchor(expr, false));\n        return found < 0 ? null : { from: start + found, to: this.pos, text: str.slice(found) };\n    }\n    /**\n    Yields true when the query has been aborted. Can be useful in\n    asynchronous queries to avoid doing work that will be ignored.\n    */\n    get aborted() { return this.abortListeners == null; }\n    /**\n    Allows you to register abort handlers, which will be called when\n    the query is\n    [aborted](https://codemirror.net/6/docs/ref/#autocomplete.CompletionContext.aborted).\n    \n    By default, running queries will not be aborted for regular\n    typing or backspacing, on the assumption that they are likely to\n    return a result with a\n    [`validFor`](https://codemirror.net/6/docs/ref/#autocomplete.CompletionResult.validFor) field that\n    allows the result to be used after all. Passing `onDocChange:\n    true` will cause this query to be aborted for any document\n    change.\n    */\n    addEventListener(type, listener, options) {\n        if (type == \"abort\" && this.abortListeners) {\n            this.abortListeners.push(listener);\n            if (options && options.onDocChange)\n                this.abortOnDocChange = true;\n        }\n    }\n}\nfunction toSet(chars) {\n    let flat = Object.keys(chars).join(\"\");\n    let words = /\\w/.test(flat);\n    if (words)\n        flat = flat.replace(/\\w/g, \"\");\n    return `[${words ? \"\\\\w\" : \"\"}${flat.replace(/[^\\w\\s]/g, \"\\\\$&\")}]`;\n}\nfunction prefixMatch(options) {\n    let first = Object.create(null), rest = Object.create(null);\n    for (let { label } of options) {\n        first[label[0]] = true;\n        for (let i = 1; i < label.length; i++)\n            rest[label[i]] = true;\n    }\n    let source = toSet(first) + toSet(rest) + \"*$\";\n    return [new RegExp(\"^\" + source), new RegExp(source)];\n}\n/**\nGiven a a fixed array of options, return an autocompleter that\ncompletes them.\n*/\nfunction completeFromList(list) {\n    let options = list.map(o => typeof o == \"string\" ? { label: o } : o);\n    let [validFor, match] = options.every(o => /^\\w+$/.test(o.label)) ? [/\\w*$/, /\\w+$/] : prefixMatch(options);\n    return (context) => {\n        let token = context.matchBefore(match);\n        return token || context.explicit ? { from: token ? token.from : context.pos, options, validFor } : null;\n    };\n}\n/**\nWrap the given completion source so that it will only fire when the\ncursor is in a syntax node with one of the given names.\n*/\nfunction ifIn(nodes, source) {\n    return (context) => {\n        for (let pos = syntaxTree(context.state).resolveInner(context.pos, -1); pos; pos = pos.parent) {\n            if (nodes.indexOf(pos.name) > -1)\n                return source(context);\n            if (pos.type.isTop)\n                break;\n        }\n        return null;\n    };\n}\n/**\nWrap the given completion source so that it will not fire when the\ncursor is in a syntax node with one of the given names.\n*/\nfunction ifNotIn(nodes, source) {\n    return (context) => {\n        for (let pos = syntaxTree(context.state).resolveInner(context.pos, -1); pos; pos = pos.parent) {\n            if (nodes.indexOf(pos.name) > -1)\n                return null;\n            if (pos.type.isTop)\n                break;\n        }\n        return source(context);\n    };\n}\nclass Option {\n    constructor(completion, source, match, score) {\n        this.completion = completion;\n        this.source = source;\n        this.match = match;\n        this.score = score;\n    }\n}\nfunction cur(state) { return state.selection.main.from; }\n// Make sure the given regexp has a $ at its end and, if `start` is\n// true, a ^ at its start.\nfunction ensureAnchor(expr, start) {\n    var _a;\n    let { source } = expr;\n    let addStart = start && source[0] != \"^\", addEnd = source[source.length - 1] != \"$\";\n    if (!addStart && !addEnd)\n        return expr;\n    return new RegExp(`${addStart ? \"^\" : \"\"}(?:${source})${addEnd ? \"$\" : \"\"}`, (_a = expr.flags) !== null && _a !== void 0 ? _a : (expr.ignoreCase ? \"i\" : \"\"));\n}\n/**\nThis annotation is added to transactions that are produced by\npicking a completion.\n*/\nconst pickedCompletion = /*@__PURE__*/Annotation.define();\n/**\nHelper function that returns a transaction spec which inserts a\ncompletion's text in the main selection range, and any other\nselection range that has the same text in front of it.\n*/\nfunction insertCompletionText(state, text, from, to) {\n    let { main } = state.selection, fromOff = from - main.from, toOff = to - main.from;\n    return {\n        ...state.changeByRange(range => {\n            if (range != main && from != to &&\n                state.sliceDoc(range.from + fromOff, range.from + toOff) != state.sliceDoc(from, to))\n                return { range };\n            let lines = state.toText(text);\n            return {\n                changes: { from: range.from + fromOff, to: to == main.from ? range.to : range.from + toOff, insert: lines },\n                range: EditorSelection.cursor(range.from + fromOff + lines.length)\n            };\n        }),\n        scrollIntoView: true,\n        userEvent: \"input.complete\"\n    };\n}\nconst SourceCache = /*@__PURE__*/new WeakMap();\nfunction asSource(source) {\n    if (!Array.isArray(source))\n        return source;\n    let known = SourceCache.get(source);\n    if (!known)\n        SourceCache.set(source, known = completeFromList(source));\n    return known;\n}\nconst startCompletionEffect = /*@__PURE__*/StateEffect.define();\nconst closeCompletionEffect = /*@__PURE__*/StateEffect.define();\n\n// A pattern matcher for fuzzy completion matching. Create an instance\n// once for a pattern, and then use that to match any number of\n// completions.\nclass FuzzyMatcher {\n    constructor(pattern) {\n        this.pattern = pattern;\n        this.chars = [];\n        this.folded = [];\n        // Buffers reused by calls to `match` to track matched character\n        // positions.\n        this.any = [];\n        this.precise = [];\n        this.byWord = [];\n        this.score = 0;\n        this.matched = [];\n        for (let p = 0; p < pattern.length;) {\n            let char = codePointAt(pattern, p), size = codePointSize(char);\n            this.chars.push(char);\n            let part = pattern.slice(p, p + size), upper = part.toUpperCase();\n            this.folded.push(codePointAt(upper == part ? part.toLowerCase() : upper, 0));\n            p += size;\n        }\n        this.astral = pattern.length != this.chars.length;\n    }\n    ret(score, matched) {\n        this.score = score;\n        this.matched = matched;\n        return this;\n    }\n    // Matches a given word (completion) against the pattern (input).\n    // Will return a boolean indicating whether there was a match and,\n    // on success, set `this.score` to the score, `this.matched` to an\n    // array of `from, to` pairs indicating the matched parts of `word`.\n    //\n    // The score is a number that is more negative the worse the match\n    // is. See `Penalty` above.\n    match(word) {\n        if (this.pattern.length == 0)\n            return this.ret(-100 /* Penalty.NotFull */, []);\n        if (word.length < this.pattern.length)\n            return null;\n        let { chars, folded, any, precise, byWord } = this;\n        // For single-character queries, only match when they occur right\n        // at the start\n        if (chars.length == 1) {\n            let first = codePointAt(word, 0), firstSize = codePointSize(first);\n            let score = firstSize == word.length ? 0 : -100 /* Penalty.NotFull */;\n            if (first == chars[0]) ;\n            else if (first == folded[0])\n                score += -200 /* Penalty.CaseFold */;\n            else\n                return null;\n            return this.ret(score, [0, firstSize]);\n        }\n        let direct = word.indexOf(this.pattern);\n        if (direct == 0)\n            return this.ret(word.length == this.pattern.length ? 0 : -100 /* Penalty.NotFull */, [0, this.pattern.length]);\n        let len = chars.length, anyTo = 0;\n        if (direct < 0) {\n            for (let i = 0, e = Math.min(word.length, 200); i < e && anyTo < len;) {\n                let next = codePointAt(word, i);\n                if (next == chars[anyTo] || next == folded[anyTo])\n                    any[anyTo++] = i;\n                i += codePointSize(next);\n            }\n            // No match, exit immediately\n            if (anyTo < len)\n                return null;\n        }\n        // This tracks the extent of the precise (non-folded, not\n        // necessarily adjacent) match\n        let preciseTo = 0;\n        // Tracks whether there is a match that hits only characters that\n        // appear to be starting words. `byWordFolded` is set to true when\n        // a case folded character is encountered in such a match\n        let byWordTo = 0, byWordFolded = false;\n        // If we've found a partial adjacent match, these track its state\n        let adjacentTo = 0, adjacentStart = -1, adjacentEnd = -1;\n        let hasLower = /[a-z]/.test(word), wordAdjacent = true;\n        // Go over the option's text, scanning for the various kinds of matches\n        for (let i = 0, e = Math.min(word.length, 200), prevType = 0 /* Tp.NonWord */; i < e && byWordTo < len;) {\n            let next = codePointAt(word, i);\n            if (direct < 0) {\n                if (preciseTo < len && next == chars[preciseTo])\n                    precise[preciseTo++] = i;\n                if (adjacentTo < len) {\n                    if (next == chars[adjacentTo] || next == folded[adjacentTo]) {\n                        if (adjacentTo == 0)\n                            adjacentStart = i;\n                        adjacentEnd = i + 1;\n                        adjacentTo++;\n                    }\n                    else {\n                        adjacentTo = 0;\n                    }\n                }\n            }\n            let ch, type = next < 0xff\n                ? (next >= 48 && next <= 57 || next >= 97 && next <= 122 ? 2 /* Tp.Lower */ : next >= 65 && next <= 90 ? 1 /* Tp.Upper */ : 0 /* Tp.NonWord */)\n                : ((ch = fromCodePoint(next)) != ch.toLowerCase() ? 1 /* Tp.Upper */ : ch != ch.toUpperCase() ? 2 /* Tp.Lower */ : 0 /* Tp.NonWord */);\n            if (!i || type == 1 /* Tp.Upper */ && hasLower || prevType == 0 /* Tp.NonWord */ && type != 0 /* Tp.NonWord */) {\n                if (chars[byWordTo] == next || (folded[byWordTo] == next && (byWordFolded = true)))\n                    byWord[byWordTo++] = i;\n                else if (byWord.length)\n                    wordAdjacent = false;\n            }\n            prevType = type;\n            i += codePointSize(next);\n        }\n        if (byWordTo == len && byWord[0] == 0 && wordAdjacent)\n            return this.result(-100 /* Penalty.ByWord */ + (byWordFolded ? -200 /* Penalty.CaseFold */ : 0), byWord, word);\n        if (adjacentTo == len && adjacentStart == 0)\n            return this.ret(-200 /* Penalty.CaseFold */ - word.length + (adjacentEnd == word.length ? 0 : -100 /* Penalty.NotFull */), [0, adjacentEnd]);\n        if (direct > -1)\n            return this.ret(-700 /* Penalty.NotStart */ - word.length, [direct, direct + this.pattern.length]);\n        if (adjacentTo == len)\n            return this.ret(-200 /* Penalty.CaseFold */ + -700 /* Penalty.NotStart */ - word.length, [adjacentStart, adjacentEnd]);\n        if (byWordTo == len)\n            return this.result(-100 /* Penalty.ByWord */ + (byWordFolded ? -200 /* Penalty.CaseFold */ : 0) + -700 /* Penalty.NotStart */ +\n                (wordAdjacent ? 0 : -1100 /* Penalty.Gap */), byWord, word);\n        return chars.length == 2 ? null\n            : this.result((any[0] ? -700 /* Penalty.NotStart */ : 0) + -200 /* Penalty.CaseFold */ + -1100 /* Penalty.Gap */, any, word);\n    }\n    result(score, positions, word) {\n        let result = [], i = 0;\n        for (let pos of positions) {\n            let to = pos + (this.astral ? codePointSize(codePointAt(word, pos)) : 1);\n            if (i && result[i - 1] == pos)\n                result[i - 1] = to;\n            else {\n                result[i++] = pos;\n                result[i++] = to;\n            }\n        }\n        return this.ret(score - word.length, result);\n    }\n}\nclass StrictMatcher {\n    constructor(pattern) {\n        this.pattern = pattern;\n        this.matched = [];\n        this.score = 0;\n        this.folded = pattern.toLowerCase();\n    }\n    match(word) {\n        if (word.length < this.pattern.length)\n            return null;\n        let start = word.slice(0, this.pattern.length);\n        let match = start == this.pattern ? 0 : start.toLowerCase() == this.folded ? -200 /* Penalty.CaseFold */ : null;\n        if (match == null)\n            return null;\n        this.matched = [0, start.length];\n        this.score = match + (word.length == this.pattern.length ? 0 : -100 /* Penalty.NotFull */);\n        return this;\n    }\n}\n\nconst completionConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            activateOnTyping: true,\n            activateOnCompletion: () => false,\n            activateOnTypingDelay: 100,\n            selectOnOpen: true,\n            override: null,\n            closeOnBlur: true,\n            maxRenderedOptions: 100,\n            defaultKeymap: true,\n            tooltipClass: () => \"\",\n            optionClass: () => \"\",\n            aboveCursor: false,\n            icons: true,\n            addToOptions: [],\n            positionInfo: defaultPositionInfo,\n            filterStrict: false,\n            compareCompletions: (a, b) => a.label.localeCompare(b.label),\n            interactionDelay: 75,\n            updateSyncTime: 100\n        }, {\n            defaultKeymap: (a, b) => a && b,\n            closeOnBlur: (a, b) => a && b,\n            icons: (a, b) => a && b,\n            tooltipClass: (a, b) => c => joinClass(a(c), b(c)),\n            optionClass: (a, b) => c => joinClass(a(c), b(c)),\n            addToOptions: (a, b) => a.concat(b),\n            filterStrict: (a, b) => a || b,\n        });\n    }\n});\nfunction joinClass(a, b) {\n    return a ? b ? a + \" \" + b : a : b;\n}\nfunction defaultPositionInfo(view, list, option, info, space, tooltip) {\n    let rtl = view.textDirection == Direction.RTL, left = rtl, narrow = false;\n    let side = \"top\", offset, maxWidth;\n    let spaceLeft = list.left - space.left, spaceRight = space.right - list.right;\n    let infoWidth = info.right - info.left, infoHeight = info.bottom - info.top;\n    if (left && spaceLeft < Math.min(infoWidth, spaceRight))\n        left = false;\n    else if (!left && spaceRight < Math.min(infoWidth, spaceLeft))\n        left = true;\n    if (infoWidth <= (left ? spaceLeft : spaceRight)) {\n        offset = Math.max(space.top, Math.min(option.top, space.bottom - infoHeight)) - list.top;\n        maxWidth = Math.min(400 /* Info.Width */, left ? spaceLeft : spaceRight);\n    }\n    else {\n        narrow = true;\n        maxWidth = Math.min(400 /* Info.Width */, (rtl ? list.right : space.right - list.left) - 30 /* Info.Margin */);\n        let spaceBelow = space.bottom - list.bottom;\n        if (spaceBelow >= infoHeight || spaceBelow > list.top) { // Below the completion\n            offset = option.bottom - list.top;\n        }\n        else { // Above it\n            side = \"bottom\";\n            offset = list.bottom - option.top;\n        }\n    }\n    let scaleY = (list.bottom - list.top) / tooltip.offsetHeight;\n    let scaleX = (list.right - list.left) / tooltip.offsetWidth;\n    return {\n        style: `${side}: ${offset / scaleY}px; max-width: ${maxWidth / scaleX}px`,\n        class: \"cm-completionInfo-\" + (narrow ? (rtl ? \"left-narrow\" : \"right-narrow\") : left ? \"left\" : \"right\")\n    };\n}\n\nfunction optionContent(config) {\n    let content = config.addToOptions.slice();\n    if (config.icons)\n        content.push({\n            render(completion) {\n                let icon = document.createElement(\"div\");\n                icon.classList.add(\"cm-completionIcon\");\n                if (completion.type)\n                    icon.classList.add(...completion.type.split(/\\s+/g).map(cls => \"cm-completionIcon-\" + cls));\n                icon.setAttribute(\"aria-hidden\", \"true\");\n                return icon;\n            },\n            position: 20\n        });\n    content.push({\n        render(completion, _s, _v, match) {\n            let labelElt = document.createElement(\"span\");\n            labelElt.className = \"cm-completionLabel\";\n            let label = completion.displayLabel || completion.label, off = 0;\n            for (let j = 0; j < match.length;) {\n                let from = match[j++], to = match[j++];\n                if (from > off)\n                    labelElt.appendChild(document.createTextNode(label.slice(off, from)));\n                let span = labelElt.appendChild(document.createElement(\"span\"));\n                span.appendChild(document.createTextNode(label.slice(from, to)));\n                span.className = \"cm-completionMatchedText\";\n                off = to;\n            }\n            if (off < label.length)\n                labelElt.appendChild(document.createTextNode(label.slice(off)));\n            return labelElt;\n        },\n        position: 50\n    }, {\n        render(completion) {\n            if (!completion.detail)\n                return null;\n            let detailElt = document.createElement(\"span\");\n            detailElt.className = \"cm-completionDetail\";\n            detailElt.textContent = completion.detail;\n            return detailElt;\n        },\n        position: 80\n    });\n    return content.sort((a, b) => a.position - b.position).map(a => a.render);\n}\nfunction rangeAroundSelected(total, selected, max) {\n    if (total <= max)\n        return { from: 0, to: total };\n    if (selected < 0)\n        selected = 0;\n    if (selected <= (total >> 1)) {\n        let off = Math.floor(selected / max);\n        return { from: off * max, to: (off + 1) * max };\n    }\n    let off = Math.floor((total - selected) / max);\n    return { from: total - (off + 1) * max, to: total - off * max };\n}\nclass CompletionTooltip {\n    constructor(view, stateField, applyCompletion) {\n        this.view = view;\n        this.stateField = stateField;\n        this.applyCompletion = applyCompletion;\n        this.info = null;\n        this.infoDestroy = null;\n        this.placeInfoReq = {\n            read: () => this.measureInfo(),\n            write: (pos) => this.placeInfo(pos),\n            key: this\n        };\n        this.space = null;\n        this.currentClass = \"\";\n        let cState = view.state.field(stateField);\n        let { options, selected } = cState.open;\n        let config = view.state.facet(completionConfig);\n        this.optionContent = optionContent(config);\n        this.optionClass = config.optionClass;\n        this.tooltipClass = config.tooltipClass;\n        this.range = rangeAroundSelected(options.length, selected, config.maxRenderedOptions);\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-tooltip-autocomplete\";\n        this.updateTooltipClass(view.state);\n        this.dom.addEventListener(\"mousedown\", (e) => {\n            let { options } = view.state.field(stateField).open;\n            for (let dom = e.target, match; dom && dom != this.dom; dom = dom.parentNode) {\n                if (dom.nodeName == \"LI\" && (match = /-(\\d+)$/.exec(dom.id)) && +match[1] < options.length) {\n                    this.applyCompletion(view, options[+match[1]]);\n                    e.preventDefault();\n                    return;\n                }\n            }\n        });\n        this.dom.addEventListener(\"focusout\", (e) => {\n            let state = view.state.field(this.stateField, false);\n            if (state && state.tooltip && view.state.facet(completionConfig).closeOnBlur &&\n                e.relatedTarget != view.contentDOM)\n                view.dispatch({ effects: closeCompletionEffect.of(null) });\n        });\n        this.showOptions(options, cState.id);\n    }\n    mount() { this.updateSel(); }\n    showOptions(options, id) {\n        if (this.list)\n            this.list.remove();\n        this.list = this.dom.appendChild(this.createListBox(options, id, this.range));\n        this.list.addEventListener(\"scroll\", () => {\n            if (this.info)\n                this.view.requestMeasure(this.placeInfoReq);\n        });\n    }\n    update(update) {\n        var _a;\n        let cState = update.state.field(this.stateField);\n        let prevState = update.startState.field(this.stateField);\n        this.updateTooltipClass(update.state);\n        if (cState != prevState) {\n            let { options, selected, disabled } = cState.open;\n            if (!prevState.open || prevState.open.options != options) {\n                this.range = rangeAroundSelected(options.length, selected, update.state.facet(completionConfig).maxRenderedOptions);\n                this.showOptions(options, cState.id);\n            }\n            this.updateSel();\n            if (disabled != ((_a = prevState.open) === null || _a === void 0 ? void 0 : _a.disabled))\n                this.dom.classList.toggle(\"cm-tooltip-autocomplete-disabled\", !!disabled);\n        }\n    }\n    updateTooltipClass(state) {\n        let cls = this.tooltipClass(state);\n        if (cls != this.currentClass) {\n            for (let c of this.currentClass.split(\" \"))\n                if (c)\n                    this.dom.classList.remove(c);\n            for (let c of cls.split(\" \"))\n                if (c)\n                    this.dom.classList.add(c);\n            this.currentClass = cls;\n        }\n    }\n    positioned(space) {\n        this.space = space;\n        if (this.info)\n            this.view.requestMeasure(this.placeInfoReq);\n    }\n    updateSel() {\n        let cState = this.view.state.field(this.stateField), open = cState.open;\n        if (open.selected > -1 && open.selected < this.range.from || open.selected >= this.range.to) {\n            this.range = rangeAroundSelected(open.options.length, open.selected, this.view.state.facet(completionConfig).maxRenderedOptions);\n            this.showOptions(open.options, cState.id);\n        }\n        if (this.updateSelectedOption(open.selected)) {\n            this.destroyInfo();\n            let { completion } = open.options[open.selected];\n            let { info } = completion;\n            if (!info)\n                return;\n            let infoResult = typeof info === \"string\" ? document.createTextNode(info) : info(completion);\n            if (!infoResult)\n                return;\n            if (\"then\" in infoResult) {\n                infoResult.then(obj => {\n                    if (obj && this.view.state.field(this.stateField, false) == cState)\n                        this.addInfoPane(obj, completion);\n                }).catch(e => logException(this.view.state, e, \"completion info\"));\n            }\n            else {\n                this.addInfoPane(infoResult, completion);\n            }\n        }\n    }\n    addInfoPane(content, completion) {\n        this.destroyInfo();\n        let wrap = this.info = document.createElement(\"div\");\n        wrap.className = \"cm-tooltip cm-completionInfo\";\n        if (content.nodeType != null) {\n            wrap.appendChild(content);\n            this.infoDestroy = null;\n        }\n        else {\n            let { dom, destroy } = content;\n            wrap.appendChild(dom);\n            this.infoDestroy = destroy || null;\n        }\n        this.dom.appendChild(wrap);\n        this.view.requestMeasure(this.placeInfoReq);\n    }\n    updateSelectedOption(selected) {\n        let set = null;\n        for (let opt = this.list.firstChild, i = this.range.from; opt; opt = opt.nextSibling, i++) {\n            if (opt.nodeName != \"LI\" || !opt.id) {\n                i--; // A section header\n            }\n            else if (i == selected) {\n                if (!opt.hasAttribute(\"aria-selected\")) {\n                    opt.setAttribute(\"aria-selected\", \"true\");\n                    set = opt;\n                }\n            }\n            else {\n                if (opt.hasAttribute(\"aria-selected\"))\n                    opt.removeAttribute(\"aria-selected\");\n            }\n        }\n        if (set)\n            scrollIntoView(this.list, set);\n        return set;\n    }\n    measureInfo() {\n        let sel = this.dom.querySelector(\"[aria-selected]\");\n        if (!sel || !this.info)\n            return null;\n        let listRect = this.dom.getBoundingClientRect();\n        let infoRect = this.info.getBoundingClientRect();\n        let selRect = sel.getBoundingClientRect();\n        let space = this.space;\n        if (!space) {\n            let docElt = this.dom.ownerDocument.documentElement;\n            space = { left: 0, top: 0, right: docElt.clientWidth, bottom: docElt.clientHeight };\n        }\n        if (selRect.top > Math.min(space.bottom, listRect.bottom) - 10 ||\n            selRect.bottom < Math.max(space.top, listRect.top) + 10)\n            return null;\n        return this.view.state.facet(completionConfig).positionInfo(this.view, listRect, selRect, infoRect, space, this.dom);\n    }\n    placeInfo(pos) {\n        if (this.info) {\n            if (pos) {\n                if (pos.style)\n                    this.info.style.cssText = pos.style;\n                this.info.className = \"cm-tooltip cm-completionInfo \" + (pos.class || \"\");\n            }\n            else {\n                this.info.style.cssText = \"top: -1e6px\";\n            }\n        }\n    }\n    createListBox(options, id, range) {\n        const ul = document.createElement(\"ul\");\n        ul.id = id;\n        ul.setAttribute(\"role\", \"listbox\");\n        ul.setAttribute(\"aria-expanded\", \"true\");\n        ul.setAttribute(\"aria-label\", this.view.state.phrase(\"Completions\"));\n        ul.addEventListener(\"mousedown\", e => {\n            // Prevent focus change when clicking the scrollbar\n            if (e.target == ul)\n                e.preventDefault();\n        });\n        let curSection = null;\n        for (let i = range.from; i < range.to; i++) {\n            let { completion, match } = options[i], { section } = completion;\n            if (section) {\n                let name = typeof section == \"string\" ? section : section.name;\n                if (name != curSection && (i > range.from || range.from == 0)) {\n                    curSection = name;\n                    if (typeof section != \"string\" && section.header) {\n                        ul.appendChild(section.header(section));\n                    }\n                    else {\n                        let header = ul.appendChild(document.createElement(\"completion-section\"));\n                        header.textContent = name;\n                    }\n                }\n            }\n            const li = ul.appendChild(document.createElement(\"li\"));\n            li.id = id + \"-\" + i;\n            li.setAttribute(\"role\", \"option\");\n            let cls = this.optionClass(completion);\n            if (cls)\n                li.className = cls;\n            for (let source of this.optionContent) {\n                let node = source(completion, this.view.state, this.view, match);\n                if (node)\n                    li.appendChild(node);\n            }\n        }\n        if (range.from)\n            ul.classList.add(\"cm-completionListIncompleteTop\");\n        if (range.to < options.length)\n            ul.classList.add(\"cm-completionListIncompleteBottom\");\n        return ul;\n    }\n    destroyInfo() {\n        if (this.info) {\n            if (this.infoDestroy)\n                this.infoDestroy();\n            this.info.remove();\n            this.info = null;\n        }\n    }\n    destroy() {\n        this.destroyInfo();\n    }\n}\nfunction completionTooltip(stateField, applyCompletion) {\n    return (view) => new CompletionTooltip(view, stateField, applyCompletion);\n}\nfunction scrollIntoView(container, element) {\n    let parent = container.getBoundingClientRect();\n    let self = element.getBoundingClientRect();\n    let scaleY = parent.height / container.offsetHeight;\n    if (self.top < parent.top)\n        container.scrollTop -= (parent.top - self.top) / scaleY;\n    else if (self.bottom > parent.bottom)\n        container.scrollTop += (self.bottom - parent.bottom) / scaleY;\n}\n\n// Used to pick a preferred option when two options with the same\n// label occur in the result.\nfunction score(option) {\n    return (option.boost || 0) * 100 + (option.apply ? 10 : 0) + (option.info ? 5 : 0) +\n        (option.type ? 1 : 0);\n}\nfunction sortOptions(active, state) {\n    let options = [];\n    let sections = null;\n    let addOption = (option) => {\n        options.push(option);\n        let { section } = option.completion;\n        if (section) {\n            if (!sections)\n                sections = [];\n            let name = typeof section == \"string\" ? section : section.name;\n            if (!sections.some(s => s.name == name))\n                sections.push(typeof section == \"string\" ? { name } : section);\n        }\n    };\n    let conf = state.facet(completionConfig);\n    for (let a of active)\n        if (a.hasResult()) {\n            let getMatch = a.result.getMatch;\n            if (a.result.filter === false) {\n                for (let option of a.result.options) {\n                    addOption(new Option(option, a.source, getMatch ? getMatch(option) : [], 1e9 - options.length));\n                }\n            }\n            else {\n                let pattern = state.sliceDoc(a.from, a.to), match;\n                let matcher = conf.filterStrict ? new StrictMatcher(pattern) : new FuzzyMatcher(pattern);\n                for (let option of a.result.options)\n                    if (match = matcher.match(option.label)) {\n                        let matched = !option.displayLabel ? match.matched : getMatch ? getMatch(option, match.matched) : [];\n                        addOption(new Option(option, a.source, matched, match.score + (option.boost || 0)));\n                    }\n            }\n        }\n    if (sections) {\n        let sectionOrder = Object.create(null), pos = 0;\n        let cmp = (a, b) => { var _a, _b; return ((_a = a.rank) !== null && _a !== void 0 ? _a : 1e9) - ((_b = b.rank) !== null && _b !== void 0 ? _b : 1e9) || (a.name < b.name ? -1 : 1); };\n        for (let s of sections.sort(cmp)) {\n            pos -= 1e5;\n            sectionOrder[s.name] = pos;\n        }\n        for (let option of options) {\n            let { section } = option.completion;\n            if (section)\n                option.score += sectionOrder[typeof section == \"string\" ? section : section.name];\n        }\n    }\n    let result = [], prev = null;\n    let compare = conf.compareCompletions;\n    for (let opt of options.sort((a, b) => (b.score - a.score) || compare(a.completion, b.completion))) {\n        let cur = opt.completion;\n        if (!prev || prev.label != cur.label || prev.detail != cur.detail ||\n            (prev.type != null && cur.type != null && prev.type != cur.type) ||\n            prev.apply != cur.apply || prev.boost != cur.boost)\n            result.push(opt);\n        else if (score(opt.completion) > score(prev))\n            result[result.length - 1] = opt;\n        prev = opt.completion;\n    }\n    return result;\n}\nclass CompletionDialog {\n    constructor(options, attrs, tooltip, timestamp, selected, disabled) {\n        this.options = options;\n        this.attrs = attrs;\n        this.tooltip = tooltip;\n        this.timestamp = timestamp;\n        this.selected = selected;\n        this.disabled = disabled;\n    }\n    setSelected(selected, id) {\n        return selected == this.selected || selected >= this.options.length ? this\n            : new CompletionDialog(this.options, makeAttrs(id, selected), this.tooltip, this.timestamp, selected, this.disabled);\n    }\n    static build(active, state, id, prev, conf, didSetActive) {\n        if (prev && !didSetActive && active.some(s => s.isPending))\n            return prev.setDisabled();\n        let options = sortOptions(active, state);\n        if (!options.length)\n            return prev && active.some(a => a.isPending) ? prev.setDisabled() : null;\n        let selected = state.facet(completionConfig).selectOnOpen ? 0 : -1;\n        if (prev && prev.selected != selected && prev.selected != -1) {\n            let selectedValue = prev.options[prev.selected].completion;\n            for (let i = 0; i < options.length; i++)\n                if (options[i].completion == selectedValue) {\n                    selected = i;\n                    break;\n                }\n        }\n        return new CompletionDialog(options, makeAttrs(id, selected), {\n            pos: active.reduce((a, b) => b.hasResult() ? Math.min(a, b.from) : a, 1e8),\n            create: createTooltip,\n            above: conf.aboveCursor,\n        }, prev ? prev.timestamp : Date.now(), selected, false);\n    }\n    map(changes) {\n        return new CompletionDialog(this.options, this.attrs, { ...this.tooltip, pos: changes.mapPos(this.tooltip.pos) }, this.timestamp, this.selected, this.disabled);\n    }\n    setDisabled() {\n        return new CompletionDialog(this.options, this.attrs, this.tooltip, this.timestamp, this.selected, true);\n    }\n}\nclass CompletionState {\n    constructor(active, id, open) {\n        this.active = active;\n        this.id = id;\n        this.open = open;\n    }\n    static start() {\n        return new CompletionState(none, \"cm-ac-\" + Math.floor(Math.random() * 2e6).toString(36), null);\n    }\n    update(tr) {\n        let { state } = tr, conf = state.facet(completionConfig);\n        let sources = conf.override ||\n            state.languageDataAt(\"autocomplete\", cur(state)).map(asSource);\n        let active = sources.map(source => {\n            let value = this.active.find(s => s.source == source) ||\n                new ActiveSource(source, this.active.some(a => a.state != 0 /* State.Inactive */) ? 1 /* State.Pending */ : 0 /* State.Inactive */);\n            return value.update(tr, conf);\n        });\n        if (active.length == this.active.length && active.every((a, i) => a == this.active[i]))\n            active = this.active;\n        let open = this.open, didSet = tr.effects.some(e => e.is(setActiveEffect));\n        if (open && tr.docChanged)\n            open = open.map(tr.changes);\n        if (tr.selection || active.some(a => a.hasResult() && tr.changes.touchesRange(a.from, a.to)) ||\n            !sameResults(active, this.active) || didSet)\n            open = CompletionDialog.build(active, state, this.id, open, conf, didSet);\n        else if (open && open.disabled && !active.some(a => a.isPending))\n            open = null;\n        if (!open && active.every(a => !a.isPending) && active.some(a => a.hasResult()))\n            active = active.map(a => a.hasResult() ? new ActiveSource(a.source, 0 /* State.Inactive */) : a);\n        for (let effect of tr.effects)\n            if (effect.is(setSelectedEffect))\n                open = open && open.setSelected(effect.value, this.id);\n        return active == this.active && open == this.open ? this : new CompletionState(active, this.id, open);\n    }\n    get tooltip() { return this.open ? this.open.tooltip : null; }\n    get attrs() { return this.open ? this.open.attrs : this.active.length ? baseAttrs : noAttrs; }\n}\nfunction sameResults(a, b) {\n    if (a == b)\n        return true;\n    for (let iA = 0, iB = 0;;) {\n        while (iA < a.length && !a[iA].hasResult())\n            iA++;\n        while (iB < b.length && !b[iB].hasResult())\n            iB++;\n        let endA = iA == a.length, endB = iB == b.length;\n        if (endA || endB)\n            return endA == endB;\n        if (a[iA++].result != b[iB++].result)\n            return false;\n    }\n}\nconst baseAttrs = {\n    \"aria-autocomplete\": \"list\"\n};\nconst noAttrs = {};\nfunction makeAttrs(id, selected) {\n    let result = {\n        \"aria-autocomplete\": \"list\",\n        \"aria-haspopup\": \"listbox\",\n        \"aria-controls\": id\n    };\n    if (selected > -1)\n        result[\"aria-activedescendant\"] = id + \"-\" + selected;\n    return result;\n}\nconst none = [];\nfunction getUpdateType(tr, conf) {\n    if (tr.isUserEvent(\"input.complete\")) {\n        let completion = tr.annotation(pickedCompletion);\n        if (completion && conf.activateOnCompletion(completion))\n            return 4 /* UpdateType.Activate */ | 8 /* UpdateType.Reset */;\n    }\n    let typing = tr.isUserEvent(\"input.type\");\n    return typing && conf.activateOnTyping ? 4 /* UpdateType.Activate */ | 1 /* UpdateType.Typing */\n        : typing ? 1 /* UpdateType.Typing */\n            : tr.isUserEvent(\"delete.backward\") ? 2 /* UpdateType.Backspacing */\n                : tr.selection ? 8 /* UpdateType.Reset */\n                    : tr.docChanged ? 16 /* UpdateType.ResetIfTouching */ : 0 /* UpdateType.None */;\n}\nclass ActiveSource {\n    constructor(source, state, explicit = false) {\n        this.source = source;\n        this.state = state;\n        this.explicit = explicit;\n    }\n    hasResult() { return false; }\n    get isPending() { return this.state == 1 /* State.Pending */; }\n    update(tr, conf) {\n        let type = getUpdateType(tr, conf), value = this;\n        if ((type & 8 /* UpdateType.Reset */) || (type & 16 /* UpdateType.ResetIfTouching */) && this.touches(tr))\n            value = new ActiveSource(value.source, 0 /* State.Inactive */);\n        if ((type & 4 /* UpdateType.Activate */) && value.state == 0 /* State.Inactive */)\n            value = new ActiveSource(this.source, 1 /* State.Pending */);\n        value = value.updateFor(tr, type);\n        for (let effect of tr.effects) {\n            if (effect.is(startCompletionEffect))\n                value = new ActiveSource(value.source, 1 /* State.Pending */, effect.value);\n            else if (effect.is(closeCompletionEffect))\n                value = new ActiveSource(value.source, 0 /* State.Inactive */);\n            else if (effect.is(setActiveEffect))\n                for (let active of effect.value)\n                    if (active.source == value.source)\n                        value = active;\n        }\n        return value;\n    }\n    updateFor(tr, type) { return this.map(tr.changes); }\n    map(changes) { return this; }\n    touches(tr) {\n        return tr.changes.touchesRange(cur(tr.state));\n    }\n}\nclass ActiveResult extends ActiveSource {\n    constructor(source, explicit, limit, result, from, to) {\n        super(source, 3 /* State.Result */, explicit);\n        this.limit = limit;\n        this.result = result;\n        this.from = from;\n        this.to = to;\n    }\n    hasResult() { return true; }\n    updateFor(tr, type) {\n        var _a;\n        if (!(type & 3 /* UpdateType.SimpleInteraction */))\n            return this.map(tr.changes);\n        let result = this.result;\n        if (result.map && !tr.changes.empty)\n            result = result.map(result, tr.changes);\n        let from = tr.changes.mapPos(this.from), to = tr.changes.mapPos(this.to, 1);\n        let pos = cur(tr.state);\n        if (pos > to || !result ||\n            (type & 2 /* UpdateType.Backspacing */) && (cur(tr.startState) == this.from || pos < this.limit))\n            return new ActiveSource(this.source, type & 4 /* UpdateType.Activate */ ? 1 /* State.Pending */ : 0 /* State.Inactive */);\n        let limit = tr.changes.mapPos(this.limit);\n        if (checkValid(result.validFor, tr.state, from, to))\n            return new ActiveResult(this.source, this.explicit, limit, result, from, to);\n        if (result.update &&\n            (result = result.update(result, from, to, new CompletionContext(tr.state, pos, false))))\n            return new ActiveResult(this.source, this.explicit, limit, result, result.from, (_a = result.to) !== null && _a !== void 0 ? _a : cur(tr.state));\n        return new ActiveSource(this.source, 1 /* State.Pending */, this.explicit);\n    }\n    map(mapping) {\n        if (mapping.empty)\n            return this;\n        let result = this.result.map ? this.result.map(this.result, mapping) : this.result;\n        if (!result)\n            return new ActiveSource(this.source, 0 /* State.Inactive */);\n        return new ActiveResult(this.source, this.explicit, mapping.mapPos(this.limit), this.result, mapping.mapPos(this.from), mapping.mapPos(this.to, 1));\n    }\n    touches(tr) {\n        return tr.changes.touchesRange(this.from, this.to);\n    }\n}\nfunction checkValid(validFor, state, from, to) {\n    if (!validFor)\n        return false;\n    let text = state.sliceDoc(from, to);\n    return typeof validFor == \"function\" ? validFor(text, from, to, state) : ensureAnchor(validFor, true).test(text);\n}\nconst setActiveEffect = /*@__PURE__*/StateEffect.define({\n    map(sources, mapping) { return sources.map(s => s.map(mapping)); }\n});\nconst setSelectedEffect = /*@__PURE__*/StateEffect.define();\nconst completionState = /*@__PURE__*/StateField.define({\n    create() { return CompletionState.start(); },\n    update(value, tr) { return value.update(tr); },\n    provide: f => [\n        showTooltip.from(f, val => val.tooltip),\n        EditorView.contentAttributes.from(f, state => state.attrs)\n    ]\n});\nfunction applyCompletion(view, option) {\n    const apply = option.completion.apply || option.completion.label;\n    let result = view.state.field(completionState).active.find(a => a.source == option.source);\n    if (!(result instanceof ActiveResult))\n        return false;\n    if (typeof apply == \"string\")\n        view.dispatch({\n            ...insertCompletionText(view.state, apply, result.from, result.to),\n            annotations: pickedCompletion.of(option.completion)\n        });\n    else\n        apply(view, option.completion, result.from, result.to);\n    return true;\n}\nconst createTooltip = /*@__PURE__*/completionTooltip(completionState, applyCompletion);\n\n/**\nReturns a command that moves the completion selection forward or\nbackward by the given amount.\n*/\nfunction moveCompletionSelection(forward, by = \"option\") {\n    return (view) => {\n        let cState = view.state.field(completionState, false);\n        if (!cState || !cState.open || cState.open.disabled ||\n            Date.now() - cState.open.timestamp < view.state.facet(completionConfig).interactionDelay)\n            return false;\n        let step = 1, tooltip;\n        if (by == \"page\" && (tooltip = getTooltip(view, cState.open.tooltip)))\n            step = Math.max(2, Math.floor(tooltip.dom.offsetHeight /\n                tooltip.dom.querySelector(\"li\").offsetHeight) - 1);\n        let { length } = cState.open.options;\n        let selected = cState.open.selected > -1 ? cState.open.selected + step * (forward ? 1 : -1) : forward ? 0 : length - 1;\n        if (selected < 0)\n            selected = by == \"page\" ? 0 : length - 1;\n        else if (selected >= length)\n            selected = by == \"page\" ? length - 1 : 0;\n        view.dispatch({ effects: setSelectedEffect.of(selected) });\n        return true;\n    };\n}\n/**\nAccept the current completion.\n*/\nconst acceptCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (view.state.readOnly || !cState || !cState.open || cState.open.selected < 0 || cState.open.disabled ||\n        Date.now() - cState.open.timestamp < view.state.facet(completionConfig).interactionDelay)\n        return false;\n    return applyCompletion(view, cState.open.options[cState.open.selected]);\n};\n/**\nExplicitly start autocompletion.\n*/\nconst startCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState)\n        return false;\n    view.dispatch({ effects: startCompletionEffect.of(true) });\n    return true;\n};\n/**\nClose the currently active completion.\n*/\nconst closeCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState || !cState.active.some(a => a.state != 0 /* State.Inactive */))\n        return false;\n    view.dispatch({ effects: closeCompletionEffect.of(null) });\n    return true;\n};\nclass RunningQuery {\n    constructor(active, context) {\n        this.active = active;\n        this.context = context;\n        this.time = Date.now();\n        this.updates = [];\n        // Note that 'undefined' means 'not done yet', whereas 'null' means\n        // 'query returned null'.\n        this.done = undefined;\n    }\n}\nconst MaxUpdateCount = 50, MinAbortTime = 1000;\nconst completionPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.debounceUpdate = -1;\n        this.running = [];\n        this.debounceAccept = -1;\n        this.pendingStart = false;\n        this.composing = 0 /* CompositionState.None */;\n        for (let active of view.state.field(completionState).active)\n            if (active.isPending)\n                this.startQuery(active);\n    }\n    update(update) {\n        let cState = update.state.field(completionState);\n        let conf = update.state.facet(completionConfig);\n        if (!update.selectionSet && !update.docChanged && update.startState.field(completionState) == cState)\n            return;\n        let doesReset = update.transactions.some(tr => {\n            let type = getUpdateType(tr, conf);\n            return (type & 8 /* UpdateType.Reset */) || (tr.selection || tr.docChanged) && !(type & 3 /* UpdateType.SimpleInteraction */);\n        });\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (doesReset ||\n                query.context.abortOnDocChange && update.docChanged ||\n                query.updates.length + update.transactions.length > MaxUpdateCount && Date.now() - query.time > MinAbortTime) {\n                for (let handler of query.context.abortListeners) {\n                    try {\n                        handler();\n                    }\n                    catch (e) {\n                        logException(this.view.state, e);\n                    }\n                }\n                query.context.abortListeners = null;\n                this.running.splice(i--, 1);\n            }\n            else {\n                query.updates.push(...update.transactions);\n            }\n        }\n        if (this.debounceUpdate > -1)\n            clearTimeout(this.debounceUpdate);\n        if (update.transactions.some(tr => tr.effects.some(e => e.is(startCompletionEffect))))\n            this.pendingStart = true;\n        let delay = this.pendingStart ? 50 : conf.activateOnTypingDelay;\n        this.debounceUpdate = cState.active.some(a => a.isPending && !this.running.some(q => q.active.source == a.source))\n            ? setTimeout(() => this.startUpdate(), delay) : -1;\n        if (this.composing != 0 /* CompositionState.None */)\n            for (let tr of update.transactions) {\n                if (tr.isUserEvent(\"input.type\"))\n                    this.composing = 2 /* CompositionState.Changed */;\n                else if (this.composing == 2 /* CompositionState.Changed */ && tr.selection)\n                    this.composing = 3 /* CompositionState.ChangedAndMoved */;\n            }\n    }\n    startUpdate() {\n        this.debounceUpdate = -1;\n        this.pendingStart = false;\n        let { state } = this.view, cState = state.field(completionState);\n        for (let active of cState.active) {\n            if (active.isPending && !this.running.some(r => r.active.source == active.source))\n                this.startQuery(active);\n        }\n        if (this.running.length && cState.open && cState.open.disabled)\n            this.debounceAccept = setTimeout(() => this.accept(), this.view.state.facet(completionConfig).updateSyncTime);\n    }\n    startQuery(active) {\n        let { state } = this.view, pos = cur(state);\n        let context = new CompletionContext(state, pos, active.explicit, this.view);\n        let pending = new RunningQuery(active, context);\n        this.running.push(pending);\n        Promise.resolve(active.source(context)).then(result => {\n            if (!pending.context.aborted) {\n                pending.done = result || null;\n                this.scheduleAccept();\n            }\n        }, err => {\n            this.view.dispatch({ effects: closeCompletionEffect.of(null) });\n            logException(this.view.state, err);\n        });\n    }\n    scheduleAccept() {\n        if (this.running.every(q => q.done !== undefined))\n            this.accept();\n        else if (this.debounceAccept < 0)\n            this.debounceAccept = setTimeout(() => this.accept(), this.view.state.facet(completionConfig).updateSyncTime);\n    }\n    // For each finished query in this.running, try to create a result\n    // or, if appropriate, restart the query.\n    accept() {\n        var _a;\n        if (this.debounceAccept > -1)\n            clearTimeout(this.debounceAccept);\n        this.debounceAccept = -1;\n        let updated = [];\n        let conf = this.view.state.facet(completionConfig), cState = this.view.state.field(completionState);\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (query.done === undefined)\n                continue;\n            this.running.splice(i--, 1);\n            if (query.done) {\n                let pos = cur(query.updates.length ? query.updates[0].startState : this.view.state);\n                let limit = Math.min(pos, query.done.from + (query.active.explicit ? 0 : 1));\n                let active = new ActiveResult(query.active.source, query.active.explicit, limit, query.done, query.done.from, (_a = query.done.to) !== null && _a !== void 0 ? _a : pos);\n                // Replay the transactions that happened since the start of\n                // the request and see if that preserves the result\n                for (let tr of query.updates)\n                    active = active.update(tr, conf);\n                if (active.hasResult()) {\n                    updated.push(active);\n                    continue;\n                }\n            }\n            let current = cState.active.find(a => a.source == query.active.source);\n            if (current && current.isPending) {\n                if (query.done == null) {\n                    // Explicitly failed. Should clear the pending status if it\n                    // hasn't been re-set in the meantime.\n                    let active = new ActiveSource(query.active.source, 0 /* State.Inactive */);\n                    for (let tr of query.updates)\n                        active = active.update(tr, conf);\n                    if (!active.isPending)\n                        updated.push(active);\n                }\n                else {\n                    // Cleared by subsequent transactions. Restart.\n                    this.startQuery(current);\n                }\n            }\n        }\n        if (updated.length || cState.open && cState.open.disabled)\n            this.view.dispatch({ effects: setActiveEffect.of(updated) });\n    }\n}, {\n    eventHandlers: {\n        blur(event) {\n            let state = this.view.state.field(completionState, false);\n            if (state && state.tooltip && this.view.state.facet(completionConfig).closeOnBlur) {\n                let dialog = state.open && getTooltip(this.view, state.open.tooltip);\n                if (!dialog || !dialog.dom.contains(event.relatedTarget))\n                    setTimeout(() => this.view.dispatch({ effects: closeCompletionEffect.of(null) }), 10);\n            }\n        },\n        compositionstart() {\n            this.composing = 1 /* CompositionState.Started */;\n        },\n        compositionend() {\n            if (this.composing == 3 /* CompositionState.ChangedAndMoved */) {\n                // Safari fires compositionend events synchronously, possibly\n                // from inside an update, so dispatch asynchronously to avoid reentrancy\n                setTimeout(() => this.view.dispatch({ effects: startCompletionEffect.of(false) }), 20);\n            }\n            this.composing = 0 /* CompositionState.None */;\n        }\n    }\n});\nconst windows = typeof navigator == \"object\" && /*@__PURE__*//Win/.test(navigator.platform);\nconst commitCharacters = /*@__PURE__*/Prec.highest(/*@__PURE__*/EditorView.domEventHandlers({\n    keydown(event, view) {\n        let field = view.state.field(completionState, false);\n        if (!field || !field.open || field.open.disabled || field.open.selected < 0 ||\n            event.key.length > 1 || event.ctrlKey && !(windows && event.altKey) || event.metaKey)\n            return false;\n        let option = field.open.options[field.open.selected];\n        let result = field.active.find(a => a.source == option.source);\n        let commitChars = option.completion.commitCharacters || result.result.commitCharacters;\n        if (commitChars && commitChars.indexOf(event.key) > -1)\n            applyCompletion(view, option);\n        return false;\n    }\n}));\n\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-tooltip.cm-tooltip-autocomplete\": {\n        \"& > ul\": {\n            fontFamily: \"monospace\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden auto\",\n            maxWidth_fallback: \"700px\",\n            maxWidth: \"min(700px, 95vw)\",\n            minWidth: \"250px\",\n            maxHeight: \"10em\",\n            height: \"100%\",\n            listStyle: \"none\",\n            margin: 0,\n            padding: 0,\n            \"& > li, & > completion-section\": {\n                padding: \"1px 3px\",\n                lineHeight: 1.2\n            },\n            \"& > li\": {\n                overflowX: \"hidden\",\n                textOverflow: \"ellipsis\",\n                cursor: \"pointer\"\n            },\n            \"& > completion-section\": {\n                display: \"list-item\",\n                borderBottom: \"1px solid silver\",\n                paddingLeft: \"0.5em\",\n                opacity: 0.7\n            }\n        }\n    },\n    \"&light .cm-tooltip-autocomplete ul li[aria-selected]\": {\n        background: \"#17c\",\n        color: \"white\",\n    },\n    \"&light .cm-tooltip-autocomplete-disabled ul li[aria-selected]\": {\n        background: \"#777\",\n    },\n    \"&dark .cm-tooltip-autocomplete ul li[aria-selected]\": {\n        background: \"#347\",\n        color: \"white\",\n    },\n    \"&dark .cm-tooltip-autocomplete-disabled ul li[aria-selected]\": {\n        background: \"#444\",\n    },\n    \".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after\": {\n        content: '\"···\"',\n        opacity: 0.5,\n        display: \"block\",\n        textAlign: \"center\"\n    },\n    \".cm-tooltip.cm-completionInfo\": {\n        position: \"absolute\",\n        padding: \"3px 9px\",\n        width: \"max-content\",\n        maxWidth: `${400 /* Info.Width */}px`,\n        boxSizing: \"border-box\",\n        whiteSpace: \"pre-line\"\n    },\n    \".cm-completionInfo.cm-completionInfo-left\": { right: \"100%\" },\n    \".cm-completionInfo.cm-completionInfo-right\": { left: \"100%\" },\n    \".cm-completionInfo.cm-completionInfo-left-narrow\": { right: `${30 /* Info.Margin */}px` },\n    \".cm-completionInfo.cm-completionInfo-right-narrow\": { left: `${30 /* Info.Margin */}px` },\n    \"&light .cm-snippetField\": { backgroundColor: \"#00000022\" },\n    \"&dark .cm-snippetField\": { backgroundColor: \"#ffffff22\" },\n    \".cm-snippetFieldPosition\": {\n        verticalAlign: \"text-top\",\n        width: 0,\n        height: \"1.15em\",\n        display: \"inline-block\",\n        margin: \"0 -0.7px -.7em\",\n        borderLeft: \"1.4px dotted #888\"\n    },\n    \".cm-completionMatchedText\": {\n        textDecoration: \"underline\"\n    },\n    \".cm-completionDetail\": {\n        marginLeft: \"0.5em\",\n        fontStyle: \"italic\"\n    },\n    \".cm-completionIcon\": {\n        fontSize: \"90%\",\n        width: \".8em\",\n        display: \"inline-block\",\n        textAlign: \"center\",\n        paddingRight: \".6em\",\n        opacity: \"0.6\",\n        boxSizing: \"content-box\"\n    },\n    \".cm-completionIcon-function, .cm-completionIcon-method\": {\n        \"&:after\": { content: \"'ƒ'\" }\n    },\n    \".cm-completionIcon-class\": {\n        \"&:after\": { content: \"'○'\" }\n    },\n    \".cm-completionIcon-interface\": {\n        \"&:after\": { content: \"'◌'\" }\n    },\n    \".cm-completionIcon-variable\": {\n        \"&:after\": { content: \"'𝑥'\" }\n    },\n    \".cm-completionIcon-constant\": {\n        \"&:after\": { content: \"'𝐶'\" }\n    },\n    \".cm-completionIcon-type\": {\n        \"&:after\": { content: \"'𝑡'\" }\n    },\n    \".cm-completionIcon-enum\": {\n        \"&:after\": { content: \"'∪'\" }\n    },\n    \".cm-completionIcon-property\": {\n        \"&:after\": { content: \"'□'\" }\n    },\n    \".cm-completionIcon-keyword\": {\n        \"&:after\": { content: \"'🔑\\uFE0E'\" } // Disable emoji rendering\n    },\n    \".cm-completionIcon-namespace\": {\n        \"&:after\": { content: \"'▢'\" }\n    },\n    \".cm-completionIcon-text\": {\n        \"&:after\": { content: \"'abc'\", fontSize: \"50%\", verticalAlign: \"middle\" }\n    }\n});\n\nclass FieldPos {\n    constructor(field, line, from, to) {\n        this.field = field;\n        this.line = line;\n        this.from = from;\n        this.to = to;\n    }\n}\nclass FieldRange {\n    constructor(field, from, to) {\n        this.field = field;\n        this.from = from;\n        this.to = to;\n    }\n    map(changes) {\n        let from = changes.mapPos(this.from, -1, MapMode.TrackDel);\n        let to = changes.mapPos(this.to, 1, MapMode.TrackDel);\n        return from == null || to == null ? null : new FieldRange(this.field, from, to);\n    }\n}\nclass Snippet {\n    constructor(lines, fieldPositions) {\n        this.lines = lines;\n        this.fieldPositions = fieldPositions;\n    }\n    instantiate(state, pos) {\n        let text = [], lineStart = [pos];\n        let lineObj = state.doc.lineAt(pos), baseIndent = /^\\s*/.exec(lineObj.text)[0];\n        for (let line of this.lines) {\n            if (text.length) {\n                let indent = baseIndent, tabs = /^\\t*/.exec(line)[0].length;\n                for (let i = 0; i < tabs; i++)\n                    indent += state.facet(indentUnit);\n                lineStart.push(pos + indent.length - tabs);\n                line = indent + line.slice(tabs);\n            }\n            text.push(line);\n            pos += line.length + 1;\n        }\n        let ranges = this.fieldPositions.map(pos => new FieldRange(pos.field, lineStart[pos.line] + pos.from, lineStart[pos.line] + pos.to));\n        return { text, ranges };\n    }\n    static parse(template) {\n        let fields = [];\n        let lines = [], positions = [], m;\n        for (let line of template.split(/\\r\\n?|\\n/)) {\n            while (m = /[#$]\\{(?:(\\d+)(?::([^{}]*))?|((?:\\\\[{}]|[^{}])*))\\}/.exec(line)) {\n                let seq = m[1] ? +m[1] : null, rawName = m[2] || m[3] || \"\", found = -1;\n                let name = rawName.replace(/\\\\[{}]/g, m => m[1]);\n                for (let i = 0; i < fields.length; i++) {\n                    if (seq != null ? fields[i].seq == seq : name ? fields[i].name == name : false)\n                        found = i;\n                }\n                if (found < 0) {\n                    let i = 0;\n                    while (i < fields.length && (seq == null || (fields[i].seq != null && fields[i].seq < seq)))\n                        i++;\n                    fields.splice(i, 0, { seq, name });\n                    found = i;\n                    for (let pos of positions)\n                        if (pos.field >= found)\n                            pos.field++;\n                }\n                for (let pos of positions)\n                    if (pos.line == lines.length && pos.from > m.index) {\n                        let snip = m[2] ? 3 + (m[1] || \"\").length : 2;\n                        pos.from -= snip;\n                        pos.to -= snip;\n                    }\n                positions.push(new FieldPos(found, lines.length, m.index, m.index + name.length));\n                line = line.slice(0, m.index) + rawName + line.slice(m.index + m[0].length);\n            }\n            line = line.replace(/\\\\([{}])/g, (_, brace, index) => {\n                for (let pos of positions)\n                    if (pos.line == lines.length && pos.from > index) {\n                        pos.from--;\n                        pos.to--;\n                    }\n                return brace;\n            });\n            lines.push(line);\n        }\n        return new Snippet(lines, positions);\n    }\n}\nlet fieldMarker = /*@__PURE__*/Decoration.widget({ widget: /*@__PURE__*/new class extends WidgetType {\n        toDOM() {\n            let span = document.createElement(\"span\");\n            span.className = \"cm-snippetFieldPosition\";\n            return span;\n        }\n        ignoreEvent() { return false; }\n    } });\nlet fieldRange = /*@__PURE__*/Decoration.mark({ class: \"cm-snippetField\" });\nclass ActiveSnippet {\n    constructor(ranges, active) {\n        this.ranges = ranges;\n        this.active = active;\n        this.deco = Decoration.set(ranges.map(r => (r.from == r.to ? fieldMarker : fieldRange).range(r.from, r.to)), true);\n    }\n    map(changes) {\n        let ranges = [];\n        for (let r of this.ranges) {\n            let mapped = r.map(changes);\n            if (!mapped)\n                return null;\n            ranges.push(mapped);\n        }\n        return new ActiveSnippet(ranges, this.active);\n    }\n    selectionInsideField(sel) {\n        return sel.ranges.every(range => this.ranges.some(r => r.field == this.active && r.from <= range.from && r.to >= range.to));\n    }\n}\nconst setActive = /*@__PURE__*/StateEffect.define({\n    map(value, changes) { return value && value.map(changes); }\n});\nconst moveToField = /*@__PURE__*/StateEffect.define();\nconst snippetState = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setActive))\n                return effect.value;\n            if (effect.is(moveToField) && value)\n                return new ActiveSnippet(value.ranges, effect.value);\n        }\n        if (value && tr.docChanged)\n            value = value.map(tr.changes);\n        if (value && tr.selection && !value.selectionInsideField(tr.selection))\n            value = null;\n        return value;\n    },\n    provide: f => EditorView.decorations.from(f, val => val ? val.deco : Decoration.none)\n});\nfunction fieldSelection(ranges, field) {\n    return EditorSelection.create(ranges.filter(r => r.field == field).map(r => EditorSelection.range(r.from, r.to)));\n}\n/**\nConvert a snippet template to a function that can\n[apply](https://codemirror.net/6/docs/ref/#autocomplete.Completion.apply) it. Snippets are written\nusing syntax like this:\n\n    \"for (let ${index} = 0; ${index} < ${end}; ${index}++) {\\n\\t${}\\n}\"\n\nEach `${}` placeholder (you may also use `#{}`) indicates a field\nthat the user can fill in. Its name, if any, will be the default\ncontent for the field.\n\nWhen the snippet is activated by calling the returned function,\nthe code is inserted at the given position. Newlines in the\ntemplate are indented by the indentation of the start line, plus\none [indent unit](https://codemirror.net/6/docs/ref/#language.indentUnit) per tab character after\nthe newline.\n\nOn activation, (all instances of) the first field are selected.\nThe user can move between fields with Tab and Shift-Tab as long as\nthe fields are active. Moving to the last field or moving the\ncursor out of the current field deactivates the fields.\n\nThe order of fields defaults to textual order, but you can add\nnumbers to placeholders (`${1}` or `${1:defaultText}`) to provide\na custom order.\n\nTo include a literal `{` or `}` in your template, put a backslash\nin front of it. This will be removed and the brace will not be\ninterpreted as indicating a placeholder.\n*/\nfunction snippet(template) {\n    let snippet = Snippet.parse(template);\n    return (editor, completion, from, to) => {\n        let { text, ranges } = snippet.instantiate(editor.state, from);\n        let { main } = editor.state.selection;\n        let spec = {\n            changes: { from, to: to == main.from ? main.to : to, insert: Text.of(text) },\n            scrollIntoView: true,\n            annotations: completion ? [pickedCompletion.of(completion), Transaction.userEvent.of(\"input.complete\")] : undefined\n        };\n        if (ranges.length)\n            spec.selection = fieldSelection(ranges, 0);\n        if (ranges.some(r => r.field > 0)) {\n            let active = new ActiveSnippet(ranges, 0);\n            let effects = spec.effects = [setActive.of(active)];\n            if (editor.state.field(snippetState, false) === undefined)\n                effects.push(StateEffect.appendConfig.of([snippetState, addSnippetKeymap, snippetPointerHandler, baseTheme]));\n        }\n        editor.dispatch(editor.state.update(spec));\n    };\n}\nfunction moveField(dir) {\n    return ({ state, dispatch }) => {\n        let active = state.field(snippetState, false);\n        if (!active || dir < 0 && active.active == 0)\n            return false;\n        let next = active.active + dir, last = dir > 0 && !active.ranges.some(r => r.field == next + dir);\n        dispatch(state.update({\n            selection: fieldSelection(active.ranges, next),\n            effects: setActive.of(last ? null : new ActiveSnippet(active.ranges, next)),\n            scrollIntoView: true\n        }));\n        return true;\n    };\n}\n/**\nA command that clears the active snippet, if any.\n*/\nconst clearSnippet = ({ state, dispatch }) => {\n    let active = state.field(snippetState, false);\n    if (!active)\n        return false;\n    dispatch(state.update({ effects: setActive.of(null) }));\n    return true;\n};\n/**\nMove to the next snippet field, if available.\n*/\nconst nextSnippetField = /*@__PURE__*/moveField(1);\n/**\nMove to the previous snippet field, if available.\n*/\nconst prevSnippetField = /*@__PURE__*/moveField(-1);\n/**\nCheck if there is an active snippet with a next field for\n`nextSnippetField` to move to.\n*/\nfunction hasNextSnippetField(state) {\n    let active = state.field(snippetState, false);\n    return !!(active && active.ranges.some(r => r.field == active.active + 1));\n}\n/**\nReturns true if there is an active snippet and a previous field\nfor `prevSnippetField` to move to.\n*/\nfunction hasPrevSnippetField(state) {\n    let active = state.field(snippetState, false);\n    return !!(active && active.active > 0);\n}\nconst defaultSnippetKeymap = [\n    { key: \"Tab\", run: nextSnippetField, shift: prevSnippetField },\n    { key: \"Escape\", run: clearSnippet }\n];\n/**\nA facet that can be used to configure the key bindings used by\nsnippets. The default binds Tab to\n[`nextSnippetField`](https://codemirror.net/6/docs/ref/#autocomplete.nextSnippetField), Shift-Tab to\n[`prevSnippetField`](https://codemirror.net/6/docs/ref/#autocomplete.prevSnippetField), and Escape\nto [`clearSnippet`](https://codemirror.net/6/docs/ref/#autocomplete.clearSnippet).\n*/\nconst snippetKeymap = /*@__PURE__*/Facet.define({\n    combine(maps) { return maps.length ? maps[0] : defaultSnippetKeymap; }\n});\nconst addSnippetKeymap = /*@__PURE__*/Prec.highest(/*@__PURE__*/keymap.compute([snippetKeymap], state => state.facet(snippetKeymap)));\n/**\nCreate a completion from a snippet. Returns an object with the\nproperties from `completion`, plus an `apply` function that\napplies the snippet.\n*/\nfunction snippetCompletion(template, completion) {\n    return { ...completion, apply: snippet(template) };\n}\nconst snippetPointerHandler = /*@__PURE__*/EditorView.domEventHandlers({\n    mousedown(event, view) {\n        let active = view.state.field(snippetState, false), pos;\n        if (!active || (pos = view.posAtCoords({ x: event.clientX, y: event.clientY })) == null)\n            return false;\n        let match = active.ranges.find(r => r.from <= pos && r.to >= pos);\n        if (!match || match.field == active.active)\n            return false;\n        view.dispatch({\n            selection: fieldSelection(active.ranges, match.field),\n            effects: setActive.of(active.ranges.some(r => r.field > match.field)\n                ? new ActiveSnippet(active.ranges, match.field) : null),\n            scrollIntoView: true\n        });\n        return true;\n    }\n});\n\nfunction wordRE(wordChars) {\n    let escaped = wordChars.replace(/[\\]\\-\\\\]/g, \"\\\\$&\");\n    try {\n        return new RegExp(`[\\\\p{Alphabetic}\\\\p{Number}_${escaped}]+`, \"ug\");\n    }\n    catch (_a) {\n        return new RegExp(`[\\w${escaped}]`, \"g\");\n    }\n}\nfunction mapRE(re, f) {\n    return new RegExp(f(re.source), re.unicode ? \"u\" : \"\");\n}\nconst wordCaches = /*@__PURE__*/Object.create(null);\nfunction wordCache(wordChars) {\n    return wordCaches[wordChars] || (wordCaches[wordChars] = new WeakMap);\n}\nfunction storeWords(doc, wordRE, result, seen, ignoreAt) {\n    for (let lines = doc.iterLines(), pos = 0; !lines.next().done;) {\n        let { value } = lines, m;\n        wordRE.lastIndex = 0;\n        while (m = wordRE.exec(value)) {\n            if (!seen[m[0]] && pos + m.index != ignoreAt) {\n                result.push({ type: \"text\", label: m[0] });\n                seen[m[0]] = true;\n                if (result.length >= 2000 /* C.MaxList */)\n                    return;\n            }\n        }\n        pos += value.length + 1;\n    }\n}\nfunction collectWords(doc, cache, wordRE, to, ignoreAt) {\n    let big = doc.length >= 1000 /* C.MinCacheLen */;\n    let cached = big && cache.get(doc);\n    if (cached)\n        return cached;\n    let result = [], seen = Object.create(null);\n    if (doc.children) {\n        let pos = 0;\n        for (let ch of doc.children) {\n            if (ch.length >= 1000 /* C.MinCacheLen */) {\n                for (let c of collectWords(ch, cache, wordRE, to - pos, ignoreAt - pos)) {\n                    if (!seen[c.label]) {\n                        seen[c.label] = true;\n                        result.push(c);\n                    }\n                }\n            }\n            else {\n                storeWords(ch, wordRE, result, seen, ignoreAt - pos);\n            }\n            pos += ch.length + 1;\n        }\n    }\n    else {\n        storeWords(doc, wordRE, result, seen, ignoreAt);\n    }\n    if (big && result.length < 2000 /* C.MaxList */)\n        cache.set(doc, result);\n    return result;\n}\n/**\nA completion source that will scan the document for words (using a\n[character categorizer](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer)), and\nreturn those as completions.\n*/\nconst completeAnyWord = context => {\n    let wordChars = context.state.languageDataAt(\"wordChars\", context.pos).join(\"\");\n    let re = wordRE(wordChars);\n    let token = context.matchBefore(mapRE(re, s => s + \"$\"));\n    if (!token && !context.explicit)\n        return null;\n    let from = token ? token.from : context.pos;\n    let options = collectWords(context.state.doc, wordCache(wordChars), re, 50000 /* C.Range */, from);\n    return { from, options, validFor: mapRE(re, s => \"^\" + s) };\n};\n\nconst defaults = {\n    brackets: [\"(\", \"[\", \"{\", \"'\", '\"'],\n    before: \")]}:;>\",\n    stringPrefixes: []\n};\nconst closeBracketEffect = /*@__PURE__*/StateEffect.define({\n    map(value, mapping) {\n        let mapped = mapping.mapPos(value, -1, MapMode.TrackAfter);\n        return mapped == null ? undefined : mapped;\n    }\n});\nconst closedBracket = /*@__PURE__*/new class extends RangeValue {\n};\nclosedBracket.startSide = 1;\nclosedBracket.endSide = -1;\nconst bracketState = /*@__PURE__*/StateField.define({\n    create() { return RangeSet.empty; },\n    update(value, tr) {\n        value = value.map(tr.changes);\n        if (tr.selection) {\n            let line = tr.state.doc.lineAt(tr.selection.main.head);\n            value = value.update({ filter: from => from >= line.from && from <= line.to });\n        }\n        for (let effect of tr.effects)\n            if (effect.is(closeBracketEffect))\n                value = value.update({ add: [closedBracket.range(effect.value, effect.value + 1)] });\n        return value;\n    }\n});\n/**\nExtension to enable bracket-closing behavior. When a closeable\nbracket is typed, its closing bracket is immediately inserted\nafter the cursor. When closing a bracket directly in front of a\nclosing bracket inserted by the extension, the cursor moves over\nthat bracket.\n*/\nfunction closeBrackets() {\n    return [inputHandler, bracketState];\n}\nconst definedClosing = \"()[]{}<>«»»«［］｛｝\";\nfunction closing(ch) {\n    for (let i = 0; i < definedClosing.length; i += 2)\n        if (definedClosing.charCodeAt(i) == ch)\n            return definedClosing.charAt(i + 1);\n    return fromCodePoint(ch < 128 ? ch : ch + 1);\n}\nfunction config(state, pos) {\n    return state.languageDataAt(\"closeBrackets\", pos)[0] || defaults;\n}\nconst android = typeof navigator == \"object\" && /*@__PURE__*//Android\\b/.test(navigator.userAgent);\nconst inputHandler = /*@__PURE__*/EditorView.inputHandler.of((view, from, to, insert) => {\n    if ((android ? view.composing : view.compositionStarted) || view.state.readOnly)\n        return false;\n    let sel = view.state.selection.main;\n    if (insert.length > 2 || insert.length == 2 && codePointSize(codePointAt(insert, 0)) == 1 ||\n        from != sel.from || to != sel.to)\n        return false;\n    let tr = insertBracket(view.state, insert);\n    if (!tr)\n        return false;\n    view.dispatch(tr);\n    return true;\n});\n/**\nCommand that implements deleting a pair of matching brackets when\nthe cursor is between them.\n*/\nconst deleteBracketPair = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let conf = config(state, state.selection.main.head);\n    let tokens = conf.brackets || defaults.brackets;\n    let dont = null, changes = state.changeByRange(range => {\n        if (range.empty) {\n            let before = prevChar(state.doc, range.head);\n            for (let token of tokens) {\n                if (token == before && nextChar(state.doc, range.head) == closing(codePointAt(token, 0)))\n                    return { changes: { from: range.head - token.length, to: range.head + token.length },\n                        range: EditorSelection.cursor(range.head - token.length) };\n            }\n        }\n        return { range: dont = range };\n    });\n    if (!dont)\n        dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"delete.backward\" }));\n    return !dont;\n};\n/**\nClose-brackets related key bindings. Binds Backspace to\n[`deleteBracketPair`](https://codemirror.net/6/docs/ref/#autocomplete.deleteBracketPair).\n*/\nconst closeBracketsKeymap = [\n    { key: \"Backspace\", run: deleteBracketPair }\n];\n/**\nImplements the extension's behavior on text insertion. If the\ngiven string counts as a bracket in the language around the\nselection, and replacing the selection with it requires custom\nbehavior (inserting a closing version or skipping past a\npreviously-closed bracket), this function returns a transaction\nrepresenting that custom behavior. (You only need this if you want\nto programmatically insert brackets—the\n[`closeBrackets`](https://codemirror.net/6/docs/ref/#autocomplete.closeBrackets) extension will\ntake care of running this for user input.)\n*/\nfunction insertBracket(state, bracket) {\n    let conf = config(state, state.selection.main.head);\n    let tokens = conf.brackets || defaults.brackets;\n    for (let tok of tokens) {\n        let closed = closing(codePointAt(tok, 0));\n        if (bracket == tok)\n            return closed == tok ? handleSame(state, tok, tokens.indexOf(tok + tok + tok) > -1, conf)\n                : handleOpen(state, tok, closed, conf.before || defaults.before);\n        if (bracket == closed && closedBracketAt(state, state.selection.main.from))\n            return handleClose(state, tok, closed);\n    }\n    return null;\n}\nfunction closedBracketAt(state, pos) {\n    let found = false;\n    state.field(bracketState).between(0, state.doc.length, from => {\n        if (from == pos)\n            found = true;\n    });\n    return found;\n}\nfunction nextChar(doc, pos) {\n    let next = doc.sliceString(pos, pos + 2);\n    return next.slice(0, codePointSize(codePointAt(next, 0)));\n}\nfunction prevChar(doc, pos) {\n    let prev = doc.sliceString(pos - 2, pos);\n    return codePointSize(codePointAt(prev, 0)) == prev.length ? prev : prev.slice(1);\n}\nfunction handleOpen(state, open, close, closeBefore) {\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: open, from: range.from }, { insert: close, from: range.to }],\n                effects: closeBracketEffect.of(range.to + open.length),\n                range: EditorSelection.range(range.anchor + open.length, range.head + open.length) };\n        let next = nextChar(state.doc, range.head);\n        if (!next || /\\s/.test(next) || closeBefore.indexOf(next) > -1)\n            return { changes: { insert: open + close, from: range.head },\n                effects: closeBracketEffect.of(range.head + open.length),\n                range: EditorSelection.cursor(range.head + open.length) };\n        return { range: dont = range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        userEvent: \"input.type\"\n    });\n}\nfunction handleClose(state, _open, close) {\n    let dont = null, changes = state.changeByRange(range => {\n        if (range.empty && nextChar(state.doc, range.head) == close)\n            return { changes: { from: range.head, to: range.head + close.length, insert: close },\n                range: EditorSelection.cursor(range.head + close.length) };\n        return dont = { range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        userEvent: \"input.type\"\n    });\n}\n// Handles cases where the open and close token are the same, and\n// possibly triple quotes (as in `\"\"\"abc\"\"\"`-style quoting).\nfunction handleSame(state, token, allowTriple, config) {\n    let stringPrefixes = config.stringPrefixes || defaults.stringPrefixes;\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: token, from: range.from }, { insert: token, from: range.to }],\n                effects: closeBracketEffect.of(range.to + token.length),\n                range: EditorSelection.range(range.anchor + token.length, range.head + token.length) };\n        let pos = range.head, next = nextChar(state.doc, pos), start;\n        if (next == token) {\n            if (nodeStart(state, pos)) {\n                return { changes: { insert: token + token, from: pos },\n                    effects: closeBracketEffect.of(pos + token.length),\n                    range: EditorSelection.cursor(pos + token.length) };\n            }\n            else if (closedBracketAt(state, pos)) {\n                let isTriple = allowTriple && state.sliceDoc(pos, pos + token.length * 3) == token + token + token;\n                let content = isTriple ? token + token + token : token;\n                return { changes: { from: pos, to: pos + content.length, insert: content },\n                    range: EditorSelection.cursor(pos + content.length) };\n            }\n        }\n        else if (allowTriple && state.sliceDoc(pos - 2 * token.length, pos) == token + token &&\n            (start = canStartStringAt(state, pos - 2 * token.length, stringPrefixes)) > -1 &&\n            nodeStart(state, start)) {\n            return { changes: { insert: token + token + token + token, from: pos },\n                effects: closeBracketEffect.of(pos + token.length),\n                range: EditorSelection.cursor(pos + token.length) };\n        }\n        else if (state.charCategorizer(pos)(next) != CharCategory.Word) {\n            if (canStartStringAt(state, pos, stringPrefixes) > -1 && !probablyInString(state, pos, token, stringPrefixes))\n                return { changes: { insert: token + token, from: pos },\n                    effects: closeBracketEffect.of(pos + token.length),\n                    range: EditorSelection.cursor(pos + token.length) };\n        }\n        return { range: dont = range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        userEvent: \"input.type\"\n    });\n}\nfunction nodeStart(state, pos) {\n    let tree = syntaxTree(state).resolveInner(pos + 1);\n    return tree.parent && tree.from == pos;\n}\nfunction probablyInString(state, pos, quoteToken, prefixes) {\n    let node = syntaxTree(state).resolveInner(pos, -1);\n    let maxPrefix = prefixes.reduce((m, p) => Math.max(m, p.length), 0);\n    for (let i = 0; i < 5; i++) {\n        let start = state.sliceDoc(node.from, Math.min(node.to, node.from + quoteToken.length + maxPrefix));\n        let quotePos = start.indexOf(quoteToken);\n        if (!quotePos || quotePos > -1 && prefixes.indexOf(start.slice(0, quotePos)) > -1) {\n            let first = node.firstChild;\n            while (first && first.from == node.from && first.to - first.from > quoteToken.length + quotePos) {\n                if (state.sliceDoc(first.to - quoteToken.length, first.to) == quoteToken)\n                    return false;\n                first = first.firstChild;\n            }\n            return true;\n        }\n        let parent = node.to == pos && node.parent;\n        if (!parent)\n            break;\n        node = parent;\n    }\n    return false;\n}\nfunction canStartStringAt(state, pos, prefixes) {\n    let charCat = state.charCategorizer(pos);\n    if (charCat(state.sliceDoc(pos - 1, pos)) != CharCategory.Word)\n        return pos;\n    for (let prefix of prefixes) {\n        let start = pos - prefix.length;\n        if (state.sliceDoc(start, pos) == prefix && charCat(state.sliceDoc(start - 1, start)) != CharCategory.Word)\n            return start;\n    }\n    return -1;\n}\n\n/**\nReturns an extension that enables autocompletion.\n*/\nfunction autocompletion(config = {}) {\n    return [\n        commitCharacters,\n        completionState,\n        completionConfig.of(config),\n        completionPlugin,\n        completionKeymapExt,\n        baseTheme\n    ];\n}\n/**\nBasic keybindings for autocompletion.\n\n - Ctrl-Space (and Alt-\\` or Alt-i on macOS): [`startCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.startCompletion)\n - Escape: [`closeCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.closeCompletion)\n - ArrowDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true)`\n - ArrowUp: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(false)`\n - PageDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true, \"page\")`\n - PageUp: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(false, \"page\")`\n - Enter: [`acceptCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.acceptCompletion)\n*/\nconst completionKeymap = [\n    { key: \"Ctrl-Space\", run: startCompletion },\n    { mac: \"Alt-`\", run: startCompletion },\n    { mac: \"Alt-i\", run: startCompletion },\n    { key: \"Escape\", run: closeCompletion },\n    { key: \"ArrowDown\", run: /*@__PURE__*/moveCompletionSelection(true) },\n    { key: \"ArrowUp\", run: /*@__PURE__*/moveCompletionSelection(false) },\n    { key: \"PageDown\", run: /*@__PURE__*/moveCompletionSelection(true, \"page\") },\n    { key: \"PageUp\", run: /*@__PURE__*/moveCompletionSelection(false, \"page\") },\n    { key: \"Enter\", run: acceptCompletion }\n];\nconst completionKeymapExt = /*@__PURE__*/Prec.highest(/*@__PURE__*/keymap.computeN([completionConfig], state => state.facet(completionConfig).defaultKeymap ? [completionKeymap] : []));\n/**\nGet the current completion status. When completions are available,\nthis will return `\"active\"`. When completions are pending (in the\nprocess of being queried), this returns `\"pending\"`. Otherwise, it\nreturns `null`.\n*/\nfunction completionStatus(state) {\n    let cState = state.field(completionState, false);\n    return cState && cState.active.some(a => a.isPending) ? \"pending\"\n        : cState && cState.active.some(a => a.state != 0 /* State.Inactive */) ? \"active\" : null;\n}\nconst completionArrayCache = /*@__PURE__*/new WeakMap;\n/**\nReturns the available completions as an array.\n*/\nfunction currentCompletions(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    if (!open || open.disabled)\n        return [];\n    let completions = completionArrayCache.get(open.options);\n    if (!completions)\n        completionArrayCache.set(open.options, completions = open.options.map(o => o.completion));\n    return completions;\n}\n/**\nReturn the currently selected completion, if any.\n*/\nfunction selectedCompletion(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    return open && !open.disabled && open.selected >= 0 ? open.options[open.selected].completion : null;\n}\n/**\nReturns the currently selected position in the active completion\nlist, or null if no completions are active.\n*/\nfunction selectedCompletionIndex(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    return open && !open.disabled && open.selected >= 0 ? open.selected : null;\n}\n/**\nCreate an effect that can be attached to a transaction to change\nthe currently selected completion.\n*/\nfunction setSelectedCompletion(index) {\n    return setSelectedEffect.of(index);\n}\n\nexport { CompletionContext, acceptCompletion, autocompletion, clearSnippet, closeBrackets, closeBracketsKeymap, closeCompletion, completeAnyWord, completeFromList, completionKeymap, completionStatus, currentCompletions, deleteBracketPair, hasNextSnippetField, hasPrevSnippetField, ifIn, ifNotIn, insertBracket, insertCompletionText, moveCompletionSelection, nextSnippetField, pickedCompletion, prevSnippetField, selectedCompletion, selectedCompletionIndex, setSelectedCompletion, snippet, snippetCompletion, snippetKeymap, startCompletion };\n","import { Annotation, Facet, combineConfig, StateField, Transaction, ChangeSet, ChangeDesc, EditorSelection, StateEffect, Text, findClusterBreak, countColumn, CharCategory } from '@codemirror/state';\nimport { EditorView, Direction } from '@codemirror/view';\nimport { IndentContext, getIndentation, indentString, matchBrackets, syntaxTree, getIndentUnit, indentUnit } from '@codemirror/language';\nimport { NodeProp } from '@lezer/common';\n\n/**\nComment or uncomment the current selection. Will use line comments\nif available, otherwise falling back to block comments.\n*/\nconst toggleComment = target => {\n    let { state } = target, line = state.doc.lineAt(state.selection.main.from), config = getConfig(target.state, line.from);\n    return config.line ? toggleLineComment(target) : config.block ? toggleBlockCommentByLine(target) : false;\n};\nfunction command(f, option) {\n    return ({ state, dispatch }) => {\n        if (state.readOnly)\n            return false;\n        let tr = f(option, state);\n        if (!tr)\n            return false;\n        dispatch(state.update(tr));\n        return true;\n    };\n}\n/**\nComment or uncomment the current selection using line comments.\nThe line comment syntax is taken from the\n[`commentTokens`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).\n*/\nconst toggleLineComment = /*@__PURE__*/command(changeLineComment, 0 /* CommentOption.Toggle */);\n/**\nComment the current selection using line comments.\n*/\nconst lineComment = /*@__PURE__*/command(changeLineComment, 1 /* CommentOption.Comment */);\n/**\nUncomment the current selection using line comments.\n*/\nconst lineUncomment = /*@__PURE__*/command(changeLineComment, 2 /* CommentOption.Uncomment */);\n/**\nComment or uncomment the current selection using block comments.\nThe block comment syntax is taken from the\n[`commentTokens`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).\n*/\nconst toggleBlockComment = /*@__PURE__*/command(changeBlockComment, 0 /* CommentOption.Toggle */);\n/**\nComment the current selection using block comments.\n*/\nconst blockComment = /*@__PURE__*/command(changeBlockComment, 1 /* CommentOption.Comment */);\n/**\nUncomment the current selection using block comments.\n*/\nconst blockUncomment = /*@__PURE__*/command(changeBlockComment, 2 /* CommentOption.Uncomment */);\n/**\nComment or uncomment the lines around the current selection using\nblock comments.\n*/\nconst toggleBlockCommentByLine = /*@__PURE__*/command((o, s) => changeBlockComment(o, s, selectedLineRanges(s)), 0 /* CommentOption.Toggle */);\nfunction getConfig(state, pos) {\n    let data = state.languageDataAt(\"commentTokens\", pos, 1);\n    return data.length ? data[0] : {};\n}\nconst SearchMargin = 50;\n/**\nDetermines if the given range is block-commented in the given\nstate.\n*/\nfunction findBlockComment(state, { open, close }, from, to) {\n    let textBefore = state.sliceDoc(from - SearchMargin, from);\n    let textAfter = state.sliceDoc(to, to + SearchMargin);\n    let spaceBefore = /\\s*$/.exec(textBefore)[0].length, spaceAfter = /^\\s*/.exec(textAfter)[0].length;\n    let beforeOff = textBefore.length - spaceBefore;\n    if (textBefore.slice(beforeOff - open.length, beforeOff) == open &&\n        textAfter.slice(spaceAfter, spaceAfter + close.length) == close) {\n        return { open: { pos: from - spaceBefore, margin: spaceBefore && 1 },\n            close: { pos: to + spaceAfter, margin: spaceAfter && 1 } };\n    }\n    let startText, endText;\n    if (to - from <= 2 * SearchMargin) {\n        startText = endText = state.sliceDoc(from, to);\n    }\n    else {\n        startText = state.sliceDoc(from, from + SearchMargin);\n        endText = state.sliceDoc(to - SearchMargin, to);\n    }\n    let startSpace = /^\\s*/.exec(startText)[0].length, endSpace = /\\s*$/.exec(endText)[0].length;\n    let endOff = endText.length - endSpace - close.length;\n    if (startText.slice(startSpace, startSpace + open.length) == open &&\n        endText.slice(endOff, endOff + close.length) == close) {\n        return { open: { pos: from + startSpace + open.length,\n                margin: /\\s/.test(startText.charAt(startSpace + open.length)) ? 1 : 0 },\n            close: { pos: to - endSpace - close.length,\n                margin: /\\s/.test(endText.charAt(endOff - 1)) ? 1 : 0 } };\n    }\n    return null;\n}\nfunction selectedLineRanges(state) {\n    let ranges = [];\n    for (let r of state.selection.ranges) {\n        let fromLine = state.doc.lineAt(r.from);\n        let toLine = r.to <= fromLine.to ? fromLine : state.doc.lineAt(r.to);\n        if (toLine.from > fromLine.from && toLine.from == r.to)\n            toLine = r.to == fromLine.to + 1 ? fromLine : state.doc.lineAt(r.to - 1);\n        let last = ranges.length - 1;\n        if (last >= 0 && ranges[last].to > fromLine.from)\n            ranges[last].to = toLine.to;\n        else\n            ranges.push({ from: fromLine.from + /^\\s*/.exec(fromLine.text)[0].length, to: toLine.to });\n    }\n    return ranges;\n}\n// Performs toggle, comment and uncomment of block comments in\n// languages that support them.\nfunction changeBlockComment(option, state, ranges = state.selection.ranges) {\n    let tokens = ranges.map(r => getConfig(state, r.from).block);\n    if (!tokens.every(c => c))\n        return null;\n    let comments = ranges.map((r, i) => findBlockComment(state, tokens[i], r.from, r.to));\n    if (option != 2 /* CommentOption.Uncomment */ && !comments.every(c => c)) {\n        return { changes: state.changes(ranges.map((range, i) => {\n                if (comments[i])\n                    return [];\n                return [{ from: range.from, insert: tokens[i].open + \" \" }, { from: range.to, insert: \" \" + tokens[i].close }];\n            })) };\n    }\n    else if (option != 1 /* CommentOption.Comment */ && comments.some(c => c)) {\n        let changes = [];\n        for (let i = 0, comment; i < comments.length; i++)\n            if (comment = comments[i]) {\n                let token = tokens[i], { open, close } = comment;\n                changes.push({ from: open.pos - token.open.length, to: open.pos + open.margin }, { from: close.pos - close.margin, to: close.pos + token.close.length });\n            }\n        return { changes };\n    }\n    return null;\n}\n// Performs toggle, comment and uncomment of line comments.\nfunction changeLineComment(option, state, ranges = state.selection.ranges) {\n    let lines = [];\n    let prevLine = -1;\n    for (let { from, to } of ranges) {\n        let startI = lines.length, minIndent = 1e9;\n        let token = getConfig(state, from).line;\n        if (!token)\n            continue;\n        for (let pos = from; pos <= to;) {\n            let line = state.doc.lineAt(pos);\n            if (line.from > prevLine && (from == to || to > line.from)) {\n                prevLine = line.from;\n                let indent = /^\\s*/.exec(line.text)[0].length;\n                let empty = indent == line.length;\n                let comment = line.text.slice(indent, indent + token.length) == token ? indent : -1;\n                if (indent < line.text.length && indent < minIndent)\n                    minIndent = indent;\n                lines.push({ line, comment, token, indent, empty, single: false });\n            }\n            pos = line.to + 1;\n        }\n        if (minIndent < 1e9)\n            for (let i = startI; i < lines.length; i++)\n                if (lines[i].indent < lines[i].line.text.length)\n                    lines[i].indent = minIndent;\n        if (lines.length == startI + 1)\n            lines[startI].single = true;\n    }\n    if (option != 2 /* CommentOption.Uncomment */ && lines.some(l => l.comment < 0 && (!l.empty || l.single))) {\n        let changes = [];\n        for (let { line, token, indent, empty, single } of lines)\n            if (single || !empty)\n                changes.push({ from: line.from + indent, insert: token + \" \" });\n        let changeSet = state.changes(changes);\n        return { changes: changeSet, selection: state.selection.map(changeSet, 1) };\n    }\n    else if (option != 1 /* CommentOption.Comment */ && lines.some(l => l.comment >= 0)) {\n        let changes = [];\n        for (let { line, comment, token } of lines)\n            if (comment >= 0) {\n                let from = line.from + comment, to = from + token.length;\n                if (line.text[to - line.from] == \" \")\n                    to++;\n                changes.push({ from, to });\n            }\n        return { changes };\n    }\n    return null;\n}\n\nconst fromHistory = /*@__PURE__*/Annotation.define();\n/**\nTransaction annotation that will prevent that transaction from\nbeing combined with other transactions in the undo history. Given\n`\"before\"`, it'll prevent merging with previous transactions. With\n`\"after\"`, subsequent transactions won't be combined with this\none. With `\"full\"`, the transaction is isolated on both sides.\n*/\nconst isolateHistory = /*@__PURE__*/Annotation.define();\n/**\nThis facet provides a way to register functions that, given a\ntransaction, provide a set of effects that the history should\nstore when inverting the transaction. This can be used to\nintegrate some kinds of effects in the history, so that they can\nbe undone (and redone again).\n*/\nconst invertedEffects = /*@__PURE__*/Facet.define();\nconst historyConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            minDepth: 100,\n            newGroupDelay: 500,\n            joinToEvent: (_t, isAdjacent) => isAdjacent,\n        }, {\n            minDepth: Math.max,\n            newGroupDelay: Math.min,\n            joinToEvent: (a, b) => (tr, adj) => a(tr, adj) || b(tr, adj)\n        });\n    }\n});\nconst historyField_ = /*@__PURE__*/StateField.define({\n    create() {\n        return HistoryState.empty;\n    },\n    update(state, tr) {\n        let config = tr.state.facet(historyConfig);\n        let fromHist = tr.annotation(fromHistory);\n        if (fromHist) {\n            let item = HistEvent.fromTransaction(tr, fromHist.selection), from = fromHist.side;\n            let other = from == 0 /* BranchName.Done */ ? state.undone : state.done;\n            if (item)\n                other = updateBranch(other, other.length, config.minDepth, item);\n            else\n                other = addSelection(other, tr.startState.selection);\n            return new HistoryState(from == 0 /* BranchName.Done */ ? fromHist.rest : other, from == 0 /* BranchName.Done */ ? other : fromHist.rest);\n        }\n        let isolate = tr.annotation(isolateHistory);\n        if (isolate == \"full\" || isolate == \"before\")\n            state = state.isolate();\n        if (tr.annotation(Transaction.addToHistory) === false)\n            return !tr.changes.empty ? state.addMapping(tr.changes.desc) : state;\n        let event = HistEvent.fromTransaction(tr);\n        let time = tr.annotation(Transaction.time), userEvent = tr.annotation(Transaction.userEvent);\n        if (event)\n            state = state.addChanges(event, time, userEvent, config, tr);\n        else if (tr.selection)\n            state = state.addSelection(tr.startState.selection, time, userEvent, config.newGroupDelay);\n        if (isolate == \"full\" || isolate == \"after\")\n            state = state.isolate();\n        return state;\n    },\n    toJSON(value) {\n        return { done: value.done.map(e => e.toJSON()), undone: value.undone.map(e => e.toJSON()) };\n    },\n    fromJSON(json) {\n        return new HistoryState(json.done.map(HistEvent.fromJSON), json.undone.map(HistEvent.fromJSON));\n    }\n});\n/**\nCreate a history extension with the given configuration.\n*/\nfunction history(config = {}) {\n    return [\n        historyField_,\n        historyConfig.of(config),\n        EditorView.domEventHandlers({\n            beforeinput(e, view) {\n                let command = e.inputType == \"historyUndo\" ? undo : e.inputType == \"historyRedo\" ? redo : null;\n                if (!command)\n                    return false;\n                e.preventDefault();\n                return command(view);\n            }\n        })\n    ];\n}\n/**\nThe state field used to store the history data. Should probably\nonly be used when you want to\n[serialize](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) or\n[deserialize](https://codemirror.net/6/docs/ref/#state.EditorState^fromJSON) state objects in a way\nthat preserves history.\n*/\nconst historyField = historyField_;\nfunction cmd(side, selection) {\n    return function ({ state, dispatch }) {\n        if (!selection && state.readOnly)\n            return false;\n        let historyState = state.field(historyField_, false);\n        if (!historyState)\n            return false;\n        let tr = historyState.pop(side, state, selection);\n        if (!tr)\n            return false;\n        dispatch(tr);\n        return true;\n    };\n}\n/**\nUndo a single group of history events. Returns false if no group\nwas available.\n*/\nconst undo = /*@__PURE__*/cmd(0 /* BranchName.Done */, false);\n/**\nRedo a group of history events. Returns false if no group was\navailable.\n*/\nconst redo = /*@__PURE__*/cmd(1 /* BranchName.Undone */, false);\n/**\nUndo a change or selection change.\n*/\nconst undoSelection = /*@__PURE__*/cmd(0 /* BranchName.Done */, true);\n/**\nRedo a change or selection change.\n*/\nconst redoSelection = /*@__PURE__*/cmd(1 /* BranchName.Undone */, true);\nfunction depth(side) {\n    return function (state) {\n        let histState = state.field(historyField_, false);\n        if (!histState)\n            return 0;\n        let branch = side == 0 /* BranchName.Done */ ? histState.done : histState.undone;\n        return branch.length - (branch.length && !branch[0].changes ? 1 : 0);\n    };\n}\n/**\nThe amount of undoable change events available in a given state.\n*/\nconst undoDepth = /*@__PURE__*/depth(0 /* BranchName.Done */);\n/**\nThe amount of redoable change events available in a given state.\n*/\nconst redoDepth = /*@__PURE__*/depth(1 /* BranchName.Undone */);\n// History events store groups of changes or effects that need to be\n// undone/redone together.\nclass HistEvent {\n    constructor(\n    // The changes in this event. Normal events hold at least one\n    // change or effect. But it may be necessary to store selection\n    // events before the first change, in which case a special type of\n    // instance is created which doesn't hold any changes, with\n    // changes == startSelection == undefined\n    changes, \n    // The effects associated with this event\n    effects, \n    // Accumulated mapping (from addToHistory==false) that should be\n    // applied to events below this one.\n    mapped, \n    // The selection before this event\n    startSelection, \n    // Stores selection changes after this event, to be used for\n    // selection undo/redo.\n    selectionsAfter) {\n        this.changes = changes;\n        this.effects = effects;\n        this.mapped = mapped;\n        this.startSelection = startSelection;\n        this.selectionsAfter = selectionsAfter;\n    }\n    setSelAfter(after) {\n        return new HistEvent(this.changes, this.effects, this.mapped, this.startSelection, after);\n    }\n    toJSON() {\n        var _a, _b, _c;\n        return {\n            changes: (_a = this.changes) === null || _a === void 0 ? void 0 : _a.toJSON(),\n            mapped: (_b = this.mapped) === null || _b === void 0 ? void 0 : _b.toJSON(),\n            startSelection: (_c = this.startSelection) === null || _c === void 0 ? void 0 : _c.toJSON(),\n            selectionsAfter: this.selectionsAfter.map(s => s.toJSON())\n        };\n    }\n    static fromJSON(json) {\n        return new HistEvent(json.changes && ChangeSet.fromJSON(json.changes), [], json.mapped && ChangeDesc.fromJSON(json.mapped), json.startSelection && EditorSelection.fromJSON(json.startSelection), json.selectionsAfter.map(EditorSelection.fromJSON));\n    }\n    // This does not check `addToHistory` and such, it assumes the\n    // transaction needs to be converted to an item. Returns null when\n    // there are no changes or effects in the transaction.\n    static fromTransaction(tr, selection) {\n        let effects = none;\n        for (let invert of tr.startState.facet(invertedEffects)) {\n            let result = invert(tr);\n            if (result.length)\n                effects = effects.concat(result);\n        }\n        if (!effects.length && tr.changes.empty)\n            return null;\n        return new HistEvent(tr.changes.invert(tr.startState.doc), effects, undefined, selection || tr.startState.selection, none);\n    }\n    static selection(selections) {\n        return new HistEvent(undefined, none, undefined, undefined, selections);\n    }\n}\nfunction updateBranch(branch, to, maxLen, newEvent) {\n    let start = to + 1 > maxLen + 20 ? to - maxLen - 1 : 0;\n    let newBranch = branch.slice(start, to);\n    newBranch.push(newEvent);\n    return newBranch;\n}\nfunction isAdjacent(a, b) {\n    let ranges = [], isAdjacent = false;\n    a.iterChangedRanges((f, t) => ranges.push(f, t));\n    b.iterChangedRanges((_f, _t, f, t) => {\n        for (let i = 0; i < ranges.length;) {\n            let from = ranges[i++], to = ranges[i++];\n            if (t >= from && f <= to)\n                isAdjacent = true;\n        }\n    });\n    return isAdjacent;\n}\nfunction eqSelectionShape(a, b) {\n    return a.ranges.length == b.ranges.length &&\n        a.ranges.filter((r, i) => r.empty != b.ranges[i].empty).length === 0;\n}\nfunction conc(a, b) {\n    return !a.length ? b : !b.length ? a : a.concat(b);\n}\nconst none = [];\nconst MaxSelectionsPerEvent = 200;\nfunction addSelection(branch, selection) {\n    if (!branch.length) {\n        return [HistEvent.selection([selection])];\n    }\n    else {\n        let lastEvent = branch[branch.length - 1];\n        let sels = lastEvent.selectionsAfter.slice(Math.max(0, lastEvent.selectionsAfter.length - MaxSelectionsPerEvent));\n        if (sels.length && sels[sels.length - 1].eq(selection))\n            return branch;\n        sels.push(selection);\n        return updateBranch(branch, branch.length - 1, 1e9, lastEvent.setSelAfter(sels));\n    }\n}\n// Assumes the top item has one or more selectionAfter values\nfunction popSelection(branch) {\n    let last = branch[branch.length - 1];\n    let newBranch = branch.slice();\n    newBranch[branch.length - 1] = last.setSelAfter(last.selectionsAfter.slice(0, last.selectionsAfter.length - 1));\n    return newBranch;\n}\n// Add a mapping to the top event in the given branch. If this maps\n// away all the changes and effects in that item, drop it and\n// propagate the mapping to the next item.\nfunction addMappingToBranch(branch, mapping) {\n    if (!branch.length)\n        return branch;\n    let length = branch.length, selections = none;\n    while (length) {\n        let event = mapEvent(branch[length - 1], mapping, selections);\n        if (event.changes && !event.changes.empty || event.effects.length) { // Event survived mapping\n            let result = branch.slice(0, length);\n            result[length - 1] = event;\n            return result;\n        }\n        else { // Drop this event, since there's no changes or effects left\n            mapping = event.mapped;\n            length--;\n            selections = event.selectionsAfter;\n        }\n    }\n    return selections.length ? [HistEvent.selection(selections)] : none;\n}\nfunction mapEvent(event, mapping, extraSelections) {\n    let selections = conc(event.selectionsAfter.length ? event.selectionsAfter.map(s => s.map(mapping)) : none, extraSelections);\n    // Change-less events don't store mappings (they are always the last event in a branch)\n    if (!event.changes)\n        return HistEvent.selection(selections);\n    let mappedChanges = event.changes.map(mapping), before = mapping.mapDesc(event.changes, true);\n    let fullMapping = event.mapped ? event.mapped.composeDesc(before) : before;\n    return new HistEvent(mappedChanges, StateEffect.mapEffects(event.effects, mapping), fullMapping, event.startSelection.map(before), selections);\n}\nconst joinableUserEvent = /^(input\\.type|delete)($|\\.)/;\nclass HistoryState {\n    constructor(done, undone, prevTime = 0, prevUserEvent = undefined) {\n        this.done = done;\n        this.undone = undone;\n        this.prevTime = prevTime;\n        this.prevUserEvent = prevUserEvent;\n    }\n    isolate() {\n        return this.prevTime ? new HistoryState(this.done, this.undone) : this;\n    }\n    addChanges(event, time, userEvent, config, tr) {\n        let done = this.done, lastEvent = done[done.length - 1];\n        if (lastEvent && lastEvent.changes && !lastEvent.changes.empty && event.changes &&\n            (!userEvent || joinableUserEvent.test(userEvent)) &&\n            ((!lastEvent.selectionsAfter.length &&\n                time - this.prevTime < config.newGroupDelay &&\n                config.joinToEvent(tr, isAdjacent(lastEvent.changes, event.changes))) ||\n                // For compose (but not compose.start) events, always join with previous event\n                userEvent == \"input.type.compose\")) {\n            done = updateBranch(done, done.length - 1, config.minDepth, new HistEvent(event.changes.compose(lastEvent.changes), conc(StateEffect.mapEffects(event.effects, lastEvent.changes), lastEvent.effects), lastEvent.mapped, lastEvent.startSelection, none));\n        }\n        else {\n            done = updateBranch(done, done.length, config.minDepth, event);\n        }\n        return new HistoryState(done, none, time, userEvent);\n    }\n    addSelection(selection, time, userEvent, newGroupDelay) {\n        let last = this.done.length ? this.done[this.done.length - 1].selectionsAfter : none;\n        if (last.length > 0 &&\n            time - this.prevTime < newGroupDelay &&\n            userEvent == this.prevUserEvent && userEvent && /^select($|\\.)/.test(userEvent) &&\n            eqSelectionShape(last[last.length - 1], selection))\n            return this;\n        return new HistoryState(addSelection(this.done, selection), this.undone, time, userEvent);\n    }\n    addMapping(mapping) {\n        return new HistoryState(addMappingToBranch(this.done, mapping), addMappingToBranch(this.undone, mapping), this.prevTime, this.prevUserEvent);\n    }\n    pop(side, state, onlySelection) {\n        let branch = side == 0 /* BranchName.Done */ ? this.done : this.undone;\n        if (branch.length == 0)\n            return null;\n        let event = branch[branch.length - 1], selection = event.selectionsAfter[0] || state.selection;\n        if (onlySelection && event.selectionsAfter.length) {\n            return state.update({\n                selection: event.selectionsAfter[event.selectionsAfter.length - 1],\n                annotations: fromHistory.of({ side, rest: popSelection(branch), selection }),\n                userEvent: side == 0 /* BranchName.Done */ ? \"select.undo\" : \"select.redo\",\n                scrollIntoView: true\n            });\n        }\n        else if (!event.changes) {\n            return null;\n        }\n        else {\n            let rest = branch.length == 1 ? none : branch.slice(0, branch.length - 1);\n            if (event.mapped)\n                rest = addMappingToBranch(rest, event.mapped);\n            return state.update({\n                changes: event.changes,\n                selection: event.startSelection,\n                effects: event.effects,\n                annotations: fromHistory.of({ side, rest, selection }),\n                filter: false,\n                userEvent: side == 0 /* BranchName.Done */ ? \"undo\" : \"redo\",\n                scrollIntoView: true\n            });\n        }\n    }\n}\nHistoryState.empty = /*@__PURE__*/new HistoryState(none, none);\n/**\nDefault key bindings for the undo history.\n\n- Mod-z: [`undo`](https://codemirror.net/6/docs/ref/#commands.undo).\n- Mod-y (Mod-Shift-z on macOS) + Ctrl-Shift-z on Linux: [`redo`](https://codemirror.net/6/docs/ref/#commands.redo).\n- Mod-u: [`undoSelection`](https://codemirror.net/6/docs/ref/#commands.undoSelection).\n- Alt-u (Mod-Shift-u on macOS): [`redoSelection`](https://codemirror.net/6/docs/ref/#commands.redoSelection).\n*/\nconst historyKeymap = [\n    { key: \"Mod-z\", run: undo, preventDefault: true },\n    { key: \"Mod-y\", mac: \"Mod-Shift-z\", run: redo, preventDefault: true },\n    { linux: \"Ctrl-Shift-z\", run: redo, preventDefault: true },\n    { key: \"Mod-u\", run: undoSelection, preventDefault: true },\n    { key: \"Alt-u\", mac: \"Mod-Shift-u\", run: redoSelection, preventDefault: true }\n];\n\nfunction updateSel(sel, by) {\n    return EditorSelection.create(sel.ranges.map(by), sel.mainIndex);\n}\nfunction setSel(state, selection) {\n    return state.update({ selection, scrollIntoView: true, userEvent: \"select\" });\n}\nfunction moveSel({ state, dispatch }, how) {\n    let selection = updateSel(state.selection, how);\n    if (selection.eq(state.selection, true))\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\nfunction rangeEnd(range, forward) {\n    return EditorSelection.cursor(forward ? range.to : range.from);\n}\nfunction cursorByChar(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByChar(range, forward) : rangeEnd(range, forward));\n}\nfunction ltrAtCursor(view) {\n    return view.textDirectionAt(view.state.selection.main.head) == Direction.LTR;\n}\n/**\nMove the selection one character to the left (which is backward in\nleft-to-right text, forward in right-to-left text).\n*/\nconst cursorCharLeft = view => cursorByChar(view, !ltrAtCursor(view));\n/**\nMove the selection one character to the right.\n*/\nconst cursorCharRight = view => cursorByChar(view, ltrAtCursor(view));\n/**\nMove the selection one character forward.\n*/\nconst cursorCharForward = view => cursorByChar(view, true);\n/**\nMove the selection one character backward.\n*/\nconst cursorCharBackward = view => cursorByChar(view, false);\nfunction byCharLogical(state, range, forward) {\n    let pos = range.head, line = state.doc.lineAt(pos);\n    if (pos == (forward ? line.to : line.from))\n        pos = forward ? Math.min(state.doc.length, line.to + 1) : Math.max(0, line.from - 1);\n    else\n        pos = line.from + findClusterBreak(line.text, pos - line.from, forward);\n    return EditorSelection.cursor(pos, forward ? -1 : 1);\n}\nfunction moveByCharLogical(target, forward) {\n    return moveSel(target, range => range.empty ? byCharLogical(target.state, range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection one character forward, in logical\n(non-text-direction-aware) string index order.\n*/\nconst cursorCharForwardLogical = target => moveByCharLogical(target, true);\n/**\nMove the selection one character backward, in logical string index\norder.\n*/\nconst cursorCharBackwardLogical = target => moveByCharLogical(target, false);\nfunction cursorByGroup(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByGroup(range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection to the left across one group of word or\nnon-word (but also non-space) characters.\n*/\nconst cursorGroupLeft = view => cursorByGroup(view, !ltrAtCursor(view));\n/**\nMove the selection one group to the right.\n*/\nconst cursorGroupRight = view => cursorByGroup(view, ltrAtCursor(view));\n/**\nMove the selection one group forward.\n*/\nconst cursorGroupForward = view => cursorByGroup(view, true);\n/**\nMove the selection one group backward.\n*/\nconst cursorGroupBackward = view => cursorByGroup(view, false);\nfunction toGroupStart(view, pos, start) {\n    let categorize = view.state.charCategorizer(pos);\n    let cat = categorize(start), initial = cat != CharCategory.Space;\n    return (next) => {\n        let nextCat = categorize(next);\n        if (nextCat != CharCategory.Space)\n            return initial && nextCat == cat;\n        initial = false;\n        return true;\n    };\n}\n/**\nMove the cursor one group forward in the default Windows style,\nwhere it moves to the start of the next group.\n*/\nconst cursorGroupForwardWin = view => {\n    return moveSel(view, range => range.empty\n        ? view.moveByChar(range, true, start => toGroupStart(view, range.head, start))\n        : rangeEnd(range, true));\n};\nconst segmenter = typeof Intl != \"undefined\" && Intl.Segmenter ?\n    /*@__PURE__*/new (Intl.Segmenter)(undefined, { granularity: \"word\" }) : null;\nfunction moveBySubword(view, range, forward) {\n    let categorize = view.state.charCategorizer(range.from);\n    let cat = CharCategory.Space, pos = range.from, steps = 0;\n    let done = false, sawUpper = false, sawLower = false;\n    let step = (next) => {\n        if (done)\n            return false;\n        pos += forward ? next.length : -next.length;\n        let nextCat = categorize(next), ahead;\n        if (nextCat == CharCategory.Word && next.charCodeAt(0) < 128 && /[\\W_]/.test(next))\n            nextCat = -1; // Treat word punctuation specially\n        if (cat == CharCategory.Space)\n            cat = nextCat;\n        if (cat != nextCat)\n            return false;\n        if (cat == CharCategory.Word) {\n            if (next.toLowerCase() == next) {\n                if (!forward && sawUpper)\n                    return false;\n                sawLower = true;\n            }\n            else if (sawLower) {\n                if (forward)\n                    return false;\n                done = true;\n            }\n            else {\n                if (sawUpper && forward && categorize(ahead = view.state.sliceDoc(pos, pos + 1)) == CharCategory.Word &&\n                    ahead.toLowerCase() == ahead)\n                    return false;\n                sawUpper = true;\n            }\n        }\n        steps++;\n        return true;\n    };\n    let end = view.moveByChar(range, forward, start => {\n        step(start);\n        return step;\n    });\n    if (segmenter && cat == CharCategory.Word && end.from == range.from + steps * (forward ? 1 : -1)) {\n        let from = Math.min(range.head, end.head), to = Math.max(range.head, end.head);\n        let skipped = view.state.sliceDoc(from, to);\n        if (skipped.length > 1 && /[\\u4E00-\\uffff]/.test(skipped)) {\n            let segments = Array.from(segmenter.segment(skipped));\n            if (segments.length > 1) {\n                if (forward)\n                    return EditorSelection.cursor(range.head + segments[1].index, -1);\n                return EditorSelection.cursor(end.head + segments[segments.length - 1].index, 1);\n            }\n        }\n    }\n    return end;\n}\nfunction cursorBySubword(view, forward) {\n    return moveSel(view, range => range.empty ? moveBySubword(view, range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection one group or camel-case subword forward.\n*/\nconst cursorSubwordForward = view => cursorBySubword(view, true);\n/**\nMove the selection one group or camel-case subword backward.\n*/\nconst cursorSubwordBackward = view => cursorBySubword(view, false);\nfunction interestingNode(state, node, bracketProp) {\n    if (node.type.prop(bracketProp))\n        return true;\n    let len = node.to - node.from;\n    return len && (len > 2 || /[^\\s,.;:]/.test(state.sliceDoc(node.from, node.to))) || node.firstChild;\n}\nfunction moveBySyntax(state, start, forward) {\n    let pos = syntaxTree(state).resolveInner(start.head);\n    let bracketProp = forward ? NodeProp.closedBy : NodeProp.openedBy;\n    // Scan forward through child nodes to see if there's an interesting\n    // node ahead.\n    for (let at = start.head;;) {\n        let next = forward ? pos.childAfter(at) : pos.childBefore(at);\n        if (!next)\n            break;\n        if (interestingNode(state, next, bracketProp))\n            pos = next;\n        else\n            at = forward ? next.to : next.from;\n    }\n    let bracket = pos.type.prop(bracketProp), match, newPos;\n    if (bracket && (match = forward ? matchBrackets(state, pos.from, 1) : matchBrackets(state, pos.to, -1)) && match.matched)\n        newPos = forward ? match.end.to : match.end.from;\n    else\n        newPos = forward ? pos.to : pos.from;\n    return EditorSelection.cursor(newPos, forward ? -1 : 1);\n}\n/**\nMove the cursor over the next syntactic element to the left.\n*/\nconst cursorSyntaxLeft = view => moveSel(view, range => moveBySyntax(view.state, range, !ltrAtCursor(view)));\n/**\nMove the cursor over the next syntactic element to the right.\n*/\nconst cursorSyntaxRight = view => moveSel(view, range => moveBySyntax(view.state, range, ltrAtCursor(view)));\nfunction cursorByLine(view, forward) {\n    return moveSel(view, range => {\n        if (!range.empty)\n            return rangeEnd(range, forward);\n        let moved = view.moveVertically(range, forward);\n        return moved.head != range.head ? moved : view.moveToLineBoundary(range, forward);\n    });\n}\n/**\nMove the selection one line up.\n*/\nconst cursorLineUp = view => cursorByLine(view, false);\n/**\nMove the selection one line down.\n*/\nconst cursorLineDown = view => cursorByLine(view, true);\nfunction pageInfo(view) {\n    let selfScroll = view.scrollDOM.clientHeight < view.scrollDOM.scrollHeight - 2;\n    let marginTop = 0, marginBottom = 0, height;\n    if (selfScroll) {\n        for (let source of view.state.facet(EditorView.scrollMargins)) {\n            let margins = source(view);\n            if (margins === null || margins === void 0 ? void 0 : margins.top)\n                marginTop = Math.max(margins === null || margins === void 0 ? void 0 : margins.top, marginTop);\n            if (margins === null || margins === void 0 ? void 0 : margins.bottom)\n                marginBottom = Math.max(margins === null || margins === void 0 ? void 0 : margins.bottom, marginBottom);\n        }\n        height = view.scrollDOM.clientHeight - marginTop - marginBottom;\n    }\n    else {\n        height = (view.dom.ownerDocument.defaultView || window).innerHeight;\n    }\n    return { marginTop, marginBottom, selfScroll,\n        height: Math.max(view.defaultLineHeight, height - 5) };\n}\nfunction cursorByPage(view, forward) {\n    let page = pageInfo(view);\n    let { state } = view, selection = updateSel(state.selection, range => {\n        return range.empty ? view.moveVertically(range, forward, page.height)\n            : rangeEnd(range, forward);\n    });\n    if (selection.eq(state.selection))\n        return false;\n    let effect;\n    if (page.selfScroll) {\n        let startPos = view.coordsAtPos(state.selection.main.head);\n        let scrollRect = view.scrollDOM.getBoundingClientRect();\n        let scrollTop = scrollRect.top + page.marginTop, scrollBottom = scrollRect.bottom - page.marginBottom;\n        if (startPos && startPos.top > scrollTop && startPos.bottom < scrollBottom)\n            effect = EditorView.scrollIntoView(selection.main.head, { y: \"start\", yMargin: startPos.top - scrollTop });\n    }\n    view.dispatch(setSel(state, selection), { effects: effect });\n    return true;\n}\n/**\nMove the selection one page up.\n*/\nconst cursorPageUp = view => cursorByPage(view, false);\n/**\nMove the selection one page down.\n*/\nconst cursorPageDown = view => cursorByPage(view, true);\nfunction moveByLineBoundary(view, start, forward) {\n    let line = view.lineBlockAt(start.head), moved = view.moveToLineBoundary(start, forward);\n    if (moved.head == start.head && moved.head != (forward ? line.to : line.from))\n        moved = view.moveToLineBoundary(start, forward, false);\n    if (!forward && moved.head == line.from && line.length) {\n        let space = /^\\s*/.exec(view.state.sliceDoc(line.from, Math.min(line.from + 100, line.to)))[0].length;\n        if (space && start.head != line.from + space)\n            moved = EditorSelection.cursor(line.from + space);\n    }\n    return moved;\n}\n/**\nMove the selection to the next line wrap point, or to the end of\nthe line if there isn't one left on this line.\n*/\nconst cursorLineBoundaryForward = view => moveSel(view, range => moveByLineBoundary(view, range, true));\n/**\nMove the selection to previous line wrap point, or failing that to\nthe start of the line. If the line is indented, and the cursor\nisn't already at the end of the indentation, this will move to the\nend of the indentation instead of the start of the line.\n*/\nconst cursorLineBoundaryBackward = view => moveSel(view, range => moveByLineBoundary(view, range, false));\n/**\nMove the selection one line wrap point to the left.\n*/\nconst cursorLineBoundaryLeft = view => moveSel(view, range => moveByLineBoundary(view, range, !ltrAtCursor(view)));\n/**\nMove the selection one line wrap point to the right.\n*/\nconst cursorLineBoundaryRight = view => moveSel(view, range => moveByLineBoundary(view, range, ltrAtCursor(view)));\n/**\nMove the selection to the start of the line.\n*/\nconst cursorLineStart = view => moveSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).from, 1));\n/**\nMove the selection to the end of the line.\n*/\nconst cursorLineEnd = view => moveSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).to, -1));\nfunction toMatchingBracket(state, dispatch, extend) {\n    let found = false, selection = updateSel(state.selection, range => {\n        let matching = matchBrackets(state, range.head, -1)\n            || matchBrackets(state, range.head, 1)\n            || (range.head > 0 && matchBrackets(state, range.head - 1, 1))\n            || (range.head < state.doc.length && matchBrackets(state, range.head + 1, -1));\n        if (!matching || !matching.end)\n            return range;\n        found = true;\n        let head = matching.start.from == range.head ? matching.end.to : matching.end.from;\n        return extend ? EditorSelection.range(range.anchor, head) : EditorSelection.cursor(head);\n    });\n    if (!found)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\n/**\nMove the selection to the bracket matching the one it is currently\non, if any.\n*/\nconst cursorMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, false);\n/**\nExtend the selection to the bracket matching the one the selection\nhead is currently on, if any.\n*/\nconst selectMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, true);\nfunction extendSel(target, how) {\n    let selection = updateSel(target.state.selection, range => {\n        let head = how(range);\n        return EditorSelection.range(range.anchor, head.head, head.goalColumn, head.bidiLevel || undefined);\n    });\n    if (selection.eq(target.state.selection))\n        return false;\n    target.dispatch(setSel(target.state, selection));\n    return true;\n}\nfunction selectByChar(view, forward) {\n    return extendSel(view, range => view.moveByChar(range, forward));\n}\n/**\nMove the selection head one character to the left, while leaving\nthe anchor in place.\n*/\nconst selectCharLeft = view => selectByChar(view, !ltrAtCursor(view));\n/**\nMove the selection head one character to the right.\n*/\nconst selectCharRight = view => selectByChar(view, ltrAtCursor(view));\n/**\nMove the selection head one character forward.\n*/\nconst selectCharForward = view => selectByChar(view, true);\n/**\nMove the selection head one character backward.\n*/\nconst selectCharBackward = view => selectByChar(view, false);\n/**\nMove the selection head one character forward by logical\n(non-direction aware) string index order.\n*/\nconst selectCharForwardLogical = target => extendSel(target, range => byCharLogical(target.state, range, true));\n/**\nMove the selection head one character backward by logical string\nindex order.\n*/\nconst selectCharBackwardLogical = target => extendSel(target, range => byCharLogical(target.state, range, false));\nfunction selectByGroup(view, forward) {\n    return extendSel(view, range => view.moveByGroup(range, forward));\n}\n/**\nMove the selection head one [group](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) to\nthe left.\n*/\nconst selectGroupLeft = view => selectByGroup(view, !ltrAtCursor(view));\n/**\nMove the selection head one group to the right.\n*/\nconst selectGroupRight = view => selectByGroup(view, ltrAtCursor(view));\n/**\nMove the selection head one group forward.\n*/\nconst selectGroupForward = view => selectByGroup(view, true);\n/**\nMove the selection head one group backward.\n*/\nconst selectGroupBackward = view => selectByGroup(view, false);\n/**\nMove the selection head one group forward in the default Windows\nstyle, skipping to the start of the next group.\n*/\nconst selectGroupForwardWin = view => {\n    return extendSel(view, range => view.moveByChar(range, true, start => toGroupStart(view, range.head, start)));\n};\nfunction selectBySubword(view, forward) {\n    return extendSel(view, range => moveBySubword(view, range, forward));\n}\n/**\nMove the selection head one group or camel-case subword forward.\n*/\nconst selectSubwordForward = view => selectBySubword(view, true);\n/**\nMove the selection head one group or subword backward.\n*/\nconst selectSubwordBackward = view => selectBySubword(view, false);\n/**\nMove the selection head over the next syntactic element to the left.\n*/\nconst selectSyntaxLeft = view => extendSel(view, range => moveBySyntax(view.state, range, !ltrAtCursor(view)));\n/**\nMove the selection head over the next syntactic element to the right.\n*/\nconst selectSyntaxRight = view => extendSel(view, range => moveBySyntax(view.state, range, ltrAtCursor(view)));\nfunction selectByLine(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward));\n}\n/**\nMove the selection head one line up.\n*/\nconst selectLineUp = view => selectByLine(view, false);\n/**\nMove the selection head one line down.\n*/\nconst selectLineDown = view => selectByLine(view, true);\nfunction selectByPage(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward, pageInfo(view).height));\n}\n/**\nMove the selection head one page up.\n*/\nconst selectPageUp = view => selectByPage(view, false);\n/**\nMove the selection head one page down.\n*/\nconst selectPageDown = view => selectByPage(view, true);\n/**\nMove the selection head to the next line boundary.\n*/\nconst selectLineBoundaryForward = view => extendSel(view, range => moveByLineBoundary(view, range, true));\n/**\nMove the selection head to the previous line boundary.\n*/\nconst selectLineBoundaryBackward = view => extendSel(view, range => moveByLineBoundary(view, range, false));\n/**\nMove the selection head one line boundary to the left.\n*/\nconst selectLineBoundaryLeft = view => extendSel(view, range => moveByLineBoundary(view, range, !ltrAtCursor(view)));\n/**\nMove the selection head one line boundary to the right.\n*/\nconst selectLineBoundaryRight = view => extendSel(view, range => moveByLineBoundary(view, range, ltrAtCursor(view)));\n/**\nMove the selection head to the start of the line.\n*/\nconst selectLineStart = view => extendSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).from));\n/**\nMove the selection head to the end of the line.\n*/\nconst selectLineEnd = view => extendSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).to));\n/**\nMove the selection to the start of the document.\n*/\nconst cursorDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: 0 }));\n    return true;\n};\n/**\nMove the selection to the end of the document.\n*/\nconst cursorDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.doc.length }));\n    return true;\n};\n/**\nMove the selection head to the start of the document.\n*/\nconst selectDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.main.anchor, head: 0 }));\n    return true;\n};\n/**\nMove the selection head to the end of the document.\n*/\nconst selectDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.main.anchor, head: state.doc.length }));\n    return true;\n};\n/**\nSelect the entire document.\n*/\nconst selectAll = ({ state, dispatch }) => {\n    dispatch(state.update({ selection: { anchor: 0, head: state.doc.length }, userEvent: \"select\" }));\n    return true;\n};\n/**\nExpand the selection to cover entire lines.\n*/\nconst selectLine = ({ state, dispatch }) => {\n    let ranges = selectedLineBlocks(state).map(({ from, to }) => EditorSelection.range(from, Math.min(to + 1, state.doc.length)));\n    dispatch(state.update({ selection: EditorSelection.create(ranges), userEvent: \"select\" }));\n    return true;\n};\n/**\nSelect the next syntactic construct that is larger than the\nselection. Note that this will only work insofar as the language\n[provider](https://codemirror.net/6/docs/ref/#language.language) you use builds up a full\nsyntax tree.\n*/\nconst selectParentSyntax = ({ state, dispatch }) => {\n    let selection = updateSel(state.selection, range => {\n        let tree = syntaxTree(state), stack = tree.resolveStack(range.from, 1);\n        if (range.empty) {\n            let stackBefore = tree.resolveStack(range.from, -1);\n            if (stackBefore.node.from >= stack.node.from && stackBefore.node.to <= stack.node.to)\n                stack = stackBefore;\n        }\n        for (let cur = stack; cur; cur = cur.next) {\n            let { node } = cur;\n            if (((node.from < range.from && node.to >= range.to) ||\n                (node.to > range.to && node.from <= range.from)) &&\n                cur.next)\n                return EditorSelection.range(node.to, node.from);\n        }\n        return range;\n    });\n    if (selection.eq(state.selection))\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n};\n/**\nSimplify the current selection. When multiple ranges are selected,\nreduce it to its main range. Otherwise, if the selection is\nnon-empty, convert it to a cursor selection.\n*/\nconst simplifySelection = ({ state, dispatch }) => {\n    let cur = state.selection, selection = null;\n    if (cur.ranges.length > 1)\n        selection = EditorSelection.create([cur.main]);\n    else if (!cur.main.empty)\n        selection = EditorSelection.create([EditorSelection.cursor(cur.main.head)]);\n    if (!selection)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n};\nfunction deleteBy(target, by) {\n    if (target.state.readOnly)\n        return false;\n    let event = \"delete.selection\", { state } = target;\n    let changes = state.changeByRange(range => {\n        let { from, to } = range;\n        if (from == to) {\n            let towards = by(range);\n            if (towards < from) {\n                event = \"delete.backward\";\n                towards = skipAtomic(target, towards, false);\n            }\n            else if (towards > from) {\n                event = \"delete.forward\";\n                towards = skipAtomic(target, towards, true);\n            }\n            from = Math.min(from, towards);\n            to = Math.max(to, towards);\n        }\n        else {\n            from = skipAtomic(target, from, false);\n            to = skipAtomic(target, to, true);\n        }\n        return from == to ? { range } : { changes: { from, to }, range: EditorSelection.cursor(from, from < range.head ? -1 : 1) };\n    });\n    if (changes.changes.empty)\n        return false;\n    target.dispatch(state.update(changes, {\n        scrollIntoView: true,\n        userEvent: event,\n        effects: event == \"delete.selection\" ? EditorView.announce.of(state.phrase(\"Selection deleted\")) : undefined\n    }));\n    return true;\n}\nfunction skipAtomic(target, pos, forward) {\n    if (target instanceof EditorView)\n        for (let ranges of target.state.facet(EditorView.atomicRanges).map(f => f(target)))\n            ranges.between(pos, pos, (from, to) => {\n                if (from < pos && to > pos)\n                    pos = forward ? to : from;\n            });\n    return pos;\n}\nconst deleteByChar = (target, forward, byIndentUnit) => deleteBy(target, range => {\n    let pos = range.from, { state } = target, line = state.doc.lineAt(pos), before, targetPos;\n    if (byIndentUnit && !forward && pos > line.from && pos < line.from + 200 &&\n        !/[^ \\t]/.test(before = line.text.slice(0, pos - line.from))) {\n        if (before[before.length - 1] == \"\\t\")\n            return pos - 1;\n        let col = countColumn(before, state.tabSize), drop = col % getIndentUnit(state) || getIndentUnit(state);\n        for (let i = 0; i < drop && before[before.length - 1 - i] == \" \"; i++)\n            pos--;\n        targetPos = pos;\n    }\n    else {\n        targetPos = findClusterBreak(line.text, pos - line.from, forward, forward) + line.from;\n        if (targetPos == pos && line.number != (forward ? state.doc.lines : 1))\n            targetPos += forward ? 1 : -1;\n        else if (!forward && /[\\ufe00-\\ufe0f]/.test(line.text.slice(targetPos - line.from, pos - line.from)))\n            targetPos = findClusterBreak(line.text, targetPos - line.from, false, false) + line.from;\n    }\n    return targetPos;\n});\n/**\nDelete the selection, or, for cursor selections, the character or\nindentation unit before the cursor.\n*/\nconst deleteCharBackward = view => deleteByChar(view, false, true);\n/**\nDelete the selection or the character before the cursor. Does not\nimplement any extended behavior like deleting whole indentation\nunits in one go.\n*/\nconst deleteCharBackwardStrict = view => deleteByChar(view, false, false);\n/**\nDelete the selection or the character after the cursor.\n*/\nconst deleteCharForward = view => deleteByChar(view, true, false);\nconst deleteByGroup = (target, forward) => deleteBy(target, range => {\n    let pos = range.head, { state } = target, line = state.doc.lineAt(pos);\n    let categorize = state.charCategorizer(pos);\n    for (let cat = null;;) {\n        if (pos == (forward ? line.to : line.from)) {\n            if (pos == range.head && line.number != (forward ? state.doc.lines : 1))\n                pos += forward ? 1 : -1;\n            break;\n        }\n        let next = findClusterBreak(line.text, pos - line.from, forward) + line.from;\n        let nextChar = line.text.slice(Math.min(pos, next) - line.from, Math.max(pos, next) - line.from);\n        let nextCat = categorize(nextChar);\n        if (cat != null && nextCat != cat)\n            break;\n        if (nextChar != \" \" || pos != range.head)\n            cat = nextCat;\n        pos = next;\n    }\n    return pos;\n});\n/**\nDelete the selection or backward until the end of the next\n[group](https://codemirror.net/6/docs/ref/#view.EditorView.moveByGroup), only skipping groups of\nwhitespace when they consist of a single space.\n*/\nconst deleteGroupBackward = target => deleteByGroup(target, false);\n/**\nDelete the selection or forward until the end of the next group.\n*/\nconst deleteGroupForward = target => deleteByGroup(target, true);\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe end of the line. If the cursor is directly at the end of the\nline, delete the line break after it.\n*/\nconst deleteToLineEnd = view => deleteBy(view, range => {\n    let lineEnd = view.lineBlockAt(range.head).to;\n    return range.head < lineEnd ? lineEnd : Math.min(view.state.doc.length, range.head + 1);\n});\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe start of the line. If the cursor is directly at the start of the\nline, delete the line break before it.\n*/\nconst deleteToLineStart = view => deleteBy(view, range => {\n    let lineStart = view.lineBlockAt(range.head).from;\n    return range.head > lineStart ? lineStart : Math.max(0, range.head - 1);\n});\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe start of the line or the next line wrap before the cursor.\n*/\nconst deleteLineBoundaryBackward = view => deleteBy(view, range => {\n    let lineStart = view.moveToLineBoundary(range, false).head;\n    return range.head > lineStart ? lineStart : Math.max(0, range.head - 1);\n});\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe end of the line or the next line wrap after the cursor.\n*/\nconst deleteLineBoundaryForward = view => deleteBy(view, range => {\n    let lineStart = view.moveToLineBoundary(range, true).head;\n    return range.head < lineStart ? lineStart : Math.min(view.state.doc.length, range.head + 1);\n});\n/**\nDelete all whitespace directly before a line end from the\ndocument.\n*/\nconst deleteTrailingWhitespace = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = [];\n    for (let pos = 0, prev = \"\", iter = state.doc.iter();;) {\n        iter.next();\n        if (iter.lineBreak || iter.done) {\n            let trailing = prev.search(/\\s+$/);\n            if (trailing > -1)\n                changes.push({ from: pos - (prev.length - trailing), to: pos });\n            if (iter.done)\n                break;\n            prev = \"\";\n        }\n        else {\n            prev = iter.value;\n        }\n        pos += iter.value.length;\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({ changes, userEvent: \"delete\" }));\n    return true;\n};\n/**\nReplace each selection range with a line break, leaving the cursor\non the line before the break.\n*/\nconst splitLine = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = state.changeByRange(range => {\n        return { changes: { from: range.from, to: range.to, insert: Text.of([\"\", \"\"]) },\n            range: EditorSelection.cursor(range.from) };\n    });\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nFlip the characters before and after the cursor(s).\n*/\nconst transposeChars = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = state.changeByRange(range => {\n        if (!range.empty || range.from == 0 || range.from == state.doc.length)\n            return { range };\n        let pos = range.from, line = state.doc.lineAt(pos);\n        let from = pos == line.from ? pos - 1 : findClusterBreak(line.text, pos - line.from, false) + line.from;\n        let to = pos == line.to ? pos + 1 : findClusterBreak(line.text, pos - line.from, true) + line.from;\n        return { changes: { from, to, insert: state.doc.slice(pos, to).append(state.doc.slice(from, pos)) },\n            range: EditorSelection.cursor(to) };\n    });\n    if (changes.changes.empty)\n        return false;\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"move.character\" }));\n    return true;\n};\nfunction selectedLineBlocks(state) {\n    let blocks = [], upto = -1;\n    for (let range of state.selection.ranges) {\n        let startLine = state.doc.lineAt(range.from), endLine = state.doc.lineAt(range.to);\n        if (!range.empty && range.to == endLine.from)\n            endLine = state.doc.lineAt(range.to - 1);\n        if (upto >= startLine.number) {\n            let prev = blocks[blocks.length - 1];\n            prev.to = endLine.to;\n            prev.ranges.push(range);\n        }\n        else {\n            blocks.push({ from: startLine.from, to: endLine.to, ranges: [range] });\n        }\n        upto = endLine.number + 1;\n    }\n    return blocks;\n}\nfunction moveLine(state, dispatch, forward) {\n    if (state.readOnly)\n        return false;\n    let changes = [], ranges = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward ? block.to == state.doc.length : block.from == 0)\n            continue;\n        let nextLine = state.doc.lineAt(forward ? block.to + 1 : block.from - 1);\n        let size = nextLine.length + 1;\n        if (forward) {\n            changes.push({ from: block.to, to: nextLine.to }, { from: block.from, insert: nextLine.text + state.lineBreak });\n            for (let r of block.ranges)\n                ranges.push(EditorSelection.range(Math.min(state.doc.length, r.anchor + size), Math.min(state.doc.length, r.head + size)));\n        }\n        else {\n            changes.push({ from: nextLine.from, to: block.from }, { from: block.to, insert: state.lineBreak + nextLine.text });\n            for (let r of block.ranges)\n                ranges.push(EditorSelection.range(r.anchor - size, r.head - size));\n        }\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({\n        changes,\n        scrollIntoView: true,\n        selection: EditorSelection.create(ranges, state.selection.mainIndex),\n        userEvent: \"move.line\"\n    }));\n    return true;\n}\n/**\nMove the selected lines up one line.\n*/\nconst moveLineUp = ({ state, dispatch }) => moveLine(state, dispatch, false);\n/**\nMove the selected lines down one line.\n*/\nconst moveLineDown = ({ state, dispatch }) => moveLine(state, dispatch, true);\nfunction copyLine(state, dispatch, forward) {\n    if (state.readOnly)\n        return false;\n    let changes = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward)\n            changes.push({ from: block.from, insert: state.doc.slice(block.from, block.to) + state.lineBreak });\n        else\n            changes.push({ from: block.to, insert: state.lineBreak + state.doc.slice(block.from, block.to) });\n    }\n    dispatch(state.update({ changes, scrollIntoView: true, userEvent: \"input.copyline\" }));\n    return true;\n}\n/**\nCreate a copy of the selected lines. Keep the selection in the top copy.\n*/\nconst copyLineUp = ({ state, dispatch }) => copyLine(state, dispatch, false);\n/**\nCreate a copy of the selected lines. Keep the selection in the bottom copy.\n*/\nconst copyLineDown = ({ state, dispatch }) => copyLine(state, dispatch, true);\n/**\nDelete selected lines.\n*/\nconst deleteLine = view => {\n    if (view.state.readOnly)\n        return false;\n    let { state } = view, changes = state.changes(selectedLineBlocks(state).map(({ from, to }) => {\n        if (from > 0)\n            from--;\n        else if (to < state.doc.length)\n            to++;\n        return { from, to };\n    }));\n    let selection = updateSel(state.selection, range => {\n        let dist = undefined;\n        if (view.lineWrapping) {\n            let block = view.lineBlockAt(range.head), pos = view.coordsAtPos(range.head, range.assoc || 1);\n            if (pos)\n                dist = (block.bottom + view.documentTop) - pos.bottom + view.defaultLineHeight / 2;\n        }\n        return view.moveVertically(range, true, dist);\n    }).map(changes);\n    view.dispatch({ changes, selection, scrollIntoView: true, userEvent: \"delete.line\" });\n    return true;\n};\n/**\nReplace the selection with a newline.\n*/\nconst insertNewline = ({ state, dispatch }) => {\n    dispatch(state.update(state.replaceSelection(state.lineBreak), { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nReplace the selection with a newline and the same amount of\nindentation as the line above.\n*/\nconst insertNewlineKeepIndent = ({ state, dispatch }) => {\n    dispatch(state.update(state.changeByRange(range => {\n        let indent = /^\\s*/.exec(state.doc.lineAt(range.from).text)[0];\n        return {\n            changes: { from: range.from, to: range.to, insert: state.lineBreak + indent },\n            range: EditorSelection.cursor(range.from + indent.length + 1)\n        };\n    }), { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\nfunction isBetweenBrackets(state, pos) {\n    if (/\\(\\)|\\[\\]|\\{\\}/.test(state.sliceDoc(pos - 1, pos + 1)))\n        return { from: pos, to: pos };\n    let context = syntaxTree(state).resolveInner(pos);\n    let before = context.childBefore(pos), after = context.childAfter(pos), closedBy;\n    if (before && after && before.to <= pos && after.from >= pos &&\n        (closedBy = before.type.prop(NodeProp.closedBy)) && closedBy.indexOf(after.name) > -1 &&\n        state.doc.lineAt(before.to).from == state.doc.lineAt(after.from).from &&\n        !/\\S/.test(state.sliceDoc(before.to, after.from)))\n        return { from: before.to, to: after.from };\n    return null;\n}\n/**\nReplace the selection with a newline and indent the newly created\nline(s). If the current line consists only of whitespace, this\nwill also delete that whitespace. When the cursor is between\nmatching brackets, an additional newline will be inserted after\nthe cursor.\n*/\nconst insertNewlineAndIndent = /*@__PURE__*/newlineAndIndent(false);\n/**\nCreate a blank, indented line below the current line.\n*/\nconst insertBlankLine = /*@__PURE__*/newlineAndIndent(true);\nfunction newlineAndIndent(atEof) {\n    return ({ state, dispatch }) => {\n        if (state.readOnly)\n            return false;\n        let changes = state.changeByRange(range => {\n            let { from, to } = range, line = state.doc.lineAt(from);\n            let explode = !atEof && from == to && isBetweenBrackets(state, from);\n            if (atEof)\n                from = to = (to <= line.to ? line : state.doc.lineAt(to)).to;\n            let cx = new IndentContext(state, { simulateBreak: from, simulateDoubleBreak: !!explode });\n            let indent = getIndentation(cx, from);\n            if (indent == null)\n                indent = countColumn(/^\\s*/.exec(state.doc.lineAt(from).text)[0], state.tabSize);\n            while (to < line.to && /\\s/.test(line.text[to - line.from]))\n                to++;\n            if (explode)\n                ({ from, to } = explode);\n            else if (from > line.from && from < line.from + 100 && !/\\S/.test(line.text.slice(0, from)))\n                from = line.from;\n            let insert = [\"\", indentString(state, indent)];\n            if (explode)\n                insert.push(indentString(state, cx.lineIndent(line.from, -1)));\n            return { changes: { from, to, insert: Text.of(insert) },\n                range: EditorSelection.cursor(from + 1 + insert[1].length) };\n        });\n        dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"input\" }));\n        return true;\n    };\n}\nfunction changeBySelectedLine(state, f) {\n    let atLine = -1;\n    return state.changeByRange(range => {\n        let changes = [];\n        for (let pos = range.from; pos <= range.to;) {\n            let line = state.doc.lineAt(pos);\n            if (line.number > atLine && (range.empty || range.to > line.from)) {\n                f(line, changes, range);\n                atLine = line.number;\n            }\n            pos = line.to + 1;\n        }\n        let changeSet = state.changes(changes);\n        return { changes,\n            range: EditorSelection.range(changeSet.mapPos(range.anchor, 1), changeSet.mapPos(range.head, 1)) };\n    });\n}\n/**\nAuto-indent the selected lines. This uses the [indentation service\nfacet](https://codemirror.net/6/docs/ref/#language.indentService) as source for auto-indent\ninformation.\n*/\nconst indentSelection = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let updated = Object.create(null);\n    let context = new IndentContext(state, { overrideIndentation: start => {\n            let found = updated[start];\n            return found == null ? -1 : found;\n        } });\n    let changes = changeBySelectedLine(state, (line, changes, range) => {\n        let indent = getIndentation(context, line.from);\n        if (indent == null)\n            return;\n        if (!/\\S/.test(line.text))\n            indent = 0;\n        let cur = /^\\s*/.exec(line.text)[0];\n        let norm = indentString(state, indent);\n        if (cur != norm || range.from < line.from + cur.length) {\n            updated[line.from] = indent;\n            changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n    });\n    if (!changes.changes.empty)\n        dispatch(state.update(changes, { userEvent: \"indent\" }));\n    return true;\n};\n/**\nAdd a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation to all selected\nlines.\n*/\nconst indentMore = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        changes.push({ from: line.from, insert: state.facet(indentUnit) });\n    }), { userEvent: \"input.indent\" }));\n    return true;\n};\n/**\nRemove a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation from all\nselected lines.\n*/\nconst indentLess = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        let space = /^\\s*/.exec(line.text)[0];\n        if (!space)\n            return;\n        let col = countColumn(space, state.tabSize), keep = 0;\n        let insert = indentString(state, Math.max(0, col - getIndentUnit(state)));\n        while (keep < space.length && keep < insert.length && space.charCodeAt(keep) == insert.charCodeAt(keep))\n            keep++;\n        changes.push({ from: line.from + keep, to: line.from + space.length, insert: insert.slice(keep) });\n    }), { userEvent: \"delete.dedent\" }));\n    return true;\n};\n/**\nEnables or disables\n[tab-focus mode](https://codemirror.net/6/docs/ref/#view.EditorView.setTabFocusMode). While on, this\nprevents the editor's key bindings from capturing Tab or\nShift-Tab, making it possible for the user to move focus out of\nthe editor with the keyboard.\n*/\nconst toggleTabFocusMode = view => {\n    view.setTabFocusMode();\n    return true;\n};\n/**\nTemporarily enables [tab-focus\nmode](https://codemirror.net/6/docs/ref/#view.EditorView.setTabFocusMode) for two seconds or until\nanother key is pressed.\n*/\nconst temporarilySetTabFocusMode = view => {\n    view.setTabFocusMode(2000);\n    return true;\n};\n/**\nInsert a tab character at the cursor or, if something is selected,\nuse [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore) to indent the entire\nselection.\n*/\nconst insertTab = ({ state, dispatch }) => {\n    if (state.selection.ranges.some(r => !r.empty))\n        return indentMore({ state, dispatch });\n    dispatch(state.update(state.replaceSelection(\"\\t\"), { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nArray of key bindings containing the Emacs-style bindings that are\navailable on macOS by default.\n\n - Ctrl-b: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)\n - Ctrl-f: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)\n - Ctrl-p: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)\n - Ctrl-n: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)\n - Ctrl-a: [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)\n - Ctrl-e: [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)\n - Ctrl-d: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)\n - Ctrl-h: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)\n - Ctrl-k: [`deleteToLineEnd`](https://codemirror.net/6/docs/ref/#commands.deleteToLineEnd)\n - Ctrl-Alt-h: [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)\n - Ctrl-o: [`splitLine`](https://codemirror.net/6/docs/ref/#commands.splitLine)\n - Ctrl-t: [`transposeChars`](https://codemirror.net/6/docs/ref/#commands.transposeChars)\n - Ctrl-v: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown)\n - Alt-v: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp)\n*/\nconst emacsStyleKeymap = [\n    { key: \"Ctrl-b\", run: cursorCharLeft, shift: selectCharLeft, preventDefault: true },\n    { key: \"Ctrl-f\", run: cursorCharRight, shift: selectCharRight },\n    { key: \"Ctrl-p\", run: cursorLineUp, shift: selectLineUp },\n    { key: \"Ctrl-n\", run: cursorLineDown, shift: selectLineDown },\n    { key: \"Ctrl-a\", run: cursorLineStart, shift: selectLineStart },\n    { key: \"Ctrl-e\", run: cursorLineEnd, shift: selectLineEnd },\n    { key: \"Ctrl-d\", run: deleteCharForward },\n    { key: \"Ctrl-h\", run: deleteCharBackward },\n    { key: \"Ctrl-k\", run: deleteToLineEnd },\n    { key: \"Ctrl-Alt-h\", run: deleteGroupBackward },\n    { key: \"Ctrl-o\", run: splitLine },\n    { key: \"Ctrl-t\", run: transposeChars },\n    { key: \"Ctrl-v\", run: cursorPageDown },\n];\n/**\nAn array of key bindings closely sticking to platform-standard or\nwidely used bindings. (This includes the bindings from\n[`emacsStyleKeymap`](https://codemirror.net/6/docs/ref/#commands.emacsStyleKeymap), with their `key`\nproperty changed to `mac`.)\n\n - ArrowLeft: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)\n - ArrowRight: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)\n - Ctrl-ArrowLeft (Alt-ArrowLeft on macOS): [`cursorGroupLeft`](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) ([`selectGroupLeft`](https://codemirror.net/6/docs/ref/#commands.selectGroupLeft) with Shift)\n - Ctrl-ArrowRight (Alt-ArrowRight on macOS): [`cursorGroupRight`](https://codemirror.net/6/docs/ref/#commands.cursorGroupRight) ([`selectGroupRight`](https://codemirror.net/6/docs/ref/#commands.selectGroupRight) with Shift)\n - Cmd-ArrowLeft (on macOS): [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)\n - Cmd-ArrowRight (on macOS): [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)\n - ArrowUp: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)\n - ArrowDown: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)\n - Cmd-ArrowUp (on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)\n - Cmd-ArrowDown (on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)\n - Ctrl-ArrowUp (on macOS): [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)\n - Ctrl-ArrowDown (on macOS): [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)\n - PageUp: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)\n - PageDown: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)\n - Home: [`cursorLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryBackward) ([`selectLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryBackward) with Shift)\n - End: [`cursorLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryForward) ([`selectLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryForward) with Shift)\n - Ctrl-Home (Cmd-Home on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)\n - Ctrl-End (Cmd-Home on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)\n - Enter and Shift-Enter: [`insertNewlineAndIndent`](https://codemirror.net/6/docs/ref/#commands.insertNewlineAndIndent)\n - Ctrl-a (Cmd-a on macOS): [`selectAll`](https://codemirror.net/6/docs/ref/#commands.selectAll)\n - Backspace: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)\n - Delete: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)\n - Ctrl-Backspace (Alt-Backspace on macOS): [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)\n - Ctrl-Delete (Alt-Delete on macOS): [`deleteGroupForward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupForward)\n - Cmd-Backspace (macOS): [`deleteLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.deleteLineBoundaryBackward).\n - Cmd-Delete (macOS): [`deleteLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.deleteLineBoundaryForward).\n*/\nconst standardKeymap = /*@__PURE__*/[\n    { key: \"ArrowLeft\", run: cursorCharLeft, shift: selectCharLeft, preventDefault: true },\n    { key: \"Mod-ArrowLeft\", mac: \"Alt-ArrowLeft\", run: cursorGroupLeft, shift: selectGroupLeft, preventDefault: true },\n    { mac: \"Cmd-ArrowLeft\", run: cursorLineBoundaryLeft, shift: selectLineBoundaryLeft, preventDefault: true },\n    { key: \"ArrowRight\", run: cursorCharRight, shift: selectCharRight, preventDefault: true },\n    { key: \"Mod-ArrowRight\", mac: \"Alt-ArrowRight\", run: cursorGroupRight, shift: selectGroupRight, preventDefault: true },\n    { mac: \"Cmd-ArrowRight\", run: cursorLineBoundaryRight, shift: selectLineBoundaryRight, preventDefault: true },\n    { key: \"ArrowUp\", run: cursorLineUp, shift: selectLineUp, preventDefault: true },\n    { mac: \"Cmd-ArrowUp\", run: cursorDocStart, shift: selectDocStart },\n    { mac: \"Ctrl-ArrowUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"ArrowDown\", run: cursorLineDown, shift: selectLineDown, preventDefault: true },\n    { mac: \"Cmd-ArrowDown\", run: cursorDocEnd, shift: selectDocEnd },\n    { mac: \"Ctrl-ArrowDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"PageUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"PageDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"Home\", run: cursorLineBoundaryBackward, shift: selectLineBoundaryBackward, preventDefault: true },\n    { key: \"Mod-Home\", run: cursorDocStart, shift: selectDocStart },\n    { key: \"End\", run: cursorLineBoundaryForward, shift: selectLineBoundaryForward, preventDefault: true },\n    { key: \"Mod-End\", run: cursorDocEnd, shift: selectDocEnd },\n    { key: \"Enter\", run: insertNewlineAndIndent, shift: insertNewlineAndIndent },\n    { key: \"Mod-a\", run: selectAll },\n    { key: \"Backspace\", run: deleteCharBackward, shift: deleteCharBackward },\n    { key: \"Delete\", run: deleteCharForward },\n    { key: \"Mod-Backspace\", mac: \"Alt-Backspace\", run: deleteGroupBackward },\n    { key: \"Mod-Delete\", mac: \"Alt-Delete\", run: deleteGroupForward },\n    { mac: \"Mod-Backspace\", run: deleteLineBoundaryBackward },\n    { mac: \"Mod-Delete\", run: deleteLineBoundaryForward }\n].concat(/*@__PURE__*/emacsStyleKeymap.map(b => ({ mac: b.key, run: b.run, shift: b.shift })));\n/**\nThe default keymap. Includes all bindings from\n[`standardKeymap`](https://codemirror.net/6/docs/ref/#commands.standardKeymap) plus the following:\n\n- Alt-ArrowLeft (Ctrl-ArrowLeft on macOS): [`cursorSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxLeft) ([`selectSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxLeft) with Shift)\n- Alt-ArrowRight (Ctrl-ArrowRight on macOS): [`cursorSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxRight) ([`selectSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxRight) with Shift)\n- Alt-ArrowUp: [`moveLineUp`](https://codemirror.net/6/docs/ref/#commands.moveLineUp)\n- Alt-ArrowDown: [`moveLineDown`](https://codemirror.net/6/docs/ref/#commands.moveLineDown)\n- Shift-Alt-ArrowUp: [`copyLineUp`](https://codemirror.net/6/docs/ref/#commands.copyLineUp)\n- Shift-Alt-ArrowDown: [`copyLineDown`](https://codemirror.net/6/docs/ref/#commands.copyLineDown)\n- Escape: [`simplifySelection`](https://codemirror.net/6/docs/ref/#commands.simplifySelection)\n- Ctrl-Enter (Cmd-Enter on macOS): [`insertBlankLine`](https://codemirror.net/6/docs/ref/#commands.insertBlankLine)\n- Alt-l (Ctrl-l on macOS): [`selectLine`](https://codemirror.net/6/docs/ref/#commands.selectLine)\n- Ctrl-i (Cmd-i on macOS): [`selectParentSyntax`](https://codemirror.net/6/docs/ref/#commands.selectParentSyntax)\n- Ctrl-[ (Cmd-[ on macOS): [`indentLess`](https://codemirror.net/6/docs/ref/#commands.indentLess)\n- Ctrl-] (Cmd-] on macOS): [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore)\n- Ctrl-Alt-\\\\ (Cmd-Alt-\\\\ on macOS): [`indentSelection`](https://codemirror.net/6/docs/ref/#commands.indentSelection)\n- Shift-Ctrl-k (Shift-Cmd-k on macOS): [`deleteLine`](https://codemirror.net/6/docs/ref/#commands.deleteLine)\n- Shift-Ctrl-\\\\ (Shift-Cmd-\\\\ on macOS): [`cursorMatchingBracket`](https://codemirror.net/6/docs/ref/#commands.cursorMatchingBracket)\n- Ctrl-/ (Cmd-/ on macOS): [`toggleComment`](https://codemirror.net/6/docs/ref/#commands.toggleComment).\n- Shift-Alt-a: [`toggleBlockComment`](https://codemirror.net/6/docs/ref/#commands.toggleBlockComment).\n- Ctrl-m (Alt-Shift-m on macOS): [`toggleTabFocusMode`](https://codemirror.net/6/docs/ref/#commands.toggleTabFocusMode).\n*/\nconst defaultKeymap = /*@__PURE__*/[\n    { key: \"Alt-ArrowLeft\", mac: \"Ctrl-ArrowLeft\", run: cursorSyntaxLeft, shift: selectSyntaxLeft },\n    { key: \"Alt-ArrowRight\", mac: \"Ctrl-ArrowRight\", run: cursorSyntaxRight, shift: selectSyntaxRight },\n    { key: \"Alt-ArrowUp\", run: moveLineUp },\n    { key: \"Shift-Alt-ArrowUp\", run: copyLineUp },\n    { key: \"Alt-ArrowDown\", run: moveLineDown },\n    { key: \"Shift-Alt-ArrowDown\", run: copyLineDown },\n    { key: \"Escape\", run: simplifySelection },\n    { key: \"Mod-Enter\", run: insertBlankLine },\n    { key: \"Alt-l\", mac: \"Ctrl-l\", run: selectLine },\n    { key: \"Mod-i\", run: selectParentSyntax, preventDefault: true },\n    { key: \"Mod-[\", run: indentLess },\n    { key: \"Mod-]\", run: indentMore },\n    { key: \"Mod-Alt-\\\\\", run: indentSelection },\n    { key: \"Shift-Mod-k\", run: deleteLine },\n    { key: \"Shift-Mod-\\\\\", run: cursorMatchingBracket },\n    { key: \"Mod-/\", run: toggleComment },\n    { key: \"Alt-A\", run: toggleBlockComment },\n    { key: \"Ctrl-m\", mac: \"Shift-Alt-m\", run: toggleTabFocusMode },\n].concat(standardKeymap);\n/**\nA binding that binds Tab to [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore) and\nShift-Tab to [`indentLess`](https://codemirror.net/6/docs/ref/#commands.indentLess).\nPlease see the [Tab example](../../examples/tab/) before using\nthis.\n*/\nconst indentWithTab = { key: \"Tab\", run: indentMore, shift: indentLess };\n\nexport { blockComment, blockUncomment, copyLineDown, copyLineUp, cursorCharBackward, cursorCharBackwardLogical, cursorCharForward, cursorCharForwardLogical, cursorCharLeft, cursorCharRight, cursorDocEnd, cursorDocStart, cursorGroupBackward, cursorGroupForward, cursorGroupForwardWin, cursorGroupLeft, cursorGroupRight, cursorLineBoundaryBackward, cursorLineBoundaryForward, cursorLineBoundaryLeft, cursorLineBoundaryRight, cursorLineDown, cursorLineEnd, cursorLineStart, cursorLineUp, cursorMatchingBracket, cursorPageDown, cursorPageUp, cursorSubwordBackward, cursorSubwordForward, cursorSyntaxLeft, cursorSyntaxRight, defaultKeymap, deleteCharBackward, deleteCharBackwardStrict, deleteCharForward, deleteGroupBackward, deleteGroupForward, deleteLine, deleteLineBoundaryBackward, deleteLineBoundaryForward, deleteToLineEnd, deleteToLineStart, deleteTrailingWhitespace, emacsStyleKeymap, history, historyField, historyKeymap, indentLess, indentMore, indentSelection, indentWithTab, insertBlankLine, insertNewline, insertNewlineAndIndent, insertNewlineKeepIndent, insertTab, invertedEffects, isolateHistory, lineComment, lineUncomment, moveLineDown, moveLineUp, redo, redoDepth, redoSelection, selectAll, selectCharBackward, selectCharBackwardLogical, selectCharForward, selectCharForwardLogical, selectCharLeft, selectCharRight, selectDocEnd, selectDocStart, selectGroupBackward, selectGroupForward, selectGroupForwardWin, selectGroupLeft, selectGroupRight, selectLine, selectLineBoundaryBackward, selectLineBoundaryForward, selectLineBoundaryLeft, selectLineBoundaryRight, selectLineDown, selectLineEnd, selectLineStart, selectLineUp, selectMatchingBracket, selectPageDown, selectPageUp, selectParentSyntax, selectSubwordBackward, selectSubwordForward, selectSyntaxLeft, selectSyntaxRight, simplifySelection, splitLine, standardKeymap, temporarilySetTabFocusMode, toggleBlockComment, toggleBlockCommentByLine, toggleComment, toggleLineComment, toggleTabFocusMode, transposeChars, undo, undoDepth, undoSelection };\n","/**\nThe data structure for documents. @nonabstract\n*/\nclass Text {\n    /**\n    @internal\n    */\n    constructor() { }\n    /**\n    Get the line description around the given position.\n    */\n    lineAt(pos) {\n        if (pos < 0 || pos > this.length)\n            throw new RangeError(`Invalid position ${pos} in document of length ${this.length}`);\n        return this.lineInner(pos, false, 1, 0);\n    }\n    /**\n    Get the description for the given (1-based) line number.\n    */\n    line(n) {\n        if (n < 1 || n > this.lines)\n            throw new RangeError(`Invalid line number ${n} in ${this.lines}-line document`);\n        return this.lineInner(n, true, 1, 0);\n    }\n    /**\n    Replace a range of the text with the given content.\n    */\n    replace(from, to, text) {\n        let parts = [];\n        this.decompose(0, from, parts, 2 /* To */);\n        if (text.length)\n            text.decompose(0, text.length, parts, 1 /* From */ | 2 /* To */);\n        this.decompose(to, this.length, parts, 1 /* From */);\n        return TextNode.from(parts, this.length - (to - from) + text.length);\n    }\n    /**\n    Append another document to this one.\n    */\n    append(other) {\n        return this.replace(this.length, this.length, other);\n    }\n    /**\n    Retrieve the text between the given points.\n    */\n    slice(from, to = this.length) {\n        let parts = [];\n        this.decompose(from, to, parts, 0);\n        return TextNode.from(parts, to - from);\n    }\n    /**\n    Test whether this text is equal to another instance.\n    */\n    eq(other) {\n        if (other == this)\n            return true;\n        if (other.length != this.length || other.lines != this.lines)\n            return false;\n        let start = this.scanIdentical(other, 1), end = this.length - this.scanIdentical(other, -1);\n        let a = new RawTextCursor(this), b = new RawTextCursor(other);\n        for (let skip = start, pos = start;;) {\n            a.next(skip);\n            b.next(skip);\n            skip = 0;\n            if (a.lineBreak != b.lineBreak || a.done != b.done || a.value != b.value)\n                return false;\n            pos += a.value.length;\n            if (a.done || pos >= end)\n                return true;\n        }\n    }\n    /**\n    Iterate over the text. When `dir` is `-1`, iteration happens\n    from end to start. This will return lines and the breaks between\n    them as separate strings.\n    */\n    iter(dir = 1) { return new RawTextCursor(this, dir); }\n    /**\n    Iterate over a range of the text. When `from` > `to`, the\n    iterator will run in reverse.\n    */\n    iterRange(from, to = this.length) { return new PartialTextCursor(this, from, to); }\n    /**\n    Return a cursor that iterates over the given range of lines,\n    _without_ returning the line breaks between, and yielding empty\n    strings for empty lines.\n    \n    When `from` and `to` are given, they should be 1-based line numbers.\n    */\n    iterLines(from, to) {\n        let inner;\n        if (from == null) {\n            inner = this.iter();\n        }\n        else {\n            if (to == null)\n                to = this.lines + 1;\n            let start = this.line(from).from;\n            inner = this.iterRange(start, Math.max(start, to == this.lines + 1 ? this.length : to <= 1 ? 0 : this.line(to - 1).to));\n        }\n        return new LineCursor(inner);\n    }\n    /**\n    @internal\n    */\n    toString() { return this.sliceString(0); }\n    /**\n    Convert the document to an array of lines (which can be\n    deserialized again via [`Text.of`](https://codemirror.net/6/docs/ref/#state.Text^of)).\n    */\n    toJSON() {\n        let lines = [];\n        this.flatten(lines);\n        return lines;\n    }\n    /**\n    Create a `Text` instance for the given array of lines.\n    */\n    static of(text) {\n        if (text.length == 0)\n            throw new RangeError(\"A document must have at least one line\");\n        if (text.length == 1 && !text[0])\n            return Text.empty;\n        return text.length <= 32 /* Branch */ ? new TextLeaf(text) : TextNode.from(TextLeaf.split(text, []));\n    }\n}\n// Leaves store an array of line strings. There are always line breaks\n// between these strings. Leaves are limited in size and have to be\n// contained in TextNode instances for bigger documents.\nclass TextLeaf extends Text {\n    constructor(text, length = textLength(text)) {\n        super();\n        this.text = text;\n        this.length = length;\n    }\n    get lines() { return this.text.length; }\n    get children() { return null; }\n    lineInner(target, isLine, line, offset) {\n        for (let i = 0;; i++) {\n            let string = this.text[i], end = offset + string.length;\n            if ((isLine ? line : end) >= target)\n                return new Line(offset, end, line, string);\n            offset = end + 1;\n            line++;\n        }\n    }\n    decompose(from, to, target, open) {\n        let text = from <= 0 && to >= this.length ? this\n            : new TextLeaf(sliceText(this.text, from, to), Math.min(to, this.length) - Math.max(0, from));\n        if (open & 1 /* From */) {\n            let prev = target.pop();\n            let joined = appendText(text.text, prev.text.slice(), 0, text.length);\n            if (joined.length <= 32 /* Branch */) {\n                target.push(new TextLeaf(joined, prev.length + text.length));\n            }\n            else {\n                let mid = joined.length >> 1;\n                target.push(new TextLeaf(joined.slice(0, mid)), new TextLeaf(joined.slice(mid)));\n            }\n        }\n        else {\n            target.push(text);\n        }\n    }\n    replace(from, to, text) {\n        if (!(text instanceof TextLeaf))\n            return super.replace(from, to, text);\n        let lines = appendText(this.text, appendText(text.text, sliceText(this.text, 0, from)), to);\n        let newLen = this.length + text.length - (to - from);\n        if (lines.length <= 32 /* Branch */)\n            return new TextLeaf(lines, newLen);\n        return TextNode.from(TextLeaf.split(lines, []), newLen);\n    }\n    sliceString(from, to = this.length, lineSep = \"\\n\") {\n        let result = \"\";\n        for (let pos = 0, i = 0; pos <= to && i < this.text.length; i++) {\n            let line = this.text[i], end = pos + line.length;\n            if (pos > from && i)\n                result += lineSep;\n            if (from < end && to > pos)\n                result += line.slice(Math.max(0, from - pos), to - pos);\n            pos = end + 1;\n        }\n        return result;\n    }\n    flatten(target) {\n        for (let line of this.text)\n            target.push(line);\n    }\n    scanIdentical() { return 0; }\n    static split(text, target) {\n        let part = [], len = -1;\n        for (let line of text) {\n            part.push(line);\n            len += line.length + 1;\n            if (part.length == 32 /* Branch */) {\n                target.push(new TextLeaf(part, len));\n                part = [];\n                len = -1;\n            }\n        }\n        if (len > -1)\n            target.push(new TextLeaf(part, len));\n        return target;\n    }\n}\n// Nodes provide the tree structure of the `Text` type. They store a\n// number of other nodes or leaves, taking care to balance themselves\n// on changes. There are implied line breaks _between_ the children of\n// a node (but not before the first or after the last child).\nclass TextNode extends Text {\n    constructor(children, length) {\n        super();\n        this.children = children;\n        this.length = length;\n        this.lines = 0;\n        for (let child of children)\n            this.lines += child.lines;\n    }\n    lineInner(target, isLine, line, offset) {\n        for (let i = 0;; i++) {\n            let child = this.children[i], end = offset + child.length, endLine = line + child.lines - 1;\n            if ((isLine ? endLine : end) >= target)\n                return child.lineInner(target, isLine, line, offset);\n            offset = end + 1;\n            line = endLine + 1;\n        }\n    }\n    decompose(from, to, target, open) {\n        for (let i = 0, pos = 0; pos <= to && i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (from <= end && to >= pos) {\n                let childOpen = open & ((pos <= from ? 1 /* From */ : 0) | (end >= to ? 2 /* To */ : 0));\n                if (pos >= from && end <= to && !childOpen)\n                    target.push(child);\n                else\n                    child.decompose(from - pos, to - pos, target, childOpen);\n            }\n            pos = end + 1;\n        }\n    }\n    replace(from, to, text) {\n        if (text.lines < this.lines)\n            for (let i = 0, pos = 0; i < this.children.length; i++) {\n                let child = this.children[i], end = pos + child.length;\n                // Fast path: if the change only affects one child and the\n                // child's size remains in the acceptable range, only update\n                // that child\n                if (from >= pos && to <= end) {\n                    let updated = child.replace(from - pos, to - pos, text);\n                    let totalLines = this.lines - child.lines + updated.lines;\n                    if (updated.lines < (totalLines >> (5 /* BranchShift */ - 1)) &&\n                        updated.lines > (totalLines >> (5 /* BranchShift */ + 1))) {\n                        let copy = this.children.slice();\n                        copy[i] = updated;\n                        return new TextNode(copy, this.length - (to - from) + text.length);\n                    }\n                    return super.replace(pos, end, updated);\n                }\n                pos = end + 1;\n            }\n        return super.replace(from, to, text);\n    }\n    sliceString(from, to = this.length, lineSep = \"\\n\") {\n        let result = \"\";\n        for (let i = 0, pos = 0; i < this.children.length && pos <= to; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (pos > from && i)\n                result += lineSep;\n            if (from < end && to > pos)\n                result += child.sliceString(from - pos, to - pos, lineSep);\n            pos = end + 1;\n        }\n        return result;\n    }\n    flatten(target) {\n        for (let child of this.children)\n            child.flatten(target);\n    }\n    scanIdentical(other, dir) {\n        if (!(other instanceof TextNode))\n            return 0;\n        let length = 0;\n        let [iA, iB, eA, eB] = dir > 0 ? [0, 0, this.children.length, other.children.length]\n            : [this.children.length - 1, other.children.length - 1, -1, -1];\n        for (;; iA += dir, iB += dir) {\n            if (iA == eA || iB == eB)\n                return length;\n            let chA = this.children[iA], chB = other.children[iB];\n            if (chA != chB)\n                return length + chA.scanIdentical(chB, dir);\n            length += chA.length + 1;\n        }\n    }\n    static from(children, length = children.reduce((l, ch) => l + ch.length + 1, -1)) {\n        let lines = 0;\n        for (let ch of children)\n            lines += ch.lines;\n        if (lines < 32 /* Branch */) {\n            let flat = [];\n            for (let ch of children)\n                ch.flatten(flat);\n            return new TextLeaf(flat, length);\n        }\n        let chunk = Math.max(32 /* Branch */, lines >> 5 /* BranchShift */), maxChunk = chunk << 1, minChunk = chunk >> 1;\n        let chunked = [], currentLines = 0, currentLen = -1, currentChunk = [];\n        function add(child) {\n            let last;\n            if (child.lines > maxChunk && child instanceof TextNode) {\n                for (let node of child.children)\n                    add(node);\n            }\n            else if (child.lines > minChunk && (currentLines > minChunk || !currentLines)) {\n                flush();\n                chunked.push(child);\n            }\n            else if (child instanceof TextLeaf && currentLines &&\n                (last = currentChunk[currentChunk.length - 1]) instanceof TextLeaf &&\n                child.lines + last.lines <= 32 /* Branch */) {\n                currentLines += child.lines;\n                currentLen += child.length + 1;\n                currentChunk[currentChunk.length - 1] = new TextLeaf(last.text.concat(child.text), last.length + 1 + child.length);\n            }\n            else {\n                if (currentLines + child.lines > chunk)\n                    flush();\n                currentLines += child.lines;\n                currentLen += child.length + 1;\n                currentChunk.push(child);\n            }\n        }\n        function flush() {\n            if (currentLines == 0)\n                return;\n            chunked.push(currentChunk.length == 1 ? currentChunk[0] : TextNode.from(currentChunk, currentLen));\n            currentLen = -1;\n            currentLines = currentChunk.length = 0;\n        }\n        for (let child of children)\n            add(child);\n        flush();\n        return chunked.length == 1 ? chunked[0] : new TextNode(chunked, length);\n    }\n}\nText.empty = /*@__PURE__*/new TextLeaf([\"\"], 0);\nfunction textLength(text) {\n    let length = -1;\n    for (let line of text)\n        length += line.length + 1;\n    return length;\n}\nfunction appendText(text, target, from = 0, to = 1e9) {\n    for (let pos = 0, i = 0, first = true; i < text.length && pos <= to; i++) {\n        let line = text[i], end = pos + line.length;\n        if (end >= from) {\n            if (end > to)\n                line = line.slice(0, to - pos);\n            if (pos < from)\n                line = line.slice(from - pos);\n            if (first) {\n                target[target.length - 1] += line;\n                first = false;\n            }\n            else\n                target.push(line);\n        }\n        pos = end + 1;\n    }\n    return target;\n}\nfunction sliceText(text, from, to) {\n    return appendText(text, [\"\"], from, to);\n}\nclass RawTextCursor {\n    constructor(text, dir = 1) {\n        this.dir = dir;\n        this.done = false;\n        this.lineBreak = false;\n        this.value = \"\";\n        this.nodes = [text];\n        this.offsets = [dir > 0 ? 1 : (text instanceof TextLeaf ? text.text.length : text.children.length) << 1];\n    }\n    nextInner(skip, dir) {\n        this.done = this.lineBreak = false;\n        for (;;) {\n            let last = this.nodes.length - 1;\n            let top = this.nodes[last], offsetValue = this.offsets[last], offset = offsetValue >> 1;\n            let size = top instanceof TextLeaf ? top.text.length : top.children.length;\n            if (offset == (dir > 0 ? size : 0)) {\n                if (last == 0) {\n                    this.done = true;\n                    this.value = \"\";\n                    return this;\n                }\n                if (dir > 0)\n                    this.offsets[last - 1]++;\n                this.nodes.pop();\n                this.offsets.pop();\n            }\n            else if ((offsetValue & 1) == (dir > 0 ? 0 : 1)) {\n                this.offsets[last] += dir;\n                if (skip == 0) {\n                    this.lineBreak = true;\n                    this.value = \"\\n\";\n                    return this;\n                }\n                skip--;\n            }\n            else if (top instanceof TextLeaf) {\n                // Move to the next string\n                let next = top.text[offset + (dir < 0 ? -1 : 0)];\n                this.offsets[last] += dir;\n                if (next.length > Math.max(0, skip)) {\n                    this.value = skip == 0 ? next : dir > 0 ? next.slice(skip) : next.slice(0, next.length - skip);\n                    return this;\n                }\n                skip -= next.length;\n            }\n            else {\n                let next = top.children[offset + (dir < 0 ? -1 : 0)];\n                if (skip > next.length) {\n                    skip -= next.length;\n                    this.offsets[last] += dir;\n                }\n                else {\n                    if (dir < 0)\n                        this.offsets[last]--;\n                    this.nodes.push(next);\n                    this.offsets.push(dir > 0 ? 1 : (next instanceof TextLeaf ? next.text.length : next.children.length) << 1);\n                }\n            }\n        }\n    }\n    next(skip = 0) {\n        if (skip < 0) {\n            this.nextInner(-skip, (-this.dir));\n            skip = this.value.length;\n        }\n        return this.nextInner(skip, this.dir);\n    }\n}\nclass PartialTextCursor {\n    constructor(text, start, end) {\n        this.value = \"\";\n        this.done = false;\n        this.cursor = new RawTextCursor(text, start > end ? -1 : 1);\n        this.pos = start > end ? text.length : 0;\n        this.from = Math.min(start, end);\n        this.to = Math.max(start, end);\n    }\n    nextInner(skip, dir) {\n        if (dir < 0 ? this.pos <= this.from : this.pos >= this.to) {\n            this.value = \"\";\n            this.done = true;\n            return this;\n        }\n        skip += Math.max(0, dir < 0 ? this.pos - this.to : this.from - this.pos);\n        let limit = dir < 0 ? this.pos - this.from : this.to - this.pos;\n        if (skip > limit)\n            skip = limit;\n        limit -= skip;\n        let { value } = this.cursor.next(skip);\n        this.pos += (value.length + skip) * dir;\n        this.value = value.length <= limit ? value : dir < 0 ? value.slice(value.length - limit) : value.slice(0, limit);\n        this.done = !this.value;\n        return this;\n    }\n    next(skip = 0) {\n        if (skip < 0)\n            skip = Math.max(skip, this.from - this.pos);\n        else if (skip > 0)\n            skip = Math.min(skip, this.to - this.pos);\n        return this.nextInner(skip, this.cursor.dir);\n    }\n    get lineBreak() { return this.cursor.lineBreak && this.value != \"\"; }\n}\nclass LineCursor {\n    constructor(inner) {\n        this.inner = inner;\n        this.afterBreak = true;\n        this.value = \"\";\n        this.done = false;\n    }\n    next(skip = 0) {\n        let { done, lineBreak, value } = this.inner.next(skip);\n        if (done) {\n            this.done = true;\n            this.value = \"\";\n        }\n        else if (lineBreak) {\n            if (this.afterBreak) {\n                this.value = \"\";\n            }\n            else {\n                this.afterBreak = true;\n                this.next();\n            }\n        }\n        else {\n            this.value = value;\n            this.afterBreak = false;\n        }\n        return this;\n    }\n    get lineBreak() { return false; }\n}\nif (typeof Symbol != \"undefined\") {\n    Text.prototype[Symbol.iterator] = function () { return this.iter(); };\n    RawTextCursor.prototype[Symbol.iterator] = PartialTextCursor.prototype[Symbol.iterator] =\n        LineCursor.prototype[Symbol.iterator] = function () { return this; };\n}\n/**\nThis type describes a line in the document. It is created\non-demand when lines are [queried](https://codemirror.net/6/docs/ref/#state.Text.lineAt).\n*/\nclass Line {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The position of the start of the line.\n    */\n    from, \n    /**\n    The position at the end of the line (_before_ the line break,\n    or at the end of document for the last line).\n    */\n    to, \n    /**\n    This line's line number (1-based).\n    */\n    number, \n    /**\n    The line's content.\n    */\n    text) {\n        this.from = from;\n        this.to = to;\n        this.number = number;\n        this.text = text;\n    }\n    /**\n    The length of the line (not including any line break after it).\n    */\n    get length() { return this.to - this.from; }\n}\n\n// Compressed representation of the Grapheme_Cluster_Break=Extend\n// information from\n// http://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakProperty.txt.\n// Each pair of elements represents a range, as an offet from the\n// previous range and a length. Numbers are in base-36, with the empty\n// string being a shorthand for 1.\nlet extend = /*@__PURE__*/\"lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o\".split(\",\").map(s => s ? parseInt(s, 36) : 1);\n// Convert offsets into absolute values\nfor (let i = 1; i < extend.length; i++)\n    extend[i] += extend[i - 1];\nfunction isExtendingChar(code) {\n    for (let i = 1; i < extend.length; i += 2)\n        if (extend[i] > code)\n            return extend[i - 1] <= code;\n    return false;\n}\nfunction isRegionalIndicator(code) {\n    return code >= 0x1F1E6 && code <= 0x1F1FF;\n}\nconst ZWJ = 0x200d;\n/**\nReturns a next grapheme cluster break _after_ (not equal to)\n`pos`, if `forward` is true, or before otherwise. Returns `pos`\nitself if no further cluster break is available in the string.\nMoves across surrogate pairs, extending characters (when\n`includeExtending` is true), characters joined with zero-width\njoiners, and flag emoji.\n*/\nfunction findClusterBreak(str, pos, forward = true, includeExtending = true) {\n    return (forward ? nextClusterBreak : prevClusterBreak)(str, pos, includeExtending);\n}\nfunction nextClusterBreak(str, pos, includeExtending) {\n    if (pos == str.length)\n        return pos;\n    // If pos is in the middle of a surrogate pair, move to its start\n    if (pos && surrogateLow(str.charCodeAt(pos)) && surrogateHigh(str.charCodeAt(pos - 1)))\n        pos--;\n    let prev = codePointAt(str, pos);\n    pos += codePointSize(prev);\n    while (pos < str.length) {\n        let next = codePointAt(str, pos);\n        if (prev == ZWJ || next == ZWJ || includeExtending && isExtendingChar(next)) {\n            pos += codePointSize(next);\n            prev = next;\n        }\n        else if (isRegionalIndicator(next)) {\n            let countBefore = 0, i = pos - 2;\n            while (i >= 0 && isRegionalIndicator(codePointAt(str, i))) {\n                countBefore++;\n                i -= 2;\n            }\n            if (countBefore % 2 == 0)\n                break;\n            else\n                pos += 2;\n        }\n        else {\n            break;\n        }\n    }\n    return pos;\n}\nfunction prevClusterBreak(str, pos, includeExtending) {\n    while (pos > 0) {\n        let found = nextClusterBreak(str, pos - 2, includeExtending);\n        if (found < pos)\n            return found;\n        pos--;\n    }\n    return 0;\n}\nfunction surrogateLow(ch) { return ch >= 0xDC00 && ch < 0xE000; }\nfunction surrogateHigh(ch) { return ch >= 0xD800 && ch < 0xDC00; }\n/**\nFind the code point at the given position in a string (like the\n[`codePointAt`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt)\nstring method).\n*/\nfunction codePointAt(str, pos) {\n    let code0 = str.charCodeAt(pos);\n    if (!surrogateHigh(code0) || pos + 1 == str.length)\n        return code0;\n    let code1 = str.charCodeAt(pos + 1);\n    if (!surrogateLow(code1))\n        return code0;\n    return ((code0 - 0xd800) << 10) + (code1 - 0xdc00) + 0x10000;\n}\n/**\nGiven a Unicode codepoint, return the JavaScript string that\nrespresents it (like\n[`String.fromCodePoint`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)).\n*/\nfunction fromCodePoint(code) {\n    if (code <= 0xffff)\n        return String.fromCharCode(code);\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xd800, (code & 1023) + 0xdc00);\n}\n/**\nThe first character that takes up two positions in a JavaScript\nstring. It is often useful to compare with this after calling\n`codePointAt`, to figure out whether your character takes up 1 or\n2 index positions.\n*/\nfunction codePointSize(code) { return code < 0x10000 ? 1 : 2; }\n\nconst DefaultSplit = /\\r\\n?|\\n/;\n/**\nDistinguishes different ways in which positions can be mapped.\n*/\nvar MapMode = /*@__PURE__*/(function (MapMode) {\n    /**\n    Map a position to a valid new position, even when its context\n    was deleted.\n    */\n    MapMode[MapMode[\"Simple\"] = 0] = \"Simple\";\n    /**\n    Return null if deletion happens across the position.\n    */\n    MapMode[MapMode[\"TrackDel\"] = 1] = \"TrackDel\";\n    /**\n    Return null if the character _before_ the position is deleted.\n    */\n    MapMode[MapMode[\"TrackBefore\"] = 2] = \"TrackBefore\";\n    /**\n    Return null if the character _after_ the position is deleted.\n    */\n    MapMode[MapMode[\"TrackAfter\"] = 3] = \"TrackAfter\";\nreturn MapMode})(MapMode || (MapMode = {}));\n/**\nA change description is a variant of [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet)\nthat doesn't store the inserted text. As such, it can't be\napplied, but is cheaper to store and manipulate.\n*/\nclass ChangeDesc {\n    // Sections are encoded as pairs of integers. The first is the\n    // length in the current document, and the second is -1 for\n    // unaffected sections, and the length of the replacement content\n    // otherwise. So an insertion would be (0, n>0), a deletion (n>0,\n    // 0), and a replacement two positive numbers.\n    constructor(\n    /**\n    @internal\n    */\n    sections) {\n        this.sections = sections;\n    }\n    /**\n    The length of the document before the change.\n    */\n    get length() {\n        let result = 0;\n        for (let i = 0; i < this.sections.length; i += 2)\n            result += this.sections[i];\n        return result;\n    }\n    /**\n    The length of the document after the change.\n    */\n    get newLength() {\n        let result = 0;\n        for (let i = 0; i < this.sections.length; i += 2) {\n            let ins = this.sections[i + 1];\n            result += ins < 0 ? this.sections[i] : ins;\n        }\n        return result;\n    }\n    /**\n    False when there are actual changes in this set.\n    */\n    get empty() { return this.sections.length == 0 || this.sections.length == 2 && this.sections[1] < 0; }\n    /**\n    Iterate over the unchanged parts left by these changes. `posA`\n    provides the position of the range in the old document, `posB`\n    the new position in the changed document.\n    */\n    iterGaps(f) {\n        for (let i = 0, posA = 0, posB = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            if (ins < 0) {\n                f(posA, posB, len);\n                posB += len;\n            }\n            else {\n                posB += ins;\n            }\n            posA += len;\n        }\n    }\n    /**\n    Iterate over the ranges changed by these changes. (See\n    [`ChangeSet.iterChanges`](https://codemirror.net/6/docs/ref/#state.ChangeSet.iterChanges) for a\n    variant that also provides you with the inserted text.)\n    `fromA`/`toA` provides the extent of the change in the starting\n    document, `fromB`/`toB` the extent of the replacement in the\n    changed document.\n    \n    When `individual` is true, adjacent changes (which are kept\n    separate for [position mapping](https://codemirror.net/6/docs/ref/#state.ChangeDesc.mapPos)) are\n    reported separately.\n    */\n    iterChangedRanges(f, individual = false) {\n        iterChanges(this, f, individual);\n    }\n    /**\n    Get a description of the inverted form of these changes.\n    */\n    get invertedDesc() {\n        let sections = [];\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            if (ins < 0)\n                sections.push(len, ins);\n            else\n                sections.push(ins, len);\n        }\n        return new ChangeDesc(sections);\n    }\n    /**\n    Compute the combined effect of applying another set of changes\n    after this one. The length of the document after this set should\n    match the length before `other`.\n    */\n    composeDesc(other) { return this.empty ? other : other.empty ? this : composeSets(this, other); }\n    /**\n    Map this description, which should start with the same document\n    as `other`, over another set of changes, so that it can be\n    applied after it. When `before` is true, map as if the changes\n    in `other` happened before the ones in `this`.\n    */\n    mapDesc(other, before = false) { return other.empty ? this : mapSet(this, other, before); }\n    mapPos(pos, assoc = -1, mode = MapMode.Simple) {\n        let posA = 0, posB = 0;\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++], endA = posA + len;\n            if (ins < 0) {\n                if (endA > pos)\n                    return posB + (pos - posA);\n                posB += len;\n            }\n            else {\n                if (mode != MapMode.Simple && endA >= pos &&\n                    (mode == MapMode.TrackDel && posA < pos && endA > pos ||\n                        mode == MapMode.TrackBefore && posA < pos ||\n                        mode == MapMode.TrackAfter && endA > pos))\n                    return null;\n                if (endA > pos || endA == pos && assoc < 0 && !len)\n                    return pos == posA || assoc < 0 ? posB : posB + ins;\n                posB += ins;\n            }\n            posA = endA;\n        }\n        if (pos > posA)\n            throw new RangeError(`Position ${pos} is out of range for changeset of length ${posA}`);\n        return posB;\n    }\n    /**\n    Check whether these changes touch a given range. When one of the\n    changes entirely covers the range, the string `\"cover\"` is\n    returned.\n    */\n    touchesRange(from, to = from) {\n        for (let i = 0, pos = 0; i < this.sections.length && pos <= to;) {\n            let len = this.sections[i++], ins = this.sections[i++], end = pos + len;\n            if (ins >= 0 && pos <= to && end >= from)\n                return pos < from && end > to ? \"cover\" : true;\n            pos = end;\n        }\n        return false;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let result = \"\";\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            result += (result ? \" \" : \"\") + len + (ins >= 0 ? \":\" + ins : \"\");\n        }\n        return result;\n    }\n    /**\n    Serialize this change desc to a JSON-representable value.\n    */\n    toJSON() { return this.sections; }\n    /**\n    Create a change desc from its JSON representation (as produced\n    by [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeDesc.toJSON).\n    */\n    static fromJSON(json) {\n        if (!Array.isArray(json) || json.length % 2 || json.some(a => typeof a != \"number\"))\n            throw new RangeError(\"Invalid JSON representation of ChangeDesc\");\n        return new ChangeDesc(json);\n    }\n    /**\n    @internal\n    */\n    static create(sections) { return new ChangeDesc(sections); }\n}\n/**\nA change set represents a group of modifications to a document. It\nstores the document length, and can only be applied to documents\nwith exactly that length.\n*/\nclass ChangeSet extends ChangeDesc {\n    constructor(sections, \n    /**\n    @internal\n    */\n    inserted) {\n        super(sections);\n        this.inserted = inserted;\n    }\n    /**\n    Apply the changes to a document, returning the modified\n    document.\n    */\n    apply(doc) {\n        if (this.length != doc.length)\n            throw new RangeError(\"Applying change set to a document with the wrong length\");\n        iterChanges(this, (fromA, toA, fromB, _toB, text) => doc = doc.replace(fromB, fromB + (toA - fromA), text), false);\n        return doc;\n    }\n    mapDesc(other, before = false) { return mapSet(this, other, before, true); }\n    /**\n    Given the document as it existed _before_ the changes, return a\n    change set that represents the inverse of this set, which could\n    be used to go from the document created by the changes back to\n    the document as it existed before the changes.\n    */\n    invert(doc) {\n        let sections = this.sections.slice(), inserted = [];\n        for (let i = 0, pos = 0; i < sections.length; i += 2) {\n            let len = sections[i], ins = sections[i + 1];\n            if (ins >= 0) {\n                sections[i] = ins;\n                sections[i + 1] = len;\n                let index = i >> 1;\n                while (inserted.length < index)\n                    inserted.push(Text.empty);\n                inserted.push(len ? doc.slice(pos, pos + len) : Text.empty);\n            }\n            pos += len;\n        }\n        return new ChangeSet(sections, inserted);\n    }\n    /**\n    Combine two subsequent change sets into a single set. `other`\n    must start in the document produced by `this`. If `this` goes\n    `docA` → `docB` and `other` represents `docB` → `docC`, the\n    returned value will represent the change `docA` → `docC`.\n    */\n    compose(other) { return this.empty ? other : other.empty ? this : composeSets(this, other, true); }\n    /**\n    Given another change set starting in the same document, maps this\n    change set over the other, producing a new change set that can be\n    applied to the document produced by applying `other`. When\n    `before` is `true`, order changes as if `this` comes before\n    `other`, otherwise (the default) treat `other` as coming first.\n    \n    Given two changes `A` and `B`, `A.compose(B.map(A))` and\n    `B.compose(A.map(B, true))` will produce the same document. This\n    provides a basic form of [operational\n    transformation](https://en.wikipedia.org/wiki/Operational_transformation),\n    and can be used for collaborative editing.\n    */\n    map(other, before = false) { return other.empty ? this : mapSet(this, other, before, true); }\n    /**\n    Iterate over the changed ranges in the document, calling `f` for\n    each, with the range in the original document (`fromA`-`toA`)\n    and the range that replaces it in the new document\n    (`fromB`-`toB`).\n    \n    When `individual` is true, adjacent changes are reported\n    separately.\n    */\n    iterChanges(f, individual = false) {\n        iterChanges(this, f, individual);\n    }\n    /**\n    Get a [change description](https://codemirror.net/6/docs/ref/#state.ChangeDesc) for this change\n    set.\n    */\n    get desc() { return ChangeDesc.create(this.sections); }\n    /**\n    @internal\n    */\n    filter(ranges) {\n        let resultSections = [], resultInserted = [], filteredSections = [];\n        let iter = new SectionIter(this);\n        done: for (let i = 0, pos = 0;;) {\n            let next = i == ranges.length ? 1e9 : ranges[i++];\n            while (pos < next || pos == next && iter.len == 0) {\n                if (iter.done)\n                    break done;\n                let len = Math.min(iter.len, next - pos);\n                addSection(filteredSections, len, -1);\n                let ins = iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0;\n                addSection(resultSections, len, ins);\n                if (ins > 0)\n                    addInsert(resultInserted, resultSections, iter.text);\n                iter.forward(len);\n                pos += len;\n            }\n            let end = ranges[i++];\n            while (pos < end) {\n                if (iter.done)\n                    break done;\n                let len = Math.min(iter.len, end - pos);\n                addSection(resultSections, len, -1);\n                addSection(filteredSections, len, iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0);\n                iter.forward(len);\n                pos += len;\n            }\n        }\n        return { changes: new ChangeSet(resultSections, resultInserted),\n            filtered: ChangeDesc.create(filteredSections) };\n    }\n    /**\n    Serialize this change set to a JSON-representable value.\n    */\n    toJSON() {\n        let parts = [];\n        for (let i = 0; i < this.sections.length; i += 2) {\n            let len = this.sections[i], ins = this.sections[i + 1];\n            if (ins < 0)\n                parts.push(len);\n            else if (ins == 0)\n                parts.push([len]);\n            else\n                parts.push([len].concat(this.inserted[i >> 1].toJSON()));\n        }\n        return parts;\n    }\n    /**\n    Create a change set for the given changes, for a document of the\n    given length, using `lineSep` as line separator.\n    */\n    static of(changes, length, lineSep) {\n        let sections = [], inserted = [], pos = 0;\n        let total = null;\n        function flush(force = false) {\n            if (!force && !sections.length)\n                return;\n            if (pos < length)\n                addSection(sections, length - pos, -1);\n            let set = new ChangeSet(sections, inserted);\n            total = total ? total.compose(set.map(total)) : set;\n            sections = [];\n            inserted = [];\n            pos = 0;\n        }\n        function process(spec) {\n            if (Array.isArray(spec)) {\n                for (let sub of spec)\n                    process(sub);\n            }\n            else if (spec instanceof ChangeSet) {\n                if (spec.length != length)\n                    throw new RangeError(`Mismatched change set length (got ${spec.length}, expected ${length})`);\n                flush();\n                total = total ? total.compose(spec.map(total)) : spec;\n            }\n            else {\n                let { from, to = from, insert } = spec;\n                if (from > to || from < 0 || to > length)\n                    throw new RangeError(`Invalid change range ${from} to ${to} (in doc of length ${length})`);\n                let insText = !insert ? Text.empty : typeof insert == \"string\" ? Text.of(insert.split(lineSep || DefaultSplit)) : insert;\n                let insLen = insText.length;\n                if (from == to && insLen == 0)\n                    return;\n                if (from < pos)\n                    flush();\n                if (from > pos)\n                    addSection(sections, from - pos, -1);\n                addSection(sections, to - from, insLen);\n                addInsert(inserted, sections, insText);\n                pos = to;\n            }\n        }\n        process(changes);\n        flush(!total);\n        return total;\n    }\n    /**\n    Create an empty changeset of the given length.\n    */\n    static empty(length) {\n        return new ChangeSet(length ? [length, -1] : [], []);\n    }\n    /**\n    Create a changeset from its JSON representation (as produced by\n    [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeSet.toJSON).\n    */\n    static fromJSON(json) {\n        if (!Array.isArray(json))\n            throw new RangeError(\"Invalid JSON representation of ChangeSet\");\n        let sections = [], inserted = [];\n        for (let i = 0; i < json.length; i++) {\n            let part = json[i];\n            if (typeof part == \"number\") {\n                sections.push(part, -1);\n            }\n            else if (!Array.isArray(part) || typeof part[0] != \"number\" || part.some((e, i) => i && typeof e != \"string\")) {\n                throw new RangeError(\"Invalid JSON representation of ChangeSet\");\n            }\n            else if (part.length == 1) {\n                sections.push(part[0], 0);\n            }\n            else {\n                while (inserted.length < i)\n                    inserted.push(Text.empty);\n                inserted[i] = Text.of(part.slice(1));\n                sections.push(part[0], inserted[i].length);\n            }\n        }\n        return new ChangeSet(sections, inserted);\n    }\n    /**\n    @internal\n    */\n    static createSet(sections, inserted) {\n        return new ChangeSet(sections, inserted);\n    }\n}\nfunction addSection(sections, len, ins, forceJoin = false) {\n    if (len == 0 && ins <= 0)\n        return;\n    let last = sections.length - 2;\n    if (last >= 0 && ins <= 0 && ins == sections[last + 1])\n        sections[last] += len;\n    else if (len == 0 && sections[last] == 0)\n        sections[last + 1] += ins;\n    else if (forceJoin) {\n        sections[last] += len;\n        sections[last + 1] += ins;\n    }\n    else\n        sections.push(len, ins);\n}\nfunction addInsert(values, sections, value) {\n    if (value.length == 0)\n        return;\n    let index = (sections.length - 2) >> 1;\n    if (index < values.length) {\n        values[values.length - 1] = values[values.length - 1].append(value);\n    }\n    else {\n        while (values.length < index)\n            values.push(Text.empty);\n        values.push(value);\n    }\n}\nfunction iterChanges(desc, f, individual) {\n    let inserted = desc.inserted;\n    for (let posA = 0, posB = 0, i = 0; i < desc.sections.length;) {\n        let len = desc.sections[i++], ins = desc.sections[i++];\n        if (ins < 0) {\n            posA += len;\n            posB += len;\n        }\n        else {\n            let endA = posA, endB = posB, text = Text.empty;\n            for (;;) {\n                endA += len;\n                endB += ins;\n                if (ins && inserted)\n                    text = text.append(inserted[(i - 2) >> 1]);\n                if (individual || i == desc.sections.length || desc.sections[i + 1] < 0)\n                    break;\n                len = desc.sections[i++];\n                ins = desc.sections[i++];\n            }\n            f(posA, endA, posB, endB, text);\n            posA = endA;\n            posB = endB;\n        }\n    }\n}\nfunction mapSet(setA, setB, before, mkSet = false) {\n    let sections = [], insert = mkSet ? [] : null;\n    let a = new SectionIter(setA), b = new SectionIter(setB);\n    for (let posA = 0, posB = 0;;) {\n        if (a.ins == -1) {\n            posA += a.len;\n            a.next();\n        }\n        else if (b.ins == -1 && posB < posA) {\n            let skip = Math.min(b.len, posA - posB);\n            b.forward(skip);\n            addSection(sections, skip, -1);\n            posB += skip;\n        }\n        else if (b.ins >= 0 && (a.done || posB < posA || posB == posA && (b.len < a.len || b.len == a.len && !before))) {\n            addSection(sections, b.ins, -1);\n            while (posA > posB && !a.done && posA + a.len < posB + b.len) {\n                posA += a.len;\n                a.next();\n            }\n            posB += b.len;\n            b.next();\n        }\n        else if (a.ins >= 0) {\n            let len = 0, end = posA + a.len;\n            for (;;) {\n                if (b.ins >= 0 && posB > posA && posB + b.len < end) {\n                    len += b.ins;\n                    posB += b.len;\n                    b.next();\n                }\n                else if (b.ins == -1 && posB < end) {\n                    let skip = Math.min(b.len, end - posB);\n                    len += skip;\n                    b.forward(skip);\n                    posB += skip;\n                }\n                else {\n                    break;\n                }\n            }\n            addSection(sections, len, a.ins);\n            if (insert)\n                addInsert(insert, sections, a.text);\n            posA = end;\n            a.next();\n        }\n        else if (a.done && b.done) {\n            return insert ? ChangeSet.createSet(sections, insert) : ChangeDesc.create(sections);\n        }\n        else {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n    }\n}\nfunction composeSets(setA, setB, mkSet = false) {\n    let sections = [];\n    let insert = mkSet ? [] : null;\n    let a = new SectionIter(setA), b = new SectionIter(setB);\n    for (let open = false;;) {\n        if (a.done && b.done) {\n            return insert ? ChangeSet.createSet(sections, insert) : ChangeDesc.create(sections);\n        }\n        else if (a.ins == 0) { // Deletion in A\n            addSection(sections, a.len, 0, open);\n            a.next();\n        }\n        else if (b.len == 0 && !b.done) { // Insertion in B\n            addSection(sections, 0, b.ins, open);\n            if (insert)\n                addInsert(insert, sections, b.text);\n            b.next();\n        }\n        else if (a.done || b.done) {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n        else {\n            let len = Math.min(a.len2, b.len), sectionLen = sections.length;\n            if (a.ins == -1) {\n                let insB = b.ins == -1 ? -1 : b.off ? 0 : b.ins;\n                addSection(sections, len, insB, open);\n                if (insert && insB)\n                    addInsert(insert, sections, b.text);\n            }\n            else if (b.ins == -1) {\n                addSection(sections, a.off ? 0 : a.len, len, open);\n                if (insert)\n                    addInsert(insert, sections, a.textBit(len));\n            }\n            else {\n                addSection(sections, a.off ? 0 : a.len, b.off ? 0 : b.ins, open);\n                if (insert && !b.off)\n                    addInsert(insert, sections, b.text);\n            }\n            open = (a.ins > len || b.ins >= 0 && b.len > len) && (open || sections.length > sectionLen);\n            a.forward2(len);\n            b.forward(len);\n        }\n    }\n}\nclass SectionIter {\n    constructor(set) {\n        this.set = set;\n        this.i = 0;\n        this.next();\n    }\n    next() {\n        let { sections } = this.set;\n        if (this.i < sections.length) {\n            this.len = sections[this.i++];\n            this.ins = sections[this.i++];\n        }\n        else {\n            this.len = 0;\n            this.ins = -2;\n        }\n        this.off = 0;\n    }\n    get done() { return this.ins == -2; }\n    get len2() { return this.ins < 0 ? this.len : this.ins; }\n    get text() {\n        let { inserted } = this.set, index = (this.i - 2) >> 1;\n        return index >= inserted.length ? Text.empty : inserted[index];\n    }\n    textBit(len) {\n        let { inserted } = this.set, index = (this.i - 2) >> 1;\n        return index >= inserted.length && !len ? Text.empty\n            : inserted[index].slice(this.off, len == null ? undefined : this.off + len);\n    }\n    forward(len) {\n        if (len == this.len)\n            this.next();\n        else {\n            this.len -= len;\n            this.off += len;\n        }\n    }\n    forward2(len) {\n        if (this.ins == -1)\n            this.forward(len);\n        else if (len == this.ins)\n            this.next();\n        else {\n            this.ins -= len;\n            this.off += len;\n        }\n    }\n}\n\n/**\nA single selection range. When\n[`allowMultipleSelections`](https://codemirror.net/6/docs/ref/#state.EditorState^allowMultipleSelections)\nis enabled, a [selection](https://codemirror.net/6/docs/ref/#state.EditorSelection) may hold\nmultiple ranges. By default, selections hold exactly one range.\n*/\nclass SelectionRange {\n    constructor(\n    /**\n    The lower boundary of the range.\n    */\n    from, \n    /**\n    The upper boundary of the range.\n    */\n    to, flags) {\n        this.from = from;\n        this.to = to;\n        this.flags = flags;\n    }\n    /**\n    The anchor of the range—the side that doesn't move when you\n    extend it.\n    */\n    get anchor() { return this.flags & 16 /* Inverted */ ? this.to : this.from; }\n    /**\n    The head of the range, which is moved when the range is\n    [extended](https://codemirror.net/6/docs/ref/#state.SelectionRange.extend).\n    */\n    get head() { return this.flags & 16 /* Inverted */ ? this.from : this.to; }\n    /**\n    True when `anchor` and `head` are at the same position.\n    */\n    get empty() { return this.from == this.to; }\n    /**\n    If this is a cursor that is explicitly associated with the\n    character on one of its sides, this returns the side. -1 means\n    the character before its position, 1 the character after, and 0\n    means no association.\n    */\n    get assoc() { return this.flags & 4 /* AssocBefore */ ? -1 : this.flags & 8 /* AssocAfter */ ? 1 : 0; }\n    /**\n    The bidirectional text level associated with this cursor, if\n    any.\n    */\n    get bidiLevel() {\n        let level = this.flags & 3 /* BidiLevelMask */;\n        return level == 3 ? null : level;\n    }\n    /**\n    The goal column (stored vertical offset) associated with a\n    cursor. This is used to preserve the vertical position when\n    [moving](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) across\n    lines of different length.\n    */\n    get goalColumn() {\n        let value = this.flags >> 5 /* GoalColumnOffset */;\n        return value == 33554431 /* NoGoalColumn */ ? undefined : value;\n    }\n    /**\n    Map this range through a change, producing a valid range in the\n    updated document.\n    */\n    map(change, assoc = -1) {\n        let from, to;\n        if (this.empty) {\n            from = to = change.mapPos(this.from, assoc);\n        }\n        else {\n            from = change.mapPos(this.from, 1);\n            to = change.mapPos(this.to, -1);\n        }\n        return from == this.from && to == this.to ? this : new SelectionRange(from, to, this.flags);\n    }\n    /**\n    Extend this range to cover at least `from` to `to`.\n    */\n    extend(from, to = from) {\n        if (from <= this.anchor && to >= this.anchor)\n            return EditorSelection.range(from, to);\n        let head = Math.abs(from - this.anchor) > Math.abs(to - this.anchor) ? from : to;\n        return EditorSelection.range(this.anchor, head);\n    }\n    /**\n    Compare this range to another range.\n    */\n    eq(other) {\n        return this.anchor == other.anchor && this.head == other.head;\n    }\n    /**\n    Return a JSON-serializable object representing the range.\n    */\n    toJSON() { return { anchor: this.anchor, head: this.head }; }\n    /**\n    Convert a JSON representation of a range to a `SelectionRange`\n    instance.\n    */\n    static fromJSON(json) {\n        if (!json || typeof json.anchor != \"number\" || typeof json.head != \"number\")\n            throw new RangeError(\"Invalid JSON representation for SelectionRange\");\n        return EditorSelection.range(json.anchor, json.head);\n    }\n    /**\n    @internal\n    */\n    static create(from, to, flags) {\n        return new SelectionRange(from, to, flags);\n    }\n}\n/**\nAn editor selection holds one or more selection ranges.\n*/\nclass EditorSelection {\n    constructor(\n    /**\n    The ranges in the selection, sorted by position. Ranges cannot\n    overlap (but they may touch, if they aren't empty).\n    */\n    ranges, \n    /**\n    The index of the _main_ range in the selection (which is\n    usually the range that was added last).\n    */\n    mainIndex) {\n        this.ranges = ranges;\n        this.mainIndex = mainIndex;\n    }\n    /**\n    Map a selection through a change. Used to adjust the selection\n    position for changes.\n    */\n    map(change, assoc = -1) {\n        if (change.empty)\n            return this;\n        return EditorSelection.create(this.ranges.map(r => r.map(change, assoc)), this.mainIndex);\n    }\n    /**\n    Compare this selection to another selection.\n    */\n    eq(other) {\n        if (this.ranges.length != other.ranges.length ||\n            this.mainIndex != other.mainIndex)\n            return false;\n        for (let i = 0; i < this.ranges.length; i++)\n            if (!this.ranges[i].eq(other.ranges[i]))\n                return false;\n        return true;\n    }\n    /**\n    Get the primary selection range. Usually, you should make sure\n    your code applies to _all_ ranges, by using methods like\n    [`changeByRange`](https://codemirror.net/6/docs/ref/#state.EditorState.changeByRange).\n    */\n    get main() { return this.ranges[this.mainIndex]; }\n    /**\n    Make sure the selection only has one range. Returns a selection\n    holding only the main range from this selection.\n    */\n    asSingle() {\n        return this.ranges.length == 1 ? this : new EditorSelection([this.main], 0);\n    }\n    /**\n    Extend this selection with an extra range.\n    */\n    addRange(range, main = true) {\n        return EditorSelection.create([range].concat(this.ranges), main ? 0 : this.mainIndex + 1);\n    }\n    /**\n    Replace a given range with another range, and then normalize the\n    selection to merge and sort ranges if necessary.\n    */\n    replaceRange(range, which = this.mainIndex) {\n        let ranges = this.ranges.slice();\n        ranges[which] = range;\n        return EditorSelection.create(ranges, this.mainIndex);\n    }\n    /**\n    Convert this selection to an object that can be serialized to\n    JSON.\n    */\n    toJSON() {\n        return { ranges: this.ranges.map(r => r.toJSON()), main: this.mainIndex };\n    }\n    /**\n    Create a selection from a JSON representation.\n    */\n    static fromJSON(json) {\n        if (!json || !Array.isArray(json.ranges) || typeof json.main != \"number\" || json.main >= json.ranges.length)\n            throw new RangeError(\"Invalid JSON representation for EditorSelection\");\n        return new EditorSelection(json.ranges.map((r) => SelectionRange.fromJSON(r)), json.main);\n    }\n    /**\n    Create a selection holding a single range.\n    */\n    static single(anchor, head = anchor) {\n        return new EditorSelection([EditorSelection.range(anchor, head)], 0);\n    }\n    /**\n    Sort and merge the given set of ranges, creating a valid\n    selection.\n    */\n    static create(ranges, mainIndex = 0) {\n        if (ranges.length == 0)\n            throw new RangeError(\"A selection needs at least one range\");\n        for (let pos = 0, i = 0; i < ranges.length; i++) {\n            let range = ranges[i];\n            if (range.empty ? range.from <= pos : range.from < pos)\n                return EditorSelection.normalized(ranges.slice(), mainIndex);\n            pos = range.to;\n        }\n        return new EditorSelection(ranges, mainIndex);\n    }\n    /**\n    Create a cursor selection range at the given position. You can\n    safely ignore the optional arguments in most situations.\n    */\n    static cursor(pos, assoc = 0, bidiLevel, goalColumn) {\n        return SelectionRange.create(pos, pos, (assoc == 0 ? 0 : assoc < 0 ? 4 /* AssocBefore */ : 8 /* AssocAfter */) |\n            (bidiLevel == null ? 3 : Math.min(2, bidiLevel)) |\n            ((goalColumn !== null && goalColumn !== void 0 ? goalColumn : 33554431 /* NoGoalColumn */) << 5 /* GoalColumnOffset */));\n    }\n    /**\n    Create a selection range.\n    */\n    static range(anchor, head, goalColumn) {\n        let goal = (goalColumn !== null && goalColumn !== void 0 ? goalColumn : 33554431 /* NoGoalColumn */) << 5 /* GoalColumnOffset */;\n        return head < anchor ? SelectionRange.create(head, anchor, 16 /* Inverted */ | goal | 8 /* AssocAfter */)\n            : SelectionRange.create(anchor, head, goal | (head > anchor ? 4 /* AssocBefore */ : 0));\n    }\n    /**\n    @internal\n    */\n    static normalized(ranges, mainIndex = 0) {\n        let main = ranges[mainIndex];\n        ranges.sort((a, b) => a.from - b.from);\n        mainIndex = ranges.indexOf(main);\n        for (let i = 1; i < ranges.length; i++) {\n            let range = ranges[i], prev = ranges[i - 1];\n            if (range.empty ? range.from <= prev.to : range.from < prev.to) {\n                let from = prev.from, to = Math.max(range.to, prev.to);\n                if (i <= mainIndex)\n                    mainIndex--;\n                ranges.splice(--i, 2, range.anchor > range.head ? EditorSelection.range(to, from) : EditorSelection.range(from, to));\n            }\n        }\n        return new EditorSelection(ranges, mainIndex);\n    }\n}\nfunction checkSelection(selection, docLength) {\n    for (let range of selection.ranges)\n        if (range.to > docLength)\n            throw new RangeError(\"Selection points outside of document\");\n}\n\nlet nextID = 0;\n/**\nA facet is a labeled value that is associated with an editor\nstate. It takes inputs from any number of extensions, and combines\nthose into a single output value.\n\nExamples of uses of facets are the [tab\nsize](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize), [editor\nattributes](https://codemirror.net/6/docs/ref/#view.EditorView^editorAttributes), and [update\nlisteners](https://codemirror.net/6/docs/ref/#view.EditorView^updateListener).\n*/\nclass Facet {\n    constructor(\n    /**\n    @internal\n    */\n    combine, \n    /**\n    @internal\n    */\n    compareInput, \n    /**\n    @internal\n    */\n    compare, isStatic, \n    /**\n    @internal\n    */\n    extensions) {\n        this.combine = combine;\n        this.compareInput = compareInput;\n        this.compare = compare;\n        this.isStatic = isStatic;\n        this.extensions = extensions;\n        /**\n        @internal\n        */\n        this.id = nextID++;\n        this.default = combine([]);\n    }\n    /**\n    Define a new facet.\n    */\n    static define(config = {}) {\n        return new Facet(config.combine || ((a) => a), config.compareInput || ((a, b) => a === b), config.compare || (!config.combine ? sameArray : (a, b) => a === b), !!config.static, config.enables);\n    }\n    /**\n    Returns an extension that adds the given value to this facet.\n    */\n    of(value) {\n        return new FacetProvider([], this, 0 /* Static */, value);\n    }\n    /**\n    Create an extension that computes a value for the facet from a\n    state. You must take care to declare the parts of the state that\n    this value depends on, since your function is only called again\n    for a new state when one of those parts changed.\n    \n    In cases where your value depends only on a single field, you'll\n    want to use the [`from`](https://codemirror.net/6/docs/ref/#state.Facet.from) method instead.\n    */\n    compute(deps, get) {\n        if (this.isStatic)\n            throw new Error(\"Can't compute a static facet\");\n        return new FacetProvider(deps, this, 1 /* Single */, get);\n    }\n    /**\n    Create an extension that computes zero or more values for this\n    facet from a state.\n    */\n    computeN(deps, get) {\n        if (this.isStatic)\n            throw new Error(\"Can't compute a static facet\");\n        return new FacetProvider(deps, this, 2 /* Multi */, get);\n    }\n    from(field, get) {\n        if (!get)\n            get = x => x;\n        return this.compute([field], state => get(state.field(field)));\n    }\n}\nfunction sameArray(a, b) {\n    return a == b || a.length == b.length && a.every((e, i) => e === b[i]);\n}\nclass FacetProvider {\n    constructor(dependencies, facet, type, value) {\n        this.dependencies = dependencies;\n        this.facet = facet;\n        this.type = type;\n        this.value = value;\n        this.id = nextID++;\n    }\n    dynamicSlot(addresses) {\n        var _a;\n        let getter = this.value;\n        let compare = this.facet.compareInput;\n        let id = this.id, idx = addresses[id] >> 1, multi = this.type == 2 /* Multi */;\n        let depDoc = false, depSel = false, depAddrs = [];\n        for (let dep of this.dependencies) {\n            if (dep == \"doc\")\n                depDoc = true;\n            else if (dep == \"selection\")\n                depSel = true;\n            else if ((((_a = addresses[dep.id]) !== null && _a !== void 0 ? _a : 1) & 1) == 0)\n                depAddrs.push(addresses[dep.id]);\n        }\n        return {\n            create(state) {\n                state.values[idx] = getter(state);\n                return 1 /* Changed */;\n            },\n            update(state, tr) {\n                if ((depDoc && tr.docChanged) || (depSel && (tr.docChanged || tr.selection)) || ensureAll(state, depAddrs)) {\n                    let newVal = getter(state);\n                    if (multi ? !compareArray(newVal, state.values[idx], compare) : !compare(newVal, state.values[idx])) {\n                        state.values[idx] = newVal;\n                        return 1 /* Changed */;\n                    }\n                }\n                return 0;\n            },\n            reconfigure: (state, oldState) => {\n                let newVal = getter(state);\n                let oldAddr = oldState.config.address[id];\n                if (oldAddr != null) {\n                    let oldVal = getAddr(oldState, oldAddr);\n                    if (this.dependencies.every(dep => {\n                        return dep instanceof Facet ? oldState.facet(dep) === state.facet(dep) :\n                            dep instanceof StateField ? oldState.field(dep, false) == state.field(dep, false) : true;\n                    }) || (multi ? compareArray(newVal, oldVal, compare) : compare(newVal, oldVal))) {\n                        state.values[idx] = oldVal;\n                        return 0;\n                    }\n                }\n                state.values[idx] = newVal;\n                return 1 /* Changed */;\n            }\n        };\n    }\n}\nfunction compareArray(a, b, compare) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!compare(a[i], b[i]))\n            return false;\n    return true;\n}\nfunction ensureAll(state, addrs) {\n    let changed = false;\n    for (let addr of addrs)\n        if (ensureAddr(state, addr) & 1 /* Changed */)\n            changed = true;\n    return changed;\n}\nfunction dynamicFacetSlot(addresses, facet, providers) {\n    let providerAddrs = providers.map(p => addresses[p.id]);\n    let providerTypes = providers.map(p => p.type);\n    let dynamic = providerAddrs.filter(p => !(p & 1));\n    let idx = addresses[facet.id] >> 1;\n    function get(state) {\n        let values = [];\n        for (let i = 0; i < providerAddrs.length; i++) {\n            let value = getAddr(state, providerAddrs[i]);\n            if (providerTypes[i] == 2 /* Multi */)\n                for (let val of value)\n                    values.push(val);\n            else\n                values.push(value);\n        }\n        return facet.combine(values);\n    }\n    return {\n        create(state) {\n            for (let addr of providerAddrs)\n                ensureAddr(state, addr);\n            state.values[idx] = get(state);\n            return 1 /* Changed */;\n        },\n        update(state, tr) {\n            if (!ensureAll(state, dynamic))\n                return 0;\n            let value = get(state);\n            if (facet.compare(value, state.values[idx]))\n                return 0;\n            state.values[idx] = value;\n            return 1 /* Changed */;\n        },\n        reconfigure(state, oldState) {\n            let depChanged = ensureAll(state, providerAddrs);\n            let oldProviders = oldState.config.facets[facet.id], oldValue = oldState.facet(facet);\n            if (oldProviders && !depChanged && sameArray(providers, oldProviders)) {\n                state.values[idx] = oldValue;\n                return 0;\n            }\n            let value = get(state);\n            if (facet.compare(value, oldValue)) {\n                state.values[idx] = oldValue;\n                return 0;\n            }\n            state.values[idx] = value;\n            return 1 /* Changed */;\n        }\n    };\n}\nconst initField = /*@__PURE__*/Facet.define({ static: true });\n/**\nFields can store additional information in an editor state, and\nkeep it in sync with the rest of the state.\n*/\nclass StateField {\n    constructor(\n    /**\n    @internal\n    */\n    id, createF, updateF, compareF, \n    /**\n    @internal\n    */\n    spec) {\n        this.id = id;\n        this.createF = createF;\n        this.updateF = updateF;\n        this.compareF = compareF;\n        this.spec = spec;\n        /**\n        @internal\n        */\n        this.provides = undefined;\n    }\n    /**\n    Define a state field.\n    */\n    static define(config) {\n        let field = new StateField(nextID++, config.create, config.update, config.compare || ((a, b) => a === b), config);\n        if (config.provide)\n            field.provides = config.provide(field);\n        return field;\n    }\n    create(state) {\n        let init = state.facet(initField).find(i => i.field == this);\n        return ((init === null || init === void 0 ? void 0 : init.create) || this.createF)(state);\n    }\n    /**\n    @internal\n    */\n    slot(addresses) {\n        let idx = addresses[this.id] >> 1;\n        return {\n            create: (state) => {\n                state.values[idx] = this.create(state);\n                return 1 /* Changed */;\n            },\n            update: (state, tr) => {\n                let oldVal = state.values[idx];\n                let value = this.updateF(oldVal, tr);\n                if (this.compareF(oldVal, value))\n                    return 0;\n                state.values[idx] = value;\n                return 1 /* Changed */;\n            },\n            reconfigure: (state, oldState) => {\n                if (oldState.config.address[this.id] != null) {\n                    state.values[idx] = oldState.field(this);\n                    return 0;\n                }\n                state.values[idx] = this.create(state);\n                return 1 /* Changed */;\n            }\n        };\n    }\n    /**\n    Returns an extension that enables this field and overrides the\n    way it is initialized. Can be useful when you need to provide a\n    non-default starting value for the field.\n    */\n    init(create) {\n        return [this, initField.of({ field: this, create })];\n    }\n    /**\n    State field instances can be used as\n    [`Extension`](https://codemirror.net/6/docs/ref/#state.Extension) values to enable the field in a\n    given state.\n    */\n    get extension() { return this; }\n}\nconst Prec_ = { lowest: 4, low: 3, default: 2, high: 1, highest: 0 };\nfunction prec(value) {\n    return (ext) => new PrecExtension(ext, value);\n}\n/**\nBy default extensions are registered in the order they are found\nin the flattened form of nested array that was provided.\nIndividual extension values can be assigned a precedence to\noverride this. Extensions that do not have a precedence set get\nthe precedence of the nearest parent with a precedence, or\n[`default`](https://codemirror.net/6/docs/ref/#state.Prec.default) if there is no such parent. The\nfinal ordering of extensions is determined by first sorting by\nprecedence and then by order within each precedence.\n*/\nconst Prec = {\n    /**\n    The highest precedence level, for extensions that should end up\n    near the start of the precedence ordering.\n    */\n    highest: /*@__PURE__*/prec(Prec_.highest),\n    /**\n    A higher-than-default precedence, for extensions that should\n    come before those with default precedence.\n    */\n    high: /*@__PURE__*/prec(Prec_.high),\n    /**\n    The default precedence, which is also used for extensions\n    without an explicit precedence.\n    */\n    default: /*@__PURE__*/prec(Prec_.default),\n    /**\n    A lower-than-default precedence.\n    */\n    low: /*@__PURE__*/prec(Prec_.low),\n    /**\n    The lowest precedence level. Meant for things that should end up\n    near the end of the extension order.\n    */\n    lowest: /*@__PURE__*/prec(Prec_.lowest)\n};\nclass PrecExtension {\n    constructor(inner, prec) {\n        this.inner = inner;\n        this.prec = prec;\n    }\n}\n/**\nExtension compartments can be used to make a configuration\ndynamic. By [wrapping](https://codemirror.net/6/docs/ref/#state.Compartment.of) part of your\nconfiguration in a compartment, you can later\n[replace](https://codemirror.net/6/docs/ref/#state.Compartment.reconfigure) that part through a\ntransaction.\n*/\nclass Compartment {\n    /**\n    Create an instance of this compartment to add to your [state\n    configuration](https://codemirror.net/6/docs/ref/#state.EditorStateConfig.extensions).\n    */\n    of(ext) { return new CompartmentInstance(this, ext); }\n    /**\n    Create an [effect](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) that\n    reconfigures this compartment.\n    */\n    reconfigure(content) {\n        return Compartment.reconfigure.of({ compartment: this, extension: content });\n    }\n    /**\n    Get the current content of the compartment in the state, or\n    `undefined` if it isn't present.\n    */\n    get(state) {\n        return state.config.compartments.get(this);\n    }\n}\nclass CompartmentInstance {\n    constructor(compartment, inner) {\n        this.compartment = compartment;\n        this.inner = inner;\n    }\n}\nclass Configuration {\n    constructor(base, compartments, dynamicSlots, address, staticValues, facets) {\n        this.base = base;\n        this.compartments = compartments;\n        this.dynamicSlots = dynamicSlots;\n        this.address = address;\n        this.staticValues = staticValues;\n        this.facets = facets;\n        this.statusTemplate = [];\n        while (this.statusTemplate.length < dynamicSlots.length)\n            this.statusTemplate.push(0 /* Unresolved */);\n    }\n    staticFacet(facet) {\n        let addr = this.address[facet.id];\n        return addr == null ? facet.default : this.staticValues[addr >> 1];\n    }\n    static resolve(base, compartments, oldState) {\n        let fields = [];\n        let facets = Object.create(null);\n        let newCompartments = new Map();\n        for (let ext of flatten(base, compartments, newCompartments)) {\n            if (ext instanceof StateField)\n                fields.push(ext);\n            else\n                (facets[ext.facet.id] || (facets[ext.facet.id] = [])).push(ext);\n        }\n        let address = Object.create(null);\n        let staticValues = [];\n        let dynamicSlots = [];\n        for (let field of fields) {\n            address[field.id] = dynamicSlots.length << 1;\n            dynamicSlots.push(a => field.slot(a));\n        }\n        let oldFacets = oldState === null || oldState === void 0 ? void 0 : oldState.config.facets;\n        for (let id in facets) {\n            let providers = facets[id], facet = providers[0].facet;\n            let oldProviders = oldFacets && oldFacets[id] || [];\n            if (providers.every(p => p.type == 0 /* Static */)) {\n                address[facet.id] = (staticValues.length << 1) | 1;\n                if (sameArray(oldProviders, providers)) {\n                    staticValues.push(oldState.facet(facet));\n                }\n                else {\n                    let value = facet.combine(providers.map(p => p.value));\n                    staticValues.push(oldState && facet.compare(value, oldState.facet(facet)) ? oldState.facet(facet) : value);\n                }\n            }\n            else {\n                for (let p of providers) {\n                    if (p.type == 0 /* Static */) {\n                        address[p.id] = (staticValues.length << 1) | 1;\n                        staticValues.push(p.value);\n                    }\n                    else {\n                        address[p.id] = dynamicSlots.length << 1;\n                        dynamicSlots.push(a => p.dynamicSlot(a));\n                    }\n                }\n                address[facet.id] = dynamicSlots.length << 1;\n                dynamicSlots.push(a => dynamicFacetSlot(a, facet, providers));\n            }\n        }\n        let dynamic = dynamicSlots.map(f => f(address));\n        return new Configuration(base, newCompartments, dynamic, address, staticValues, facets);\n    }\n}\nfunction flatten(extension, compartments, newCompartments) {\n    let result = [[], [], [], [], []];\n    let seen = new Map();\n    function inner(ext, prec) {\n        let known = seen.get(ext);\n        if (known != null) {\n            if (known <= prec)\n                return;\n            let found = result[known].indexOf(ext);\n            if (found > -1)\n                result[known].splice(found, 1);\n            if (ext instanceof CompartmentInstance)\n                newCompartments.delete(ext.compartment);\n        }\n        seen.set(ext, prec);\n        if (Array.isArray(ext)) {\n            for (let e of ext)\n                inner(e, prec);\n        }\n        else if (ext instanceof CompartmentInstance) {\n            if (newCompartments.has(ext.compartment))\n                throw new RangeError(`Duplicate use of compartment in extensions`);\n            let content = compartments.get(ext.compartment) || ext.inner;\n            newCompartments.set(ext.compartment, content);\n            inner(content, prec);\n        }\n        else if (ext instanceof PrecExtension) {\n            inner(ext.inner, ext.prec);\n        }\n        else if (ext instanceof StateField) {\n            result[prec].push(ext);\n            if (ext.provides)\n                inner(ext.provides, prec);\n        }\n        else if (ext instanceof FacetProvider) {\n            result[prec].push(ext);\n            if (ext.facet.extensions)\n                inner(ext.facet.extensions, prec);\n        }\n        else {\n            let content = ext.extension;\n            if (!content)\n                throw new Error(`Unrecognized extension value in extension set (${ext}). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks.`);\n            inner(content, prec);\n        }\n    }\n    inner(extension, Prec_.default);\n    return result.reduce((a, b) => a.concat(b));\n}\nfunction ensureAddr(state, addr) {\n    if (addr & 1)\n        return 2 /* Computed */;\n    let idx = addr >> 1;\n    let status = state.status[idx];\n    if (status == 4 /* Computing */)\n        throw new Error(\"Cyclic dependency between fields and/or facets\");\n    if (status & 2 /* Computed */)\n        return status;\n    state.status[idx] = 4 /* Computing */;\n    let changed = state.computeSlot(state, state.config.dynamicSlots[idx]);\n    return state.status[idx] = 2 /* Computed */ | changed;\n}\nfunction getAddr(state, addr) {\n    return addr & 1 ? state.config.staticValues[addr >> 1] : state.values[addr >> 1];\n}\n\nconst languageData = /*@__PURE__*/Facet.define();\nconst allowMultipleSelections = /*@__PURE__*/Facet.define({\n    combine: values => values.some(v => v),\n    static: true\n});\nconst lineSeparator = /*@__PURE__*/Facet.define({\n    combine: values => values.length ? values[0] : undefined,\n    static: true\n});\nconst changeFilter = /*@__PURE__*/Facet.define();\nconst transactionFilter = /*@__PURE__*/Facet.define();\nconst transactionExtender = /*@__PURE__*/Facet.define();\nconst readOnly = /*@__PURE__*/Facet.define({\n    combine: values => values.length ? values[0] : false\n});\n\n/**\nAnnotations are tagged values that are used to add metadata to\ntransactions in an extensible way. They should be used to model\nthings that effect the entire transaction (such as its [time\nstamp](https://codemirror.net/6/docs/ref/#state.Transaction^time) or information about its\n[origin](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent)). For effects that happen\n_alongside_ the other changes made by the transaction, [state\neffects](https://codemirror.net/6/docs/ref/#state.StateEffect) are more appropriate.\n*/\nclass Annotation {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The annotation type.\n    */\n    type, \n    /**\n    The value of this annotation.\n    */\n    value) {\n        this.type = type;\n        this.value = value;\n    }\n    /**\n    Define a new type of annotation.\n    */\n    static define() { return new AnnotationType(); }\n}\n/**\nMarker that identifies a type of [annotation](https://codemirror.net/6/docs/ref/#state.Annotation).\n*/\nclass AnnotationType {\n    /**\n    Create an instance of this annotation.\n    */\n    of(value) { return new Annotation(this, value); }\n}\n/**\nRepresentation of a type of state effect. Defined with\n[`StateEffect.define`](https://codemirror.net/6/docs/ref/#state.StateEffect^define).\n*/\nclass StateEffectType {\n    /**\n    @internal\n    */\n    constructor(\n    // The `any` types in these function types are there to work\n    // around TypeScript issue #37631, where the type guard on\n    // `StateEffect.is` mysteriously stops working when these properly\n    // have type `Value`.\n    /**\n    @internal\n    */\n    map) {\n        this.map = map;\n    }\n    /**\n    Create a [state effect](https://codemirror.net/6/docs/ref/#state.StateEffect) instance of this\n    type.\n    */\n    of(value) { return new StateEffect(this, value); }\n}\n/**\nState effects can be used to represent additional effects\nassociated with a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction.effects). They\nare often useful to model changes to custom [state\nfields](https://codemirror.net/6/docs/ref/#state.StateField), when those changes aren't implicit in\ndocument or selection changes.\n*/\nclass StateEffect {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    type, \n    /**\n    The value of this effect.\n    */\n    value) {\n        this.type = type;\n        this.value = value;\n    }\n    /**\n    Map this effect through a position mapping. Will return\n    `undefined` when that ends up deleting the effect.\n    */\n    map(mapping) {\n        let mapped = this.type.map(this.value, mapping);\n        return mapped === undefined ? undefined : mapped == this.value ? this : new StateEffect(this.type, mapped);\n    }\n    /**\n    Tells you whether this effect object is of a given\n    [type](https://codemirror.net/6/docs/ref/#state.StateEffectType).\n    */\n    is(type) { return this.type == type; }\n    /**\n    Define a new effect type. The type parameter indicates the type\n    of values that his effect holds.\n    */\n    static define(spec = {}) {\n        return new StateEffectType(spec.map || (v => v));\n    }\n    /**\n    Map an array of effects through a change set.\n    */\n    static mapEffects(effects, mapping) {\n        if (!effects.length)\n            return effects;\n        let result = [];\n        for (let effect of effects) {\n            let mapped = effect.map(mapping);\n            if (mapped)\n                result.push(mapped);\n        }\n        return result;\n    }\n}\n/**\nThis effect can be used to reconfigure the root extensions of\nthe editor. Doing this will discard any extensions\n[appended](https://codemirror.net/6/docs/ref/#state.StateEffect^appendConfig), but does not reset\nthe content of [reconfigured](https://codemirror.net/6/docs/ref/#state.Compartment.reconfigure)\ncompartments.\n*/\nStateEffect.reconfigure = /*@__PURE__*/StateEffect.define();\n/**\nAppend extensions to the top-level configuration of the editor.\n*/\nStateEffect.appendConfig = /*@__PURE__*/StateEffect.define();\n/**\nChanges to the editor state are grouped into transactions.\nTypically, a user action creates a single transaction, which may\ncontain any number of document changes, may change the selection,\nor have other effects. Create a transaction by calling\n[`EditorState.update`](https://codemirror.net/6/docs/ref/#state.EditorState.update), or immediately\ndispatch one by calling\n[`EditorView.dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch).\n*/\nclass Transaction {\n    constructor(\n    /**\n    The state from which the transaction starts.\n    */\n    startState, \n    /**\n    The document changes made by this transaction.\n    */\n    changes, \n    /**\n    The selection set by this transaction, or undefined if it\n    doesn't explicitly set a selection.\n    */\n    selection, \n    /**\n    The effects added to the transaction.\n    */\n    effects, \n    /**\n    @internal\n    */\n    annotations, \n    /**\n    Whether the selection should be scrolled into view after this\n    transaction is dispatched.\n    */\n    scrollIntoView) {\n        this.startState = startState;\n        this.changes = changes;\n        this.selection = selection;\n        this.effects = effects;\n        this.annotations = annotations;\n        this.scrollIntoView = scrollIntoView;\n        /**\n        @internal\n        */\n        this._doc = null;\n        /**\n        @internal\n        */\n        this._state = null;\n        if (selection)\n            checkSelection(selection, changes.newLength);\n        if (!annotations.some((a) => a.type == Transaction.time))\n            this.annotations = annotations.concat(Transaction.time.of(Date.now()));\n    }\n    /**\n    @internal\n    */\n    static create(startState, changes, selection, effects, annotations, scrollIntoView) {\n        return new Transaction(startState, changes, selection, effects, annotations, scrollIntoView);\n    }\n    /**\n    The new document produced by the transaction. Contrary to\n    [`.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state)`.doc`, accessing this won't\n    force the entire new state to be computed right away, so it is\n    recommended that [transaction\n    filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) use this getter\n    when they need to look at the new document.\n    */\n    get newDoc() {\n        return this._doc || (this._doc = this.changes.apply(this.startState.doc));\n    }\n    /**\n    The new selection produced by the transaction. If\n    [`this.selection`](https://codemirror.net/6/docs/ref/#state.Transaction.selection) is undefined,\n    this will [map](https://codemirror.net/6/docs/ref/#state.EditorSelection.map) the start state's\n    current selection through the changes made by the transaction.\n    */\n    get newSelection() {\n        return this.selection || this.startState.selection.map(this.changes);\n    }\n    /**\n    The new state created by the transaction. Computed on demand\n    (but retained for subsequent access), so it is recommended not to\n    access it in [transaction\n    filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) when possible.\n    */\n    get state() {\n        if (!this._state)\n            this.startState.applyTransaction(this);\n        return this._state;\n    }\n    /**\n    Get the value of the given annotation type, if any.\n    */\n    annotation(type) {\n        for (let ann of this.annotations)\n            if (ann.type == type)\n                return ann.value;\n        return undefined;\n    }\n    /**\n    Indicates whether the transaction changed the document.\n    */\n    get docChanged() { return !this.changes.empty; }\n    /**\n    Indicates whether this transaction reconfigures the state\n    (through a [configuration compartment](https://codemirror.net/6/docs/ref/#state.Compartment) or\n    with a top-level configuration\n    [effect](https://codemirror.net/6/docs/ref/#state.StateEffect^reconfigure).\n    */\n    get reconfigured() { return this.startState.config != this.state.config; }\n    /**\n    Returns true if the transaction has a [user\n    event](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent) annotation that is equal to\n    or more specific than `event`. For example, if the transaction\n    has `\"select.pointer\"` as user event, `\"select\"` and\n    `\"select.pointer\"` will match it.\n    */\n    isUserEvent(event) {\n        let e = this.annotation(Transaction.userEvent);\n        return !!(e && (e == event || e.length > event.length && e.slice(0, event.length) == event && e[event.length] == \".\"));\n    }\n}\n/**\nAnnotation used to store transaction timestamps. Automatically\nadded to every transaction, holding `Date.now()`.\n*/\nTransaction.time = /*@__PURE__*/Annotation.define();\n/**\nAnnotation used to associate a transaction with a user interface\nevent. Holds a string identifying the event, using a\ndot-separated format to support attaching more specific\ninformation. The events used by the core libraries are:\n\n - `\"input\"` when content is entered\n   - `\"input.type\"` for typed input\n     - `\"input.type.compose\"` for composition\n   - `\"input.paste\"` for pasted input\n   - `\"input.drop\"` when adding content with drag-and-drop\n   - `\"input.complete\"` when autocompleting\n - `\"delete\"` when the user deletes content\n   - `\"delete.selection\"` when deleting the selection\n   - `\"delete.forward\"` when deleting forward from the selection\n   - `\"delete.backward\"` when deleting backward from the selection\n   - `\"delete.cut\"` when cutting to the clipboard\n - `\"move\"` when content is moved\n   - `\"move.drop\"` when content is moved within the editor through drag-and-drop\n - `\"select\"` when explicitly changing the selection\n   - `\"select.pointer\"` when selecting with a mouse or other pointing device\n - `\"undo\"` and `\"redo\"` for history actions\n\nUse [`isUserEvent`](https://codemirror.net/6/docs/ref/#state.Transaction.isUserEvent) to check\nwhether the annotation matches a given event.\n*/\nTransaction.userEvent = /*@__PURE__*/Annotation.define();\n/**\nAnnotation indicating whether a transaction should be added to\nthe undo history or not.\n*/\nTransaction.addToHistory = /*@__PURE__*/Annotation.define();\n/**\nAnnotation indicating (when present and true) that a transaction\nrepresents a change made by some other actor, not the user. This\nis used, for example, to tag other people's changes in\ncollaborative editing.\n*/\nTransaction.remote = /*@__PURE__*/Annotation.define();\nfunction joinRanges(a, b) {\n    let result = [];\n    for (let iA = 0, iB = 0;;) {\n        let from, to;\n        if (iA < a.length && (iB == b.length || b[iB] >= a[iA])) {\n            from = a[iA++];\n            to = a[iA++];\n        }\n        else if (iB < b.length) {\n            from = b[iB++];\n            to = b[iB++];\n        }\n        else\n            return result;\n        if (!result.length || result[result.length - 1] < from)\n            result.push(from, to);\n        else if (result[result.length - 1] < to)\n            result[result.length - 1] = to;\n    }\n}\nfunction mergeTransaction(a, b, sequential) {\n    var _a;\n    let mapForA, mapForB, changes;\n    if (sequential) {\n        mapForA = b.changes;\n        mapForB = ChangeSet.empty(b.changes.length);\n        changes = a.changes.compose(b.changes);\n    }\n    else {\n        mapForA = b.changes.map(a.changes);\n        mapForB = a.changes.mapDesc(b.changes, true);\n        changes = a.changes.compose(mapForA);\n    }\n    return {\n        changes,\n        selection: b.selection ? b.selection.map(mapForB) : (_a = a.selection) === null || _a === void 0 ? void 0 : _a.map(mapForA),\n        effects: StateEffect.mapEffects(a.effects, mapForA).concat(StateEffect.mapEffects(b.effects, mapForB)),\n        annotations: a.annotations.length ? a.annotations.concat(b.annotations) : b.annotations,\n        scrollIntoView: a.scrollIntoView || b.scrollIntoView\n    };\n}\nfunction resolveTransactionInner(state, spec, docSize) {\n    let sel = spec.selection, annotations = asArray(spec.annotations);\n    if (spec.userEvent)\n        annotations = annotations.concat(Transaction.userEvent.of(spec.userEvent));\n    return {\n        changes: spec.changes instanceof ChangeSet ? spec.changes\n            : ChangeSet.of(spec.changes || [], docSize, state.facet(lineSeparator)),\n        selection: sel && (sel instanceof EditorSelection ? sel : EditorSelection.single(sel.anchor, sel.head)),\n        effects: asArray(spec.effects),\n        annotations,\n        scrollIntoView: !!spec.scrollIntoView\n    };\n}\nfunction resolveTransaction(state, specs, filter) {\n    let s = resolveTransactionInner(state, specs.length ? specs[0] : {}, state.doc.length);\n    if (specs.length && specs[0].filter === false)\n        filter = false;\n    for (let i = 1; i < specs.length; i++) {\n        if (specs[i].filter === false)\n            filter = false;\n        let seq = !!specs[i].sequential;\n        s = mergeTransaction(s, resolveTransactionInner(state, specs[i], seq ? s.changes.newLength : state.doc.length), seq);\n    }\n    let tr = Transaction.create(state, s.changes, s.selection, s.effects, s.annotations, s.scrollIntoView);\n    return extendTransaction(filter ? filterTransaction(tr) : tr);\n}\n// Finish a transaction by applying filters if necessary.\nfunction filterTransaction(tr) {\n    let state = tr.startState;\n    // Change filters\n    let result = true;\n    for (let filter of state.facet(changeFilter)) {\n        let value = filter(tr);\n        if (value === false) {\n            result = false;\n            break;\n        }\n        if (Array.isArray(value))\n            result = result === true ? value : joinRanges(result, value);\n    }\n    if (result !== true) {\n        let changes, back;\n        if (result === false) {\n            back = tr.changes.invertedDesc;\n            changes = ChangeSet.empty(state.doc.length);\n        }\n        else {\n            let filtered = tr.changes.filter(result);\n            changes = filtered.changes;\n            back = filtered.filtered.invertedDesc;\n        }\n        tr = Transaction.create(state, changes, tr.selection && tr.selection.map(back), StateEffect.mapEffects(tr.effects, back), tr.annotations, tr.scrollIntoView);\n    }\n    // Transaction filters\n    let filters = state.facet(transactionFilter);\n    for (let i = filters.length - 1; i >= 0; i--) {\n        let filtered = filters[i](tr);\n        if (filtered instanceof Transaction)\n            tr = filtered;\n        else if (Array.isArray(filtered) && filtered.length == 1 && filtered[0] instanceof Transaction)\n            tr = filtered[0];\n        else\n            tr = resolveTransaction(state, asArray(filtered), false);\n    }\n    return tr;\n}\nfunction extendTransaction(tr) {\n    let state = tr.startState, extenders = state.facet(transactionExtender), spec = tr;\n    for (let i = extenders.length - 1; i >= 0; i--) {\n        let extension = extenders[i](tr);\n        if (extension && Object.keys(extension).length)\n            spec = mergeTransaction(tr, resolveTransactionInner(state, extension, tr.changes.newLength), true);\n    }\n    return spec == tr ? tr : Transaction.create(state, tr.changes, tr.selection, spec.effects, spec.annotations, spec.scrollIntoView);\n}\nconst none = [];\nfunction asArray(value) {\n    return value == null ? none : Array.isArray(value) ? value : [value];\n}\n\n/**\nThe categories produced by a [character\ncategorizer](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer). These are used\ndo things like selecting by word.\n*/\nvar CharCategory = /*@__PURE__*/(function (CharCategory) {\n    /**\n    Word characters.\n    */\n    CharCategory[CharCategory[\"Word\"] = 0] = \"Word\";\n    /**\n    Whitespace.\n    */\n    CharCategory[CharCategory[\"Space\"] = 1] = \"Space\";\n    /**\n    Anything else.\n    */\n    CharCategory[CharCategory[\"Other\"] = 2] = \"Other\";\nreturn CharCategory})(CharCategory || (CharCategory = {}));\nconst nonASCIISingleCaseWordChar = /[\\u00df\\u0587\\u0590-\\u05f4\\u0600-\\u06ff\\u3040-\\u309f\\u30a0-\\u30ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\uac00-\\ud7af]/;\nlet wordChar;\ntry {\n    wordChar = /*@__PURE__*/new RegExp(\"[\\\\p{Alphabetic}\\\\p{Number}_]\", \"u\");\n}\ncatch (_) { }\nfunction hasWordChar(str) {\n    if (wordChar)\n        return wordChar.test(str);\n    for (let i = 0; i < str.length; i++) {\n        let ch = str[i];\n        if (/\\w/.test(ch) || ch > \"\\x80\" && (ch.toUpperCase() != ch.toLowerCase() || nonASCIISingleCaseWordChar.test(ch)))\n            return true;\n    }\n    return false;\n}\nfunction makeCategorizer(wordChars) {\n    return (char) => {\n        if (!/\\S/.test(char))\n            return CharCategory.Space;\n        if (hasWordChar(char))\n            return CharCategory.Word;\n        for (let i = 0; i < wordChars.length; i++)\n            if (char.indexOf(wordChars[i]) > -1)\n                return CharCategory.Word;\n        return CharCategory.Other;\n    };\n}\n\n/**\nThe editor state class is a persistent (immutable) data structure.\nTo update a state, you [create](https://codemirror.net/6/docs/ref/#state.EditorState.update) a\n[transaction](https://codemirror.net/6/docs/ref/#state.Transaction), which produces a _new_ state\ninstance, without modifying the original object.\n\nAs such, _never_ mutate properties of a state directly. That'll\njust break things.\n*/\nclass EditorState {\n    constructor(\n    /**\n    @internal\n    */\n    config, \n    /**\n    The current document.\n    */\n    doc, \n    /**\n    The current selection.\n    */\n    selection, \n    /**\n    @internal\n    */\n    values, computeSlot, tr) {\n        this.config = config;\n        this.doc = doc;\n        this.selection = selection;\n        this.values = values;\n        this.status = config.statusTemplate.slice();\n        this.computeSlot = computeSlot;\n        // Fill in the computed state immediately, so that further queries\n        // for it made during the update return this state\n        if (tr)\n            tr._state = this;\n        for (let i = 0; i < this.config.dynamicSlots.length; i++)\n            ensureAddr(this, i << 1);\n        this.computeSlot = null;\n    }\n    field(field, require = true) {\n        let addr = this.config.address[field.id];\n        if (addr == null) {\n            if (require)\n                throw new RangeError(\"Field is not present in this state\");\n            return undefined;\n        }\n        ensureAddr(this, addr);\n        return getAddr(this, addr);\n    }\n    /**\n    Create a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction) that updates this\n    state. Any number of [transaction specs](https://codemirror.net/6/docs/ref/#state.TransactionSpec)\n    can be passed. Unless\n    [`sequential`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.sequential) is set, the\n    [changes](https://codemirror.net/6/docs/ref/#state.TransactionSpec.changes) (if any) of each spec\n    are assumed to start in the _current_ document (not the document\n    produced by previous specs), and its\n    [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) and\n    [effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) are assumed to refer\n    to the document created by its _own_ changes. The resulting\n    transaction contains the combined effect of all the different\n    specs. For [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection), later\n    specs take precedence over earlier ones.\n    */\n    update(...specs) {\n        return resolveTransaction(this, specs, true);\n    }\n    /**\n    @internal\n    */\n    applyTransaction(tr) {\n        let conf = this.config, { base, compartments } = conf;\n        for (let effect of tr.effects) {\n            if (effect.is(Compartment.reconfigure)) {\n                if (conf) {\n                    compartments = new Map;\n                    conf.compartments.forEach((val, key) => compartments.set(key, val));\n                    conf = null;\n                }\n                compartments.set(effect.value.compartment, effect.value.extension);\n            }\n            else if (effect.is(StateEffect.reconfigure)) {\n                conf = null;\n                base = effect.value;\n            }\n            else if (effect.is(StateEffect.appendConfig)) {\n                conf = null;\n                base = asArray(base).concat(effect.value);\n            }\n        }\n        let startValues;\n        if (!conf) {\n            conf = Configuration.resolve(base, compartments, this);\n            let intermediateState = new EditorState(conf, this.doc, this.selection, conf.dynamicSlots.map(() => null), (state, slot) => slot.reconfigure(state, this), null);\n            startValues = intermediateState.values;\n        }\n        else {\n            startValues = tr.startState.values.slice();\n        }\n        new EditorState(conf, tr.newDoc, tr.newSelection, startValues, (state, slot) => slot.update(state, tr), tr);\n    }\n    /**\n    Create a [transaction spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec) that\n    replaces every selection range with the given content.\n    */\n    replaceSelection(text) {\n        if (typeof text == \"string\")\n            text = this.toText(text);\n        return this.changeByRange(range => ({ changes: { from: range.from, to: range.to, insert: text },\n            range: EditorSelection.cursor(range.from + text.length) }));\n    }\n    /**\n    Create a set of changes and a new selection by running the given\n    function for each range in the active selection. The function\n    can return an optional set of changes (in the coordinate space\n    of the start document), plus an updated range (in the coordinate\n    space of the document produced by the call's own changes). This\n    method will merge all the changes and ranges into a single\n    changeset and selection, and return it as a [transaction\n    spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec), which can be passed to\n    [`update`](https://codemirror.net/6/docs/ref/#state.EditorState.update).\n    */\n    changeByRange(f) {\n        let sel = this.selection;\n        let result1 = f(sel.ranges[0]);\n        let changes = this.changes(result1.changes), ranges = [result1.range];\n        let effects = asArray(result1.effects);\n        for (let i = 1; i < sel.ranges.length; i++) {\n            let result = f(sel.ranges[i]);\n            let newChanges = this.changes(result.changes), newMapped = newChanges.map(changes);\n            for (let j = 0; j < i; j++)\n                ranges[j] = ranges[j].map(newMapped);\n            let mapBy = changes.mapDesc(newChanges, true);\n            ranges.push(result.range.map(mapBy));\n            changes = changes.compose(newMapped);\n            effects = StateEffect.mapEffects(effects, newMapped).concat(StateEffect.mapEffects(asArray(result.effects), mapBy));\n        }\n        return {\n            changes,\n            selection: EditorSelection.create(ranges, sel.mainIndex),\n            effects\n        };\n    }\n    /**\n    Create a [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet) from the given change\n    description, taking the state's document length and line\n    separator into account.\n    */\n    changes(spec = []) {\n        if (spec instanceof ChangeSet)\n            return spec;\n        return ChangeSet.of(spec, this.doc.length, this.facet(EditorState.lineSeparator));\n    }\n    /**\n    Using the state's [line\n    separator](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator), create a\n    [`Text`](https://codemirror.net/6/docs/ref/#state.Text) instance from the given string.\n    */\n    toText(string) {\n        return Text.of(string.split(this.facet(EditorState.lineSeparator) || DefaultSplit));\n    }\n    /**\n    Return the given range of the document as a string.\n    */\n    sliceDoc(from = 0, to = this.doc.length) {\n        return this.doc.sliceString(from, to, this.lineBreak);\n    }\n    /**\n    Get the value of a state [facet](https://codemirror.net/6/docs/ref/#state.Facet).\n    */\n    facet(facet) {\n        let addr = this.config.address[facet.id];\n        if (addr == null)\n            return facet.default;\n        ensureAddr(this, addr);\n        return getAddr(this, addr);\n    }\n    /**\n    Convert this state to a JSON-serializable object. When custom\n    fields should be serialized, you can pass them in as an object\n    mapping property names (in the resulting object, which should\n    not use `doc` or `selection`) to fields.\n    */\n    toJSON(fields) {\n        let result = {\n            doc: this.sliceDoc(),\n            selection: this.selection.toJSON()\n        };\n        if (fields)\n            for (let prop in fields) {\n                let value = fields[prop];\n                if (value instanceof StateField)\n                    result[prop] = value.spec.toJSON(this.field(fields[prop]), this);\n            }\n        return result;\n    }\n    /**\n    Deserialize a state from its JSON representation. When custom\n    fields should be deserialized, pass the same object you passed\n    to [`toJSON`](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) when serializing as\n    third argument.\n    */\n    static fromJSON(json, config = {}, fields) {\n        if (!json || typeof json.doc != \"string\")\n            throw new RangeError(\"Invalid JSON representation for EditorState\");\n        let fieldInit = [];\n        if (fields)\n            for (let prop in fields) {\n                let field = fields[prop], value = json[prop];\n                fieldInit.push(field.init(state => field.spec.fromJSON(value, state)));\n            }\n        return EditorState.create({\n            doc: json.doc,\n            selection: EditorSelection.fromJSON(json.selection),\n            extensions: config.extensions ? fieldInit.concat([config.extensions]) : fieldInit\n        });\n    }\n    /**\n    Create a new state. You'll usually only need this when\n    initializing an editor—updated states are created by applying\n    transactions.\n    */\n    static create(config = {}) {\n        let configuration = Configuration.resolve(config.extensions || [], new Map);\n        let doc = config.doc instanceof Text ? config.doc\n            : Text.of((config.doc || \"\").split(configuration.staticFacet(EditorState.lineSeparator) || DefaultSplit));\n        let selection = !config.selection ? EditorSelection.single(0)\n            : config.selection instanceof EditorSelection ? config.selection\n                : EditorSelection.single(config.selection.anchor, config.selection.head);\n        checkSelection(selection, doc.length);\n        if (!configuration.staticFacet(allowMultipleSelections))\n            selection = selection.asSingle();\n        return new EditorState(configuration, doc, selection, configuration.dynamicSlots.map(() => null), (state, slot) => slot.create(state), null);\n    }\n    /**\n    The size (in columns) of a tab in the document, determined by\n    the [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) facet.\n    */\n    get tabSize() { return this.facet(EditorState.tabSize); }\n    /**\n    Get the proper [line-break](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator)\n    string for this state.\n    */\n    get lineBreak() { return this.facet(EditorState.lineSeparator) || \"\\n\"; }\n    /**\n    Returns true when the editor is\n    [configured](https://codemirror.net/6/docs/ref/#state.EditorState^readOnly) to be read-only.\n    */\n    get readOnly() { return this.facet(readOnly); }\n    /**\n    Look up a translation for the given phrase (via the\n    [`phrases`](https://codemirror.net/6/docs/ref/#state.EditorState^phrases) facet), or return the\n    original string if no translation is found.\n    \n    If additional arguments are passed, they will be inserted in\n    place of markers like `$1` (for the first value) and `$2`, etc.\n    A single `$` is equivalent to `$1`, and `$$` will produce a\n    literal dollar sign.\n    */\n    phrase(phrase, ...insert) {\n        for (let map of this.facet(EditorState.phrases))\n            if (Object.prototype.hasOwnProperty.call(map, phrase)) {\n                phrase = map[phrase];\n                break;\n            }\n        if (insert.length)\n            phrase = phrase.replace(/\\$(\\$|\\d*)/g, (m, i) => {\n                if (i == \"$\")\n                    return \"$\";\n                let n = +(i || 1);\n                return n > insert.length ? m : insert[n - 1];\n            });\n        return phrase;\n    }\n    /**\n    Find the values for a given language data field, provided by the\n    the [`languageData`](https://codemirror.net/6/docs/ref/#state.EditorState^languageData) facet.\n    */\n    languageDataAt(name, pos, side = -1) {\n        let values = [];\n        for (let provider of this.facet(languageData)) {\n            for (let result of provider(this, pos, side)) {\n                if (Object.prototype.hasOwnProperty.call(result, name))\n                    values.push(result[name]);\n            }\n        }\n        return values;\n    }\n    /**\n    Return a function that can categorize strings (expected to\n    represent a single [grapheme cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak))\n    into one of:\n    \n     - Word (contains an alphanumeric character or a character\n       explicitly listed in the local language's `\"wordChars\"`\n       language data, which should be a string)\n     - Space (contains only whitespace)\n     - Other (anything else)\n    */\n    charCategorizer(at) {\n        return makeCategorizer(this.languageDataAt(\"wordChars\", at).join(\"\"));\n    }\n    /**\n    Find the word at the given position, meaning the range\n    containing all [word](https://codemirror.net/6/docs/ref/#state.CharCategory.Word) characters\n    around it. If no word characters are adjacent to the position,\n    this returns null.\n    */\n    wordAt(pos) {\n        let { text, from, length } = this.doc.lineAt(pos);\n        let cat = this.charCategorizer(pos);\n        let start = pos - from, end = pos - from;\n        while (start > 0) {\n            let prev = findClusterBreak(text, start, false);\n            if (cat(text.slice(prev, start)) != CharCategory.Word)\n                break;\n            start = prev;\n        }\n        while (end < length) {\n            let next = findClusterBreak(text, end);\n            if (cat(text.slice(end, next)) != CharCategory.Word)\n                break;\n            end = next;\n        }\n        return start == end ? null : EditorSelection.range(start + from, end + from);\n    }\n}\n/**\nA facet that, when enabled, causes the editor to allow multiple\nranges to be selected. Be careful though, because by default the\neditor relies on the native DOM selection, which cannot handle\nmultiple selections. An extension like\n[`drawSelection`](https://codemirror.net/6/docs/ref/#view.drawSelection) can be used to make\nsecondary selections visible to the user.\n*/\nEditorState.allowMultipleSelections = allowMultipleSelections;\n/**\nConfigures the tab size to use in this state. The first\n(highest-precedence) value of the facet is used. If no value is\ngiven, this defaults to 4.\n*/\nEditorState.tabSize = /*@__PURE__*/Facet.define({\n    combine: values => values.length ? values[0] : 4\n});\n/**\nThe line separator to use. By default, any of `\"\\n\"`, `\"\\r\\n\"`\nand `\"\\r\"` is treated as a separator when splitting lines, and\nlines are joined with `\"\\n\"`.\n\nWhen you configure a value here, only that precise separator\nwill be used, allowing you to round-trip documents through the\neditor without normalizing line separators.\n*/\nEditorState.lineSeparator = lineSeparator;\n/**\nThis facet controls the value of the\n[`readOnly`](https://codemirror.net/6/docs/ref/#state.EditorState.readOnly) getter, which is\nconsulted by commands and extensions that implement editing\nfunctionality to determine whether they should apply. It\ndefaults to false, but when its highest-precedence value is\n`true`, such functionality disables itself.\n\nNot to be confused with\n[`EditorView.editable`](https://codemirror.net/6/docs/ref/#view.EditorView^editable), which\ncontrols whether the editor's DOM is set to be editable (and\nthus focusable).\n*/\nEditorState.readOnly = readOnly;\n/**\nRegisters translation phrases. The\n[`phrase`](https://codemirror.net/6/docs/ref/#state.EditorState.phrase) method will look through\nall objects registered with this facet to find translations for\nits argument.\n*/\nEditorState.phrases = /*@__PURE__*/Facet.define({\n    compare(a, b) {\n        let kA = Object.keys(a), kB = Object.keys(b);\n        return kA.length == kB.length && kA.every(k => a[k] == b[k]);\n    }\n});\n/**\nA facet used to register [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt) providers.\n*/\nEditorState.languageData = languageData;\n/**\nFacet used to register change filters, which are called for each\ntransaction (unless explicitly\n[disabled](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter)), and can suppress\npart of the transaction's changes.\n\nSuch a function can return `true` to indicate that it doesn't\nwant to do anything, `false` to completely stop the changes in\nthe transaction, or a set of ranges in which changes should be\nsuppressed. Such ranges are represented as an array of numbers,\nwith each pair of two numbers indicating the start and end of a\nrange. So for example `[10, 20, 100, 110]` suppresses changes\nbetween 10 and 20, and between 100 and 110.\n*/\nEditorState.changeFilter = changeFilter;\n/**\nFacet used to register a hook that gets a chance to update or\nreplace transaction specs before they are applied. This will\nonly be applied for transactions that don't have\n[`filter`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter) set to `false`. You\ncan either return a single transaction spec (possibly the input\ntransaction), or an array of specs (which will be combined in\nthe same way as the arguments to\n[`EditorState.update`](https://codemirror.net/6/docs/ref/#state.EditorState.update)).\n\nWhen possible, it is recommended to avoid accessing\n[`Transaction.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state) in a filter,\nsince it will force creation of a state that will then be\ndiscarded again, if the transaction is actually filtered.\n\n(This functionality should be used with care. Indiscriminately\nmodifying transaction is likely to break something or degrade\nthe user experience.)\n*/\nEditorState.transactionFilter = transactionFilter;\n/**\nThis is a more limited form of\n[`transactionFilter`](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter),\nwhich can only add\n[annotations](https://codemirror.net/6/docs/ref/#state.TransactionSpec.annotations) and\n[effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects). _But_, this type\nof filter runs even if the transaction has disabled regular\n[filtering](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter), making it suitable\nfor effects that don't need to touch the changes or selection,\nbut do want to process every transaction.\n\nExtenders run _after_ filters, when both are present.\n*/\nEditorState.transactionExtender = transactionExtender;\nCompartment.reconfigure = /*@__PURE__*/StateEffect.define();\n\n/**\nUtility function for combining behaviors to fill in a config\nobject from an array of provided configs. `defaults` should hold\ndefault values for all optional fields in `Config`.\n\nThe function will, by default, error\nwhen a field gets two values that aren't `===`-equal, but you can\nprovide combine functions per field to do something else.\n*/\nfunction combineConfig(configs, defaults, // Should hold only the optional properties of Config, but I haven't managed to express that\ncombine = {}) {\n    let result = {};\n    for (let config of configs)\n        for (let key of Object.keys(config)) {\n            let value = config[key], current = result[key];\n            if (current === undefined)\n                result[key] = value;\n            else if (current === value || value === undefined) ; // No conflict\n            else if (Object.hasOwnProperty.call(combine, key))\n                result[key] = combine[key](current, value);\n            else\n                throw new Error(\"Config merge conflict for field \" + key);\n        }\n    for (let key in defaults)\n        if (result[key] === undefined)\n            result[key] = defaults[key];\n    return result;\n}\n\n/**\nEach range is associated with a value, which must inherit from\nthis class.\n*/\nclass RangeValue {\n    /**\n    Compare this value with another value. Used when comparing\n    rangesets. The default implementation compares by identity.\n    Unless you are only creating a fixed number of unique instances\n    of your value type, it is a good idea to implement this\n    properly.\n    */\n    eq(other) { return this == other; }\n    /**\n    Create a [range](https://codemirror.net/6/docs/ref/#state.Range) with this value.\n    */\n    range(from, to = from) { return Range.create(from, to, this); }\n}\nRangeValue.prototype.startSide = RangeValue.prototype.endSide = 0;\nRangeValue.prototype.point = false;\nRangeValue.prototype.mapMode = MapMode.TrackDel;\n/**\nA range associates a value with a range of positions.\n*/\nclass Range {\n    constructor(\n    /**\n    The range's start position.\n    */\n    from, \n    /**\n    Its end position.\n    */\n    to, \n    /**\n    The value associated with this range.\n    */\n    value) {\n        this.from = from;\n        this.to = to;\n        this.value = value;\n    }\n    /**\n    @internal\n    */\n    static create(from, to, value) {\n        return new Range(from, to, value);\n    }\n}\nfunction cmpRange(a, b) {\n    return a.from - b.from || a.value.startSide - b.value.startSide;\n}\nclass Chunk {\n    constructor(from, to, value, \n    // Chunks are marked with the largest point that occurs\n    // in them (or -1 for no points), so that scans that are\n    // only interested in points (such as the\n    // heightmap-related logic) can skip range-only chunks.\n    maxPoint) {\n        this.from = from;\n        this.to = to;\n        this.value = value;\n        this.maxPoint = maxPoint;\n    }\n    get length() { return this.to[this.to.length - 1]; }\n    // Find the index of the given position and side. Use the ranges'\n    // `from` pos when `end == false`, `to` when `end == true`.\n    findIndex(pos, side, end, startAt = 0) {\n        let arr = end ? this.to : this.from;\n        for (let lo = startAt, hi = arr.length;;) {\n            if (lo == hi)\n                return lo;\n            let mid = (lo + hi) >> 1;\n            let diff = arr[mid] - pos || (end ? this.value[mid].endSide : this.value[mid].startSide) - side;\n            if (mid == lo)\n                return diff >= 0 ? lo : hi;\n            if (diff >= 0)\n                hi = mid;\n            else\n                lo = mid + 1;\n        }\n    }\n    between(offset, from, to, f) {\n        for (let i = this.findIndex(from, -1000000000 /* Far */, true), e = this.findIndex(to, 1000000000 /* Far */, false, i); i < e; i++)\n            if (f(this.from[i] + offset, this.to[i] + offset, this.value[i]) === false)\n                return false;\n    }\n    map(offset, changes) {\n        let value = [], from = [], to = [], newPos = -1, maxPoint = -1;\n        for (let i = 0; i < this.value.length; i++) {\n            let val = this.value[i], curFrom = this.from[i] + offset, curTo = this.to[i] + offset, newFrom, newTo;\n            if (curFrom == curTo) {\n                let mapped = changes.mapPos(curFrom, val.startSide, val.mapMode);\n                if (mapped == null)\n                    continue;\n                newFrom = newTo = mapped;\n                if (val.startSide != val.endSide) {\n                    newTo = changes.mapPos(curFrom, val.endSide);\n                    if (newTo < newFrom)\n                        continue;\n                }\n            }\n            else {\n                newFrom = changes.mapPos(curFrom, val.startSide);\n                newTo = changes.mapPos(curTo, val.endSide);\n                if (newFrom > newTo || newFrom == newTo && val.startSide > 0 && val.endSide <= 0)\n                    continue;\n            }\n            if ((newTo - newFrom || val.endSide - val.startSide) < 0)\n                continue;\n            if (newPos < 0)\n                newPos = newFrom;\n            if (val.point)\n                maxPoint = Math.max(maxPoint, newTo - newFrom);\n            value.push(val);\n            from.push(newFrom - newPos);\n            to.push(newTo - newPos);\n        }\n        return { mapped: value.length ? new Chunk(from, to, value, maxPoint) : null, pos: newPos };\n    }\n}\n/**\nA range set stores a collection of [ranges](https://codemirror.net/6/docs/ref/#state.Range) in a\nway that makes them efficient to [map](https://codemirror.net/6/docs/ref/#state.RangeSet.map) and\n[update](https://codemirror.net/6/docs/ref/#state.RangeSet.update). This is an immutable data\nstructure.\n*/\nclass RangeSet {\n    constructor(\n    /**\n    @internal\n    */\n    chunkPos, \n    /**\n    @internal\n    */\n    chunk, \n    /**\n    @internal\n    */\n    nextLayer, \n    /**\n    @internal\n    */\n    maxPoint) {\n        this.chunkPos = chunkPos;\n        this.chunk = chunk;\n        this.nextLayer = nextLayer;\n        this.maxPoint = maxPoint;\n    }\n    /**\n    @internal\n    */\n    static create(chunkPos, chunk, nextLayer, maxPoint) {\n        return new RangeSet(chunkPos, chunk, nextLayer, maxPoint);\n    }\n    /**\n    @internal\n    */\n    get length() {\n        let last = this.chunk.length - 1;\n        return last < 0 ? 0 : Math.max(this.chunkEnd(last), this.nextLayer.length);\n    }\n    /**\n    The number of ranges in the set.\n    */\n    get size() {\n        if (this.isEmpty)\n            return 0;\n        let size = this.nextLayer.size;\n        for (let chunk of this.chunk)\n            size += chunk.value.length;\n        return size;\n    }\n    /**\n    @internal\n    */\n    chunkEnd(index) {\n        return this.chunkPos[index] + this.chunk[index].length;\n    }\n    /**\n    Update the range set, optionally adding new ranges or filtering\n    out existing ones.\n    \n    (Note: The type parameter is just there as a kludge to work\n    around TypeScript variance issues that prevented `RangeSet<X>`\n    from being a subtype of `RangeSet<Y>` when `X` is a subtype of\n    `Y`.)\n    */\n    update(updateSpec) {\n        let { add = [], sort = false, filterFrom = 0, filterTo = this.length } = updateSpec;\n        let filter = updateSpec.filter;\n        if (add.length == 0 && !filter)\n            return this;\n        if (sort)\n            add = add.slice().sort(cmpRange);\n        if (this.isEmpty)\n            return add.length ? RangeSet.of(add) : this;\n        let cur = new LayerCursor(this, null, -1).goto(0), i = 0, spill = [];\n        let builder = new RangeSetBuilder();\n        while (cur.value || i < add.length) {\n            if (i < add.length && (cur.from - add[i].from || cur.startSide - add[i].value.startSide) >= 0) {\n                let range = add[i++];\n                if (!builder.addInner(range.from, range.to, range.value))\n                    spill.push(range);\n            }\n            else if (cur.rangeIndex == 1 && cur.chunkIndex < this.chunk.length &&\n                (i == add.length || this.chunkEnd(cur.chunkIndex) < add[i].from) &&\n                (!filter || filterFrom > this.chunkEnd(cur.chunkIndex) || filterTo < this.chunkPos[cur.chunkIndex]) &&\n                builder.addChunk(this.chunkPos[cur.chunkIndex], this.chunk[cur.chunkIndex])) {\n                cur.nextChunk();\n            }\n            else {\n                if (!filter || filterFrom > cur.to || filterTo < cur.from || filter(cur.from, cur.to, cur.value)) {\n                    if (!builder.addInner(cur.from, cur.to, cur.value))\n                        spill.push(Range.create(cur.from, cur.to, cur.value));\n                }\n                cur.next();\n            }\n        }\n        return builder.finishInner(this.nextLayer.isEmpty && !spill.length ? RangeSet.empty\n            : this.nextLayer.update({ add: spill, filter, filterFrom, filterTo }));\n    }\n    /**\n    Map this range set through a set of changes, return the new set.\n    */\n    map(changes) {\n        if (changes.empty || this.isEmpty)\n            return this;\n        let chunks = [], chunkPos = [], maxPoint = -1;\n        for (let i = 0; i < this.chunk.length; i++) {\n            let start = this.chunkPos[i], chunk = this.chunk[i];\n            let touch = changes.touchesRange(start, start + chunk.length);\n            if (touch === false) {\n                maxPoint = Math.max(maxPoint, chunk.maxPoint);\n                chunks.push(chunk);\n                chunkPos.push(changes.mapPos(start));\n            }\n            else if (touch === true) {\n                let { mapped, pos } = chunk.map(start, changes);\n                if (mapped) {\n                    maxPoint = Math.max(maxPoint, mapped.maxPoint);\n                    chunks.push(mapped);\n                    chunkPos.push(pos);\n                }\n            }\n        }\n        let next = this.nextLayer.map(changes);\n        return chunks.length == 0 ? next : new RangeSet(chunkPos, chunks, next || RangeSet.empty, maxPoint);\n    }\n    /**\n    Iterate over the ranges that touch the region `from` to `to`,\n    calling `f` for each. There is no guarantee that the ranges will\n    be reported in any specific order. When the callback returns\n    `false`, iteration stops.\n    */\n    between(from, to, f) {\n        if (this.isEmpty)\n            return;\n        for (let i = 0; i < this.chunk.length; i++) {\n            let start = this.chunkPos[i], chunk = this.chunk[i];\n            if (to >= start && from <= start + chunk.length &&\n                chunk.between(start, from - start, to - start, f) === false)\n                return;\n        }\n        this.nextLayer.between(from, to, f);\n    }\n    /**\n    Iterate over the ranges in this set, in order, including all\n    ranges that end at or after `from`.\n    */\n    iter(from = 0) {\n        return HeapCursor.from([this]).goto(from);\n    }\n    /**\n    @internal\n    */\n    get isEmpty() { return this.nextLayer == this; }\n    /**\n    Iterate over the ranges in a collection of sets, in order,\n    starting from `from`.\n    */\n    static iter(sets, from = 0) {\n        return HeapCursor.from(sets).goto(from);\n    }\n    /**\n    Iterate over two groups of sets, calling methods on `comparator`\n    to notify it of possible differences.\n    */\n    static compare(oldSets, newSets, \n    /**\n    This indicates how the underlying data changed between these\n    ranges, and is needed to synchronize the iteration. `from` and\n    `to` are coordinates in the _new_ space, after these changes.\n    */\n    textDiff, comparator, \n    /**\n    Can be used to ignore all non-point ranges, and points below\n    the given size. When -1, all ranges are compared.\n    */\n    minPointSize = -1) {\n        let a = oldSets.filter(set => set.maxPoint > 0 || !set.isEmpty && set.maxPoint >= minPointSize);\n        let b = newSets.filter(set => set.maxPoint > 0 || !set.isEmpty && set.maxPoint >= minPointSize);\n        let sharedChunks = findSharedChunks(a, b, textDiff);\n        let sideA = new SpanCursor(a, sharedChunks, minPointSize);\n        let sideB = new SpanCursor(b, sharedChunks, minPointSize);\n        textDiff.iterGaps((fromA, fromB, length) => compare(sideA, fromA, sideB, fromB, length, comparator));\n        if (textDiff.empty && textDiff.length == 0)\n            compare(sideA, 0, sideB, 0, 0, comparator);\n    }\n    /**\n    Compare the contents of two groups of range sets, returning true\n    if they are equivalent in the given range.\n    */\n    static eq(oldSets, newSets, from = 0, to) {\n        if (to == null)\n            to = 1000000000 /* Far */;\n        let a = oldSets.filter(set => !set.isEmpty && newSets.indexOf(set) < 0);\n        let b = newSets.filter(set => !set.isEmpty && oldSets.indexOf(set) < 0);\n        if (a.length != b.length)\n            return false;\n        if (!a.length)\n            return true;\n        let sharedChunks = findSharedChunks(a, b);\n        let sideA = new SpanCursor(a, sharedChunks, 0).goto(from), sideB = new SpanCursor(b, sharedChunks, 0).goto(from);\n        for (;;) {\n            if (sideA.to != sideB.to ||\n                !sameValues(sideA.active, sideB.active) ||\n                sideA.point && (!sideB.point || !sideA.point.eq(sideB.point)))\n                return false;\n            if (sideA.to > to)\n                return true;\n            sideA.next();\n            sideB.next();\n        }\n    }\n    /**\n    Iterate over a group of range sets at the same time, notifying\n    the iterator about the ranges covering every given piece of\n    content. Returns the open count (see\n    [`SpanIterator.span`](https://codemirror.net/6/docs/ref/#state.SpanIterator.span)) at the end\n    of the iteration.\n    */\n    static spans(sets, from, to, iterator, \n    /**\n    When given and greater than -1, only points of at least this\n    size are taken into account.\n    */\n    minPointSize = -1) {\n        let cursor = new SpanCursor(sets, null, minPointSize).goto(from), pos = from;\n        let open = cursor.openStart;\n        for (;;) {\n            let curTo = Math.min(cursor.to, to);\n            if (cursor.point) {\n                iterator.point(pos, curTo, cursor.point, cursor.activeForPoint(cursor.to), open, cursor.pointRank);\n                open = cursor.openEnd(curTo) + (cursor.to > curTo ? 1 : 0);\n            }\n            else if (curTo > pos) {\n                iterator.span(pos, curTo, cursor.active, open);\n                open = cursor.openEnd(curTo);\n            }\n            if (cursor.to > to)\n                break;\n            pos = cursor.to;\n            cursor.next();\n        }\n        return open;\n    }\n    /**\n    Create a range set for the given range or array of ranges. By\n    default, this expects the ranges to be _sorted_ (by start\n    position and, if two start at the same position,\n    `value.startSide`). You can pass `true` as second argument to\n    cause the method to sort them.\n    */\n    static of(ranges, sort = false) {\n        let build = new RangeSetBuilder();\n        for (let range of ranges instanceof Range ? [ranges] : sort ? lazySort(ranges) : ranges)\n            build.add(range.from, range.to, range.value);\n        return build.finish();\n    }\n}\n/**\nThe empty set of ranges.\n*/\nRangeSet.empty = /*@__PURE__*/new RangeSet([], [], null, -1);\nfunction lazySort(ranges) {\n    if (ranges.length > 1)\n        for (let prev = ranges[0], i = 1; i < ranges.length; i++) {\n            let cur = ranges[i];\n            if (cmpRange(prev, cur) > 0)\n                return ranges.slice().sort(cmpRange);\n            prev = cur;\n        }\n    return ranges;\n}\nRangeSet.empty.nextLayer = RangeSet.empty;\n/**\nA range set builder is a data structure that helps build up a\n[range set](https://codemirror.net/6/docs/ref/#state.RangeSet) directly, without first allocating\nan array of [`Range`](https://codemirror.net/6/docs/ref/#state.Range) objects.\n*/\nclass RangeSetBuilder {\n    /**\n    Create an empty builder.\n    */\n    constructor() {\n        this.chunks = [];\n        this.chunkPos = [];\n        this.chunkStart = -1;\n        this.last = null;\n        this.lastFrom = -1000000000 /* Far */;\n        this.lastTo = -1000000000 /* Far */;\n        this.from = [];\n        this.to = [];\n        this.value = [];\n        this.maxPoint = -1;\n        this.setMaxPoint = -1;\n        this.nextLayer = null;\n    }\n    finishChunk(newArrays) {\n        this.chunks.push(new Chunk(this.from, this.to, this.value, this.maxPoint));\n        this.chunkPos.push(this.chunkStart);\n        this.chunkStart = -1;\n        this.setMaxPoint = Math.max(this.setMaxPoint, this.maxPoint);\n        this.maxPoint = -1;\n        if (newArrays) {\n            this.from = [];\n            this.to = [];\n            this.value = [];\n        }\n    }\n    /**\n    Add a range. Ranges should be added in sorted (by `from` and\n    `value.startSide`) order.\n    */\n    add(from, to, value) {\n        if (!this.addInner(from, to, value))\n            (this.nextLayer || (this.nextLayer = new RangeSetBuilder)).add(from, to, value);\n    }\n    /**\n    @internal\n    */\n    addInner(from, to, value) {\n        let diff = from - this.lastTo || value.startSide - this.last.endSide;\n        if (diff <= 0 && (from - this.lastFrom || value.startSide - this.last.startSide) < 0)\n            throw new Error(\"Ranges must be added sorted by `from` position and `startSide`\");\n        if (diff < 0)\n            return false;\n        if (this.from.length == 250 /* ChunkSize */)\n            this.finishChunk(true);\n        if (this.chunkStart < 0)\n            this.chunkStart = from;\n        this.from.push(from - this.chunkStart);\n        this.to.push(to - this.chunkStart);\n        this.last = value;\n        this.lastFrom = from;\n        this.lastTo = to;\n        this.value.push(value);\n        if (value.point)\n            this.maxPoint = Math.max(this.maxPoint, to - from);\n        return true;\n    }\n    /**\n    @internal\n    */\n    addChunk(from, chunk) {\n        if ((from - this.lastTo || chunk.value[0].startSide - this.last.endSide) < 0)\n            return false;\n        if (this.from.length)\n            this.finishChunk(true);\n        this.setMaxPoint = Math.max(this.setMaxPoint, chunk.maxPoint);\n        this.chunks.push(chunk);\n        this.chunkPos.push(from);\n        let last = chunk.value.length - 1;\n        this.last = chunk.value[last];\n        this.lastFrom = chunk.from[last] + from;\n        this.lastTo = chunk.to[last] + from;\n        return true;\n    }\n    /**\n    Finish the range set. Returns the new set. The builder can't be\n    used anymore after this has been called.\n    */\n    finish() { return this.finishInner(RangeSet.empty); }\n    /**\n    @internal\n    */\n    finishInner(next) {\n        if (this.from.length)\n            this.finishChunk(false);\n        if (this.chunks.length == 0)\n            return next;\n        let result = RangeSet.create(this.chunkPos, this.chunks, this.nextLayer ? this.nextLayer.finishInner(next) : next, this.setMaxPoint);\n        this.from = null; // Make sure further `add` calls produce errors\n        return result;\n    }\n}\nfunction findSharedChunks(a, b, textDiff) {\n    let inA = new Map();\n    for (let set of a)\n        for (let i = 0; i < set.chunk.length; i++)\n            if (set.chunk[i].maxPoint <= 0)\n                inA.set(set.chunk[i], set.chunkPos[i]);\n    let shared = new Set();\n    for (let set of b)\n        for (let i = 0; i < set.chunk.length; i++) {\n            let known = inA.get(set.chunk[i]);\n            if (known != null && (textDiff ? textDiff.mapPos(known) : known) == set.chunkPos[i] &&\n                !(textDiff === null || textDiff === void 0 ? void 0 : textDiff.touchesRange(known, known + set.chunk[i].length)))\n                shared.add(set.chunk[i]);\n        }\n    return shared;\n}\nclass LayerCursor {\n    constructor(layer, skip, minPoint, rank = 0) {\n        this.layer = layer;\n        this.skip = skip;\n        this.minPoint = minPoint;\n        this.rank = rank;\n    }\n    get startSide() { return this.value ? this.value.startSide : 0; }\n    get endSide() { return this.value ? this.value.endSide : 0; }\n    goto(pos, side = -1000000000 /* Far */) {\n        this.chunkIndex = this.rangeIndex = 0;\n        this.gotoInner(pos, side, false);\n        return this;\n    }\n    gotoInner(pos, side, forward) {\n        while (this.chunkIndex < this.layer.chunk.length) {\n            let next = this.layer.chunk[this.chunkIndex];\n            if (!(this.skip && this.skip.has(next) ||\n                this.layer.chunkEnd(this.chunkIndex) < pos ||\n                next.maxPoint < this.minPoint))\n                break;\n            this.chunkIndex++;\n            forward = false;\n        }\n        if (this.chunkIndex < this.layer.chunk.length) {\n            let rangeIndex = this.layer.chunk[this.chunkIndex].findIndex(pos - this.layer.chunkPos[this.chunkIndex], side, true);\n            if (!forward || this.rangeIndex < rangeIndex)\n                this.setRangeIndex(rangeIndex);\n        }\n        this.next();\n    }\n    forward(pos, side) {\n        if ((this.to - pos || this.endSide - side) < 0)\n            this.gotoInner(pos, side, true);\n    }\n    next() {\n        for (;;) {\n            if (this.chunkIndex == this.layer.chunk.length) {\n                this.from = this.to = 1000000000 /* Far */;\n                this.value = null;\n                break;\n            }\n            else {\n                let chunkPos = this.layer.chunkPos[this.chunkIndex], chunk = this.layer.chunk[this.chunkIndex];\n                let from = chunkPos + chunk.from[this.rangeIndex];\n                this.from = from;\n                this.to = chunkPos + chunk.to[this.rangeIndex];\n                this.value = chunk.value[this.rangeIndex];\n                this.setRangeIndex(this.rangeIndex + 1);\n                if (this.minPoint < 0 || this.value.point && this.to - this.from >= this.minPoint)\n                    break;\n            }\n        }\n    }\n    setRangeIndex(index) {\n        if (index == this.layer.chunk[this.chunkIndex].value.length) {\n            this.chunkIndex++;\n            if (this.skip) {\n                while (this.chunkIndex < this.layer.chunk.length && this.skip.has(this.layer.chunk[this.chunkIndex]))\n                    this.chunkIndex++;\n            }\n            this.rangeIndex = 0;\n        }\n        else {\n            this.rangeIndex = index;\n        }\n    }\n    nextChunk() {\n        this.chunkIndex++;\n        this.rangeIndex = 0;\n        this.next();\n    }\n    compare(other) {\n        return this.from - other.from || this.startSide - other.startSide || this.rank - other.rank ||\n            this.to - other.to || this.endSide - other.endSide;\n    }\n}\nclass HeapCursor {\n    constructor(heap) {\n        this.heap = heap;\n    }\n    static from(sets, skip = null, minPoint = -1) {\n        let heap = [];\n        for (let i = 0; i < sets.length; i++) {\n            for (let cur = sets[i]; !cur.isEmpty; cur = cur.nextLayer) {\n                if (cur.maxPoint >= minPoint)\n                    heap.push(new LayerCursor(cur, skip, minPoint, i));\n            }\n        }\n        return heap.length == 1 ? heap[0] : new HeapCursor(heap);\n    }\n    get startSide() { return this.value ? this.value.startSide : 0; }\n    goto(pos, side = -1000000000 /* Far */) {\n        for (let cur of this.heap)\n            cur.goto(pos, side);\n        for (let i = this.heap.length >> 1; i >= 0; i--)\n            heapBubble(this.heap, i);\n        this.next();\n        return this;\n    }\n    forward(pos, side) {\n        for (let cur of this.heap)\n            cur.forward(pos, side);\n        for (let i = this.heap.length >> 1; i >= 0; i--)\n            heapBubble(this.heap, i);\n        if ((this.to - pos || this.value.endSide - side) < 0)\n            this.next();\n    }\n    next() {\n        if (this.heap.length == 0) {\n            this.from = this.to = 1000000000 /* Far */;\n            this.value = null;\n            this.rank = -1;\n        }\n        else {\n            let top = this.heap[0];\n            this.from = top.from;\n            this.to = top.to;\n            this.value = top.value;\n            this.rank = top.rank;\n            if (top.value)\n                top.next();\n            heapBubble(this.heap, 0);\n        }\n    }\n}\nfunction heapBubble(heap, index) {\n    for (let cur = heap[index];;) {\n        let childIndex = (index << 1) + 1;\n        if (childIndex >= heap.length)\n            break;\n        let child = heap[childIndex];\n        if (childIndex + 1 < heap.length && child.compare(heap[childIndex + 1]) >= 0) {\n            child = heap[childIndex + 1];\n            childIndex++;\n        }\n        if (cur.compare(child) < 0)\n            break;\n        heap[childIndex] = cur;\n        heap[index] = child;\n        index = childIndex;\n    }\n}\nclass SpanCursor {\n    constructor(sets, skip, minPoint) {\n        this.minPoint = minPoint;\n        this.active = [];\n        this.activeTo = [];\n        this.activeRank = [];\n        this.minActive = -1;\n        // A currently active point range, if any\n        this.point = null;\n        this.pointFrom = 0;\n        this.pointRank = 0;\n        this.to = -1000000000 /* Far */;\n        this.endSide = 0;\n        this.openStart = -1;\n        this.cursor = HeapCursor.from(sets, skip, minPoint);\n    }\n    goto(pos, side = -1000000000 /* Far */) {\n        this.cursor.goto(pos, side);\n        this.active.length = this.activeTo.length = this.activeRank.length = 0;\n        this.minActive = -1;\n        this.to = pos;\n        this.endSide = side;\n        this.openStart = -1;\n        this.next();\n        return this;\n    }\n    forward(pos, side) {\n        while (this.minActive > -1 && (this.activeTo[this.minActive] - pos || this.active[this.minActive].endSide - side) < 0)\n            this.removeActive(this.minActive);\n        this.cursor.forward(pos, side);\n    }\n    removeActive(index) {\n        remove(this.active, index);\n        remove(this.activeTo, index);\n        remove(this.activeRank, index);\n        this.minActive = findMinIndex(this.active, this.activeTo);\n    }\n    addActive(trackOpen) {\n        let i = 0, { value, to, rank } = this.cursor;\n        while (i < this.activeRank.length && this.activeRank[i] <= rank)\n            i++;\n        insert(this.active, i, value);\n        insert(this.activeTo, i, to);\n        insert(this.activeRank, i, rank);\n        if (trackOpen)\n            insert(trackOpen, i, this.cursor.from);\n        this.minActive = findMinIndex(this.active, this.activeTo);\n    }\n    // After calling this, if `this.point` != null, the next range is a\n    // point. Otherwise, it's a regular range, covered by `this.active`.\n    next() {\n        let from = this.to, wasPoint = this.point;\n        this.point = null;\n        let trackOpen = this.openStart < 0 ? [] : null, trackExtra = 0;\n        for (;;) {\n            let a = this.minActive;\n            if (a > -1 && (this.activeTo[a] - this.cursor.from || this.active[a].endSide - this.cursor.startSide) < 0) {\n                if (this.activeTo[a] > from) {\n                    this.to = this.activeTo[a];\n                    this.endSide = this.active[a].endSide;\n                    break;\n                }\n                this.removeActive(a);\n                if (trackOpen)\n                    remove(trackOpen, a);\n            }\n            else if (!this.cursor.value) {\n                this.to = this.endSide = 1000000000 /* Far */;\n                break;\n            }\n            else if (this.cursor.from > from) {\n                this.to = this.cursor.from;\n                this.endSide = this.cursor.startSide;\n                break;\n            }\n            else {\n                let nextVal = this.cursor.value;\n                if (!nextVal.point) { // Opening a range\n                    this.addActive(trackOpen);\n                    this.cursor.next();\n                }\n                else if (wasPoint && this.cursor.to == this.to && this.cursor.from < this.cursor.to) {\n                    // Ignore any non-empty points that end precisely at the end of the prev point\n                    this.cursor.next();\n                }\n                else { // New point\n                    this.point = nextVal;\n                    this.pointFrom = this.cursor.from;\n                    this.pointRank = this.cursor.rank;\n                    this.to = this.cursor.to;\n                    this.endSide = nextVal.endSide;\n                    if (this.cursor.from < from)\n                        trackExtra = 1;\n                    this.cursor.next();\n                    this.forward(this.to, this.endSide);\n                    break;\n                }\n            }\n        }\n        if (trackOpen) {\n            let openStart = 0;\n            while (openStart < trackOpen.length && trackOpen[openStart] < from)\n                openStart++;\n            this.openStart = openStart + trackExtra;\n        }\n    }\n    activeForPoint(to) {\n        if (!this.active.length)\n            return this.active;\n        let active = [];\n        for (let i = this.active.length - 1; i >= 0; i--) {\n            if (this.activeRank[i] < this.pointRank)\n                break;\n            if (this.activeTo[i] > to || this.activeTo[i] == to && this.active[i].endSide >= this.point.endSide)\n                active.push(this.active[i]);\n        }\n        return active.reverse();\n    }\n    openEnd(to) {\n        let open = 0;\n        for (let i = this.activeTo.length - 1; i >= 0 && this.activeTo[i] > to; i--)\n            open++;\n        return open;\n    }\n}\nfunction compare(a, startA, b, startB, length, comparator) {\n    a.goto(startA);\n    b.goto(startB);\n    let endB = startB + length;\n    let pos = startB, dPos = startB - startA;\n    for (;;) {\n        let diff = (a.to + dPos) - b.to || a.endSide - b.endSide;\n        let end = diff < 0 ? a.to + dPos : b.to, clipEnd = Math.min(end, endB);\n        if (a.point || b.point) {\n            if (!(a.point && b.point && (a.point == b.point || a.point.eq(b.point)) &&\n                sameValues(a.activeForPoint(a.to + dPos), b.activeForPoint(b.to))))\n                comparator.comparePoint(pos, clipEnd, a.point, b.point);\n        }\n        else {\n            if (clipEnd > pos && !sameValues(a.active, b.active))\n                comparator.compareRange(pos, clipEnd, a.active, b.active);\n        }\n        if (end > endB)\n            break;\n        pos = end;\n        if (diff <= 0)\n            a.next();\n        if (diff >= 0)\n            b.next();\n    }\n}\nfunction sameValues(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (a[i] != b[i] && !a[i].eq(b[i]))\n            return false;\n    return true;\n}\nfunction remove(array, index) {\n    for (let i = index, e = array.length - 1; i < e; i++)\n        array[i] = array[i + 1];\n    array.pop();\n}\nfunction insert(array, index, value) {\n    for (let i = array.length - 1; i >= index; i--)\n        array[i + 1] = array[i];\n    array[index] = value;\n}\nfunction findMinIndex(value, array) {\n    let found = -1, foundPos = 1000000000 /* Far */;\n    for (let i = 0; i < array.length; i++)\n        if ((array[i] - foundPos || value[i].endSide - value[found].endSide) < 0) {\n            found = i;\n            foundPos = array[i];\n        }\n    return found;\n}\n\n/**\nCount the column position at the given offset into the string,\ntaking extending characters and tab size into account.\n*/\nfunction countColumn(string, tabSize, to = string.length) {\n    let n = 0;\n    for (let i = 0; i < to;) {\n        if (string.charCodeAt(i) == 9) {\n            n += tabSize - (n % tabSize);\n            i++;\n        }\n        else {\n            n++;\n            i = findClusterBreak(string, i);\n        }\n    }\n    return n;\n}\n/**\nFind the offset that corresponds to the given column position in a\nstring, taking extending characters and tab size into account. By\ndefault, the string length is returned when it is too short to\nreach the column. Pass `strict` true to make it return -1 in that\nsituation.\n*/\nfunction findColumn(string, col, tabSize, strict) {\n    for (let i = 0, n = 0;;) {\n        if (n >= col)\n            return i;\n        if (i == string.length)\n            break;\n        n += string.charCodeAt(i) == 9 ? tabSize - (n % tabSize) : 1;\n        i = findClusterBreak(string, i);\n    }\n    return strict === true ? -1 : string.length;\n}\n\nexport { Annotation, AnnotationType, ChangeDesc, ChangeSet, CharCategory, Compartment, EditorSelection, EditorState, Facet, Line, MapMode, Prec, Range, RangeSet, RangeSetBuilder, RangeValue, SelectionRange, StateEffect, StateEffectType, StateField, Text, Transaction, codePointAt, codePointSize, combineConfig, countColumn, findClusterBreak, findColumn, fromCodePoint };\n","import { Text, RangeSet, MapMode, RangeValue, Facet, StateEffect, ChangeSet, findClusterBreak, EditorSelection, EditorState, findColumn, CharCategory, Prec, Transaction, combineConfig, StateField, RangeSetBuilder, codePointAt, countColumn } from '@codemirror/state';\nimport { StyleModule } from 'style-mod';\nimport { keyName, base } from 'w3c-keyname';\n\nfunction getSelection(root) {\n    let target;\n    // Browsers differ on whether shadow roots have a getSelection\n    // method. If it exists, use that, otherwise, call it on the\n    // document.\n    if (root.nodeType == 11) { // Shadow root\n        target = root.getSelection ? root : root.ownerDocument;\n    }\n    else {\n        target = root;\n    }\n    return target.getSelection();\n}\nfunction contains(dom, node) {\n    return node ? dom == node || dom.contains(node.nodeType != 1 ? node.parentNode : node) : false;\n}\nfunction deepActiveElement() {\n    let elt = document.activeElement;\n    while (elt && elt.shadowRoot)\n        elt = elt.shadowRoot.activeElement;\n    return elt;\n}\nfunction hasSelection(dom, selection) {\n    if (!selection.anchorNode)\n        return false;\n    try {\n        // Firefox will raise 'permission denied' errors when accessing\n        // properties of `sel.anchorNode` when it's in a generated CSS\n        // element.\n        return contains(dom, selection.anchorNode);\n    }\n    catch (_) {\n        return false;\n    }\n}\nfunction clientRectsFor(dom) {\n    if (dom.nodeType == 3)\n        return textRange(dom, 0, dom.nodeValue.length).getClientRects();\n    else if (dom.nodeType == 1)\n        return dom.getClientRects();\n    else\n        return [];\n}\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nfunction isEquivalentPosition(node, off, targetNode, targetOff) {\n    return targetNode ? (scanFor(node, off, targetNode, targetOff, -1) ||\n        scanFor(node, off, targetNode, targetOff, 1)) : false;\n}\nfunction domIndex(node) {\n    for (var index = 0;; index++) {\n        node = node.previousSibling;\n        if (!node)\n            return index;\n    }\n}\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n    for (;;) {\n        if (node == targetNode && off == targetOff)\n            return true;\n        if (off == (dir < 0 ? 0 : maxOffset(node))) {\n            if (node.nodeName == \"DIV\")\n                return false;\n            let parent = node.parentNode;\n            if (!parent || parent.nodeType != 1)\n                return false;\n            off = domIndex(node) + (dir < 0 ? 0 : 1);\n            node = parent;\n        }\n        else if (node.nodeType == 1) {\n            node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n            if (node.nodeType == 1 && node.contentEditable == \"false\")\n                return false;\n            off = dir < 0 ? maxOffset(node) : 0;\n        }\n        else {\n            return false;\n        }\n    }\n}\nfunction maxOffset(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nconst Rect0 = { left: 0, right: 0, top: 0, bottom: 0 };\nfunction flattenRect(rect, left) {\n    let x = left ? rect.left : rect.right;\n    return { left: x, right: x, top: rect.top, bottom: rect.bottom };\n}\nfunction windowRect(win) {\n    return { left: 0, right: win.innerWidth,\n        top: 0, bottom: win.innerHeight };\n}\nfunction scrollRectIntoView(dom, rect, side, x, y, xMargin, yMargin, ltr) {\n    let doc = dom.ownerDocument, win = doc.defaultView;\n    for (let cur = dom; cur;) {\n        if (cur.nodeType == 1) { // Element\n            let bounding, top = cur == doc.body;\n            if (top) {\n                bounding = windowRect(win);\n            }\n            else {\n                if (cur.scrollHeight <= cur.clientHeight && cur.scrollWidth <= cur.clientWidth) {\n                    cur = cur.parentNode;\n                    continue;\n                }\n                let rect = cur.getBoundingClientRect();\n                // Make sure scrollbar width isn't included in the rectangle\n                bounding = { left: rect.left, right: rect.left + cur.clientWidth,\n                    top: rect.top, bottom: rect.top + cur.clientHeight };\n            }\n            let moveX = 0, moveY = 0;\n            if (y == \"nearest\") {\n                if (rect.top < bounding.top) {\n                    moveY = -(bounding.top - rect.top + yMargin);\n                    if (side > 0 && rect.bottom > bounding.bottom + moveY)\n                        moveY = rect.bottom - bounding.bottom + moveY + yMargin;\n                }\n                else if (rect.bottom > bounding.bottom) {\n                    moveY = rect.bottom - bounding.bottom + yMargin;\n                    if (side < 0 && (rect.top - moveY) < bounding.top)\n                        moveY = -(bounding.top + moveY - rect.top + yMargin);\n                }\n            }\n            else {\n                let rectHeight = rect.bottom - rect.top, boundingHeight = bounding.bottom - bounding.top;\n                let targetTop = y == \"center\" && rectHeight <= boundingHeight ? rect.top + rectHeight / 2 - boundingHeight / 2 :\n                    y == \"start\" || y == \"center\" && side < 0 ? rect.top - yMargin :\n                        rect.bottom - boundingHeight + yMargin;\n                moveY = targetTop - bounding.top;\n            }\n            if (x == \"nearest\") {\n                if (rect.left < bounding.left) {\n                    moveX = -(bounding.left - rect.left + xMargin);\n                    if (side > 0 && rect.right > bounding.right + moveX)\n                        moveX = rect.right - bounding.right + moveX + xMargin;\n                }\n                else if (rect.right > bounding.right) {\n                    moveX = rect.right - bounding.right + xMargin;\n                    if (side < 0 && rect.left < bounding.left + moveX)\n                        moveX = -(bounding.left + moveX - rect.left + xMargin);\n                }\n            }\n            else {\n                let targetLeft = x == \"center\" ? rect.left + (rect.right - rect.left) / 2 - (bounding.right - bounding.left) / 2 :\n                    (x == \"start\") == ltr ? rect.left - xMargin :\n                        rect.right - (bounding.right - bounding.left) + xMargin;\n                moveX = targetLeft - bounding.left;\n            }\n            if (moveX || moveY) {\n                if (top) {\n                    win.scrollBy(moveX, moveY);\n                }\n                else {\n                    if (moveY) {\n                        let start = cur.scrollTop;\n                        cur.scrollTop += moveY;\n                        moveY = cur.scrollTop - start;\n                    }\n                    if (moveX) {\n                        let start = cur.scrollLeft;\n                        cur.scrollLeft += moveX;\n                        moveX = cur.scrollLeft - start;\n                    }\n                    rect = { left: rect.left - moveX, top: rect.top - moveY,\n                        right: rect.right - moveX, bottom: rect.bottom - moveY };\n                }\n            }\n            if (top)\n                break;\n            cur = cur.assignedSlot || cur.parentNode;\n            x = y = \"nearest\";\n        }\n        else if (cur.nodeType == 11) { // A shadow root\n            cur = cur.host;\n        }\n        else {\n            break;\n        }\n    }\n}\nclass DOMSelectionState {\n    constructor() {\n        this.anchorNode = null;\n        this.anchorOffset = 0;\n        this.focusNode = null;\n        this.focusOffset = 0;\n    }\n    eq(domSel) {\n        return this.anchorNode == domSel.anchorNode && this.anchorOffset == domSel.anchorOffset &&\n            this.focusNode == domSel.focusNode && this.focusOffset == domSel.focusOffset;\n    }\n    setRange(range) {\n        this.set(range.anchorNode, range.anchorOffset, range.focusNode, range.focusOffset);\n    }\n    set(anchorNode, anchorOffset, focusNode, focusOffset) {\n        this.anchorNode = anchorNode;\n        this.anchorOffset = anchorOffset;\n        this.focusNode = focusNode;\n        this.focusOffset = focusOffset;\n    }\n}\nlet preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n    if (dom.setActive)\n        return dom.setActive(); // in IE\n    if (preventScrollSupported)\n        return dom.focus(preventScrollSupported);\n    let stack = [];\n    for (let cur = dom; cur; cur = cur.parentNode) {\n        stack.push(cur, cur.scrollTop, cur.scrollLeft);\n        if (cur == cur.ownerDocument)\n            break;\n    }\n    dom.focus(preventScrollSupported == null ? {\n        get preventScroll() {\n            preventScrollSupported = { preventScroll: true };\n            return true;\n        }\n    } : undefined);\n    if (!preventScrollSupported) {\n        preventScrollSupported = false;\n        for (let i = 0; i < stack.length;) {\n            let elt = stack[i++], top = stack[i++], left = stack[i++];\n            if (elt.scrollTop != top)\n                elt.scrollTop = top;\n            if (elt.scrollLeft != left)\n                elt.scrollLeft = left;\n        }\n    }\n}\nlet scratchRange;\nfunction textRange(node, from, to = from) {\n    let range = scratchRange || (scratchRange = document.createRange());\n    range.setEnd(node, to);\n    range.setStart(node, from);\n    return range;\n}\nfunction dispatchKey(elt, name, code) {\n    let options = { key: name, code: name, keyCode: code, which: code, cancelable: true };\n    let down = new KeyboardEvent(\"keydown\", options);\n    down.synthetic = true;\n    elt.dispatchEvent(down);\n    let up = new KeyboardEvent(\"keyup\", options);\n    up.synthetic = true;\n    elt.dispatchEvent(up);\n    return down.defaultPrevented || up.defaultPrevented;\n}\nfunction getRoot(node) {\n    while (node) {\n        if (node && (node.nodeType == 9 || node.nodeType == 11 && node.host))\n            return node;\n        node = node.assignedSlot || node.parentNode;\n    }\n    return null;\n}\nfunction clearAttributes(node) {\n    while (node.attributes.length)\n        node.removeAttributeNode(node.attributes[0]);\n}\n\nclass DOMPos {\n    constructor(node, offset, precise = true) {\n        this.node = node;\n        this.offset = offset;\n        this.precise = precise;\n    }\n    static before(dom, precise) { return new DOMPos(dom.parentNode, domIndex(dom), precise); }\n    static after(dom, precise) { return new DOMPos(dom.parentNode, domIndex(dom) + 1, precise); }\n}\nconst noChildren = [];\nclass ContentView {\n    constructor() {\n        this.parent = null;\n        this.dom = null;\n        this.dirty = 2 /* Node */;\n    }\n    get editorView() {\n        if (!this.parent)\n            throw new Error(\"Accessing view in orphan content view\");\n        return this.parent.editorView;\n    }\n    get overrideDOMText() { return null; }\n    get posAtStart() {\n        return this.parent ? this.parent.posBefore(this) : 0;\n    }\n    get posAtEnd() {\n        return this.posAtStart + this.length;\n    }\n    posBefore(view) {\n        let pos = this.posAtStart;\n        for (let child of this.children) {\n            if (child == view)\n                return pos;\n            pos += child.length + child.breakAfter;\n        }\n        throw new RangeError(\"Invalid child in posBefore\");\n    }\n    posAfter(view) {\n        return this.posBefore(view) + view.length;\n    }\n    // Will return a rectangle directly before (when side < 0), after\n    // (side > 0) or directly on (when the browser supports it) the\n    // given position.\n    coordsAt(_pos, _side) { return null; }\n    sync(track) {\n        if (this.dirty & 2 /* Node */) {\n            let parent = this.dom;\n            let prev = null, next;\n            for (let child of this.children) {\n                if (child.dirty) {\n                    if (!child.dom && (next = prev ? prev.nextSibling : parent.firstChild)) {\n                        let contentView = ContentView.get(next);\n                        if (!contentView || !contentView.parent && contentView.constructor == child.constructor)\n                            child.reuseDOM(next);\n                    }\n                    child.sync(track);\n                    child.dirty = 0 /* Not */;\n                }\n                next = prev ? prev.nextSibling : parent.firstChild;\n                if (track && !track.written && track.node == parent && next != child.dom)\n                    track.written = true;\n                if (child.dom.parentNode == parent) {\n                    while (next && next != child.dom)\n                        next = rm$1(next);\n                }\n                else {\n                    parent.insertBefore(child.dom, next);\n                }\n                prev = child.dom;\n            }\n            next = prev ? prev.nextSibling : parent.firstChild;\n            if (next && track && track.node == parent)\n                track.written = true;\n            while (next)\n                next = rm$1(next);\n        }\n        else if (this.dirty & 1 /* Child */) {\n            for (let child of this.children)\n                if (child.dirty) {\n                    child.sync(track);\n                    child.dirty = 0 /* Not */;\n                }\n        }\n    }\n    reuseDOM(_dom) { }\n    localPosFromDOM(node, offset) {\n        let after;\n        if (node == this.dom) {\n            after = this.dom.childNodes[offset];\n        }\n        else {\n            let bias = maxOffset(node) == 0 ? 0 : offset == 0 ? -1 : 1;\n            for (;;) {\n                let parent = node.parentNode;\n                if (parent == this.dom)\n                    break;\n                if (bias == 0 && parent.firstChild != parent.lastChild) {\n                    if (node == parent.firstChild)\n                        bias = -1;\n                    else\n                        bias = 1;\n                }\n                node = parent;\n            }\n            if (bias < 0)\n                after = node;\n            else\n                after = node.nextSibling;\n        }\n        if (after == this.dom.firstChild)\n            return 0;\n        while (after && !ContentView.get(after))\n            after = after.nextSibling;\n        if (!after)\n            return this.length;\n        for (let i = 0, pos = 0;; i++) {\n            let child = this.children[i];\n            if (child.dom == after)\n                return pos;\n            pos += child.length + child.breakAfter;\n        }\n    }\n    domBoundsAround(from, to, offset = 0) {\n        let fromI = -1, fromStart = -1, toI = -1, toEnd = -1;\n        for (let i = 0, pos = offset, prevEnd = offset; i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (pos < from && end > to)\n                return child.domBoundsAround(from, to, pos);\n            if (end >= from && fromI == -1) {\n                fromI = i;\n                fromStart = pos;\n            }\n            if (pos > to && child.dom.parentNode == this.dom) {\n                toI = i;\n                toEnd = prevEnd;\n                break;\n            }\n            prevEnd = end;\n            pos = end + child.breakAfter;\n        }\n        return { from: fromStart, to: toEnd < 0 ? offset + this.length : toEnd,\n            startDOM: (fromI ? this.children[fromI - 1].dom.nextSibling : null) || this.dom.firstChild,\n            endDOM: toI < this.children.length && toI >= 0 ? this.children[toI].dom : null };\n    }\n    markDirty(andParent = false) {\n        this.dirty |= 2 /* Node */;\n        this.markParentsDirty(andParent);\n    }\n    markParentsDirty(childList) {\n        for (let parent = this.parent; parent; parent = parent.parent) {\n            if (childList)\n                parent.dirty |= 2 /* Node */;\n            if (parent.dirty & 1 /* Child */)\n                return;\n            parent.dirty |= 1 /* Child */;\n            childList = false;\n        }\n    }\n    setParent(parent) {\n        if (this.parent != parent) {\n            this.parent = parent;\n            if (this.dirty)\n                this.markParentsDirty(true);\n        }\n    }\n    setDOM(dom) {\n        if (this.dom)\n            this.dom.cmView = null;\n        this.dom = dom;\n        dom.cmView = this;\n    }\n    get rootView() {\n        for (let v = this;;) {\n            let parent = v.parent;\n            if (!parent)\n                return v;\n            v = parent;\n        }\n    }\n    replaceChildren(from, to, children = noChildren) {\n        this.markDirty();\n        for (let i = from; i < to; i++) {\n            let child = this.children[i];\n            if (child.parent == this)\n                child.destroy();\n        }\n        this.children.splice(from, to - from, ...children);\n        for (let i = 0; i < children.length; i++)\n            children[i].setParent(this);\n    }\n    ignoreMutation(_rec) { return false; }\n    ignoreEvent(_event) { return false; }\n    childCursor(pos = this.length) {\n        return new ChildCursor(this.children, pos, this.children.length);\n    }\n    childPos(pos, bias = 1) {\n        return this.childCursor().findPos(pos, bias);\n    }\n    toString() {\n        let name = this.constructor.name.replace(\"View\", \"\");\n        return name + (this.children.length ? \"(\" + this.children.join() + \")\" :\n            this.length ? \"[\" + (name == \"Text\" ? this.text : this.length) + \"]\" : \"\") +\n            (this.breakAfter ? \"#\" : \"\");\n    }\n    static get(node) { return node.cmView; }\n    get isEditable() { return true; }\n    merge(from, to, source, hasStart, openStart, openEnd) {\n        return false;\n    }\n    become(other) { return false; }\n    // When this is a zero-length view with a side, this should return a\n    // number <= 0 to indicate it is before its position, or a\n    // number > 0 when after its position.\n    getSide() { return 0; }\n    destroy() {\n        this.parent = null;\n    }\n}\nContentView.prototype.breakAfter = 0;\n// Remove a DOM node and return its next sibling.\nfunction rm$1(dom) {\n    let next = dom.nextSibling;\n    dom.parentNode.removeChild(dom);\n    return next;\n}\nclass ChildCursor {\n    constructor(children, pos, i) {\n        this.children = children;\n        this.pos = pos;\n        this.i = i;\n        this.off = 0;\n    }\n    findPos(pos, bias = 1) {\n        for (;;) {\n            if (pos > this.pos || pos == this.pos &&\n                (bias > 0 || this.i == 0 || this.children[this.i - 1].breakAfter)) {\n                this.off = pos - this.pos;\n                return this;\n            }\n            let next = this.children[--this.i];\n            this.pos -= next.length + next.breakAfter;\n        }\n    }\n}\nfunction replaceRange(parent, fromI, fromOff, toI, toOff, insert, breakAtStart, openStart, openEnd) {\n    let { children } = parent;\n    let before = children.length ? children[fromI] : null;\n    let last = insert.length ? insert[insert.length - 1] : null;\n    let breakAtEnd = last ? last.breakAfter : breakAtStart;\n    // Change within a single child\n    if (fromI == toI && before && !breakAtStart && !breakAtEnd && insert.length < 2 &&\n        before.merge(fromOff, toOff, insert.length ? last : null, fromOff == 0, openStart, openEnd))\n        return;\n    if (toI < children.length) {\n        let after = children[toI];\n        // Make sure the end of the child after the update is preserved in `after`\n        if (after && toOff < after.length) {\n            // If we're splitting a child, separate part of it to avoid that\n            // being mangled when updating the child before the update.\n            if (fromI == toI) {\n                after = after.split(toOff);\n                toOff = 0;\n            }\n            // If the element after the replacement should be merged with\n            // the last replacing element, update `content`\n            if (!breakAtEnd && last && after.merge(0, toOff, last, true, 0, openEnd)) {\n                insert[insert.length - 1] = after;\n            }\n            else {\n                // Remove the start of the after element, if necessary, and\n                // add it to `content`.\n                if (toOff)\n                    after.merge(0, toOff, null, false, 0, openEnd);\n                insert.push(after);\n            }\n        }\n        else if (after === null || after === void 0 ? void 0 : after.breakAfter) {\n            // The element at `toI` is entirely covered by this range.\n            // Preserve its line break, if any.\n            if (last)\n                last.breakAfter = 1;\n            else\n                breakAtStart = 1;\n        }\n        // Since we've handled the next element from the current elements\n        // now, make sure `toI` points after that.\n        toI++;\n    }\n    if (before) {\n        before.breakAfter = breakAtStart;\n        if (fromOff > 0) {\n            if (!breakAtStart && insert.length && before.merge(fromOff, before.length, insert[0], false, openStart, 0)) {\n                before.breakAfter = insert.shift().breakAfter;\n            }\n            else if (fromOff < before.length || before.children.length && before.children[before.children.length - 1].length == 0) {\n                before.merge(fromOff, before.length, null, false, openStart, 0);\n            }\n            fromI++;\n        }\n    }\n    // Try to merge widgets on the boundaries of the replacement\n    while (fromI < toI && insert.length) {\n        if (children[toI - 1].become(insert[insert.length - 1])) {\n            toI--;\n            insert.pop();\n            openEnd = insert.length ? 0 : openStart;\n        }\n        else if (children[fromI].become(insert[0])) {\n            fromI++;\n            insert.shift();\n            openStart = insert.length ? 0 : openEnd;\n        }\n        else {\n            break;\n        }\n    }\n    if (!insert.length && fromI && toI < children.length && !children[fromI - 1].breakAfter &&\n        children[toI].merge(0, 0, children[fromI - 1], false, openStart, openEnd))\n        fromI--;\n    if (fromI < toI || insert.length)\n        parent.replaceChildren(fromI, toI, insert);\n}\nfunction mergeChildrenInto(parent, from, to, insert, openStart, openEnd) {\n    let cur = parent.childCursor();\n    let { i: toI, off: toOff } = cur.findPos(to, 1);\n    let { i: fromI, off: fromOff } = cur.findPos(from, -1);\n    let dLen = from - to;\n    for (let view of insert)\n        dLen += view.length;\n    parent.length += dLen;\n    replaceRange(parent, fromI, fromOff, toI, toOff, insert, 0, openStart, openEnd);\n}\n\nlet nav = typeof navigator != \"undefined\" ? navigator : { userAgent: \"\", vendor: \"\", platform: \"\" };\nlet doc = typeof document != \"undefined\" ? document : { documentElement: { style: {} } };\nconst ie_edge = /*@__PURE__*//Edge\\/(\\d+)/.exec(nav.userAgent);\nconst ie_upto10 = /*@__PURE__*//MSIE \\d/.test(nav.userAgent);\nconst ie_11up = /*@__PURE__*//Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(nav.userAgent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst gecko = !ie && /*@__PURE__*//gecko\\/(\\d+)/i.test(nav.userAgent);\nconst chrome = !ie && /*@__PURE__*//Chrome\\/(\\d+)/.exec(nav.userAgent);\nconst webkit = \"webkitFontSmoothing\" in doc.documentElement.style;\nconst safari = !ie && /*@__PURE__*//Apple Computer/.test(nav.vendor);\nconst ios = safari && (/*@__PURE__*//Mobile\\/\\w+/.test(nav.userAgent) || nav.maxTouchPoints > 2);\nvar browser = {\n    mac: ios || /*@__PURE__*//Mac/.test(nav.platform),\n    windows: /*@__PURE__*//Win/.test(nav.platform),\n    linux: /*@__PURE__*//Linux|X11/.test(nav.platform),\n    ie,\n    ie_version: ie_upto10 ? doc.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0,\n    gecko,\n    gecko_version: gecko ? +(/*@__PURE__*//Firefox\\/(\\d+)/.exec(nav.userAgent) || [0, 0])[1] : 0,\n    chrome: !!chrome,\n    chrome_version: chrome ? +chrome[1] : 0,\n    ios,\n    android: /*@__PURE__*//Android\\b/.test(nav.userAgent),\n    webkit,\n    safari,\n    webkit_version: webkit ? +(/*@__PURE__*//\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0,\n    tabSize: doc.documentElement.style.tabSize != null ? \"tab-size\" : \"-moz-tab-size\"\n};\n\nconst MaxJoinLen = 256;\nclass TextView extends ContentView {\n    constructor(text) {\n        super();\n        this.text = text;\n    }\n    get length() { return this.text.length; }\n    createDOM(textDOM) {\n        this.setDOM(textDOM || document.createTextNode(this.text));\n    }\n    sync(track) {\n        if (!this.dom)\n            this.createDOM();\n        if (this.dom.nodeValue != this.text) {\n            if (track && track.node == this.dom)\n                track.written = true;\n            this.dom.nodeValue = this.text;\n        }\n    }\n    reuseDOM(dom) {\n        if (dom.nodeType == 3)\n            this.createDOM(dom);\n    }\n    merge(from, to, source) {\n        if (source && (!(source instanceof TextView) || this.length - (to - from) + source.length > MaxJoinLen))\n            return false;\n        this.text = this.text.slice(0, from) + (source ? source.text : \"\") + this.text.slice(to);\n        this.markDirty();\n        return true;\n    }\n    split(from) {\n        let result = new TextView(this.text.slice(from));\n        this.text = this.text.slice(0, from);\n        this.markDirty();\n        return result;\n    }\n    localPosFromDOM(node, offset) {\n        return node == this.dom ? offset : offset ? this.text.length : 0;\n    }\n    domAtPos(pos) { return new DOMPos(this.dom, pos); }\n    domBoundsAround(_from, _to, offset) {\n        return { from: offset, to: offset + this.length, startDOM: this.dom, endDOM: this.dom.nextSibling };\n    }\n    coordsAt(pos, side) {\n        return textCoords(this.dom, pos, side);\n    }\n}\nclass MarkView extends ContentView {\n    constructor(mark, children = [], length = 0) {\n        super();\n        this.mark = mark;\n        this.children = children;\n        this.length = length;\n        for (let ch of children)\n            ch.setParent(this);\n    }\n    setAttrs(dom) {\n        clearAttributes(dom);\n        if (this.mark.class)\n            dom.className = this.mark.class;\n        if (this.mark.attrs)\n            for (let name in this.mark.attrs)\n                dom.setAttribute(name, this.mark.attrs[name]);\n        return dom;\n    }\n    reuseDOM(node) {\n        if (node.nodeName == this.mark.tagName.toUpperCase()) {\n            this.setDOM(node);\n            this.dirty |= 4 /* Attrs */ | 2 /* Node */;\n        }\n    }\n    sync(track) {\n        if (!this.dom)\n            this.setDOM(this.setAttrs(document.createElement(this.mark.tagName)));\n        else if (this.dirty & 4 /* Attrs */)\n            this.setAttrs(this.dom);\n        super.sync(track);\n    }\n    merge(from, to, source, _hasStart, openStart, openEnd) {\n        if (source && (!(source instanceof MarkView && source.mark.eq(this.mark)) ||\n            (from && openStart <= 0) || (to < this.length && openEnd <= 0)))\n            return false;\n        mergeChildrenInto(this, from, to, source ? source.children : [], openStart - 1, openEnd - 1);\n        this.markDirty();\n        return true;\n    }\n    split(from) {\n        let result = [], off = 0, detachFrom = -1, i = 0;\n        for (let elt of this.children) {\n            let end = off + elt.length;\n            if (end > from)\n                result.push(off < from ? elt.split(from - off) : elt);\n            if (detachFrom < 0 && off >= from)\n                detachFrom = i;\n            off = end;\n            i++;\n        }\n        let length = this.length - from;\n        this.length = from;\n        if (detachFrom > -1) {\n            this.children.length = detachFrom;\n            this.markDirty();\n        }\n        return new MarkView(this.mark, result, length);\n    }\n    domAtPos(pos) {\n        return inlineDOMAtPos(this.dom, this.children, pos);\n    }\n    coordsAt(pos, side) {\n        return coordsInChildren(this, pos, side);\n    }\n}\nfunction textCoords(text, pos, side) {\n    let length = text.nodeValue.length;\n    if (pos > length)\n        pos = length;\n    let from = pos, to = pos, flatten = 0;\n    if (pos == 0 && side < 0 || pos == length && side >= 0) {\n        if (!(browser.chrome || browser.gecko)) { // These browsers reliably return valid rectangles for empty ranges\n            if (pos) {\n                from--;\n                flatten = 1;\n            } // FIXME this is wrong in RTL text\n            else if (to < length) {\n                to++;\n                flatten = -1;\n            }\n        }\n    }\n    else {\n        if (side < 0)\n            from--;\n        else if (to < length)\n            to++;\n    }\n    let rects = textRange(text, from, to).getClientRects();\n    if (!rects.length)\n        return Rect0;\n    let rect = rects[(flatten ? flatten < 0 : side >= 0) ? 0 : rects.length - 1];\n    if (browser.safari && !flatten && rect.width == 0)\n        rect = Array.prototype.find.call(rects, r => r.width) || rect;\n    return flatten ? flattenRect(rect, flatten < 0) : rect || null;\n}\n// Also used for collapsed ranges that don't have a placeholder widget!\nclass WidgetView extends ContentView {\n    constructor(widget, length, side) {\n        super();\n        this.widget = widget;\n        this.length = length;\n        this.side = side;\n        this.prevWidget = null;\n    }\n    static create(widget, length, side) {\n        return new (widget.customView || WidgetView)(widget, length, side);\n    }\n    split(from) {\n        let result = WidgetView.create(this.widget, this.length - from, this.side);\n        this.length -= from;\n        return result;\n    }\n    sync() {\n        if (!this.dom || !this.widget.updateDOM(this.dom)) {\n            if (this.dom && this.prevWidget)\n                this.prevWidget.destroy(this.dom);\n            this.prevWidget = null;\n            this.setDOM(this.widget.toDOM(this.editorView));\n            this.dom.contentEditable = \"false\";\n        }\n    }\n    getSide() { return this.side; }\n    merge(from, to, source, hasStart, openStart, openEnd) {\n        if (source && (!(source instanceof WidgetView) || !this.widget.compare(source.widget) ||\n            from > 0 && openStart <= 0 || to < this.length && openEnd <= 0))\n            return false;\n        this.length = from + (source ? source.length : 0) + (this.length - to);\n        return true;\n    }\n    become(other) {\n        if (other.length == this.length && other instanceof WidgetView && other.side == this.side) {\n            if (this.widget.constructor == other.widget.constructor) {\n                if (!this.widget.eq(other.widget))\n                    this.markDirty(true);\n                if (this.dom && !this.prevWidget)\n                    this.prevWidget = this.widget;\n                this.widget = other.widget;\n                return true;\n            }\n        }\n        return false;\n    }\n    ignoreMutation() { return true; }\n    ignoreEvent(event) { return this.widget.ignoreEvent(event); }\n    get overrideDOMText() {\n        if (this.length == 0)\n            return Text.empty;\n        let top = this;\n        while (top.parent)\n            top = top.parent;\n        let view = top.editorView, text = view && view.state.doc, start = this.posAtStart;\n        return text ? text.slice(start, start + this.length) : Text.empty;\n    }\n    domAtPos(pos) {\n        return pos == 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom, pos == this.length);\n    }\n    domBoundsAround() { return null; }\n    coordsAt(pos, side) {\n        let rects = this.dom.getClientRects(), rect = null;\n        if (!rects.length)\n            return Rect0;\n        for (let i = pos > 0 ? rects.length - 1 : 0;; i += (pos > 0 ? -1 : 1)) {\n            rect = rects[i];\n            if (pos > 0 ? i == 0 : i == rects.length - 1 || rect.top < rect.bottom)\n                break;\n        }\n        return (pos == 0 && side > 0 || pos == this.length && side <= 0) ? rect : flattenRect(rect, pos == 0);\n    }\n    get isEditable() { return false; }\n    destroy() {\n        super.destroy();\n        if (this.dom)\n            this.widget.destroy(this.dom);\n    }\n}\nclass CompositionView extends WidgetView {\n    domAtPos(pos) {\n        let { topView, text } = this.widget;\n        if (!topView)\n            return new DOMPos(text, Math.min(pos, text.nodeValue.length));\n        return scanCompositionTree(pos, 0, topView, text, (v, p) => v.domAtPos(p), p => new DOMPos(text, Math.min(p, text.nodeValue.length)));\n    }\n    sync() { this.setDOM(this.widget.toDOM()); }\n    localPosFromDOM(node, offset) {\n        let { topView, text } = this.widget;\n        if (!topView)\n            return Math.min(offset, this.length);\n        return posFromDOMInCompositionTree(node, offset, topView, text);\n    }\n    ignoreMutation() { return false; }\n    get overrideDOMText() { return null; }\n    coordsAt(pos, side) {\n        let { topView, text } = this.widget;\n        if (!topView)\n            return textCoords(text, pos, side);\n        return scanCompositionTree(pos, side, topView, text, (v, pos, side) => v.coordsAt(pos, side), (pos, side) => textCoords(text, pos, side));\n    }\n    destroy() {\n        var _a;\n        super.destroy();\n        (_a = this.widget.topView) === null || _a === void 0 ? void 0 : _a.destroy();\n    }\n    get isEditable() { return true; }\n}\n// Uses the old structure of a chunk of content view frozen for\n// composition to try and find a reasonable DOM location for the given\n// offset.\nfunction scanCompositionTree(pos, side, view, text, enterView, fromText) {\n    if (view instanceof MarkView) {\n        for (let child of view.children) {\n            let hasComp = contains(child.dom, text);\n            let len = hasComp ? text.nodeValue.length : child.length;\n            if (pos < len || pos == len && child.getSide() <= 0)\n                return hasComp ? scanCompositionTree(pos, side, child, text, enterView, fromText) : enterView(child, pos, side);\n            pos -= len;\n        }\n        return enterView(view, view.length, -1);\n    }\n    else if (view.dom == text) {\n        return fromText(pos, side);\n    }\n    else {\n        return enterView(view, pos, side);\n    }\n}\nfunction posFromDOMInCompositionTree(node, offset, view, text) {\n    if (view instanceof MarkView) {\n        for (let child of view.children) {\n            let pos = 0, hasComp = contains(child.dom, text);\n            if (contains(child.dom, node))\n                return pos + (hasComp ? posFromDOMInCompositionTree(node, offset, child, text) : child.localPosFromDOM(node, offset));\n            pos += hasComp ? text.nodeValue.length : child.length;\n        }\n    }\n    else if (view.dom == text) {\n        return Math.min(offset, text.nodeValue.length);\n    }\n    return view.localPosFromDOM(node, offset);\n}\n// These are drawn around uneditable widgets to avoid a number of\n// browser bugs that show up when the cursor is directly next to\n// uneditable inline content.\nclass WidgetBufferView extends ContentView {\n    constructor(side) {\n        super();\n        this.side = side;\n    }\n    get length() { return 0; }\n    merge() { return false; }\n    become(other) {\n        return other instanceof WidgetBufferView && other.side == this.side;\n    }\n    split() { return new WidgetBufferView(this.side); }\n    sync() {\n        if (!this.dom) {\n            let dom = document.createElement(\"img\");\n            dom.className = \"cm-widgetBuffer\";\n            dom.setAttribute(\"aria-hidden\", \"true\");\n            this.setDOM(dom);\n        }\n    }\n    getSide() { return this.side; }\n    domAtPos(pos) { return DOMPos.before(this.dom); }\n    localPosFromDOM() { return 0; }\n    domBoundsAround() { return null; }\n    coordsAt(pos) {\n        let imgRect = this.dom.getBoundingClientRect();\n        // Since the <img> height doesn't correspond to text height, try\n        // to borrow the height from some sibling node.\n        let siblingRect = inlineSiblingRect(this, this.side > 0 ? -1 : 1);\n        return siblingRect && siblingRect.top < imgRect.bottom && siblingRect.bottom > imgRect.top\n            ? { left: imgRect.left, right: imgRect.right, top: siblingRect.top, bottom: siblingRect.bottom } : imgRect;\n    }\n    get overrideDOMText() {\n        return Text.empty;\n    }\n}\nTextView.prototype.children = WidgetView.prototype.children = WidgetBufferView.prototype.children = noChildren;\nfunction inlineSiblingRect(view, side) {\n    let parent = view.parent, index = parent ? parent.children.indexOf(view) : -1;\n    while (parent && index >= 0) {\n        if (side < 0 ? index > 0 : index < parent.children.length) {\n            let next = parent.children[index + side];\n            if (next instanceof TextView) {\n                let nextRect = next.coordsAt(side < 0 ? next.length : 0, side);\n                if (nextRect)\n                    return nextRect;\n            }\n            index += side;\n        }\n        else if (parent instanceof MarkView && parent.parent) {\n            index = parent.parent.children.indexOf(parent) + (side < 0 ? 0 : 1);\n            parent = parent.parent;\n        }\n        else {\n            let last = parent.dom.lastChild;\n            if (last && last.nodeName == \"BR\")\n                return last.getClientRects()[0];\n            break;\n        }\n    }\n    return undefined;\n}\nfunction inlineDOMAtPos(dom, children, pos) {\n    let i = 0;\n    for (let off = 0; i < children.length; i++) {\n        let child = children[i], end = off + child.length;\n        if (end == off && child.getSide() <= 0)\n            continue;\n        if (pos > off && pos < end && child.dom.parentNode == dom)\n            return child.domAtPos(pos - off);\n        if (pos <= off)\n            break;\n        off = end;\n    }\n    for (; i > 0; i--) {\n        let before = children[i - 1].dom;\n        if (before.parentNode == dom)\n            return DOMPos.after(before);\n    }\n    return new DOMPos(dom, 0);\n}\n// Assumes `view`, if a mark view, has precisely 1 child.\nfunction joinInlineInto(parent, view, open) {\n    let last, { children } = parent;\n    if (open > 0 && view instanceof MarkView && children.length &&\n        (last = children[children.length - 1]) instanceof MarkView && last.mark.eq(view.mark)) {\n        joinInlineInto(last, view.children[0], open - 1);\n    }\n    else {\n        children.push(view);\n        view.setParent(parent);\n    }\n    parent.length += view.length;\n}\nfunction coordsInChildren(view, pos, side) {\n    for (let off = 0, i = 0; i < view.children.length; i++) {\n        let child = view.children[i], end = off + child.length, next;\n        if ((side <= 0 || end == view.length || child.getSide() > 0 ? end >= pos : end > pos) &&\n            (pos < end || i + 1 == view.children.length || (next = view.children[i + 1]).length || next.getSide() > 0)) {\n            let flatten = 0;\n            if (end == off) {\n                if (child.getSide() <= 0)\n                    continue;\n                flatten = side = -child.getSide();\n            }\n            let rect = child.coordsAt(Math.max(0, pos - off), side);\n            return flatten && rect ? flattenRect(rect, side < 0) : rect;\n        }\n        off = end;\n    }\n    let last = view.dom.lastChild;\n    if (!last)\n        return view.dom.getBoundingClientRect();\n    let rects = clientRectsFor(last);\n    return rects[rects.length - 1] || null;\n}\n\nfunction combineAttrs(source, target) {\n    for (let name in source) {\n        if (name == \"class\" && target.class)\n            target.class += \" \" + source.class;\n        else if (name == \"style\" && target.style)\n            target.style += \";\" + source.style;\n        else\n            target[name] = source[name];\n    }\n    return target;\n}\nfunction attrsEq(a, b) {\n    if (a == b)\n        return true;\n    if (!a || !b)\n        return false;\n    let keysA = Object.keys(a), keysB = Object.keys(b);\n    if (keysA.length != keysB.length)\n        return false;\n    for (let key of keysA) {\n        if (keysB.indexOf(key) == -1 || a[key] !== b[key])\n            return false;\n    }\n    return true;\n}\nfunction updateAttrs(dom, prev, attrs) {\n    let changed = null;\n    if (prev)\n        for (let name in prev)\n            if (!(attrs && name in attrs))\n                dom.removeAttribute(changed = name);\n    if (attrs)\n        for (let name in attrs)\n            if (!(prev && prev[name] == attrs[name]))\n                dom.setAttribute(changed = name, attrs[name]);\n    return !!changed;\n}\n\n/**\nWidgets added to the content are described by subclasses of this\nclass. Using a description object like that makes it possible to\ndelay creating of the DOM structure for a widget until it is\nneeded, and to avoid redrawing widgets even if the decorations\nthat define them are recreated.\n*/\nclass WidgetType {\n    /**\n    Compare this instance to another instance of the same type.\n    (TypeScript can't express this, but only instances of the same\n    specific class will be passed to this method.) This is used to\n    avoid redrawing widgets when they are replaced by a new\n    decoration of the same type. The default implementation just\n    returns `false`, which will cause new instances of the widget to\n    always be redrawn.\n    */\n    eq(widget) { return false; }\n    /**\n    Update a DOM element created by a widget of the same type (but\n    different, non-`eq` content) to reflect this widget. May return\n    true to indicate that it could update, false to indicate it\n    couldn't (in which case the widget will be redrawn). The default\n    implementation just returns false.\n    */\n    updateDOM(dom) { return false; }\n    /**\n    @internal\n    */\n    compare(other) {\n        return this == other || this.constructor == other.constructor && this.eq(other);\n    }\n    /**\n    The estimated height this widget will have, to be used when\n    estimating the height of content that hasn't been drawn. May\n    return -1 to indicate you don't know. The default implementation\n    returns -1.\n    */\n    get estimatedHeight() { return -1; }\n    /**\n    Can be used to configure which kinds of events inside the widget\n    should be ignored by the editor. The default is to ignore all\n    events.\n    */\n    ignoreEvent(event) { return true; }\n    /**\n    @internal\n    */\n    get customView() { return null; }\n    /**\n    This is called when the an instance of the widget is removed\n    from the editor view.\n    */\n    destroy(dom) { }\n}\n/**\nThe different types of blocks that can occur in an editor view.\n*/\nvar BlockType = /*@__PURE__*/(function (BlockType) {\n    /**\n    A line of text.\n    */\n    BlockType[BlockType[\"Text\"] = 0] = \"Text\";\n    /**\n    A block widget associated with the position after it.\n    */\n    BlockType[BlockType[\"WidgetBefore\"] = 1] = \"WidgetBefore\";\n    /**\n    A block widget associated with the position before it.\n    */\n    BlockType[BlockType[\"WidgetAfter\"] = 2] = \"WidgetAfter\";\n    /**\n    A block widget [replacing](https://codemirror.net/6/docs/ref/#view.Decoration^replace) a range of content.\n    */\n    BlockType[BlockType[\"WidgetRange\"] = 3] = \"WidgetRange\";\nreturn BlockType})(BlockType || (BlockType = {}));\n/**\nA decoration provides information on how to draw or style a piece\nof content. You'll usually use it wrapped in a\n[`Range`](https://codemirror.net/6/docs/ref/#state.Range), which adds a start and end position.\n@nonabstract\n*/\nclass Decoration extends RangeValue {\n    constructor(\n    /**\n    @internal\n    */\n    startSide, \n    /**\n    @internal\n    */\n    endSide, \n    /**\n    @internal\n    */\n    widget, \n    /**\n    The config object used to create this decoration. You can\n    include additional properties in there to store metadata about\n    your decoration.\n    */\n    spec) {\n        super();\n        this.startSide = startSide;\n        this.endSide = endSide;\n        this.widget = widget;\n        this.spec = spec;\n    }\n    /**\n    @internal\n    */\n    get heightRelevant() { return false; }\n    /**\n    Create a mark decoration, which influences the styling of the\n    content in its range. Nested mark decorations will cause nested\n    DOM elements to be created. Nesting order is determined by\n    precedence of the [facet](https://codemirror.net/6/docs/ref/#view.EditorView^decorations), with\n    the higher-precedence decorations creating the inner DOM nodes.\n    Such elements are split on line boundaries and on the boundaries\n    of lower-precedence decorations.\n    */\n    static mark(spec) {\n        return new MarkDecoration(spec);\n    }\n    /**\n    Create a widget decoration, which displays a DOM element at the\n    given position.\n    */\n    static widget(spec) {\n        let side = spec.side || 0, block = !!spec.block;\n        side += block ? (side > 0 ? 300000000 /* BlockAfter */ : -400000000 /* BlockBefore */) : (side > 0 ? 100000000 /* InlineAfter */ : -100000000 /* InlineBefore */);\n        return new PointDecoration(spec, side, side, block, spec.widget || null, false);\n    }\n    /**\n    Create a replace decoration which replaces the given range with\n    a widget, or simply hides it.\n    */\n    static replace(spec) {\n        let block = !!spec.block, startSide, endSide;\n        if (spec.isBlockGap) {\n            startSide = -500000000 /* GapStart */;\n            endSide = 400000000 /* GapEnd */;\n        }\n        else {\n            let { start, end } = getInclusive(spec, block);\n            startSide = (start ? (block ? -300000000 /* BlockIncStart */ : -1 /* InlineIncStart */) : 500000000 /* NonIncStart */) - 1;\n            endSide = (end ? (block ? 200000000 /* BlockIncEnd */ : 1 /* InlineIncEnd */) : -600000000 /* NonIncEnd */) + 1;\n        }\n        return new PointDecoration(spec, startSide, endSide, block, spec.widget || null, true);\n    }\n    /**\n    Create a line decoration, which can add DOM attributes to the\n    line starting at the given position.\n    */\n    static line(spec) {\n        return new LineDecoration(spec);\n    }\n    /**\n    Build a [`DecorationSet`](https://codemirror.net/6/docs/ref/#view.DecorationSet) from the given\n    decorated range or ranges. If the ranges aren't already sorted,\n    pass `true` for `sort` to make the library sort them for you.\n    */\n    static set(of, sort = false) {\n        return RangeSet.of(of, sort);\n    }\n    /**\n    @internal\n    */\n    hasHeight() { return this.widget ? this.widget.estimatedHeight > -1 : false; }\n}\n/**\nThe empty set of decorations.\n*/\nDecoration.none = RangeSet.empty;\nclass MarkDecoration extends Decoration {\n    constructor(spec) {\n        let { start, end } = getInclusive(spec);\n        super(start ? -1 /* InlineIncStart */ : 500000000 /* NonIncStart */, end ? 1 /* InlineIncEnd */ : -600000000 /* NonIncEnd */, null, spec);\n        this.tagName = spec.tagName || \"span\";\n        this.class = spec.class || \"\";\n        this.attrs = spec.attributes || null;\n    }\n    eq(other) {\n        return this == other ||\n            other instanceof MarkDecoration &&\n                this.tagName == other.tagName &&\n                this.class == other.class &&\n                attrsEq(this.attrs, other.attrs);\n    }\n    range(from, to = from) {\n        if (from >= to)\n            throw new RangeError(\"Mark decorations may not be empty\");\n        return super.range(from, to);\n    }\n}\nMarkDecoration.prototype.point = false;\nclass LineDecoration extends Decoration {\n    constructor(spec) {\n        super(-200000000 /* Line */, -200000000 /* Line */, null, spec);\n    }\n    eq(other) {\n        return other instanceof LineDecoration && attrsEq(this.spec.attributes, other.spec.attributes);\n    }\n    range(from, to = from) {\n        if (to != from)\n            throw new RangeError(\"Line decoration ranges must be zero-length\");\n        return super.range(from, to);\n    }\n}\nLineDecoration.prototype.mapMode = MapMode.TrackBefore;\nLineDecoration.prototype.point = true;\nclass PointDecoration extends Decoration {\n    constructor(spec, startSide, endSide, block, widget, isReplace) {\n        super(startSide, endSide, widget, spec);\n        this.block = block;\n        this.isReplace = isReplace;\n        this.mapMode = !block ? MapMode.TrackDel : startSide <= 0 ? MapMode.TrackBefore : MapMode.TrackAfter;\n    }\n    // Only relevant when this.block == true\n    get type() {\n        return this.startSide < this.endSide ? BlockType.WidgetRange\n            : this.startSide <= 0 ? BlockType.WidgetBefore : BlockType.WidgetAfter;\n    }\n    get heightRelevant() { return this.block || !!this.widget && this.widget.estimatedHeight >= 5; }\n    eq(other) {\n        return other instanceof PointDecoration &&\n            widgetsEq(this.widget, other.widget) &&\n            this.block == other.block &&\n            this.startSide == other.startSide && this.endSide == other.endSide;\n    }\n    range(from, to = from) {\n        if (this.isReplace && (from > to || (from == to && this.startSide > 0 && this.endSide <= 0)))\n            throw new RangeError(\"Invalid range for replacement decoration\");\n        if (!this.isReplace && to != from)\n            throw new RangeError(\"Widget decorations can only have zero-length ranges\");\n        return super.range(from, to);\n    }\n}\nPointDecoration.prototype.point = true;\nfunction getInclusive(spec, block = false) {\n    let { inclusiveStart: start, inclusiveEnd: end } = spec;\n    if (start == null)\n        start = spec.inclusive;\n    if (end == null)\n        end = spec.inclusive;\n    return { start: start !== null && start !== void 0 ? start : block, end: end !== null && end !== void 0 ? end : block };\n}\nfunction widgetsEq(a, b) {\n    return a == b || !!(a && b && a.compare(b));\n}\nfunction addRange(from, to, ranges, margin = 0) {\n    let last = ranges.length - 1;\n    if (last >= 0 && ranges[last] + margin >= from)\n        ranges[last] = Math.max(ranges[last], to);\n    else\n        ranges.push(from, to);\n}\n\nclass LineView extends ContentView {\n    constructor() {\n        super(...arguments);\n        this.children = [];\n        this.length = 0;\n        this.prevAttrs = undefined;\n        this.attrs = null;\n        this.breakAfter = 0;\n    }\n    // Consumes source\n    merge(from, to, source, hasStart, openStart, openEnd) {\n        if (source) {\n            if (!(source instanceof LineView))\n                return false;\n            if (!this.dom)\n                source.transferDOM(this); // Reuse source.dom when appropriate\n        }\n        if (hasStart)\n            this.setDeco(source ? source.attrs : null);\n        mergeChildrenInto(this, from, to, source ? source.children : [], openStart, openEnd);\n        return true;\n    }\n    split(at) {\n        let end = new LineView;\n        end.breakAfter = this.breakAfter;\n        if (this.length == 0)\n            return end;\n        let { i, off } = this.childPos(at);\n        if (off) {\n            end.append(this.children[i].split(off), 0);\n            this.children[i].merge(off, this.children[i].length, null, false, 0, 0);\n            i++;\n        }\n        for (let j = i; j < this.children.length; j++)\n            end.append(this.children[j], 0);\n        while (i > 0 && this.children[i - 1].length == 0)\n            this.children[--i].destroy();\n        this.children.length = i;\n        this.markDirty();\n        this.length = at;\n        return end;\n    }\n    transferDOM(other) {\n        if (!this.dom)\n            return;\n        this.markDirty();\n        other.setDOM(this.dom);\n        other.prevAttrs = this.prevAttrs === undefined ? this.attrs : this.prevAttrs;\n        this.prevAttrs = undefined;\n        this.dom = null;\n    }\n    setDeco(attrs) {\n        if (!attrsEq(this.attrs, attrs)) {\n            if (this.dom) {\n                this.prevAttrs = this.attrs;\n                this.markDirty();\n            }\n            this.attrs = attrs;\n        }\n    }\n    append(child, openStart) {\n        joinInlineInto(this, child, openStart);\n    }\n    // Only called when building a line view in ContentBuilder\n    addLineDeco(deco) {\n        let attrs = deco.spec.attributes, cls = deco.spec.class;\n        if (attrs)\n            this.attrs = combineAttrs(attrs, this.attrs || {});\n        if (cls)\n            this.attrs = combineAttrs({ class: cls }, this.attrs || {});\n    }\n    domAtPos(pos) {\n        return inlineDOMAtPos(this.dom, this.children, pos);\n    }\n    reuseDOM(node) {\n        if (node.nodeName == \"DIV\") {\n            this.setDOM(node);\n            this.dirty |= 4 /* Attrs */ | 2 /* Node */;\n        }\n    }\n    sync(track) {\n        var _a;\n        if (!this.dom) {\n            this.setDOM(document.createElement(\"div\"));\n            this.dom.className = \"cm-line\";\n            this.prevAttrs = this.attrs ? null : undefined;\n        }\n        else if (this.dirty & 4 /* Attrs */) {\n            clearAttributes(this.dom);\n            this.dom.className = \"cm-line\";\n            this.prevAttrs = this.attrs ? null : undefined;\n        }\n        if (this.prevAttrs !== undefined) {\n            updateAttrs(this.dom, this.prevAttrs, this.attrs);\n            this.dom.classList.add(\"cm-line\");\n            this.prevAttrs = undefined;\n        }\n        super.sync(track);\n        let last = this.dom.lastChild;\n        while (last && ContentView.get(last) instanceof MarkView)\n            last = last.lastChild;\n        if (!last || !this.length ||\n            last.nodeName != \"BR\" && ((_a = ContentView.get(last)) === null || _a === void 0 ? void 0 : _a.isEditable) == false &&\n                (!browser.ios || !this.children.some(ch => ch instanceof TextView))) {\n            let hack = document.createElement(\"BR\");\n            hack.cmIgnore = true;\n            this.dom.appendChild(hack);\n        }\n    }\n    measureTextSize() {\n        if (this.children.length == 0 || this.length > 20)\n            return null;\n        let totalWidth = 0;\n        for (let child of this.children) {\n            if (!(child instanceof TextView))\n                return null;\n            let rects = clientRectsFor(child.dom);\n            if (rects.length != 1)\n                return null;\n            totalWidth += rects[0].width;\n        }\n        return { lineHeight: this.dom.getBoundingClientRect().height,\n            charWidth: totalWidth / this.length };\n    }\n    coordsAt(pos, side) {\n        return coordsInChildren(this, pos, side);\n    }\n    become(_other) { return false; }\n    get type() { return BlockType.Text; }\n    static find(docView, pos) {\n        for (let i = 0, off = 0; i < docView.children.length; i++) {\n            let block = docView.children[i], end = off + block.length;\n            if (end >= pos) {\n                if (block instanceof LineView)\n                    return block;\n                if (end > pos)\n                    break;\n            }\n            off = end + block.breakAfter;\n        }\n        return null;\n    }\n}\nclass BlockWidgetView extends ContentView {\n    constructor(widget, length, type) {\n        super();\n        this.widget = widget;\n        this.length = length;\n        this.type = type;\n        this.breakAfter = 0;\n        this.prevWidget = null;\n    }\n    merge(from, to, source, _takeDeco, openStart, openEnd) {\n        if (source && (!(source instanceof BlockWidgetView) || !this.widget.compare(source.widget) ||\n            from > 0 && openStart <= 0 || to < this.length && openEnd <= 0))\n            return false;\n        this.length = from + (source ? source.length : 0) + (this.length - to);\n        return true;\n    }\n    domAtPos(pos) {\n        return pos == 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom, pos == this.length);\n    }\n    split(at) {\n        let len = this.length - at;\n        this.length = at;\n        let end = new BlockWidgetView(this.widget, len, this.type);\n        end.breakAfter = this.breakAfter;\n        return end;\n    }\n    get children() { return noChildren; }\n    sync() {\n        if (!this.dom || !this.widget.updateDOM(this.dom)) {\n            if (this.dom && this.prevWidget)\n                this.prevWidget.destroy(this.dom);\n            this.prevWidget = null;\n            this.setDOM(this.widget.toDOM(this.editorView));\n            this.dom.contentEditable = \"false\";\n        }\n    }\n    get overrideDOMText() {\n        return this.parent ? this.parent.view.state.doc.slice(this.posAtStart, this.posAtEnd) : Text.empty;\n    }\n    domBoundsAround() { return null; }\n    become(other) {\n        if (other instanceof BlockWidgetView && other.type == this.type &&\n            other.widget.constructor == this.widget.constructor) {\n            if (!other.widget.eq(this.widget))\n                this.markDirty(true);\n            if (this.dom && !this.prevWidget)\n                this.prevWidget = this.widget;\n            this.widget = other.widget;\n            this.length = other.length;\n            this.breakAfter = other.breakAfter;\n            return true;\n        }\n        return false;\n    }\n    ignoreMutation() { return true; }\n    ignoreEvent(event) { return this.widget.ignoreEvent(event); }\n    destroy() {\n        super.destroy();\n        if (this.dom)\n            this.widget.destroy(this.dom);\n    }\n}\n\nclass ContentBuilder {\n    constructor(doc, pos, end, disallowBlockEffectsFor) {\n        this.doc = doc;\n        this.pos = pos;\n        this.end = end;\n        this.disallowBlockEffectsFor = disallowBlockEffectsFor;\n        this.content = [];\n        this.curLine = null;\n        this.breakAtStart = 0;\n        this.pendingBuffer = 0 /* No */;\n        // Set to false directly after a widget that covers the position after it\n        this.atCursorPos = true;\n        this.openStart = -1;\n        this.openEnd = -1;\n        this.text = \"\";\n        this.textOff = 0;\n        this.cursor = doc.iter();\n        this.skip = pos;\n    }\n    posCovered() {\n        if (this.content.length == 0)\n            return !this.breakAtStart && this.doc.lineAt(this.pos).from != this.pos;\n        let last = this.content[this.content.length - 1];\n        return !last.breakAfter && !(last instanceof BlockWidgetView && last.type == BlockType.WidgetBefore);\n    }\n    getLine() {\n        if (!this.curLine) {\n            this.content.push(this.curLine = new LineView);\n            this.atCursorPos = true;\n        }\n        return this.curLine;\n    }\n    flushBuffer(active) {\n        if (this.pendingBuffer) {\n            this.curLine.append(wrapMarks(new WidgetBufferView(-1), active), active.length);\n            this.pendingBuffer = 0 /* No */;\n        }\n    }\n    addBlockWidget(view) {\n        this.flushBuffer([]);\n        this.curLine = null;\n        this.content.push(view);\n    }\n    finish(openEnd) {\n        if (!openEnd)\n            this.flushBuffer([]);\n        else\n            this.pendingBuffer = 0 /* No */;\n        if (!this.posCovered())\n            this.getLine();\n    }\n    buildText(length, active, openStart) {\n        while (length > 0) {\n            if (this.textOff == this.text.length) {\n                let { value, lineBreak, done } = this.cursor.next(this.skip);\n                this.skip = 0;\n                if (done)\n                    throw new Error(\"Ran out of text content when drawing inline views\");\n                if (lineBreak) {\n                    if (!this.posCovered())\n                        this.getLine();\n                    if (this.content.length)\n                        this.content[this.content.length - 1].breakAfter = 1;\n                    else\n                        this.breakAtStart = 1;\n                    this.flushBuffer([]);\n                    this.curLine = null;\n                    length--;\n                    continue;\n                }\n                else {\n                    this.text = value;\n                    this.textOff = 0;\n                }\n            }\n            let take = Math.min(this.text.length - this.textOff, length, 512 /* Chunk */);\n            this.flushBuffer(active.slice(0, openStart));\n            this.getLine().append(wrapMarks(new TextView(this.text.slice(this.textOff, this.textOff + take)), active), openStart);\n            this.atCursorPos = true;\n            this.textOff += take;\n            length -= take;\n            openStart = 0;\n        }\n    }\n    span(from, to, active, openStart) {\n        this.buildText(to - from, active, openStart);\n        this.pos = to;\n        if (this.openStart < 0)\n            this.openStart = openStart;\n    }\n    point(from, to, deco, active, openStart, index) {\n        if (this.disallowBlockEffectsFor[index] && deco instanceof PointDecoration) {\n            if (deco.block)\n                throw new RangeError(\"Block decorations may not be specified via plugins\");\n            if (to > this.doc.lineAt(this.pos).to)\n                throw new RangeError(\"Decorations that replace line breaks may not be specified via plugins\");\n        }\n        let len = to - from;\n        if (deco instanceof PointDecoration) {\n            if (deco.block) {\n                let { type } = deco;\n                if (type == BlockType.WidgetAfter && !this.posCovered())\n                    this.getLine();\n                this.addBlockWidget(new BlockWidgetView(deco.widget || new NullWidget(\"div\"), len, type));\n            }\n            else {\n                let view = WidgetView.create(deco.widget || new NullWidget(\"span\"), len, deco.startSide);\n                let cursorBefore = this.atCursorPos && !view.isEditable && openStart <= active.length && (from < to || deco.startSide > 0);\n                let cursorAfter = !view.isEditable && (from < to || deco.startSide <= 0);\n                let line = this.getLine();\n                if (this.pendingBuffer == 2 /* IfCursor */ && !cursorBefore)\n                    this.pendingBuffer = 0 /* No */;\n                this.flushBuffer(active);\n                if (cursorBefore) {\n                    line.append(wrapMarks(new WidgetBufferView(1), active), openStart);\n                    openStart = active.length + Math.max(0, openStart - active.length);\n                }\n                line.append(wrapMarks(view, active), openStart);\n                this.atCursorPos = cursorAfter;\n                this.pendingBuffer = !cursorAfter ? 0 /* No */ : from < to ? 1 /* Yes */ : 2 /* IfCursor */;\n            }\n        }\n        else if (this.doc.lineAt(this.pos).from == this.pos) { // Line decoration\n            this.getLine().addLineDeco(deco);\n        }\n        if (len) {\n            // Advance the iterator past the replaced content\n            if (this.textOff + len <= this.text.length) {\n                this.textOff += len;\n            }\n            else {\n                this.skip += len - (this.text.length - this.textOff);\n                this.text = \"\";\n                this.textOff = 0;\n            }\n            this.pos = to;\n        }\n        if (this.openStart < 0)\n            this.openStart = openStart;\n    }\n    static build(text, from, to, decorations, dynamicDecorationMap) {\n        let builder = new ContentBuilder(text, from, to, dynamicDecorationMap);\n        builder.openEnd = RangeSet.spans(decorations, from, to, builder);\n        if (builder.openStart < 0)\n            builder.openStart = builder.openEnd;\n        builder.finish(builder.openEnd);\n        return builder;\n    }\n}\nfunction wrapMarks(view, active) {\n    for (let mark of active)\n        view = new MarkView(mark, [view], view.length);\n    return view;\n}\nclass NullWidget extends WidgetType {\n    constructor(tag) {\n        super();\n        this.tag = tag;\n    }\n    eq(other) { return other.tag == this.tag; }\n    toDOM() { return document.createElement(this.tag); }\n    updateDOM(elt) { return elt.nodeName.toLowerCase() == this.tag; }\n}\n\nconst clickAddsSelectionRange = /*@__PURE__*/Facet.define();\nconst dragMovesSelection$1 = /*@__PURE__*/Facet.define();\nconst mouseSelectionStyle = /*@__PURE__*/Facet.define();\nconst exceptionSink = /*@__PURE__*/Facet.define();\nconst updateListener = /*@__PURE__*/Facet.define();\nconst inputHandler = /*@__PURE__*/Facet.define();\nconst perLineTextDirection = /*@__PURE__*/Facet.define({\n    combine: values => values.some(x => x)\n});\nclass ScrollTarget {\n    constructor(range, y = \"nearest\", x = \"nearest\", yMargin = 5, xMargin = 5) {\n        this.range = range;\n        this.y = y;\n        this.x = x;\n        this.yMargin = yMargin;\n        this.xMargin = xMargin;\n    }\n    map(changes) {\n        return changes.empty ? this : new ScrollTarget(this.range.map(changes), this.y, this.x, this.yMargin, this.xMargin);\n    }\n}\nconst scrollIntoView = /*@__PURE__*/StateEffect.define({ map: (t, ch) => t.map(ch) });\n/**\nLog or report an unhandled exception in client code. Should\nprobably only be used by extension code that allows client code to\nprovide functions, and calls those functions in a context where an\nexception can't be propagated to calling code in a reasonable way\n(for example when in an event handler).\n\nEither calls a handler registered with\n[`EditorView.exceptionSink`](https://codemirror.net/6/docs/ref/#view.EditorView^exceptionSink),\n`window.onerror`, if defined, or `console.error` (in which case\nit'll pass `context`, when given, as first argument).\n*/\nfunction logException(state, exception, context) {\n    let handler = state.facet(exceptionSink);\n    if (handler.length)\n        handler[0](exception);\n    else if (window.onerror)\n        window.onerror(String(exception), context, undefined, undefined, exception);\n    else if (context)\n        console.error(context + \":\", exception);\n    else\n        console.error(exception);\n}\nconst editable = /*@__PURE__*/Facet.define({ combine: values => values.length ? values[0] : true });\nlet nextPluginID = 0;\nconst viewPlugin = /*@__PURE__*/Facet.define();\n/**\nView plugins associate stateful values with a view. They can\ninfluence the way the content is drawn, and are notified of things\nthat happen in the view.\n*/\nclass ViewPlugin {\n    constructor(\n    /**\n    @internal\n    */\n    id, \n    /**\n    @internal\n    */\n    create, \n    /**\n    @internal\n    */\n    domEventHandlers, buildExtensions) {\n        this.id = id;\n        this.create = create;\n        this.domEventHandlers = domEventHandlers;\n        this.extension = buildExtensions(this);\n    }\n    /**\n    Define a plugin from a constructor function that creates the\n    plugin's value, given an editor view.\n    */\n    static define(create, spec) {\n        const { eventHandlers, provide, decorations: deco } = spec || {};\n        return new ViewPlugin(nextPluginID++, create, eventHandlers, plugin => {\n            let ext = [viewPlugin.of(plugin)];\n            if (deco)\n                ext.push(decorations.of(view => {\n                    let pluginInst = view.plugin(plugin);\n                    return pluginInst ? deco(pluginInst) : Decoration.none;\n                }));\n            if (provide)\n                ext.push(provide(plugin));\n            return ext;\n        });\n    }\n    /**\n    Create a plugin for a class whose constructor takes a single\n    editor view as argument.\n    */\n    static fromClass(cls, spec) {\n        return ViewPlugin.define(view => new cls(view), spec);\n    }\n}\nclass PluginInstance {\n    constructor(spec) {\n        this.spec = spec;\n        // When starting an update, all plugins have this field set to the\n        // update object, indicating they need to be updated. When finished\n        // updating, it is set to `false`. Retrieving a plugin that needs to\n        // be updated with `view.plugin` forces an eager update.\n        this.mustUpdate = null;\n        // This is null when the plugin is initially created, but\n        // initialized on the first update.\n        this.value = null;\n    }\n    update(view) {\n        if (!this.value) {\n            if (this.spec) {\n                try {\n                    this.value = this.spec.create(view);\n                }\n                catch (e) {\n                    logException(view.state, e, \"CodeMirror plugin crashed\");\n                    this.deactivate();\n                }\n            }\n        }\n        else if (this.mustUpdate) {\n            let update = this.mustUpdate;\n            this.mustUpdate = null;\n            if (this.value.update) {\n                try {\n                    this.value.update(update);\n                }\n                catch (e) {\n                    logException(update.state, e, \"CodeMirror plugin crashed\");\n                    if (this.value.destroy)\n                        try {\n                            this.value.destroy();\n                        }\n                        catch (_) { }\n                    this.deactivate();\n                }\n            }\n        }\n        return this;\n    }\n    destroy(view) {\n        var _a;\n        if ((_a = this.value) === null || _a === void 0 ? void 0 : _a.destroy) {\n            try {\n                this.value.destroy();\n            }\n            catch (e) {\n                logException(view.state, e, \"CodeMirror plugin crashed\");\n            }\n        }\n    }\n    deactivate() {\n        this.spec = this.value = null;\n    }\n}\nconst editorAttributes = /*@__PURE__*/Facet.define();\nconst contentAttributes = /*@__PURE__*/Facet.define();\n// Provide decorations\nconst decorations = /*@__PURE__*/Facet.define();\nconst atomicRanges = /*@__PURE__*/Facet.define();\nconst scrollMargins = /*@__PURE__*/Facet.define();\nconst styleModule = /*@__PURE__*/Facet.define();\nclass ChangedRange {\n    constructor(fromA, toA, fromB, toB) {\n        this.fromA = fromA;\n        this.toA = toA;\n        this.fromB = fromB;\n        this.toB = toB;\n    }\n    join(other) {\n        return new ChangedRange(Math.min(this.fromA, other.fromA), Math.max(this.toA, other.toA), Math.min(this.fromB, other.fromB), Math.max(this.toB, other.toB));\n    }\n    addToSet(set) {\n        let i = set.length, me = this;\n        for (; i > 0; i--) {\n            let range = set[i - 1];\n            if (range.fromA > me.toA)\n                continue;\n            if (range.toA < me.fromA)\n                break;\n            me = me.join(range);\n            set.splice(i - 1, 1);\n        }\n        set.splice(i, 0, me);\n        return set;\n    }\n    static extendWithRanges(diff, ranges) {\n        if (ranges.length == 0)\n            return diff;\n        let result = [];\n        for (let dI = 0, rI = 0, posA = 0, posB = 0;; dI++) {\n            let next = dI == diff.length ? null : diff[dI], off = posA - posB;\n            let end = next ? next.fromB : 1e9;\n            while (rI < ranges.length && ranges[rI] < end) {\n                let from = ranges[rI], to = ranges[rI + 1];\n                let fromB = Math.max(posB, from), toB = Math.min(end, to);\n                if (fromB <= toB)\n                    new ChangedRange(fromB + off, toB + off, fromB, toB).addToSet(result);\n                if (to > end)\n                    break;\n                else\n                    rI += 2;\n            }\n            if (!next)\n                return result;\n            new ChangedRange(next.fromA, next.toA, next.fromB, next.toB).addToSet(result);\n            posA = next.toA;\n            posB = next.toB;\n        }\n    }\n}\n/**\nView [plugins](https://codemirror.net/6/docs/ref/#view.ViewPlugin) are given instances of this\nclass, which describe what happened, whenever the view is updated.\n*/\nclass ViewUpdate {\n    constructor(\n    /**\n    The editor view that the update is associated with.\n    */\n    view, \n    /**\n    The new editor state.\n    */\n    state, \n    /**\n    The transactions involved in the update. May be empty.\n    */\n    transactions) {\n        this.view = view;\n        this.state = state;\n        this.transactions = transactions;\n        /**\n        @internal\n        */\n        this.flags = 0;\n        this.startState = view.state;\n        this.changes = ChangeSet.empty(this.startState.doc.length);\n        for (let tr of transactions)\n            this.changes = this.changes.compose(tr.changes);\n        let changedRanges = [];\n        this.changes.iterChangedRanges((fromA, toA, fromB, toB) => changedRanges.push(new ChangedRange(fromA, toA, fromB, toB)));\n        this.changedRanges = changedRanges;\n        let focus = view.hasFocus;\n        if (focus != view.inputState.notifiedFocused) {\n            view.inputState.notifiedFocused = focus;\n            this.flags |= 1 /* Focus */;\n        }\n    }\n    /**\n    @internal\n    */\n    static create(view, state, transactions) {\n        return new ViewUpdate(view, state, transactions);\n    }\n    /**\n    Tells you whether the [viewport](https://codemirror.net/6/docs/ref/#view.EditorView.viewport) or\n    [visible ranges](https://codemirror.net/6/docs/ref/#view.EditorView.visibleRanges) changed in this\n    update.\n    */\n    get viewportChanged() {\n        return (this.flags & 4 /* Viewport */) > 0;\n    }\n    /**\n    Indicates whether the height of a block element in the editor\n    changed in this update.\n    */\n    get heightChanged() {\n        return (this.flags & 2 /* Height */) > 0;\n    }\n    /**\n    Returns true when the document was modified or the size of the\n    editor, or elements within the editor, changed.\n    */\n    get geometryChanged() {\n        return this.docChanged || (this.flags & (8 /* Geometry */ | 2 /* Height */)) > 0;\n    }\n    /**\n    True when this update indicates a focus change.\n    */\n    get focusChanged() {\n        return (this.flags & 1 /* Focus */) > 0;\n    }\n    /**\n    Whether the document changed in this update.\n    */\n    get docChanged() {\n        return !this.changes.empty;\n    }\n    /**\n    Whether the selection was explicitly set in this update.\n    */\n    get selectionSet() {\n        return this.transactions.some(tr => tr.selection);\n    }\n    /**\n    @internal\n    */\n    get empty() { return this.flags == 0 && this.transactions.length == 0; }\n}\n\n/**\nUsed to indicate [text direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection).\n*/\nvar Direction = /*@__PURE__*/(function (Direction) {\n    // (These are chosen to match the base levels, in bidi algorithm\n    // terms, of spans in that direction.)\n    /**\n    Left-to-right.\n    */\n    Direction[Direction[\"LTR\"] = 0] = \"LTR\";\n    /**\n    Right-to-left.\n    */\n    Direction[Direction[\"RTL\"] = 1] = \"RTL\";\nreturn Direction})(Direction || (Direction = {}));\nconst LTR = Direction.LTR, RTL = Direction.RTL;\n// Decode a string with each type encoded as log2(type)\nfunction dec(str) {\n    let result = [];\n    for (let i = 0; i < str.length; i++)\n        result.push(1 << +str[i]);\n    return result;\n}\n// Character types for codepoints 0 to 0xf8\nconst LowTypes = /*@__PURE__*/dec(\"88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008\");\n// Character types for codepoints 0x600 to 0x6f9\nconst ArabicTypes = /*@__PURE__*/dec(\"4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333\");\nconst Brackets = /*@__PURE__*/Object.create(null), BracketStack = [];\n// There's a lot more in\n// https://www.unicode.org/Public/UCD/latest/ucd/BidiBrackets.txt,\n// which are left out to keep code size down.\nfor (let p of [\"()\", \"[]\", \"{}\"]) {\n    let l = /*@__PURE__*/p.charCodeAt(0), r = /*@__PURE__*/p.charCodeAt(1);\n    Brackets[l] = r;\n    Brackets[r] = -l;\n}\nfunction charType(ch) {\n    return ch <= 0xf7 ? LowTypes[ch] :\n        0x590 <= ch && ch <= 0x5f4 ? 2 /* R */ :\n            0x600 <= ch && ch <= 0x6f9 ? ArabicTypes[ch - 0x600] :\n                0x6ee <= ch && ch <= 0x8ac ? 4 /* AL */ :\n                    0x2000 <= ch && ch <= 0x200b ? 256 /* NI */ :\n                        ch == 0x200c ? 256 /* NI */ : 1 /* L */;\n}\nconst BidiRE = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/;\n/**\nRepresents a contiguous range of text that has a single direction\n(as in left-to-right or right-to-left).\n*/\nclass BidiSpan {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start of the span (relative to the start of the line).\n    */\n    from, \n    /**\n    The end of the span.\n    */\n    to, \n    /**\n    The [\"bidi\n    level\"](https://unicode.org/reports/tr9/#Basic_Display_Algorithm)\n    of the span (in this context, 0 means\n    left-to-right, 1 means right-to-left, 2 means left-to-right\n    number inside right-to-left text).\n    */\n    level) {\n        this.from = from;\n        this.to = to;\n        this.level = level;\n    }\n    /**\n    The direction of this span.\n    */\n    get dir() { return this.level % 2 ? RTL : LTR; }\n    /**\n    @internal\n    */\n    side(end, dir) { return (this.dir == dir) == end ? this.to : this.from; }\n    /**\n    @internal\n    */\n    static find(order, index, level, assoc) {\n        let maybe = -1;\n        for (let i = 0; i < order.length; i++) {\n            let span = order[i];\n            if (span.from <= index && span.to >= index) {\n                if (span.level == level)\n                    return i;\n                // When multiple spans match, if assoc != 0, take the one that\n                // covers that side, otherwise take the one with the minimum\n                // level.\n                if (maybe < 0 || (assoc != 0 ? (assoc < 0 ? span.from < index : span.to > index) : order[maybe].level > span.level))\n                    maybe = i;\n            }\n        }\n        if (maybe < 0)\n            throw new RangeError(\"Index out of range\");\n        return maybe;\n    }\n}\n// Reused array of character types\nconst types = [];\nfunction computeOrder(line, direction) {\n    let len = line.length, outerType = direction == LTR ? 1 /* L */ : 2 /* R */, oppositeType = direction == LTR ? 2 /* R */ : 1 /* L */;\n    if (!line || outerType == 1 /* L */ && !BidiRE.test(line))\n        return trivialOrder(len);\n    // W1. Examine each non-spacing mark (NSM) in the level run, and\n    // change the type of the NSM to the type of the previous\n    // character. If the NSM is at the start of the level run, it will\n    // get the type of sor.\n    // W2. Search backwards from each instance of a European number\n    // until the first strong type (R, L, AL, or sor) is found. If an\n    // AL is found, change the type of the European number to Arabic\n    // number.\n    // W3. Change all ALs to R.\n    // (Left after this: L, R, EN, AN, ET, CS, NI)\n    for (let i = 0, prev = outerType, prevStrong = outerType; i < len; i++) {\n        let type = charType(line.charCodeAt(i));\n        if (type == 512 /* NSM */)\n            type = prev;\n        else if (type == 8 /* EN */ && prevStrong == 4 /* AL */)\n            type = 16 /* AN */;\n        types[i] = type == 4 /* AL */ ? 2 /* R */ : type;\n        if (type & 7 /* Strong */)\n            prevStrong = type;\n        prev = type;\n    }\n    // W5. A sequence of European terminators adjacent to European\n    // numbers changes to all European numbers.\n    // W6. Otherwise, separators and terminators change to Other\n    // Neutral.\n    // W7. Search backwards from each instance of a European number\n    // until the first strong type (R, L, or sor) is found. If an L is\n    // found, then change the type of the European number to L.\n    // (Left after this: L, R, EN+AN, NI)\n    for (let i = 0, prev = outerType, prevStrong = outerType; i < len; i++) {\n        let type = types[i];\n        if (type == 128 /* CS */) {\n            if (i < len - 1 && prev == types[i + 1] && (prev & 24 /* Num */))\n                type = types[i] = prev;\n            else\n                types[i] = 256 /* NI */;\n        }\n        else if (type == 64 /* ET */) {\n            let end = i + 1;\n            while (end < len && types[end] == 64 /* ET */)\n                end++;\n            let replace = (i && prev == 8 /* EN */) || (end < len && types[end] == 8 /* EN */) ? (prevStrong == 1 /* L */ ? 1 /* L */ : 8 /* EN */) : 256 /* NI */;\n            for (let j = i; j < end; j++)\n                types[j] = replace;\n            i = end - 1;\n        }\n        else if (type == 8 /* EN */ && prevStrong == 1 /* L */) {\n            types[i] = 1 /* L */;\n        }\n        prev = type;\n        if (type & 7 /* Strong */)\n            prevStrong = type;\n    }\n    // N0. Process bracket pairs in an isolating run sequence\n    // sequentially in the logical order of the text positions of the\n    // opening paired brackets using the logic given below. Within this\n    // scope, bidirectional types EN and AN are treated as R.\n    for (let i = 0, sI = 0, context = 0, ch, br, type; i < len; i++) {\n        // Keeps [startIndex, type, strongSeen] triples for each open\n        // bracket on BracketStack.\n        if (br = Brackets[ch = line.charCodeAt(i)]) {\n            if (br < 0) { // Closing bracket\n                for (let sJ = sI - 3; sJ >= 0; sJ -= 3) {\n                    if (BracketStack[sJ + 1] == -br) {\n                        let flags = BracketStack[sJ + 2];\n                        let type = (flags & 2 /* EmbedInside */) ? outerType :\n                            !(flags & 4 /* OppositeInside */) ? 0 :\n                                (flags & 1 /* OppositeBefore */) ? oppositeType : outerType;\n                        if (type)\n                            types[i] = types[BracketStack[sJ]] = type;\n                        sI = sJ;\n                        break;\n                    }\n                }\n            }\n            else if (BracketStack.length == 189 /* MaxDepth */) {\n                break;\n            }\n            else {\n                BracketStack[sI++] = i;\n                BracketStack[sI++] = ch;\n                BracketStack[sI++] = context;\n            }\n        }\n        else if ((type = types[i]) == 2 /* R */ || type == 1 /* L */) {\n            let embed = type == outerType;\n            context = embed ? 0 : 1 /* OppositeBefore */;\n            for (let sJ = sI - 3; sJ >= 0; sJ -= 3) {\n                let cur = BracketStack[sJ + 2];\n                if (cur & 2 /* EmbedInside */)\n                    break;\n                if (embed) {\n                    BracketStack[sJ + 2] |= 2 /* EmbedInside */;\n                }\n                else {\n                    if (cur & 4 /* OppositeInside */)\n                        break;\n                    BracketStack[sJ + 2] |= 4 /* OppositeInside */;\n                }\n            }\n        }\n    }\n    // N1. A sequence of neutrals takes the direction of the\n    // surrounding strong text if the text on both sides has the same\n    // direction. European and Arabic numbers act as if they were R in\n    // terms of their influence on neutrals. Start-of-level-run (sor)\n    // and end-of-level-run (eor) are used at level run boundaries.\n    // N2. Any remaining neutrals take the embedding direction.\n    // (Left after this: L, R, EN+AN)\n    for (let i = 0; i < len; i++) {\n        if (types[i] == 256 /* NI */) {\n            let end = i + 1;\n            while (end < len && types[end] == 256 /* NI */)\n                end++;\n            let beforeL = (i ? types[i - 1] : outerType) == 1 /* L */;\n            let afterL = (end < len ? types[end] : outerType) == 1 /* L */;\n            let replace = beforeL == afterL ? (beforeL ? 1 /* L */ : 2 /* R */) : outerType;\n            for (let j = i; j < end; j++)\n                types[j] = replace;\n            i = end - 1;\n        }\n    }\n    // Here we depart from the documented algorithm, in order to avoid\n    // building up an actual levels array. Since there are only three\n    // levels (0, 1, 2) in an implementation that doesn't take\n    // explicit embedding into account, we can build up the order on\n    // the fly, without following the level-based algorithm.\n    let order = [];\n    if (outerType == 1 /* L */) {\n        for (let i = 0; i < len;) {\n            let start = i, rtl = types[i++] != 1 /* L */;\n            while (i < len && rtl == (types[i] != 1 /* L */))\n                i++;\n            if (rtl) {\n                for (let j = i; j > start;) {\n                    let end = j, l = types[--j] != 2 /* R */;\n                    while (j > start && l == (types[j - 1] != 2 /* R */))\n                        j--;\n                    order.push(new BidiSpan(j, end, l ? 2 : 1));\n                }\n            }\n            else {\n                order.push(new BidiSpan(start, i, 0));\n            }\n        }\n    }\n    else {\n        for (let i = 0; i < len;) {\n            let start = i, rtl = types[i++] == 2 /* R */;\n            while (i < len && rtl == (types[i] == 2 /* R */))\n                i++;\n            order.push(new BidiSpan(start, i, rtl ? 1 : 2));\n        }\n    }\n    return order;\n}\nfunction trivialOrder(length) {\n    return [new BidiSpan(0, length, 0)];\n}\nlet movedOver = \"\";\nfunction moveVisually(line, order, dir, start, forward) {\n    var _a;\n    let startIndex = start.head - line.from, spanI = -1;\n    if (startIndex == 0) {\n        if (!forward || !line.length)\n            return null;\n        if (order[0].level != dir) {\n            startIndex = order[0].side(false, dir);\n            spanI = 0;\n        }\n    }\n    else if (startIndex == line.length) {\n        if (forward)\n            return null;\n        let last = order[order.length - 1];\n        if (last.level != dir) {\n            startIndex = last.side(true, dir);\n            spanI = order.length - 1;\n        }\n    }\n    if (spanI < 0)\n        spanI = BidiSpan.find(order, startIndex, (_a = start.bidiLevel) !== null && _a !== void 0 ? _a : -1, start.assoc);\n    let span = order[spanI];\n    // End of span. (But not end of line--that was checked for above.)\n    if (startIndex == span.side(forward, dir)) {\n        span = order[spanI += forward ? 1 : -1];\n        startIndex = span.side(!forward, dir);\n    }\n    let indexForward = forward == (span.dir == dir);\n    let nextIndex = findClusterBreak(line.text, startIndex, indexForward);\n    movedOver = line.text.slice(Math.min(startIndex, nextIndex), Math.max(startIndex, nextIndex));\n    if (nextIndex != span.side(forward, dir))\n        return EditorSelection.cursor(nextIndex + line.from, indexForward ? -1 : 1, span.level);\n    let nextSpan = spanI == (forward ? order.length - 1 : 0) ? null : order[spanI + (forward ? 1 : -1)];\n    if (!nextSpan && span.level != dir)\n        return EditorSelection.cursor(forward ? line.to : line.from, forward ? -1 : 1, dir);\n    if (nextSpan && nextSpan.level < span.level)\n        return EditorSelection.cursor(nextSpan.side(!forward, dir) + line.from, forward ? 1 : -1, nextSpan.level);\n    return EditorSelection.cursor(nextIndex + line.from, forward ? -1 : 1, span.level);\n}\n\nconst LineBreakPlaceholder = \"\\uffff\";\nclass DOMReader {\n    constructor(points, state) {\n        this.points = points;\n        this.text = \"\";\n        this.lineSeparator = state.facet(EditorState.lineSeparator);\n    }\n    append(text) {\n        this.text += text;\n    }\n    lineBreak() {\n        this.text += LineBreakPlaceholder;\n    }\n    readRange(start, end) {\n        if (!start)\n            return this;\n        let parent = start.parentNode;\n        for (let cur = start;;) {\n            this.findPointBefore(parent, cur);\n            this.readNode(cur);\n            let next = cur.nextSibling;\n            if (next == end)\n                break;\n            let view = ContentView.get(cur), nextView = ContentView.get(next);\n            if (view && nextView ? view.breakAfter :\n                (view ? view.breakAfter : isBlockElement(cur)) ||\n                    (isBlockElement(next) && (cur.nodeName != \"BR\" || cur.cmIgnore)))\n                this.lineBreak();\n            cur = next;\n        }\n        this.findPointBefore(parent, end);\n        return this;\n    }\n    readTextNode(node) {\n        let text = node.nodeValue;\n        for (let point of this.points)\n            if (point.node == node)\n                point.pos = this.text.length + Math.min(point.offset, text.length);\n        for (let off = 0, re = this.lineSeparator ? null : /\\r\\n?|\\n/g;;) {\n            let nextBreak = -1, breakSize = 1, m;\n            if (this.lineSeparator) {\n                nextBreak = text.indexOf(this.lineSeparator, off);\n                breakSize = this.lineSeparator.length;\n            }\n            else if (m = re.exec(text)) {\n                nextBreak = m.index;\n                breakSize = m[0].length;\n            }\n            this.append(text.slice(off, nextBreak < 0 ? text.length : nextBreak));\n            if (nextBreak < 0)\n                break;\n            this.lineBreak();\n            if (breakSize > 1)\n                for (let point of this.points)\n                    if (point.node == node && point.pos > this.text.length)\n                        point.pos -= breakSize - 1;\n            off = nextBreak + breakSize;\n        }\n    }\n    readNode(node) {\n        if (node.cmIgnore)\n            return;\n        let view = ContentView.get(node);\n        let fromView = view && view.overrideDOMText;\n        if (fromView != null) {\n            this.findPointInside(node, fromView.length);\n            for (let i = fromView.iter(); !i.next().done;) {\n                if (i.lineBreak)\n                    this.lineBreak();\n                else\n                    this.append(i.value);\n            }\n        }\n        else if (node.nodeType == 3) {\n            this.readTextNode(node);\n        }\n        else if (node.nodeName == \"BR\") {\n            if (node.nextSibling)\n                this.lineBreak();\n        }\n        else if (node.nodeType == 1) {\n            this.readRange(node.firstChild, null);\n        }\n    }\n    findPointBefore(node, next) {\n        for (let point of this.points)\n            if (point.node == node && node.childNodes[point.offset] == next)\n                point.pos = this.text.length;\n    }\n    findPointInside(node, maxLen) {\n        for (let point of this.points)\n            if (node.nodeType == 3 ? point.node == node : node.contains(point.node))\n                point.pos = this.text.length + Math.min(maxLen, point.offset);\n    }\n}\nfunction isBlockElement(node) {\n    return node.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\\d|SECTION|PRE)$/.test(node.nodeName);\n}\nclass DOMPoint {\n    constructor(node, offset) {\n        this.node = node;\n        this.offset = offset;\n        this.pos = -1;\n    }\n}\n\nclass DocView extends ContentView {\n    constructor(view) {\n        super();\n        this.view = view;\n        this.compositionDeco = Decoration.none;\n        this.decorations = [];\n        this.dynamicDecorationMap = [];\n        // Track a minimum width for the editor. When measuring sizes in\n        // measureVisibleLineHeights, this is updated to point at the width\n        // of a given element and its extent in the document. When a change\n        // happens in that range, these are reset. That way, once we've seen\n        // a line/element of a given length, we keep the editor wide enough\n        // to fit at least that element, until it is changed, at which point\n        // we forget it again.\n        this.minWidth = 0;\n        this.minWidthFrom = 0;\n        this.minWidthTo = 0;\n        // Track whether the DOM selection was set in a lossy way, so that\n        // we don't mess it up when reading it back it\n        this.impreciseAnchor = null;\n        this.impreciseHead = null;\n        this.forceSelection = false;\n        // Used by the resize observer to ignore resizes that we caused\n        // ourselves\n        this.lastUpdate = Date.now();\n        this.setDOM(view.contentDOM);\n        this.children = [new LineView];\n        this.children[0].setParent(this);\n        this.updateDeco();\n        this.updateInner([new ChangedRange(0, 0, 0, view.state.doc.length)], 0);\n    }\n    get root() { return this.view.root; }\n    get editorView() { return this.view; }\n    get length() { return this.view.state.doc.length; }\n    // Update the document view to a given state. scrollIntoView can be\n    // used as a hint to compute a new viewport that includes that\n    // position, if we know the editor is going to scroll that position\n    // into view.\n    update(update) {\n        let changedRanges = update.changedRanges;\n        if (this.minWidth > 0 && changedRanges.length) {\n            if (!changedRanges.every(({ fromA, toA }) => toA < this.minWidthFrom || fromA > this.minWidthTo)) {\n                this.minWidth = this.minWidthFrom = this.minWidthTo = 0;\n            }\n            else {\n                this.minWidthFrom = update.changes.mapPos(this.minWidthFrom, 1);\n                this.minWidthTo = update.changes.mapPos(this.minWidthTo, 1);\n            }\n        }\n        if (this.view.inputState.composing < 0)\n            this.compositionDeco = Decoration.none;\n        else if (update.transactions.length || this.dirty)\n            this.compositionDeco = computeCompositionDeco(this.view, update.changes);\n        // When the DOM nodes around the selection are moved to another\n        // parent, Chrome sometimes reports a different selection through\n        // getSelection than the one that it actually shows to the user.\n        // This forces a selection update when lines are joined to work\n        // around that. Issue #54\n        if ((browser.ie || browser.chrome) && !this.compositionDeco.size && update &&\n            update.state.doc.lines != update.startState.doc.lines)\n            this.forceSelection = true;\n        let prevDeco = this.decorations, deco = this.updateDeco();\n        let decoDiff = findChangedDeco(prevDeco, deco, update.changes);\n        changedRanges = ChangedRange.extendWithRanges(changedRanges, decoDiff);\n        if (this.dirty == 0 /* Not */ && changedRanges.length == 0) {\n            return false;\n        }\n        else {\n            this.updateInner(changedRanges, update.startState.doc.length);\n            if (update.transactions.length)\n                this.lastUpdate = Date.now();\n            return true;\n        }\n    }\n    // Used by update and the constructor do perform the actual DOM\n    // update\n    updateInner(changes, oldLength) {\n        this.view.viewState.mustMeasureContent = true;\n        this.updateChildren(changes, oldLength);\n        let { observer } = this.view;\n        observer.ignore(() => {\n            // Lock the height during redrawing, since Chrome sometimes\n            // messes with the scroll position during DOM mutation (though\n            // no relayout is triggered and I cannot imagine how it can\n            // recompute the scroll position without a layout)\n            this.dom.style.height = this.view.viewState.contentHeight + \"px\";\n            this.dom.style.flexBasis = this.minWidth ? this.minWidth + \"px\" : \"\";\n            // Chrome will sometimes, when DOM mutations occur directly\n            // around the selection, get confused and report a different\n            // selection from the one it displays (issue #218). This tries\n            // to detect that situation.\n            let track = browser.chrome || browser.ios ? { node: observer.selectionRange.focusNode, written: false } : undefined;\n            this.sync(track);\n            this.dirty = 0 /* Not */;\n            if (track && (track.written || observer.selectionRange.focusNode != track.node))\n                this.forceSelection = true;\n            this.dom.style.height = \"\";\n        });\n        let gaps = [];\n        if (this.view.viewport.from || this.view.viewport.to < this.view.state.doc.length)\n            for (let child of this.children)\n                if (child instanceof BlockWidgetView && child.widget instanceof BlockGapWidget)\n                    gaps.push(child.dom);\n        observer.updateGaps(gaps);\n    }\n    updateChildren(changes, oldLength) {\n        let cursor = this.childCursor(oldLength);\n        for (let i = changes.length - 1;; i--) {\n            let next = i >= 0 ? changes[i] : null;\n            if (!next)\n                break;\n            let { fromA, toA, fromB, toB } = next;\n            let { content, breakAtStart, openStart, openEnd } = ContentBuilder.build(this.view.state.doc, fromB, toB, this.decorations, this.dynamicDecorationMap);\n            let { i: toI, off: toOff } = cursor.findPos(toA, 1);\n            let { i: fromI, off: fromOff } = cursor.findPos(fromA, -1);\n            replaceRange(this, fromI, fromOff, toI, toOff, content, breakAtStart, openStart, openEnd);\n        }\n    }\n    // Sync the DOM selection to this.state.selection\n    updateSelection(mustRead = false, fromPointer = false) {\n        if (mustRead)\n            this.view.observer.readSelectionRange();\n        if (!(fromPointer || this.mayControlSelection()) ||\n            browser.ios && this.view.inputState.rapidCompositionStart)\n            return;\n        let force = this.forceSelection;\n        this.forceSelection = false;\n        let main = this.view.state.selection.main;\n        // FIXME need to handle the case where the selection falls inside a block range\n        let anchor = this.domAtPos(main.anchor);\n        let head = main.empty ? anchor : this.domAtPos(main.head);\n        // Always reset on Firefox when next to an uneditable node to\n        // avoid invisible cursor bugs (#111)\n        if (browser.gecko && main.empty && betweenUneditable(anchor)) {\n            let dummy = document.createTextNode(\"\");\n            this.view.observer.ignore(() => anchor.node.insertBefore(dummy, anchor.node.childNodes[anchor.offset] || null));\n            anchor = head = new DOMPos(dummy, 0);\n            force = true;\n        }\n        let domSel = this.view.observer.selectionRange;\n        // If the selection is already here, or in an equivalent position, don't touch it\n        if (force || !domSel.focusNode ||\n            !isEquivalentPosition(anchor.node, anchor.offset, domSel.anchorNode, domSel.anchorOffset) ||\n            !isEquivalentPosition(head.node, head.offset, domSel.focusNode, domSel.focusOffset)) {\n            this.view.observer.ignore(() => {\n                // Chrome Android will hide the virtual keyboard when tapping\n                // inside an uneditable node, and not bring it back when we\n                // move the cursor to its proper position. This tries to\n                // restore the keyboard by cycling focus.\n                if (browser.android && browser.chrome && this.dom.contains(domSel.focusNode) &&\n                    inUneditable(domSel.focusNode, this.dom)) {\n                    this.dom.blur();\n                    this.dom.focus({ preventScroll: true });\n                }\n                let rawSel = getSelection(this.root);\n                if (main.empty) {\n                    // Work around https://bugzilla.mozilla.org/show_bug.cgi?id=1612076\n                    if (browser.gecko) {\n                        let nextTo = nextToUneditable(anchor.node, anchor.offset);\n                        if (nextTo && nextTo != (1 /* Before */ | 2 /* After */)) {\n                            let text = nearbyTextNode(anchor.node, anchor.offset, nextTo == 1 /* Before */ ? 1 : -1);\n                            if (text)\n                                anchor = new DOMPos(text, nextTo == 1 /* Before */ ? 0 : text.nodeValue.length);\n                        }\n                    }\n                    rawSel.collapse(anchor.node, anchor.offset);\n                    if (main.bidiLevel != null && domSel.cursorBidiLevel != null)\n                        domSel.cursorBidiLevel = main.bidiLevel;\n                }\n                else if (rawSel.extend) {\n                    // Selection.extend can be used to create an 'inverted' selection\n                    // (one where the focus is before the anchor), but not all\n                    // browsers support it yet.\n                    rawSel.collapse(anchor.node, anchor.offset);\n                    rawSel.extend(head.node, head.offset);\n                }\n                else {\n                    // Primitive (IE) way\n                    let range = document.createRange();\n                    if (main.anchor > main.head)\n                        [anchor, head] = [head, anchor];\n                    range.setEnd(head.node, head.offset);\n                    range.setStart(anchor.node, anchor.offset);\n                    rawSel.removeAllRanges();\n                    rawSel.addRange(range);\n                }\n            });\n            this.view.observer.setSelectionRange(anchor, head);\n        }\n        this.impreciseAnchor = anchor.precise ? null : new DOMPos(domSel.anchorNode, domSel.anchorOffset);\n        this.impreciseHead = head.precise ? null : new DOMPos(domSel.focusNode, domSel.focusOffset);\n    }\n    enforceCursorAssoc() {\n        if (this.compositionDeco.size)\n            return;\n        let cursor = this.view.state.selection.main;\n        let sel = getSelection(this.root);\n        if (!cursor.empty || !cursor.assoc || !sel.modify)\n            return;\n        let line = LineView.find(this, cursor.head);\n        if (!line)\n            return;\n        let lineStart = line.posAtStart;\n        if (cursor.head == lineStart || cursor.head == lineStart + line.length)\n            return;\n        let before = this.coordsAt(cursor.head, -1), after = this.coordsAt(cursor.head, 1);\n        if (!before || !after || before.bottom > after.top)\n            return;\n        let dom = this.domAtPos(cursor.head + cursor.assoc);\n        sel.collapse(dom.node, dom.offset);\n        sel.modify(\"move\", cursor.assoc < 0 ? \"forward\" : \"backward\", \"lineboundary\");\n    }\n    mayControlSelection() {\n        return this.view.state.facet(editable) ? this.root.activeElement == this.dom\n            : hasSelection(this.dom, this.view.observer.selectionRange);\n    }\n    nearest(dom) {\n        for (let cur = dom; cur;) {\n            let domView = ContentView.get(cur);\n            if (domView && domView.rootView == this)\n                return domView;\n            cur = cur.parentNode;\n        }\n        return null;\n    }\n    posFromDOM(node, offset) {\n        let view = this.nearest(node);\n        if (!view)\n            throw new RangeError(\"Trying to find position for a DOM position outside of the document\");\n        return view.localPosFromDOM(node, offset) + view.posAtStart;\n    }\n    domAtPos(pos) {\n        let { i, off } = this.childCursor().findPos(pos, -1);\n        for (; i < this.children.length - 1;) {\n            let child = this.children[i];\n            if (off < child.length || child instanceof LineView)\n                break;\n            i++;\n            off = 0;\n        }\n        return this.children[i].domAtPos(off);\n    }\n    coordsAt(pos, side) {\n        for (let off = this.length, i = this.children.length - 1;; i--) {\n            let child = this.children[i], start = off - child.breakAfter - child.length;\n            if (pos > start ||\n                (pos == start && child.type != BlockType.WidgetBefore && child.type != BlockType.WidgetAfter &&\n                    (!i || side == 2 || this.children[i - 1].breakAfter ||\n                        (this.children[i - 1].type == BlockType.WidgetBefore && side > -2))))\n                return child.coordsAt(pos - start, side);\n            off = start;\n        }\n    }\n    measureVisibleLineHeights(viewport) {\n        let result = [], { from, to } = viewport;\n        let contentWidth = this.view.contentDOM.clientWidth;\n        let isWider = contentWidth > Math.max(this.view.scrollDOM.clientWidth, this.minWidth) + 1;\n        let widest = -1, ltr = this.view.textDirection == Direction.LTR;\n        for (let pos = 0, i = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (end > to)\n                break;\n            if (pos >= from) {\n                let childRect = child.dom.getBoundingClientRect();\n                result.push(childRect.height);\n                if (isWider) {\n                    let last = child.dom.lastChild;\n                    let rects = last ? clientRectsFor(last) : [];\n                    if (rects.length) {\n                        let rect = rects[rects.length - 1];\n                        let width = ltr ? rect.right - childRect.left : childRect.right - rect.left;\n                        if (width > widest) {\n                            widest = width;\n                            this.minWidth = contentWidth;\n                            this.minWidthFrom = pos;\n                            this.minWidthTo = end;\n                        }\n                    }\n                }\n            }\n            pos = end + child.breakAfter;\n        }\n        return result;\n    }\n    textDirectionAt(pos) {\n        let { i } = this.childPos(pos, 1);\n        return getComputedStyle(this.children[i].dom).direction == \"rtl\" ? Direction.RTL : Direction.LTR;\n    }\n    measureTextSize() {\n        for (let child of this.children) {\n            if (child instanceof LineView) {\n                let measure = child.measureTextSize();\n                if (measure)\n                    return measure;\n            }\n        }\n        // If no workable line exists, force a layout of a measurable element\n        let dummy = document.createElement(\"div\"), lineHeight, charWidth;\n        dummy.className = \"cm-line\";\n        dummy.textContent = \"abc def ghi jkl mno pqr stu\";\n        this.view.observer.ignore(() => {\n            this.dom.appendChild(dummy);\n            let rect = clientRectsFor(dummy.firstChild)[0];\n            lineHeight = dummy.getBoundingClientRect().height;\n            charWidth = rect ? rect.width / 27 : 7;\n            dummy.remove();\n        });\n        return { lineHeight, charWidth };\n    }\n    childCursor(pos = this.length) {\n        // Move back to start of last element when possible, so that\n        // `ChildCursor.findPos` doesn't have to deal with the edge case\n        // of being after the last element.\n        let i = this.children.length;\n        if (i)\n            pos -= this.children[--i].length;\n        return new ChildCursor(this.children, pos, i);\n    }\n    computeBlockGapDeco() {\n        let deco = [], vs = this.view.viewState;\n        for (let pos = 0, i = 0;; i++) {\n            let next = i == vs.viewports.length ? null : vs.viewports[i];\n            let end = next ? next.from - 1 : this.length;\n            if (end > pos) {\n                let height = vs.lineBlockAt(end).bottom - vs.lineBlockAt(pos).top;\n                deco.push(Decoration.replace({\n                    widget: new BlockGapWidget(height),\n                    block: true,\n                    inclusive: true,\n                    isBlockGap: true,\n                }).range(pos, end));\n            }\n            if (!next)\n                break;\n            pos = next.to + 1;\n        }\n        return Decoration.set(deco);\n    }\n    updateDeco() {\n        let allDeco = this.view.state.facet(decorations).map((d, i) => {\n            let dynamic = this.dynamicDecorationMap[i] = typeof d == \"function\";\n            return dynamic ? d(this.view) : d;\n        });\n        for (let i = allDeco.length; i < allDeco.length + 3; i++)\n            this.dynamicDecorationMap[i] = false;\n        return this.decorations = [\n            ...allDeco,\n            this.compositionDeco,\n            this.computeBlockGapDeco(),\n            this.view.viewState.lineGapDeco\n        ];\n    }\n    scrollIntoView(target) {\n        let { range } = target;\n        let rect = this.coordsAt(range.head, range.empty ? range.assoc : range.head > range.anchor ? -1 : 1), other;\n        if (!rect)\n            return;\n        if (!range.empty && (other = this.coordsAt(range.anchor, range.anchor > range.head ? -1 : 1)))\n            rect = { left: Math.min(rect.left, other.left), top: Math.min(rect.top, other.top),\n                right: Math.max(rect.right, other.right), bottom: Math.max(rect.bottom, other.bottom) };\n        let mLeft = 0, mRight = 0, mTop = 0, mBottom = 0;\n        for (let margins of this.view.state.facet(scrollMargins).map(f => f(this.view)))\n            if (margins) {\n                let { left, right, top, bottom } = margins;\n                if (left != null)\n                    mLeft = Math.max(mLeft, left);\n                if (right != null)\n                    mRight = Math.max(mRight, right);\n                if (top != null)\n                    mTop = Math.max(mTop, top);\n                if (bottom != null)\n                    mBottom = Math.max(mBottom, bottom);\n            }\n        let targetRect = {\n            left: rect.left - mLeft, top: rect.top - mTop,\n            right: rect.right + mRight, bottom: rect.bottom + mBottom\n        };\n        scrollRectIntoView(this.view.scrollDOM, targetRect, range.head < range.anchor ? -1 : 1, target.x, target.y, target.xMargin, target.yMargin, this.view.textDirection == Direction.LTR);\n    }\n}\nfunction betweenUneditable(pos) {\n    return pos.node.nodeType == 1 && pos.node.firstChild &&\n        (pos.offset == 0 || pos.node.childNodes[pos.offset - 1].contentEditable == \"false\") &&\n        (pos.offset == pos.node.childNodes.length || pos.node.childNodes[pos.offset].contentEditable == \"false\");\n}\nclass BlockGapWidget extends WidgetType {\n    constructor(height) {\n        super();\n        this.height = height;\n    }\n    toDOM() {\n        let elt = document.createElement(\"div\");\n        this.updateDOM(elt);\n        return elt;\n    }\n    eq(other) { return other.height == this.height; }\n    updateDOM(elt) {\n        elt.style.height = this.height + \"px\";\n        return true;\n    }\n    get estimatedHeight() { return this.height; }\n}\nfunction compositionSurroundingNode(view) {\n    let sel = view.observer.selectionRange;\n    let textNode = sel.focusNode && nearbyTextNode(sel.focusNode, sel.focusOffset, 0);\n    if (!textNode)\n        return null;\n    let cView = view.docView.nearest(textNode);\n    if (!cView)\n        return null;\n    if (cView instanceof LineView) {\n        let topNode = textNode;\n        while (topNode.parentNode != cView.dom)\n            topNode = topNode.parentNode;\n        let prev = topNode.previousSibling;\n        while (prev && !ContentView.get(prev))\n            prev = prev.previousSibling;\n        let pos = prev ? ContentView.get(prev).posAtEnd : cView.posAtStart;\n        return { from: pos, to: pos, node: topNode, text: textNode };\n    }\n    else {\n        for (;;) {\n            let { parent } = cView;\n            if (!parent)\n                return null;\n            if (parent instanceof LineView)\n                break;\n            cView = parent;\n        }\n        let from = cView.posAtStart;\n        return { from, to: from + cView.length, node: cView.dom, text: textNode };\n    }\n}\nfunction computeCompositionDeco(view, changes) {\n    let surrounding = compositionSurroundingNode(view);\n    if (!surrounding)\n        return Decoration.none;\n    let { from, to, node, text: textNode } = surrounding;\n    let newFrom = changes.mapPos(from, 1), newTo = Math.max(newFrom, changes.mapPos(to, -1));\n    let { state } = view, text = node.nodeType == 3 ? node.nodeValue :\n        new DOMReader([], state).readRange(node.firstChild, null).text;\n    if (newTo - newFrom < text.length) {\n        if (state.doc.sliceString(newFrom, Math.min(state.doc.length, newFrom + text.length), LineBreakPlaceholder) == text)\n            newTo = newFrom + text.length;\n        else if (state.doc.sliceString(Math.max(0, newTo - text.length), newTo, LineBreakPlaceholder) == text)\n            newFrom = newTo - text.length;\n        else\n            return Decoration.none;\n    }\n    else if (state.doc.sliceString(newFrom, newTo, LineBreakPlaceholder) != text) {\n        return Decoration.none;\n    }\n    let topView = ContentView.get(node);\n    if (topView instanceof CompositionView)\n        topView = topView.widget.topView;\n    else if (topView)\n        topView.parent = null;\n    return Decoration.set(Decoration.replace({ widget: new CompositionWidget(node, textNode, topView), inclusive: true })\n        .range(newFrom, newTo));\n}\nclass CompositionWidget extends WidgetType {\n    constructor(top, text, topView) {\n        super();\n        this.top = top;\n        this.text = text;\n        this.topView = topView;\n    }\n    eq(other) { return this.top == other.top && this.text == other.text; }\n    toDOM() { return this.top; }\n    ignoreEvent() { return false; }\n    get customView() { return CompositionView; }\n}\nfunction nearbyTextNode(node, offset, side) {\n    for (;;) {\n        if (node.nodeType == 3)\n            return node;\n        if (node.nodeType == 1 && offset > 0 && side <= 0) {\n            node = node.childNodes[offset - 1];\n            offset = maxOffset(node);\n        }\n        else if (node.nodeType == 1 && offset < node.childNodes.length && side >= 0) {\n            node = node.childNodes[offset];\n            offset = 0;\n        }\n        else {\n            return null;\n        }\n    }\n}\nfunction nextToUneditable(node, offset) {\n    if (node.nodeType != 1)\n        return 0;\n    return (offset && node.childNodes[offset - 1].contentEditable == \"false\" ? 1 /* Before */ : 0) |\n        (offset < node.childNodes.length && node.childNodes[offset].contentEditable == \"false\" ? 2 /* After */ : 0);\n}\nclass DecorationComparator$1 {\n    constructor() {\n        this.changes = [];\n    }\n    compareRange(from, to) { addRange(from, to, this.changes); }\n    comparePoint(from, to) { addRange(from, to, this.changes); }\n}\nfunction findChangedDeco(a, b, diff) {\n    let comp = new DecorationComparator$1;\n    RangeSet.compare(a, b, diff, comp);\n    return comp.changes;\n}\nfunction inUneditable(node, inside) {\n    for (let cur = node; cur && cur != inside; cur = cur.assignedSlot || cur.parentNode) {\n        if (cur.nodeType == 1 && cur.contentEditable == 'false') {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction groupAt(state, pos, bias = 1) {\n    let categorize = state.charCategorizer(pos);\n    let line = state.doc.lineAt(pos), linePos = pos - line.from;\n    if (line.length == 0)\n        return EditorSelection.cursor(pos);\n    if (linePos == 0)\n        bias = 1;\n    else if (linePos == line.length)\n        bias = -1;\n    let from = linePos, to = linePos;\n    if (bias < 0)\n        from = findClusterBreak(line.text, linePos, false);\n    else\n        to = findClusterBreak(line.text, linePos);\n    let cat = categorize(line.text.slice(from, to));\n    while (from > 0) {\n        let prev = findClusterBreak(line.text, from, false);\n        if (categorize(line.text.slice(prev, from)) != cat)\n            break;\n        from = prev;\n    }\n    while (to < line.length) {\n        let next = findClusterBreak(line.text, to);\n        if (categorize(line.text.slice(to, next)) != cat)\n            break;\n        to = next;\n    }\n    return EditorSelection.range(from + line.from, to + line.from);\n}\n// Search the DOM for the {node, offset} position closest to the given\n// coordinates. Very inefficient and crude, but can usually be avoided\n// by calling caret(Position|Range)FromPoint instead.\nfunction getdx(x, rect) {\n    return rect.left > x ? rect.left - x : Math.max(0, x - rect.right);\n}\nfunction getdy(y, rect) {\n    return rect.top > y ? rect.top - y : Math.max(0, y - rect.bottom);\n}\nfunction yOverlap(a, b) {\n    return a.top < b.bottom - 1 && a.bottom > b.top + 1;\n}\nfunction upTop(rect, top) {\n    return top < rect.top ? { top, left: rect.left, right: rect.right, bottom: rect.bottom } : rect;\n}\nfunction upBot(rect, bottom) {\n    return bottom > rect.bottom ? { top: rect.top, left: rect.left, right: rect.right, bottom } : rect;\n}\nfunction domPosAtCoords(parent, x, y) {\n    let closest, closestRect, closestX, closestY;\n    let above, below, aboveRect, belowRect;\n    for (let child = parent.firstChild; child; child = child.nextSibling) {\n        let rects = clientRectsFor(child);\n        for (let i = 0; i < rects.length; i++) {\n            let rect = rects[i];\n            if (closestRect && yOverlap(closestRect, rect))\n                rect = upTop(upBot(rect, closestRect.bottom), closestRect.top);\n            let dx = getdx(x, rect), dy = getdy(y, rect);\n            if (dx == 0 && dy == 0)\n                return child.nodeType == 3 ? domPosInText(child, x, y) : domPosAtCoords(child, x, y);\n            if (!closest || closestY > dy || closestY == dy && closestX > dx) {\n                closest = child;\n                closestRect = rect;\n                closestX = dx;\n                closestY = dy;\n            }\n            if (dx == 0) {\n                if (y > rect.bottom && (!aboveRect || aboveRect.bottom < rect.bottom)) {\n                    above = child;\n                    aboveRect = rect;\n                }\n                else if (y < rect.top && (!belowRect || belowRect.top > rect.top)) {\n                    below = child;\n                    belowRect = rect;\n                }\n            }\n            else if (aboveRect && yOverlap(aboveRect, rect)) {\n                aboveRect = upBot(aboveRect, rect.bottom);\n            }\n            else if (belowRect && yOverlap(belowRect, rect)) {\n                belowRect = upTop(belowRect, rect.top);\n            }\n        }\n    }\n    if (aboveRect && aboveRect.bottom >= y) {\n        closest = above;\n        closestRect = aboveRect;\n    }\n    else if (belowRect && belowRect.top <= y) {\n        closest = below;\n        closestRect = belowRect;\n    }\n    if (!closest)\n        return { node: parent, offset: 0 };\n    let clipX = Math.max(closestRect.left, Math.min(closestRect.right, x));\n    if (closest.nodeType == 3)\n        return domPosInText(closest, clipX, y);\n    if (!closestX && closest.contentEditable == \"true\")\n        return domPosAtCoords(closest, clipX, y);\n    let offset = Array.prototype.indexOf.call(parent.childNodes, closest) +\n        (x >= (closestRect.left + closestRect.right) / 2 ? 1 : 0);\n    return { node: parent, offset };\n}\nfunction domPosInText(node, x, y) {\n    let len = node.nodeValue.length;\n    let closestOffset = -1, closestDY = 1e9, generalSide = 0;\n    for (let i = 0; i < len; i++) {\n        let rects = textRange(node, i, i + 1).getClientRects();\n        for (let j = 0; j < rects.length; j++) {\n            let rect = rects[j];\n            if (rect.top == rect.bottom)\n                continue;\n            if (!generalSide)\n                generalSide = x - rect.left;\n            let dy = (rect.top > y ? rect.top - y : y - rect.bottom) - 1;\n            if (rect.left - 1 <= x && rect.right + 1 >= x && dy < closestDY) {\n                let right = x >= (rect.left + rect.right) / 2, after = right;\n                if (browser.chrome || browser.gecko) {\n                    // Check for RTL on browsers that support getting client\n                    // rects for empty ranges.\n                    let rectBefore = textRange(node, i).getBoundingClientRect();\n                    if (rectBefore.left == rect.right)\n                        after = !right;\n                }\n                if (dy <= 0)\n                    return { node, offset: i + (after ? 1 : 0) };\n                closestOffset = i + (after ? 1 : 0);\n                closestDY = dy;\n            }\n        }\n    }\n    return { node, offset: closestOffset > -1 ? closestOffset : generalSide > 0 ? node.nodeValue.length : 0 };\n}\nfunction posAtCoords(view, { x, y }, precise, bias = -1) {\n    var _a;\n    let content = view.contentDOM.getBoundingClientRect(), docTop = content.top + view.viewState.paddingTop;\n    let block, { docHeight } = view.viewState;\n    let yOffset = y - docTop;\n    if (yOffset < 0)\n        return 0;\n    if (yOffset > docHeight)\n        return view.state.doc.length;\n    // Scan for a text block near the queried y position\n    for (let halfLine = view.defaultLineHeight / 2, bounced = false;;) {\n        block = view.elementAtHeight(yOffset);\n        if (block.type == BlockType.Text)\n            break;\n        for (;;) {\n            // Move the y position out of this block\n            yOffset = bias > 0 ? block.bottom + halfLine : block.top - halfLine;\n            if (yOffset >= 0 && yOffset <= docHeight)\n                break;\n            // If the document consists entirely of replaced widgets, we\n            // won't find a text block, so return 0\n            if (bounced)\n                return precise ? null : 0;\n            bounced = true;\n            bias = -bias;\n        }\n    }\n    y = docTop + yOffset;\n    let lineStart = block.from;\n    // If this is outside of the rendered viewport, we can't determine a position\n    if (lineStart < view.viewport.from)\n        return view.viewport.from == 0 ? 0 : precise ? null : posAtCoordsImprecise(view, content, block, x, y);\n    if (lineStart > view.viewport.to)\n        return view.viewport.to == view.state.doc.length ? view.state.doc.length :\n            precise ? null : posAtCoordsImprecise(view, content, block, x, y);\n    // Prefer ShadowRootOrDocument.elementFromPoint if present, fall back to document if not\n    let doc = view.dom.ownerDocument;\n    let root = view.root.elementFromPoint ? view.root : doc;\n    let element = root.elementFromPoint(x, y);\n    if (element && !view.contentDOM.contains(element))\n        element = null;\n    // If the element is unexpected, clip x at the sides of the content area and try again\n    if (!element) {\n        x = Math.max(content.left + 1, Math.min(content.right - 1, x));\n        element = root.elementFromPoint(x, y);\n        if (element && !view.contentDOM.contains(element))\n            element = null;\n    }\n    // There's visible editor content under the point, so we can try\n    // using caret(Position|Range)FromPoint as a shortcut\n    let node, offset = -1;\n    if (element && ((_a = view.docView.nearest(element)) === null || _a === void 0 ? void 0 : _a.isEditable) != false) {\n        if (doc.caretPositionFromPoint) {\n            let pos = doc.caretPositionFromPoint(x, y);\n            if (pos)\n                ({ offsetNode: node, offset } = pos);\n        }\n        else if (doc.caretRangeFromPoint) {\n            let range = doc.caretRangeFromPoint(x, y);\n            if (range) {\n                ({ startContainer: node, startOffset: offset } = range);\n                if (browser.safari && isSuspiciousCaretResult(node, offset, x))\n                    node = undefined;\n            }\n        }\n    }\n    // No luck, do our own (potentially expensive) search\n    if (!node || !view.docView.dom.contains(node)) {\n        let line = LineView.find(view.docView, lineStart);\n        if (!line)\n            return yOffset > block.top + block.height / 2 ? block.to : block.from;\n        ({ node, offset } = domPosAtCoords(line.dom, x, y));\n    }\n    return view.docView.posFromDOM(node, offset);\n}\nfunction posAtCoordsImprecise(view, contentRect, block, x, y) {\n    let into = Math.round((x - contentRect.left) * view.defaultCharacterWidth);\n    if (view.lineWrapping && block.height > view.defaultLineHeight * 1.5) {\n        let line = Math.floor((y - block.top) / view.defaultLineHeight);\n        into += line * view.viewState.heightOracle.lineLength;\n    }\n    let content = view.state.sliceDoc(block.from, block.to);\n    return block.from + findColumn(content, into, view.state.tabSize);\n}\n// In case of a high line height, Safari's caretRangeFromPoint treats\n// the space between lines as belonging to the last character of the\n// line before. This is used to detect such a result so that it can be\n// ignored (issue #401).\nfunction isSuspiciousCaretResult(node, offset, x) {\n    let len;\n    if (node.nodeType != 3 || offset != (len = node.nodeValue.length))\n        return false;\n    for (let next = node.nextSibling; next; next = next.nextSibling)\n        if (next.nodeType != 1 || next.nodeName != \"BR\")\n            return false;\n    return textRange(node, len - 1, len).getBoundingClientRect().left > x;\n}\nfunction moveToLineBoundary(view, start, forward, includeWrap) {\n    let line = view.state.doc.lineAt(start.head);\n    let coords = !includeWrap || !view.lineWrapping ? null\n        : view.coordsAtPos(start.assoc < 0 && start.head > line.from ? start.head - 1 : start.head);\n    if (coords) {\n        let editorRect = view.dom.getBoundingClientRect();\n        let direction = view.textDirectionAt(line.from);\n        let pos = view.posAtCoords({ x: forward == (direction == Direction.LTR) ? editorRect.right - 1 : editorRect.left + 1,\n            y: (coords.top + coords.bottom) / 2 });\n        if (pos != null)\n            return EditorSelection.cursor(pos, forward ? -1 : 1);\n    }\n    let lineView = LineView.find(view.docView, start.head);\n    let end = lineView ? (forward ? lineView.posAtEnd : lineView.posAtStart) : (forward ? line.to : line.from);\n    return EditorSelection.cursor(end, forward ? -1 : 1);\n}\nfunction moveByChar(view, start, forward, by) {\n    let line = view.state.doc.lineAt(start.head), spans = view.bidiSpans(line);\n    let direction = view.textDirectionAt(line.from);\n    for (let cur = start, check = null;;) {\n        let next = moveVisually(line, spans, direction, cur, forward), char = movedOver;\n        if (!next) {\n            if (line.number == (forward ? view.state.doc.lines : 1))\n                return cur;\n            char = \"\\n\";\n            line = view.state.doc.line(line.number + (forward ? 1 : -1));\n            spans = view.bidiSpans(line);\n            next = EditorSelection.cursor(forward ? line.from : line.to);\n        }\n        if (!check) {\n            if (!by)\n                return next;\n            check = by(char);\n        }\n        else if (!check(char)) {\n            return cur;\n        }\n        cur = next;\n    }\n}\nfunction byGroup(view, pos, start) {\n    let categorize = view.state.charCategorizer(pos);\n    let cat = categorize(start);\n    return (next) => {\n        let nextCat = categorize(next);\n        if (cat == CharCategory.Space)\n            cat = nextCat;\n        return cat == nextCat;\n    };\n}\nfunction moveVertically(view, start, forward, distance) {\n    let startPos = start.head, dir = forward ? 1 : -1;\n    if (startPos == (forward ? view.state.doc.length : 0))\n        return EditorSelection.cursor(startPos, start.assoc);\n    let goal = start.goalColumn, startY;\n    let rect = view.contentDOM.getBoundingClientRect();\n    let startCoords = view.coordsAtPos(startPos), docTop = view.documentTop;\n    if (startCoords) {\n        if (goal == null)\n            goal = startCoords.left - rect.left;\n        startY = dir < 0 ? startCoords.top : startCoords.bottom;\n    }\n    else {\n        let line = view.viewState.lineBlockAt(startPos);\n        if (goal == null)\n            goal = Math.min(rect.right - rect.left, view.defaultCharacterWidth * (startPos - line.from));\n        startY = (dir < 0 ? line.top : line.bottom) + docTop;\n    }\n    let resolvedGoal = rect.left + goal;\n    let dist = distance !== null && distance !== void 0 ? distance : (view.defaultLineHeight >> 1);\n    for (let extra = 0;; extra += 10) {\n        let curY = startY + (dist + extra) * dir;\n        let pos = posAtCoords(view, { x: resolvedGoal, y: curY }, false, dir);\n        if (curY < rect.top || curY > rect.bottom || (dir < 0 ? pos < startPos : pos > startPos))\n            return EditorSelection.cursor(pos, start.assoc, undefined, goal);\n    }\n}\nfunction skipAtoms(view, oldPos, pos) {\n    let atoms = view.state.facet(atomicRanges).map(f => f(view));\n    for (;;) {\n        let moved = false;\n        for (let set of atoms) {\n            set.between(pos.from - 1, pos.from + 1, (from, to, value) => {\n                if (pos.from > from && pos.from < to) {\n                    pos = oldPos.from > pos.from ? EditorSelection.cursor(from, 1) : EditorSelection.cursor(to, -1);\n                    moved = true;\n                }\n            });\n        }\n        if (!moved)\n            return pos;\n    }\n}\n\n// This will also be where dragging info and such goes\nclass InputState {\n    constructor(view) {\n        this.lastKeyCode = 0;\n        this.lastKeyTime = 0;\n        this.chromeScrollHack = -1;\n        // On iOS, some keys need to have their default behavior happen\n        // (after which we retroactively handle them and reset the DOM) to\n        // avoid messing up the virtual keyboard state.\n        this.pendingIOSKey = undefined;\n        this.lastSelectionOrigin = null;\n        this.lastSelectionTime = 0;\n        this.lastEscPress = 0;\n        this.lastContextMenu = 0;\n        this.scrollHandlers = [];\n        this.registeredEvents = [];\n        this.customHandlers = [];\n        // -1 means not in a composition. Otherwise, this counts the number\n        // of changes made during the composition. The count is used to\n        // avoid treating the start state of the composition, before any\n        // changes have been made, as part of the composition.\n        this.composing = -1;\n        // Tracks whether the next change should be marked as starting the\n        // composition (null means no composition, true means next is the\n        // first, false means first has already been marked for this\n        // composition)\n        this.compositionFirstChange = null;\n        this.compositionEndedAt = 0;\n        this.rapidCompositionStart = false;\n        this.mouseSelection = null;\n        for (let type in handlers) {\n            let handler = handlers[type];\n            view.contentDOM.addEventListener(type, (event) => {\n                if (!eventBelongsToEditor(view, event) || this.ignoreDuringComposition(event))\n                    return;\n                if (type == \"keydown\" && this.keydown(view, event))\n                    return;\n                if (this.mustFlushObserver(event))\n                    view.observer.forceFlush();\n                if (this.runCustomHandlers(type, view, event))\n                    event.preventDefault();\n                else\n                    handler(view, event);\n            });\n            this.registeredEvents.push(type);\n        }\n        if (browser.chrome && browser.chrome_version >= 102) {\n            // On Chrome 102, viewport updates somehow stop wheel-based\n            // scrolling. Turning off pointer events during the scroll seems\n            // to avoid the issue.\n            view.scrollDOM.addEventListener(\"wheel\", () => {\n                if (this.chromeScrollHack < 0)\n                    view.contentDOM.style.pointerEvents = \"none\";\n                else\n                    window.clearTimeout(this.chromeScrollHack);\n                this.chromeScrollHack = setTimeout(() => {\n                    this.chromeScrollHack = -1;\n                    view.contentDOM.style.pointerEvents = \"\";\n                }, 100);\n            }, { passive: true });\n        }\n        this.notifiedFocused = view.hasFocus;\n        // On Safari adding an input event handler somehow prevents an\n        // issue where the composition vanishes when you press enter.\n        if (browser.safari)\n            view.contentDOM.addEventListener(\"input\", () => null);\n    }\n    setSelectionOrigin(origin) {\n        this.lastSelectionOrigin = origin;\n        this.lastSelectionTime = Date.now();\n    }\n    ensureHandlers(view, plugins) {\n        var _a;\n        let handlers;\n        this.customHandlers = [];\n        for (let plugin of plugins)\n            if (handlers = (_a = plugin.update(view).spec) === null || _a === void 0 ? void 0 : _a.domEventHandlers) {\n                this.customHandlers.push({ plugin: plugin.value, handlers });\n                for (let type in handlers)\n                    if (this.registeredEvents.indexOf(type) < 0 && type != \"scroll\") {\n                        this.registeredEvents.push(type);\n                        view.contentDOM.addEventListener(type, (event) => {\n                            if (!eventBelongsToEditor(view, event))\n                                return;\n                            if (this.runCustomHandlers(type, view, event))\n                                event.preventDefault();\n                        });\n                    }\n            }\n    }\n    runCustomHandlers(type, view, event) {\n        for (let set of this.customHandlers) {\n            let handler = set.handlers[type];\n            if (handler) {\n                try {\n                    if (handler.call(set.plugin, event, view) || event.defaultPrevented)\n                        return true;\n                }\n                catch (e) {\n                    logException(view.state, e);\n                }\n            }\n        }\n        return false;\n    }\n    runScrollHandlers(view, event) {\n        for (let set of this.customHandlers) {\n            let handler = set.handlers.scroll;\n            if (handler) {\n                try {\n                    handler.call(set.plugin, event, view);\n                }\n                catch (e) {\n                    logException(view.state, e);\n                }\n            }\n        }\n    }\n    keydown(view, event) {\n        // Must always run, even if a custom handler handled the event\n        this.lastKeyCode = event.keyCode;\n        this.lastKeyTime = Date.now();\n        if (event.keyCode == 9 && Date.now() < this.lastEscPress + 2000)\n            return true;\n        // Chrome for Android usually doesn't fire proper key events, but\n        // occasionally does, usually surrounded by a bunch of complicated\n        // composition changes. When an enter or backspace key event is\n        // seen, hold off on handling DOM events for a bit, and then\n        // dispatch it.\n        if (browser.android && browser.chrome && !event.synthetic &&\n            (event.keyCode == 13 || event.keyCode == 8)) {\n            view.observer.delayAndroidKey(event.key, event.keyCode);\n            return true;\n        }\n        // Prevent the default behavior of Enter on iOS makes the\n        // virtual keyboard get stuck in the wrong (lowercase)\n        // state. So we let it go through, and then, in\n        // applyDOMChange, notify key handlers of it and reset to\n        // the state they produce.\n        let pending;\n        if (browser.ios && (pending = PendingKeys.find(key => key.keyCode == event.keyCode)) &&\n            !(event.ctrlKey || event.altKey || event.metaKey) && !event.synthetic) {\n            this.pendingIOSKey = pending;\n            setTimeout(() => this.flushIOSKey(view), 250);\n            return true;\n        }\n        return false;\n    }\n    flushIOSKey(view) {\n        let key = this.pendingIOSKey;\n        if (!key)\n            return false;\n        this.pendingIOSKey = undefined;\n        return dispatchKey(view.contentDOM, key.key, key.keyCode);\n    }\n    ignoreDuringComposition(event) {\n        if (!/^key/.test(event.type))\n            return false;\n        if (this.composing > 0)\n            return true;\n        // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n        // On some input method editors (IMEs), the Enter key is used to\n        // confirm character selection. On Safari, when Enter is pressed,\n        // compositionend and keydown events are sometimes emitted in the\n        // wrong order. The key event should still be ignored, even when\n        // it happens after the compositionend event.\n        if (browser.safari && Date.now() - this.compositionEndedAt < 100) {\n            this.compositionEndedAt = 0;\n            return true;\n        }\n        return false;\n    }\n    mustFlushObserver(event) {\n        return (event.type == \"keydown\" && event.keyCode != 229) ||\n            event.type == \"compositionend\" && !browser.ios;\n    }\n    startMouseSelection(mouseSelection) {\n        if (this.mouseSelection)\n            this.mouseSelection.destroy();\n        this.mouseSelection = mouseSelection;\n    }\n    update(update) {\n        if (this.mouseSelection)\n            this.mouseSelection.update(update);\n        if (update.transactions.length)\n            this.lastKeyCode = this.lastSelectionTime = 0;\n    }\n    destroy() {\n        if (this.mouseSelection)\n            this.mouseSelection.destroy();\n    }\n}\nconst PendingKeys = [\n    { key: \"Backspace\", keyCode: 8, inputType: \"deleteContentBackward\" },\n    { key: \"Enter\", keyCode: 13, inputType: \"insertParagraph\" },\n    { key: \"Delete\", keyCode: 46, inputType: \"deleteContentForward\" }\n];\n// Key codes for modifier keys\nconst modifierCodes = [16, 17, 18, 20, 91, 92, 224, 225];\nclass MouseSelection {\n    constructor(view, startEvent, style, mustSelect) {\n        this.view = view;\n        this.style = style;\n        this.mustSelect = mustSelect;\n        this.lastEvent = startEvent;\n        let doc = view.contentDOM.ownerDocument;\n        doc.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n        doc.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n        this.extend = startEvent.shiftKey;\n        this.multiple = view.state.facet(EditorState.allowMultipleSelections) && addsSelectionRange(view, startEvent);\n        this.dragMove = dragMovesSelection(view, startEvent);\n        this.dragging = isInPrimarySelection(view, startEvent) && getClickType(startEvent) == 1 ? null : false;\n        // When clicking outside of the selection, immediately apply the\n        // effect of starting the selection\n        if (this.dragging === false) {\n            startEvent.preventDefault();\n            this.select(startEvent);\n        }\n    }\n    move(event) {\n        if (event.buttons == 0)\n            return this.destroy();\n        if (this.dragging !== false)\n            return;\n        this.select(this.lastEvent = event);\n    }\n    up(event) {\n        if (this.dragging == null)\n            this.select(this.lastEvent);\n        if (!this.dragging)\n            event.preventDefault();\n        this.destroy();\n    }\n    destroy() {\n        let doc = this.view.contentDOM.ownerDocument;\n        doc.removeEventListener(\"mousemove\", this.move);\n        doc.removeEventListener(\"mouseup\", this.up);\n        this.view.inputState.mouseSelection = null;\n    }\n    select(event) {\n        let selection = this.style.get(event, this.extend, this.multiple);\n        if (this.mustSelect || !selection.eq(this.view.state.selection) ||\n            selection.main.assoc != this.view.state.selection.main.assoc)\n            this.view.dispatch({\n                selection,\n                userEvent: \"select.pointer\",\n                scrollIntoView: true\n            });\n        this.mustSelect = false;\n    }\n    update(update) {\n        if (update.docChanged && this.dragging)\n            this.dragging = this.dragging.map(update.changes);\n        if (this.style.update(update))\n            setTimeout(() => this.select(this.lastEvent), 20);\n    }\n}\nfunction addsSelectionRange(view, event) {\n    let facet = view.state.facet(clickAddsSelectionRange);\n    return facet.length ? facet[0](event) : browser.mac ? event.metaKey : event.ctrlKey;\n}\nfunction dragMovesSelection(view, event) {\n    let facet = view.state.facet(dragMovesSelection$1);\n    return facet.length ? facet[0](event) : browser.mac ? !event.altKey : !event.ctrlKey;\n}\nfunction isInPrimarySelection(view, event) {\n    let { main } = view.state.selection;\n    if (main.empty)\n        return false;\n    // On boundary clicks, check whether the coordinates are inside the\n    // selection's client rectangles\n    let sel = getSelection(view.root);\n    if (sel.rangeCount == 0)\n        return true;\n    let rects = sel.getRangeAt(0).getClientRects();\n    for (let i = 0; i < rects.length; i++) {\n        let rect = rects[i];\n        if (rect.left <= event.clientX && rect.right >= event.clientX &&\n            rect.top <= event.clientY && rect.bottom >= event.clientY)\n            return true;\n    }\n    return false;\n}\nfunction eventBelongsToEditor(view, event) {\n    if (!event.bubbles)\n        return true;\n    if (event.defaultPrevented)\n        return false;\n    for (let node = event.target, cView; node != view.contentDOM; node = node.parentNode)\n        if (!node || node.nodeType == 11 || ((cView = ContentView.get(node)) && cView.ignoreEvent(event)))\n            return false;\n    return true;\n}\nconst handlers = /*@__PURE__*/Object.create(null);\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (browser.ie && browser.ie_version < 15) ||\n    (browser.ios && browser.webkit_version < 604);\nfunction capturePaste(view) {\n    let parent = view.dom.parentNode;\n    if (!parent)\n        return;\n    let target = parent.appendChild(document.createElement(\"textarea\"));\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.focus();\n    setTimeout(() => {\n        view.focus();\n        target.remove();\n        doPaste(view, target.value);\n    }, 50);\n}\nfunction doPaste(view, input) {\n    let { state } = view, changes, i = 1, text = state.toText(input);\n    let byLine = text.lines == state.selection.ranges.length;\n    let linewise = lastLinewiseCopy != null && state.selection.ranges.every(r => r.empty) && lastLinewiseCopy == text.toString();\n    if (linewise) {\n        let lastLine = -1;\n        changes = state.changeByRange(range => {\n            let line = state.doc.lineAt(range.from);\n            if (line.from == lastLine)\n                return { range };\n            lastLine = line.from;\n            let insert = state.toText((byLine ? text.line(i++).text : input) + state.lineBreak);\n            return { changes: { from: line.from, insert },\n                range: EditorSelection.cursor(range.from + insert.length) };\n        });\n    }\n    else if (byLine) {\n        changes = state.changeByRange(range => {\n            let line = text.line(i++);\n            return { changes: { from: range.from, to: range.to, insert: line.text },\n                range: EditorSelection.cursor(range.from + line.length) };\n        });\n    }\n    else {\n        changes = state.replaceSelection(text);\n    }\n    view.dispatch(changes, {\n        userEvent: \"input.paste\",\n        scrollIntoView: true\n    });\n}\nhandlers.keydown = (view, event) => {\n    view.inputState.setSelectionOrigin(\"select\");\n    if (event.keyCode == 27)\n        view.inputState.lastEscPress = Date.now();\n    else if (modifierCodes.indexOf(event.keyCode) < 0)\n        view.inputState.lastEscPress = 0;\n};\nlet lastTouch = 0;\nhandlers.touchstart = (view, e) => {\n    lastTouch = Date.now();\n    view.inputState.setSelectionOrigin(\"select.pointer\");\n};\nhandlers.touchmove = view => {\n    view.inputState.setSelectionOrigin(\"select.pointer\");\n};\nhandlers.mousedown = (view, event) => {\n    view.observer.flush();\n    if (lastTouch > Date.now() - 2000 && getClickType(event) == 1)\n        return; // Ignore touch interaction\n    let style = null;\n    for (let makeStyle of view.state.facet(mouseSelectionStyle)) {\n        style = makeStyle(view, event);\n        if (style)\n            break;\n    }\n    if (!style && event.button == 0)\n        style = basicMouseSelection(view, event);\n    if (style) {\n        let mustFocus = view.root.activeElement != view.contentDOM;\n        if (mustFocus)\n            view.observer.ignore(() => focusPreventScroll(view.contentDOM));\n        view.inputState.startMouseSelection(new MouseSelection(view, event, style, mustFocus));\n    }\n};\nfunction rangeForClick(view, pos, bias, type) {\n    if (type == 1) { // Single click\n        return EditorSelection.cursor(pos, bias);\n    }\n    else if (type == 2) { // Double click\n        return groupAt(view.state, pos, bias);\n    }\n    else { // Triple click\n        let visual = LineView.find(view.docView, pos), line = view.state.doc.lineAt(visual ? visual.posAtEnd : pos);\n        let from = visual ? visual.posAtStart : line.from, to = visual ? visual.posAtEnd : line.to;\n        if (to < view.state.doc.length && to == line.to)\n            to++;\n        return EditorSelection.range(from, to);\n    }\n}\nlet insideY = (y, rect) => y >= rect.top && y <= rect.bottom;\nlet inside = (x, y, rect) => insideY(y, rect) && x >= rect.left && x <= rect.right;\n// Try to determine, for the given coordinates, associated with the\n// given position, whether they are related to the element before or\n// the element after the position.\nfunction findPositionSide(view, pos, x, y) {\n    let line = LineView.find(view.docView, pos);\n    if (!line)\n        return 1;\n    let off = pos - line.posAtStart;\n    // Line boundaries point into the line\n    if (off == 0)\n        return 1;\n    if (off == line.length)\n        return -1;\n    // Positions on top of an element point at that element\n    let before = line.coordsAt(off, -1);\n    if (before && inside(x, y, before))\n        return -1;\n    let after = line.coordsAt(off, 1);\n    if (after && inside(x, y, after))\n        return 1;\n    // This is probably a line wrap point. Pick before if the point is\n    // beside it.\n    return before && insideY(y, before) ? -1 : 1;\n}\nfunction queryPos(view, event) {\n    let pos = view.posAtCoords({ x: event.clientX, y: event.clientY }, false);\n    return { pos, bias: findPositionSide(view, pos, event.clientX, event.clientY) };\n}\nconst BadMouseDetail = browser.ie && browser.ie_version <= 11;\nlet lastMouseDown = null, lastMouseDownCount = 0, lastMouseDownTime = 0;\nfunction getClickType(event) {\n    if (!BadMouseDetail)\n        return event.detail;\n    let last = lastMouseDown, lastTime = lastMouseDownTime;\n    lastMouseDown = event;\n    lastMouseDownTime = Date.now();\n    return lastMouseDownCount = !last || (lastTime > Date.now() - 400 && Math.abs(last.clientX - event.clientX) < 2 &&\n        Math.abs(last.clientY - event.clientY) < 2) ? (lastMouseDownCount + 1) % 3 : 1;\n}\nfunction basicMouseSelection(view, event) {\n    let start = queryPos(view, event), type = getClickType(event);\n    let startSel = view.state.selection;\n    let last = start, lastEvent = event;\n    return {\n        update(update) {\n            if (update.docChanged) {\n                if (start)\n                    start.pos = update.changes.mapPos(start.pos);\n                startSel = startSel.map(update.changes);\n                lastEvent = null;\n            }\n        },\n        get(event, extend, multiple) {\n            let cur;\n            if (lastEvent && event.clientX == lastEvent.clientX && event.clientY == lastEvent.clientY)\n                cur = last;\n            else {\n                cur = last = queryPos(view, event);\n                lastEvent = event;\n            }\n            if (!cur || !start)\n                return startSel;\n            let range = rangeForClick(view, cur.pos, cur.bias, type);\n            if (start.pos != cur.pos && !extend) {\n                let startRange = rangeForClick(view, start.pos, start.bias, type);\n                let from = Math.min(startRange.from, range.from), to = Math.max(startRange.to, range.to);\n                range = from < range.from ? EditorSelection.range(from, to) : EditorSelection.range(to, from);\n            }\n            if (extend)\n                return startSel.replaceRange(startSel.main.extend(range.from, range.to));\n            else if (multiple)\n                return startSel.addRange(range);\n            else\n                return EditorSelection.create([range]);\n        }\n    };\n}\nhandlers.dragstart = (view, event) => {\n    let { selection: { main } } = view.state;\n    let { mouseSelection } = view.inputState;\n    if (mouseSelection)\n        mouseSelection.dragging = main;\n    if (event.dataTransfer) {\n        event.dataTransfer.setData(\"Text\", view.state.sliceDoc(main.from, main.to));\n        event.dataTransfer.effectAllowed = \"copyMove\";\n    }\n};\nfunction dropText(view, event, text, direct) {\n    if (!text)\n        return;\n    let dropPos = view.posAtCoords({ x: event.clientX, y: event.clientY }, false);\n    event.preventDefault();\n    let { mouseSelection } = view.inputState;\n    let del = direct && mouseSelection && mouseSelection.dragging && mouseSelection.dragMove ?\n        { from: mouseSelection.dragging.from, to: mouseSelection.dragging.to } : null;\n    let ins = { from: dropPos, insert: text };\n    let changes = view.state.changes(del ? [del, ins] : ins);\n    view.focus();\n    view.dispatch({\n        changes,\n        selection: { anchor: changes.mapPos(dropPos, -1), head: changes.mapPos(dropPos, 1) },\n        userEvent: del ? \"move.drop\" : \"input.drop\"\n    });\n}\nhandlers.drop = (view, event) => {\n    if (!event.dataTransfer)\n        return;\n    if (view.state.readOnly)\n        return event.preventDefault();\n    let files = event.dataTransfer.files;\n    if (files && files.length) { // For a file drop, read the file's text.\n        event.preventDefault();\n        let text = Array(files.length), read = 0;\n        let finishFile = () => {\n            if (++read == files.length)\n                dropText(view, event, text.filter(s => s != null).join(view.state.lineBreak), false);\n        };\n        for (let i = 0; i < files.length; i++) {\n            let reader = new FileReader;\n            reader.onerror = finishFile;\n            reader.onload = () => {\n                if (!/[\\x00-\\x08\\x0e-\\x1f]{2}/.test(reader.result))\n                    text[i] = reader.result;\n                finishFile();\n            };\n            reader.readAsText(files[i]);\n        }\n    }\n    else {\n        dropText(view, event, event.dataTransfer.getData(\"Text\"), true);\n    }\n};\nhandlers.paste = (view, event) => {\n    if (view.state.readOnly)\n        return event.preventDefault();\n    view.observer.flush();\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    if (data) {\n        doPaste(view, data.getData(\"text/plain\"));\n        event.preventDefault();\n    }\n    else {\n        capturePaste(view);\n    }\n};\nfunction captureCopy(view, text) {\n    // The extra wrapper is somehow necessary on IE/Edge to prevent the\n    // content from being mangled when it is put onto the clipboard\n    let parent = view.dom.parentNode;\n    if (!parent)\n        return;\n    let target = parent.appendChild(document.createElement(\"textarea\"));\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.value = text;\n    target.focus();\n    target.selectionEnd = text.length;\n    target.selectionStart = 0;\n    setTimeout(() => {\n        target.remove();\n        view.focus();\n    }, 50);\n}\nfunction copiedRange(state) {\n    let content = [], ranges = [], linewise = false;\n    for (let range of state.selection.ranges)\n        if (!range.empty) {\n            content.push(state.sliceDoc(range.from, range.to));\n            ranges.push(range);\n        }\n    if (!content.length) {\n        // Nothing selected, do a line-wise copy\n        let upto = -1;\n        for (let { from } of state.selection.ranges) {\n            let line = state.doc.lineAt(from);\n            if (line.number > upto) {\n                content.push(line.text);\n                ranges.push({ from: line.from, to: Math.min(state.doc.length, line.to + 1) });\n            }\n            upto = line.number;\n        }\n        linewise = true;\n    }\n    return { text: content.join(state.lineBreak), ranges, linewise };\n}\nlet lastLinewiseCopy = null;\nhandlers.copy = handlers.cut = (view, event) => {\n    let { text, ranges, linewise } = copiedRange(view.state);\n    if (!text && !linewise)\n        return;\n    lastLinewiseCopy = linewise ? text : null;\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    if (data) {\n        event.preventDefault();\n        data.clearData();\n        data.setData(\"text/plain\", text);\n    }\n    else {\n        captureCopy(view, text);\n    }\n    if (event.type == \"cut\" && !view.state.readOnly)\n        view.dispatch({\n            changes: ranges,\n            scrollIntoView: true,\n            userEvent: \"delete.cut\"\n        });\n};\nfunction updateForFocusChange(view) {\n    setTimeout(() => {\n        if (view.hasFocus != view.inputState.notifiedFocused)\n            view.update([]);\n    }, 10);\n}\nhandlers.focus = updateForFocusChange;\nhandlers.blur = view => {\n    view.observer.clearSelectionRange();\n    updateForFocusChange(view);\n};\nfunction forceClearComposition(view, rapid) {\n    if (view.docView.compositionDeco.size) {\n        view.inputState.rapidCompositionStart = rapid;\n        try {\n            view.update([]);\n        }\n        finally {\n            view.inputState.rapidCompositionStart = false;\n        }\n    }\n}\nhandlers.compositionstart = handlers.compositionupdate = view => {\n    if (view.inputState.compositionFirstChange == null)\n        view.inputState.compositionFirstChange = true;\n    if (view.inputState.composing < 0) {\n        // FIXME possibly set a timeout to clear it again on Android\n        view.inputState.composing = 0;\n        if (view.docView.compositionDeco.size) {\n            view.observer.flush();\n            forceClearComposition(view, true);\n        }\n    }\n};\nhandlers.compositionend = view => {\n    view.inputState.composing = -1;\n    view.inputState.compositionEndedAt = Date.now();\n    view.inputState.compositionFirstChange = null;\n    setTimeout(() => {\n        if (view.inputState.composing < 0)\n            forceClearComposition(view, false);\n    }, 50);\n};\nhandlers.contextmenu = view => {\n    view.inputState.lastContextMenu = Date.now();\n};\nhandlers.beforeinput = (view, event) => {\n    var _a;\n    // Because Chrome Android doesn't fire useful key events, use\n    // beforeinput to detect backspace (and possibly enter and delete,\n    // but those usually don't even seem to fire beforeinput events at\n    // the moment) and fake a key event for it.\n    //\n    // (preventDefault on beforeinput, though supported in the spec,\n    // seems to do nothing at all on Chrome).\n    let pending;\n    if (browser.chrome && browser.android && (pending = PendingKeys.find(key => key.inputType == event.inputType))) {\n        view.observer.delayAndroidKey(pending.key, pending.keyCode);\n        if (pending.key == \"Backspace\" || pending.key == \"Delete\") {\n            let startViewHeight = ((_a = window.visualViewport) === null || _a === void 0 ? void 0 : _a.height) || 0;\n            setTimeout(() => {\n                var _a;\n                // Backspacing near uneditable nodes on Chrome Android sometimes\n                // closes the virtual keyboard. This tries to crudely detect\n                // that and refocus to get it back.\n                if ((((_a = window.visualViewport) === null || _a === void 0 ? void 0 : _a.height) || 0) > startViewHeight + 10 && view.hasFocus) {\n                    view.contentDOM.blur();\n                    view.focus();\n                }\n            }, 100);\n        }\n    }\n};\n\nconst wrappingWhiteSpace = [\"pre-wrap\", \"normal\", \"pre-line\", \"break-spaces\"];\nclass HeightOracle {\n    constructor() {\n        this.doc = Text.empty;\n        this.lineWrapping = false;\n        this.heightSamples = {};\n        this.lineHeight = 14;\n        this.charWidth = 7;\n        this.lineLength = 30;\n        // Used to track, during updateHeight, if any actual heights changed\n        this.heightChanged = false;\n    }\n    heightForGap(from, to) {\n        let lines = this.doc.lineAt(to).number - this.doc.lineAt(from).number + 1;\n        if (this.lineWrapping)\n            lines += Math.ceil(((to - from) - (lines * this.lineLength * 0.5)) / this.lineLength);\n        return this.lineHeight * lines;\n    }\n    heightForLine(length) {\n        if (!this.lineWrapping)\n            return this.lineHeight;\n        let lines = 1 + Math.max(0, Math.ceil((length - this.lineLength) / (this.lineLength - 5)));\n        return lines * this.lineHeight;\n    }\n    setDoc(doc) { this.doc = doc; return this; }\n    mustRefreshForWrapping(whiteSpace) {\n        return (wrappingWhiteSpace.indexOf(whiteSpace) > -1) != this.lineWrapping;\n    }\n    mustRefreshForHeights(lineHeights) {\n        let newHeight = false;\n        for (let i = 0; i < lineHeights.length; i++) {\n            let h = lineHeights[i];\n            if (h < 0) {\n                i++;\n            }\n            else if (!this.heightSamples[Math.floor(h * 10)]) { // Round to .1 pixels\n                newHeight = true;\n                this.heightSamples[Math.floor(h * 10)] = true;\n            }\n        }\n        return newHeight;\n    }\n    refresh(whiteSpace, lineHeight, charWidth, lineLength, knownHeights) {\n        let lineWrapping = wrappingWhiteSpace.indexOf(whiteSpace) > -1;\n        let changed = Math.round(lineHeight) != Math.round(this.lineHeight) || this.lineWrapping != lineWrapping;\n        this.lineWrapping = lineWrapping;\n        this.lineHeight = lineHeight;\n        this.charWidth = charWidth;\n        this.lineLength = lineLength;\n        if (changed) {\n            this.heightSamples = {};\n            for (let i = 0; i < knownHeights.length; i++) {\n                let h = knownHeights[i];\n                if (h < 0)\n                    i++;\n                else\n                    this.heightSamples[Math.floor(h * 10)] = true;\n            }\n        }\n        return changed;\n    }\n}\n// This object is used by `updateHeight` to make DOM measurements\n// arrive at the right nides. The `heights` array is a sequence of\n// block heights, starting from position `from`.\nclass MeasuredHeights {\n    constructor(from, heights) {\n        this.from = from;\n        this.heights = heights;\n        this.index = 0;\n    }\n    get more() { return this.index < this.heights.length; }\n}\n/**\nRecord used to represent information about a block-level element\nin the editor view.\n*/\nclass BlockInfo {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start of the element in the document.\n    */\n    from, \n    /**\n    The length of the element.\n    */\n    length, \n    /**\n    The top position of the element (relative to the top of the\n    document).\n    */\n    top, \n    /**\n    Its height.\n    */\n    height, \n    /**\n    The type of element this is. When querying lines, this may be\n    an array of all the blocks that make up the line.\n    */\n    type) {\n        this.from = from;\n        this.length = length;\n        this.top = top;\n        this.height = height;\n        this.type = type;\n    }\n    /**\n    The end of the element as a document position.\n    */\n    get to() { return this.from + this.length; }\n    /**\n    The bottom position of the element.\n    */\n    get bottom() { return this.top + this.height; }\n    /**\n    @internal\n    */\n    join(other) {\n        let detail = (Array.isArray(this.type) ? this.type : [this])\n            .concat(Array.isArray(other.type) ? other.type : [other]);\n        return new BlockInfo(this.from, this.length + other.length, this.top, this.height + other.height, detail);\n    }\n}\nvar QueryType = /*@__PURE__*/(function (QueryType) {\n    QueryType[QueryType[\"ByPos\"] = 0] = \"ByPos\";\n    QueryType[QueryType[\"ByHeight\"] = 1] = \"ByHeight\";\n    QueryType[QueryType[\"ByPosNoHeight\"] = 2] = \"ByPosNoHeight\";\nreturn QueryType})(QueryType || (QueryType = {}));\nconst Epsilon = 1e-3;\nclass HeightMap {\n    constructor(length, // The number of characters covered\n    height, // Height of this part of the document\n    flags = 2 /* Outdated */) {\n        this.length = length;\n        this.height = height;\n        this.flags = flags;\n    }\n    get outdated() { return (this.flags & 2 /* Outdated */) > 0; }\n    set outdated(value) { this.flags = (value ? 2 /* Outdated */ : 0) | (this.flags & ~2 /* Outdated */); }\n    setHeight(oracle, height) {\n        if (this.height != height) {\n            if (Math.abs(this.height - height) > Epsilon)\n                oracle.heightChanged = true;\n            this.height = height;\n        }\n    }\n    // Base case is to replace a leaf node, which simply builds a tree\n    // from the new nodes and returns that (HeightMapBranch and\n    // HeightMapGap override this to actually use from/to)\n    replace(_from, _to, nodes) {\n        return HeightMap.of(nodes);\n    }\n    // Again, these are base cases, and are overridden for branch and gap nodes.\n    decomposeLeft(_to, result) { result.push(this); }\n    decomposeRight(_from, result) { result.push(this); }\n    applyChanges(decorations, oldDoc, oracle, changes) {\n        let me = this;\n        for (let i = changes.length - 1; i >= 0; i--) {\n            let { fromA, toA, fromB, toB } = changes[i];\n            let start = me.lineAt(fromA, QueryType.ByPosNoHeight, oldDoc, 0, 0);\n            let end = start.to >= toA ? start : me.lineAt(toA, QueryType.ByPosNoHeight, oldDoc, 0, 0);\n            toB += end.to - toA;\n            toA = end.to;\n            while (i > 0 && start.from <= changes[i - 1].toA) {\n                fromA = changes[i - 1].fromA;\n                fromB = changes[i - 1].fromB;\n                i--;\n                if (fromA < start.from)\n                    start = me.lineAt(fromA, QueryType.ByPosNoHeight, oldDoc, 0, 0);\n            }\n            fromB += start.from - fromA;\n            fromA = start.from;\n            let nodes = NodeBuilder.build(oracle, decorations, fromB, toB);\n            me = me.replace(fromA, toA, nodes);\n        }\n        return me.updateHeight(oracle, 0);\n    }\n    static empty() { return new HeightMapText(0, 0); }\n    // nodes uses null values to indicate the position of line breaks.\n    // There are never line breaks at the start or end of the array, or\n    // two line breaks next to each other, and the array isn't allowed\n    // to be empty (same restrictions as return value from the builder).\n    static of(nodes) {\n        if (nodes.length == 1)\n            return nodes[0];\n        let i = 0, j = nodes.length, before = 0, after = 0;\n        for (;;) {\n            if (i == j) {\n                if (before > after * 2) {\n                    let split = nodes[i - 1];\n                    if (split.break)\n                        nodes.splice(--i, 1, split.left, null, split.right);\n                    else\n                        nodes.splice(--i, 1, split.left, split.right);\n                    j += 1 + split.break;\n                    before -= split.size;\n                }\n                else if (after > before * 2) {\n                    let split = nodes[j];\n                    if (split.break)\n                        nodes.splice(j, 1, split.left, null, split.right);\n                    else\n                        nodes.splice(j, 1, split.left, split.right);\n                    j += 2 + split.break;\n                    after -= split.size;\n                }\n                else {\n                    break;\n                }\n            }\n            else if (before < after) {\n                let next = nodes[i++];\n                if (next)\n                    before += next.size;\n            }\n            else {\n                let next = nodes[--j];\n                if (next)\n                    after += next.size;\n            }\n        }\n        let brk = 0;\n        if (nodes[i - 1] == null) {\n            brk = 1;\n            i--;\n        }\n        else if (nodes[i] == null) {\n            brk = 1;\n            j++;\n        }\n        return new HeightMapBranch(HeightMap.of(nodes.slice(0, i)), brk, HeightMap.of(nodes.slice(j)));\n    }\n}\nHeightMap.prototype.size = 1;\nclass HeightMapBlock extends HeightMap {\n    constructor(length, height, type) {\n        super(length, height);\n        this.type = type;\n    }\n    blockAt(_height, _doc, top, offset) {\n        return new BlockInfo(offset, this.length, top, this.height, this.type);\n    }\n    lineAt(_value, _type, doc, top, offset) {\n        return this.blockAt(0, doc, top, offset);\n    }\n    forEachLine(from, to, doc, top, offset, f) {\n        if (from <= offset + this.length && to >= offset)\n            f(this.blockAt(0, doc, top, offset));\n    }\n    updateHeight(oracle, offset = 0, _force = false, measured) {\n        if (measured && measured.from <= offset && measured.more)\n            this.setHeight(oracle, measured.heights[measured.index++]);\n        this.outdated = false;\n        return this;\n    }\n    toString() { return `block(${this.length})`; }\n}\nclass HeightMapText extends HeightMapBlock {\n    constructor(length, height) {\n        super(length, height, BlockType.Text);\n        this.collapsed = 0; // Amount of collapsed content in the line\n        this.widgetHeight = 0; // Maximum inline widget height\n    }\n    replace(_from, _to, nodes) {\n        let node = nodes[0];\n        if (nodes.length == 1 && (node instanceof HeightMapText || node instanceof HeightMapGap && (node.flags & 4 /* SingleLine */)) &&\n            Math.abs(this.length - node.length) < 10) {\n            if (node instanceof HeightMapGap)\n                node = new HeightMapText(node.length, this.height);\n            else\n                node.height = this.height;\n            if (!this.outdated)\n                node.outdated = false;\n            return node;\n        }\n        else {\n            return HeightMap.of(nodes);\n        }\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        if (measured && measured.from <= offset && measured.more)\n            this.setHeight(oracle, measured.heights[measured.index++]);\n        else if (force || this.outdated)\n            this.setHeight(oracle, Math.max(this.widgetHeight, oracle.heightForLine(this.length - this.collapsed)));\n        this.outdated = false;\n        return this;\n    }\n    toString() {\n        return `line(${this.length}${this.collapsed ? -this.collapsed : \"\"}${this.widgetHeight ? \":\" + this.widgetHeight : \"\"})`;\n    }\n}\nclass HeightMapGap extends HeightMap {\n    constructor(length) { super(length, 0); }\n    lines(doc, offset) {\n        let firstLine = doc.lineAt(offset).number, lastLine = doc.lineAt(offset + this.length).number;\n        return { firstLine, lastLine, lineHeight: this.height / (lastLine - firstLine + 1) };\n    }\n    blockAt(height, doc, top, offset) {\n        let { firstLine, lastLine, lineHeight } = this.lines(doc, offset);\n        let line = Math.max(0, Math.min(lastLine - firstLine, Math.floor((height - top) / lineHeight)));\n        let { from, length } = doc.line(firstLine + line);\n        return new BlockInfo(from, length, top + lineHeight * line, lineHeight, BlockType.Text);\n    }\n    lineAt(value, type, doc, top, offset) {\n        if (type == QueryType.ByHeight)\n            return this.blockAt(value, doc, top, offset);\n        if (type == QueryType.ByPosNoHeight) {\n            let { from, to } = doc.lineAt(value);\n            return new BlockInfo(from, to - from, 0, 0, BlockType.Text);\n        }\n        let { firstLine, lineHeight } = this.lines(doc, offset);\n        let { from, length, number } = doc.lineAt(value);\n        return new BlockInfo(from, length, top + lineHeight * (number - firstLine), lineHeight, BlockType.Text);\n    }\n    forEachLine(from, to, doc, top, offset, f) {\n        let { firstLine, lineHeight } = this.lines(doc, offset);\n        for (let pos = Math.max(from, offset), end = Math.min(offset + this.length, to); pos <= end;) {\n            let line = doc.lineAt(pos);\n            if (pos == from)\n                top += lineHeight * (line.number - firstLine);\n            f(new BlockInfo(line.from, line.length, top, lineHeight, BlockType.Text));\n            top += lineHeight;\n            pos = line.to + 1;\n        }\n    }\n    replace(from, to, nodes) {\n        let after = this.length - to;\n        if (after > 0) {\n            let last = nodes[nodes.length - 1];\n            if (last instanceof HeightMapGap)\n                nodes[nodes.length - 1] = new HeightMapGap(last.length + after);\n            else\n                nodes.push(null, new HeightMapGap(after - 1));\n        }\n        if (from > 0) {\n            let first = nodes[0];\n            if (first instanceof HeightMapGap)\n                nodes[0] = new HeightMapGap(from + first.length);\n            else\n                nodes.unshift(new HeightMapGap(from - 1), null);\n        }\n        return HeightMap.of(nodes);\n    }\n    decomposeLeft(to, result) {\n        result.push(new HeightMapGap(to - 1), null);\n    }\n    decomposeRight(from, result) {\n        result.push(null, new HeightMapGap(this.length - from - 1));\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        let end = offset + this.length;\n        if (measured && measured.from <= offset + this.length && measured.more) {\n            // Fill in part of this gap with measured lines. We know there\n            // can't be widgets or collapsed ranges in those lines, because\n            // they would already have been added to the heightmap (gaps\n            // only contain plain text).\n            let nodes = [], pos = Math.max(offset, measured.from), singleHeight = -1;\n            let wasChanged = oracle.heightChanged;\n            if (measured.from > offset)\n                nodes.push(new HeightMapGap(measured.from - offset - 1).updateHeight(oracle, offset));\n            while (pos <= end && measured.more) {\n                let len = oracle.doc.lineAt(pos).length;\n                if (nodes.length)\n                    nodes.push(null);\n                let height = measured.heights[measured.index++];\n                if (singleHeight == -1)\n                    singleHeight = height;\n                else if (Math.abs(height - singleHeight) >= Epsilon)\n                    singleHeight = -2;\n                let line = new HeightMapText(len, height);\n                line.outdated = false;\n                nodes.push(line);\n                pos += len + 1;\n            }\n            if (pos <= end)\n                nodes.push(null, new HeightMapGap(end - pos).updateHeight(oracle, pos));\n            let result = HeightMap.of(nodes);\n            oracle.heightChanged = wasChanged || singleHeight < 0 || Math.abs(result.height - this.height) >= Epsilon ||\n                Math.abs(singleHeight - this.lines(oracle.doc, offset).lineHeight) >= Epsilon;\n            return result;\n        }\n        else if (force || this.outdated) {\n            this.setHeight(oracle, oracle.heightForGap(offset, offset + this.length));\n            this.outdated = false;\n        }\n        return this;\n    }\n    toString() { return `gap(${this.length})`; }\n}\nclass HeightMapBranch extends HeightMap {\n    constructor(left, brk, right) {\n        super(left.length + brk + right.length, left.height + right.height, brk | (left.outdated || right.outdated ? 2 /* Outdated */ : 0));\n        this.left = left;\n        this.right = right;\n        this.size = left.size + right.size;\n    }\n    get break() { return this.flags & 1 /* Break */; }\n    blockAt(height, doc, top, offset) {\n        let mid = top + this.left.height;\n        return height < mid ? this.left.blockAt(height, doc, top, offset)\n            : this.right.blockAt(height, doc, mid, offset + this.left.length + this.break);\n    }\n    lineAt(value, type, doc, top, offset) {\n        let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break;\n        let left = type == QueryType.ByHeight ? value < rightTop : value < rightOffset;\n        let base = left ? this.left.lineAt(value, type, doc, top, offset)\n            : this.right.lineAt(value, type, doc, rightTop, rightOffset);\n        if (this.break || (left ? base.to < rightOffset : base.from > rightOffset))\n            return base;\n        let subQuery = type == QueryType.ByPosNoHeight ? QueryType.ByPosNoHeight : QueryType.ByPos;\n        if (left)\n            return base.join(this.right.lineAt(rightOffset, subQuery, doc, rightTop, rightOffset));\n        else\n            return this.left.lineAt(rightOffset, subQuery, doc, top, offset).join(base);\n    }\n    forEachLine(from, to, doc, top, offset, f) {\n        let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break;\n        if (this.break) {\n            if (from < rightOffset)\n                this.left.forEachLine(from, to, doc, top, offset, f);\n            if (to >= rightOffset)\n                this.right.forEachLine(from, to, doc, rightTop, rightOffset, f);\n        }\n        else {\n            let mid = this.lineAt(rightOffset, QueryType.ByPos, doc, top, offset);\n            if (from < mid.from)\n                this.left.forEachLine(from, mid.from - 1, doc, top, offset, f);\n            if (mid.to >= from && mid.from <= to)\n                f(mid);\n            if (to > mid.to)\n                this.right.forEachLine(mid.to + 1, to, doc, rightTop, rightOffset, f);\n        }\n    }\n    replace(from, to, nodes) {\n        let rightStart = this.left.length + this.break;\n        if (to < rightStart)\n            return this.balanced(this.left.replace(from, to, nodes), this.right);\n        if (from > this.left.length)\n            return this.balanced(this.left, this.right.replace(from - rightStart, to - rightStart, nodes));\n        let result = [];\n        if (from > 0)\n            this.decomposeLeft(from, result);\n        let left = result.length;\n        for (let node of nodes)\n            result.push(node);\n        if (from > 0)\n            mergeGaps(result, left - 1);\n        if (to < this.length) {\n            let right = result.length;\n            this.decomposeRight(to, result);\n            mergeGaps(result, right);\n        }\n        return HeightMap.of(result);\n    }\n    decomposeLeft(to, result) {\n        let left = this.left.length;\n        if (to <= left)\n            return this.left.decomposeLeft(to, result);\n        result.push(this.left);\n        if (this.break) {\n            left++;\n            if (to >= left)\n                result.push(null);\n        }\n        if (to > left)\n            this.right.decomposeLeft(to - left, result);\n    }\n    decomposeRight(from, result) {\n        let left = this.left.length, right = left + this.break;\n        if (from >= right)\n            return this.right.decomposeRight(from - right, result);\n        if (from < left)\n            this.left.decomposeRight(from, result);\n        if (this.break && from < right)\n            result.push(null);\n        result.push(this.right);\n    }\n    balanced(left, right) {\n        if (left.size > 2 * right.size || right.size > 2 * left.size)\n            return HeightMap.of(this.break ? [left, null, right] : [left, right]);\n        this.left = left;\n        this.right = right;\n        this.height = left.height + right.height;\n        this.outdated = left.outdated || right.outdated;\n        this.size = left.size + right.size;\n        this.length = left.length + this.break + right.length;\n        return this;\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        let { left, right } = this, rightStart = offset + left.length + this.break, rebalance = null;\n        if (measured && measured.from <= offset + left.length && measured.more)\n            rebalance = left = left.updateHeight(oracle, offset, force, measured);\n        else\n            left.updateHeight(oracle, offset, force);\n        if (measured && measured.from <= rightStart + right.length && measured.more)\n            rebalance = right = right.updateHeight(oracle, rightStart, force, measured);\n        else\n            right.updateHeight(oracle, rightStart, force);\n        if (rebalance)\n            return this.balanced(left, right);\n        this.height = this.left.height + this.right.height;\n        this.outdated = false;\n        return this;\n    }\n    toString() { return this.left + (this.break ? \" \" : \"-\") + this.right; }\n}\nfunction mergeGaps(nodes, around) {\n    let before, after;\n    if (nodes[around] == null &&\n        (before = nodes[around - 1]) instanceof HeightMapGap &&\n        (after = nodes[around + 1]) instanceof HeightMapGap)\n        nodes.splice(around - 1, 3, new HeightMapGap(before.length + 1 + after.length));\n}\nconst relevantWidgetHeight = 5;\nclass NodeBuilder {\n    constructor(pos, oracle) {\n        this.pos = pos;\n        this.oracle = oracle;\n        this.nodes = [];\n        this.lineStart = -1;\n        this.lineEnd = -1;\n        this.covering = null;\n        this.writtenTo = pos;\n    }\n    get isCovered() {\n        return this.covering && this.nodes[this.nodes.length - 1] == this.covering;\n    }\n    span(_from, to) {\n        if (this.lineStart > -1) {\n            let end = Math.min(to, this.lineEnd), last = this.nodes[this.nodes.length - 1];\n            if (last instanceof HeightMapText)\n                last.length += end - this.pos;\n            else if (end > this.pos || !this.isCovered)\n                this.nodes.push(new HeightMapText(end - this.pos, -1));\n            this.writtenTo = end;\n            if (to > end) {\n                this.nodes.push(null);\n                this.writtenTo++;\n                this.lineStart = -1;\n            }\n        }\n        this.pos = to;\n    }\n    point(from, to, deco) {\n        if (from < to || deco.heightRelevant) {\n            let height = deco.widget ? deco.widget.estimatedHeight : 0;\n            if (height < 0)\n                height = this.oracle.lineHeight;\n            let len = to - from;\n            if (deco.block) {\n                this.addBlock(new HeightMapBlock(len, height, deco.type));\n            }\n            else if (len || height >= relevantWidgetHeight) {\n                this.addLineDeco(height, len);\n            }\n        }\n        else if (to > from) {\n            this.span(from, to);\n        }\n        if (this.lineEnd > -1 && this.lineEnd < this.pos)\n            this.lineEnd = this.oracle.doc.lineAt(this.pos).to;\n    }\n    enterLine() {\n        if (this.lineStart > -1)\n            return;\n        let { from, to } = this.oracle.doc.lineAt(this.pos);\n        this.lineStart = from;\n        this.lineEnd = to;\n        if (this.writtenTo < from) {\n            if (this.writtenTo < from - 1 || this.nodes[this.nodes.length - 1] == null)\n                this.nodes.push(this.blankContent(this.writtenTo, from - 1));\n            this.nodes.push(null);\n        }\n        if (this.pos > from)\n            this.nodes.push(new HeightMapText(this.pos - from, -1));\n        this.writtenTo = this.pos;\n    }\n    blankContent(from, to) {\n        let gap = new HeightMapGap(to - from);\n        if (this.oracle.doc.lineAt(from).to == to)\n            gap.flags |= 4 /* SingleLine */;\n        return gap;\n    }\n    ensureLine() {\n        this.enterLine();\n        let last = this.nodes.length ? this.nodes[this.nodes.length - 1] : null;\n        if (last instanceof HeightMapText)\n            return last;\n        let line = new HeightMapText(0, -1);\n        this.nodes.push(line);\n        return line;\n    }\n    addBlock(block) {\n        this.enterLine();\n        if (block.type == BlockType.WidgetAfter && !this.isCovered)\n            this.ensureLine();\n        this.nodes.push(block);\n        this.writtenTo = this.pos = this.pos + block.length;\n        if (block.type != BlockType.WidgetBefore)\n            this.covering = block;\n    }\n    addLineDeco(height, length) {\n        let line = this.ensureLine();\n        line.length += length;\n        line.collapsed += length;\n        line.widgetHeight = Math.max(line.widgetHeight, height);\n        this.writtenTo = this.pos = this.pos + length;\n    }\n    finish(from) {\n        let last = this.nodes.length == 0 ? null : this.nodes[this.nodes.length - 1];\n        if (this.lineStart > -1 && !(last instanceof HeightMapText) && !this.isCovered)\n            this.nodes.push(new HeightMapText(0, -1));\n        else if (this.writtenTo < this.pos || last == null)\n            this.nodes.push(this.blankContent(this.writtenTo, this.pos));\n        let pos = from;\n        for (let node of this.nodes) {\n            if (node instanceof HeightMapText)\n                node.updateHeight(this.oracle, pos);\n            pos += node ? node.length : 1;\n        }\n        return this.nodes;\n    }\n    // Always called with a region that on both sides either stretches\n    // to a line break or the end of the document.\n    // The returned array uses null to indicate line breaks, but never\n    // starts or ends in a line break, or has multiple line breaks next\n    // to each other.\n    static build(oracle, decorations, from, to) {\n        let builder = new NodeBuilder(from, oracle);\n        RangeSet.spans(decorations, from, to, builder, 0);\n        return builder.finish(from);\n    }\n}\nfunction heightRelevantDecoChanges(a, b, diff) {\n    let comp = new DecorationComparator;\n    RangeSet.compare(a, b, diff, comp, 0);\n    return comp.changes;\n}\nclass DecorationComparator {\n    constructor() {\n        this.changes = [];\n    }\n    compareRange() { }\n    comparePoint(from, to, a, b) {\n        if (from < to || a && a.heightRelevant || b && b.heightRelevant)\n            addRange(from, to, this.changes, 5);\n    }\n}\n\nfunction visiblePixelRange(dom, paddingTop) {\n    let rect = dom.getBoundingClientRect();\n    let left = Math.max(0, rect.left), right = Math.min(innerWidth, rect.right);\n    let top = Math.max(0, rect.top), bottom = Math.min(innerHeight, rect.bottom);\n    let body = dom.ownerDocument.body;\n    for (let parent = dom.parentNode; parent && parent != body;) {\n        if (parent.nodeType == 1) {\n            let elt = parent;\n            let style = window.getComputedStyle(elt);\n            if ((elt.scrollHeight > elt.clientHeight || elt.scrollWidth > elt.clientWidth) &&\n                style.overflow != \"visible\") {\n                let parentRect = elt.getBoundingClientRect();\n                left = Math.max(left, parentRect.left);\n                right = Math.min(right, parentRect.right);\n                top = Math.max(top, parentRect.top);\n                bottom = Math.min(bottom, parentRect.bottom);\n            }\n            parent = style.position == \"absolute\" || style.position == \"fixed\" ? elt.offsetParent : elt.parentNode;\n        }\n        else if (parent.nodeType == 11) { // Shadow root\n            parent = parent.host;\n        }\n        else {\n            break;\n        }\n    }\n    return { left: left - rect.left, right: Math.max(left, right) - rect.left,\n        top: top - (rect.top + paddingTop), bottom: Math.max(top, bottom) - (rect.top + paddingTop) };\n}\nfunction fullPixelRange(dom, paddingTop) {\n    let rect = dom.getBoundingClientRect();\n    return { left: 0, right: rect.right - rect.left,\n        top: paddingTop, bottom: rect.bottom - (rect.top + paddingTop) };\n}\n// Line gaps are placeholder widgets used to hide pieces of overlong\n// lines within the viewport, as a kludge to keep the editor\n// responsive when a ridiculously long line is loaded into it.\nclass LineGap {\n    constructor(from, to, size) {\n        this.from = from;\n        this.to = to;\n        this.size = size;\n    }\n    static same(a, b) {\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++) {\n            let gA = a[i], gB = b[i];\n            if (gA.from != gB.from || gA.to != gB.to || gA.size != gB.size)\n                return false;\n        }\n        return true;\n    }\n    draw(wrapping) {\n        return Decoration.replace({ widget: new LineGapWidget(this.size, wrapping) }).range(this.from, this.to);\n    }\n}\nclass LineGapWidget extends WidgetType {\n    constructor(size, vertical) {\n        super();\n        this.size = size;\n        this.vertical = vertical;\n    }\n    eq(other) { return other.size == this.size && other.vertical == this.vertical; }\n    toDOM() {\n        let elt = document.createElement(\"div\");\n        if (this.vertical) {\n            elt.style.height = this.size + \"px\";\n        }\n        else {\n            elt.style.width = this.size + \"px\";\n            elt.style.height = \"2px\";\n            elt.style.display = \"inline-block\";\n        }\n        return elt;\n    }\n    get estimatedHeight() { return this.vertical ? this.size : -1; }\n}\nclass ViewState {\n    constructor(state) {\n        this.state = state;\n        // These are contentDOM-local coordinates\n        this.pixelViewport = { left: 0, right: window.innerWidth, top: 0, bottom: 0 };\n        this.inView = true;\n        this.paddingTop = 0;\n        this.paddingBottom = 0;\n        this.contentDOMWidth = 0;\n        this.contentDOMHeight = 0;\n        this.editorHeight = 0;\n        this.editorWidth = 0;\n        this.heightOracle = new HeightOracle;\n        // See VP.MaxDOMHeight\n        this.scaler = IdScaler;\n        this.scrollTarget = null;\n        // Briefly set to true when printing, to disable viewport limiting\n        this.printing = false;\n        // Flag set when editor content was redrawn, so that the next\n        // measure stage knows it must read DOM layout\n        this.mustMeasureContent = true;\n        this.defaultTextDirection = Direction.RTL;\n        this.visibleRanges = [];\n        // Cursor 'assoc' is only significant when the cursor is on a line\n        // wrap point, where it must stick to the character that it is\n        // associated with. Since browsers don't provide a reasonable\n        // interface to set or query this, when a selection is set that\n        // might cause this to be significant, this flag is set. The next\n        // measure phase will check whether the cursor is on a line-wrapping\n        // boundary and, if so, reset it to make sure it is positioned in\n        // the right place.\n        this.mustEnforceCursorAssoc = false;\n        this.stateDeco = state.facet(decorations).filter(d => typeof d != \"function\");\n        this.heightMap = HeightMap.empty().applyChanges(this.stateDeco, Text.empty, this.heightOracle.setDoc(state.doc), [new ChangedRange(0, 0, 0, state.doc.length)]);\n        this.viewport = this.getViewport(0, null);\n        this.updateViewportLines();\n        this.updateForViewport();\n        this.lineGaps = this.ensureLineGaps([]);\n        this.lineGapDeco = Decoration.set(this.lineGaps.map(gap => gap.draw(false)));\n        this.computeVisibleRanges();\n    }\n    updateForViewport() {\n        let viewports = [this.viewport], { main } = this.state.selection;\n        for (let i = 0; i <= 1; i++) {\n            let pos = i ? main.head : main.anchor;\n            if (!viewports.some(({ from, to }) => pos >= from && pos <= to)) {\n                let { from, to } = this.lineBlockAt(pos);\n                viewports.push(new Viewport(from, to));\n            }\n        }\n        this.viewports = viewports.sort((a, b) => a.from - b.from);\n        this.scaler = this.heightMap.height <= 7000000 /* MaxDOMHeight */ ? IdScaler :\n            new BigScaler(this.heightOracle.doc, this.heightMap, this.viewports);\n    }\n    updateViewportLines() {\n        this.viewportLines = [];\n        this.heightMap.forEachLine(this.viewport.from, this.viewport.to, this.state.doc, 0, 0, block => {\n            this.viewportLines.push(this.scaler.scale == 1 ? block : scaleBlock(block, this.scaler));\n        });\n    }\n    update(update, scrollTarget = null) {\n        this.state = update.state;\n        let prevDeco = this.stateDeco;\n        this.stateDeco = this.state.facet(decorations).filter(d => typeof d != \"function\");\n        let contentChanges = update.changedRanges;\n        let heightChanges = ChangedRange.extendWithRanges(contentChanges, heightRelevantDecoChanges(prevDeco, this.stateDeco, update ? update.changes : ChangeSet.empty(this.state.doc.length)));\n        let prevHeight = this.heightMap.height;\n        this.heightMap = this.heightMap.applyChanges(this.stateDeco, update.startState.doc, this.heightOracle.setDoc(this.state.doc), heightChanges);\n        if (this.heightMap.height != prevHeight)\n            update.flags |= 2 /* Height */;\n        let viewport = heightChanges.length ? this.mapViewport(this.viewport, update.changes) : this.viewport;\n        if (scrollTarget && (scrollTarget.range.head < viewport.from || scrollTarget.range.head > viewport.to) ||\n            !this.viewportIsAppropriate(viewport))\n            viewport = this.getViewport(0, scrollTarget);\n        let updateLines = !update.changes.empty || (update.flags & 2 /* Height */) ||\n            viewport.from != this.viewport.from || viewport.to != this.viewport.to;\n        this.viewport = viewport;\n        this.updateForViewport();\n        if (updateLines)\n            this.updateViewportLines();\n        if (this.lineGaps.length || this.viewport.to - this.viewport.from > 4000 /* DoubleMargin */)\n            this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps, update.changes)));\n        update.flags |= this.computeVisibleRanges();\n        if (scrollTarget)\n            this.scrollTarget = scrollTarget;\n        if (!this.mustEnforceCursorAssoc && update.selectionSet && update.view.lineWrapping &&\n            update.state.selection.main.empty && update.state.selection.main.assoc)\n            this.mustEnforceCursorAssoc = true;\n    }\n    measure(view) {\n        let dom = view.contentDOM, style = window.getComputedStyle(dom);\n        let oracle = this.heightOracle;\n        let whiteSpace = style.whiteSpace;\n        this.defaultTextDirection = style.direction == \"rtl\" ? Direction.RTL : Direction.LTR;\n        let refresh = this.heightOracle.mustRefreshForWrapping(whiteSpace);\n        let measureContent = refresh || this.mustMeasureContent || this.contentDOMHeight != dom.clientHeight;\n        this.contentDOMHeight = dom.clientHeight;\n        this.mustMeasureContent = false;\n        let result = 0, bias = 0;\n        // Vertical padding\n        let paddingTop = parseInt(style.paddingTop) || 0, paddingBottom = parseInt(style.paddingBottom) || 0;\n        if (this.paddingTop != paddingTop || this.paddingBottom != paddingBottom) {\n            this.paddingTop = paddingTop;\n            this.paddingBottom = paddingBottom;\n            result |= 8 /* Geometry */ | 2 /* Height */;\n        }\n        if (this.editorWidth != view.scrollDOM.clientWidth) {\n            if (oracle.lineWrapping)\n                measureContent = true;\n            this.editorWidth = view.scrollDOM.clientWidth;\n            result |= 8 /* Geometry */;\n        }\n        // Pixel viewport\n        let pixelViewport = (this.printing ? fullPixelRange : visiblePixelRange)(dom, this.paddingTop);\n        let dTop = pixelViewport.top - this.pixelViewport.top, dBottom = pixelViewport.bottom - this.pixelViewport.bottom;\n        this.pixelViewport = pixelViewport;\n        let inView = this.pixelViewport.bottom > this.pixelViewport.top && this.pixelViewport.right > this.pixelViewport.left;\n        if (inView != this.inView) {\n            this.inView = inView;\n            if (inView)\n                measureContent = true;\n        }\n        if (!this.inView)\n            return 0;\n        let contentWidth = dom.clientWidth;\n        if (this.contentDOMWidth != contentWidth || this.editorHeight != view.scrollDOM.clientHeight) {\n            this.contentDOMWidth = contentWidth;\n            this.editorHeight = view.scrollDOM.clientHeight;\n            result |= 8 /* Geometry */;\n        }\n        if (measureContent) {\n            let lineHeights = view.docView.measureVisibleLineHeights(this.viewport);\n            if (oracle.mustRefreshForHeights(lineHeights))\n                refresh = true;\n            if (refresh || oracle.lineWrapping && Math.abs(contentWidth - this.contentDOMWidth) > oracle.charWidth) {\n                let { lineHeight, charWidth } = view.docView.measureTextSize();\n                refresh = oracle.refresh(whiteSpace, lineHeight, charWidth, contentWidth / charWidth, lineHeights);\n                if (refresh) {\n                    view.docView.minWidth = 0;\n                    result |= 8 /* Geometry */;\n                }\n            }\n            if (dTop > 0 && dBottom > 0)\n                bias = Math.max(dTop, dBottom);\n            else if (dTop < 0 && dBottom < 0)\n                bias = Math.min(dTop, dBottom);\n            oracle.heightChanged = false;\n            for (let vp of this.viewports) {\n                let heights = vp.from == this.viewport.from ? lineHeights : view.docView.measureVisibleLineHeights(vp);\n                this.heightMap = this.heightMap.updateHeight(oracle, 0, refresh, new MeasuredHeights(vp.from, heights));\n            }\n            if (oracle.heightChanged)\n                result |= 2 /* Height */;\n        }\n        let viewportChange = !this.viewportIsAppropriate(this.viewport, bias) ||\n            this.scrollTarget && (this.scrollTarget.range.head < this.viewport.from || this.scrollTarget.range.head > this.viewport.to);\n        if (viewportChange)\n            this.viewport = this.getViewport(bias, this.scrollTarget);\n        this.updateForViewport();\n        if ((result & 2 /* Height */) || viewportChange)\n            this.updateViewportLines();\n        if (this.lineGaps.length || this.viewport.to - this.viewport.from > 4000 /* DoubleMargin */)\n            this.updateLineGaps(this.ensureLineGaps(refresh ? [] : this.lineGaps));\n        result |= this.computeVisibleRanges();\n        if (this.mustEnforceCursorAssoc) {\n            this.mustEnforceCursorAssoc = false;\n            // This is done in the read stage, because moving the selection\n            // to a line end is going to trigger a layout anyway, so it\n            // can't be a pure write. It should be rare that it does any\n            // writing.\n            view.docView.enforceCursorAssoc();\n        }\n        return result;\n    }\n    get visibleTop() { return this.scaler.fromDOM(this.pixelViewport.top); }\n    get visibleBottom() { return this.scaler.fromDOM(this.pixelViewport.bottom); }\n    getViewport(bias, scrollTarget) {\n        // This will divide VP.Margin between the top and the\n        // bottom, depending on the bias (the change in viewport position\n        // since the last update). It'll hold a number between 0 and 1\n        let marginTop = 0.5 - Math.max(-0.5, Math.min(0.5, bias / 1000 /* Margin */ / 2));\n        let map = this.heightMap, doc = this.state.doc, { visibleTop, visibleBottom } = this;\n        let viewport = new Viewport(map.lineAt(visibleTop - marginTop * 1000 /* Margin */, QueryType.ByHeight, doc, 0, 0).from, map.lineAt(visibleBottom + (1 - marginTop) * 1000 /* Margin */, QueryType.ByHeight, doc, 0, 0).to);\n        // If scrollTarget is given, make sure the viewport includes that position\n        if (scrollTarget) {\n            let { head } = scrollTarget.range;\n            if (head < viewport.from || head > viewport.to) {\n                let viewHeight = Math.min(this.editorHeight, this.pixelViewport.bottom - this.pixelViewport.top);\n                let block = map.lineAt(head, QueryType.ByPos, doc, 0, 0), topPos;\n                if (scrollTarget.y == \"center\")\n                    topPos = (block.top + block.bottom) / 2 - viewHeight / 2;\n                else if (scrollTarget.y == \"start\" || scrollTarget.y == \"nearest\" && head < viewport.from)\n                    topPos = block.top;\n                else\n                    topPos = block.bottom - viewHeight;\n                viewport = new Viewport(map.lineAt(topPos - 1000 /* Margin */ / 2, QueryType.ByHeight, doc, 0, 0).from, map.lineAt(topPos + viewHeight + 1000 /* Margin */ / 2, QueryType.ByHeight, doc, 0, 0).to);\n            }\n        }\n        return viewport;\n    }\n    mapViewport(viewport, changes) {\n        let from = changes.mapPos(viewport.from, -1), to = changes.mapPos(viewport.to, 1);\n        return new Viewport(this.heightMap.lineAt(from, QueryType.ByPos, this.state.doc, 0, 0).from, this.heightMap.lineAt(to, QueryType.ByPos, this.state.doc, 0, 0).to);\n    }\n    // Checks if a given viewport covers the visible part of the\n    // document and not too much beyond that.\n    viewportIsAppropriate({ from, to }, bias = 0) {\n        if (!this.inView)\n            return true;\n        let { top } = this.heightMap.lineAt(from, QueryType.ByPos, this.state.doc, 0, 0);\n        let { bottom } = this.heightMap.lineAt(to, QueryType.ByPos, this.state.doc, 0, 0);\n        let { visibleTop, visibleBottom } = this;\n        return (from == 0 || top <= visibleTop - Math.max(10 /* MinCoverMargin */, Math.min(-bias, 250 /* MaxCoverMargin */))) &&\n            (to == this.state.doc.length ||\n                bottom >= visibleBottom + Math.max(10 /* MinCoverMargin */, Math.min(bias, 250 /* MaxCoverMargin */))) &&\n            (top > visibleTop - 2 * 1000 /* Margin */ && bottom < visibleBottom + 2 * 1000 /* Margin */);\n    }\n    mapLineGaps(gaps, changes) {\n        if (!gaps.length || changes.empty)\n            return gaps;\n        let mapped = [];\n        for (let gap of gaps)\n            if (!changes.touchesRange(gap.from, gap.to))\n                mapped.push(new LineGap(changes.mapPos(gap.from), changes.mapPos(gap.to), gap.size));\n        return mapped;\n    }\n    // Computes positions in the viewport where the start or end of a\n    // line should be hidden, trying to reuse existing line gaps when\n    // appropriate to avoid unneccesary redraws.\n    // Uses crude character-counting for the positioning and sizing,\n    // since actual DOM coordinates aren't always available and\n    // predictable. Relies on generous margins (see LG.Margin) to hide\n    // the artifacts this might produce from the user.\n    ensureLineGaps(current) {\n        let gaps = [];\n        // This won't work at all in predominantly right-to-left text.\n        if (this.defaultTextDirection != Direction.LTR)\n            return gaps;\n        for (let line of this.viewportLines) {\n            if (line.length < 4000 /* DoubleMargin */)\n                continue;\n            let structure = lineStructure(line.from, line.to, this.stateDeco);\n            if (structure.total < 4000 /* DoubleMargin */)\n                continue;\n            let viewFrom, viewTo;\n            if (this.heightOracle.lineWrapping) {\n                let marginHeight = (2000 /* Margin */ / this.heightOracle.lineLength) * this.heightOracle.lineHeight;\n                viewFrom = findPosition(structure, (this.visibleTop - line.top - marginHeight) / line.height);\n                viewTo = findPosition(structure, (this.visibleBottom - line.top + marginHeight) / line.height);\n            }\n            else {\n                let totalWidth = structure.total * this.heightOracle.charWidth;\n                let marginWidth = 2000 /* Margin */ * this.heightOracle.charWidth;\n                viewFrom = findPosition(structure, (this.pixelViewport.left - marginWidth) / totalWidth);\n                viewTo = findPosition(structure, (this.pixelViewport.right + marginWidth) / totalWidth);\n            }\n            let outside = [];\n            if (viewFrom > line.from)\n                outside.push({ from: line.from, to: viewFrom });\n            if (viewTo < line.to)\n                outside.push({ from: viewTo, to: line.to });\n            let sel = this.state.selection.main;\n            // Make sure the gaps don't cover a selection end\n            if (sel.from >= line.from && sel.from <= line.to)\n                cutRange(outside, sel.from - 10 /* SelectionMargin */, sel.from + 10 /* SelectionMargin */);\n            if (!sel.empty && sel.to >= line.from && sel.to <= line.to)\n                cutRange(outside, sel.to - 10 /* SelectionMargin */, sel.to + 10 /* SelectionMargin */);\n            for (let { from, to } of outside)\n                if (to - from > 1000 /* HalfMargin */) {\n                    gaps.push(find(current, gap => gap.from >= line.from && gap.to <= line.to &&\n                        Math.abs(gap.from - from) < 1000 /* HalfMargin */ && Math.abs(gap.to - to) < 1000 /* HalfMargin */) ||\n                        new LineGap(from, to, this.gapSize(line, from, to, structure)));\n                }\n        }\n        return gaps;\n    }\n    gapSize(line, from, to, structure) {\n        let fraction = findFraction(structure, to) - findFraction(structure, from);\n        if (this.heightOracle.lineWrapping) {\n            return line.height * fraction;\n        }\n        else {\n            return structure.total * this.heightOracle.charWidth * fraction;\n        }\n    }\n    updateLineGaps(gaps) {\n        if (!LineGap.same(gaps, this.lineGaps)) {\n            this.lineGaps = gaps;\n            this.lineGapDeco = Decoration.set(gaps.map(gap => gap.draw(this.heightOracle.lineWrapping)));\n        }\n    }\n    computeVisibleRanges() {\n        let deco = this.stateDeco;\n        if (this.lineGaps.length)\n            deco = deco.concat(this.lineGapDeco);\n        let ranges = [];\n        RangeSet.spans(deco, this.viewport.from, this.viewport.to, {\n            span(from, to) { ranges.push({ from, to }); },\n            point() { }\n        }, 20);\n        let changed = ranges.length != this.visibleRanges.length ||\n            this.visibleRanges.some((r, i) => r.from != ranges[i].from || r.to != ranges[i].to);\n        this.visibleRanges = ranges;\n        return changed ? 4 /* Viewport */ : 0;\n    }\n    lineBlockAt(pos) {\n        return (pos >= this.viewport.from && pos <= this.viewport.to && this.viewportLines.find(b => b.from <= pos && b.to >= pos)) ||\n            scaleBlock(this.heightMap.lineAt(pos, QueryType.ByPos, this.state.doc, 0, 0), this.scaler);\n    }\n    lineBlockAtHeight(height) {\n        return scaleBlock(this.heightMap.lineAt(this.scaler.fromDOM(height), QueryType.ByHeight, this.state.doc, 0, 0), this.scaler);\n    }\n    elementAtHeight(height) {\n        return scaleBlock(this.heightMap.blockAt(this.scaler.fromDOM(height), this.state.doc, 0, 0), this.scaler);\n    }\n    get docHeight() {\n        return this.scaler.toDOM(this.heightMap.height);\n    }\n    get contentHeight() {\n        return this.docHeight + this.paddingTop + this.paddingBottom;\n    }\n}\nclass Viewport {\n    constructor(from, to) {\n        this.from = from;\n        this.to = to;\n    }\n}\nfunction lineStructure(from, to, stateDeco) {\n    let ranges = [], pos = from, total = 0;\n    RangeSet.spans(stateDeco, from, to, {\n        span() { },\n        point(from, to) {\n            if (from > pos) {\n                ranges.push({ from: pos, to: from });\n                total += from - pos;\n            }\n            pos = to;\n        }\n    }, 20); // We're only interested in collapsed ranges of a significant size\n    if (pos < to) {\n        ranges.push({ from: pos, to });\n        total += to - pos;\n    }\n    return { total, ranges };\n}\nfunction findPosition({ total, ranges }, ratio) {\n    if (ratio <= 0)\n        return ranges[0].from;\n    if (ratio >= 1)\n        return ranges[ranges.length - 1].to;\n    let dist = Math.floor(total * ratio);\n    for (let i = 0;; i++) {\n        let { from, to } = ranges[i], size = to - from;\n        if (dist <= size)\n            return from + dist;\n        dist -= size;\n    }\n}\nfunction findFraction(structure, pos) {\n    let counted = 0;\n    for (let { from, to } of structure.ranges) {\n        if (pos <= to) {\n            counted += pos - from;\n            break;\n        }\n        counted += to - from;\n    }\n    return counted / structure.total;\n}\nfunction cutRange(ranges, from, to) {\n    for (let i = 0; i < ranges.length; i++) {\n        let r = ranges[i];\n        if (r.from < to && r.to > from) {\n            let pieces = [];\n            if (r.from < from)\n                pieces.push({ from: r.from, to: from });\n            if (r.to > to)\n                pieces.push({ from: to, to: r.to });\n            ranges.splice(i, 1, ...pieces);\n            i += pieces.length - 1;\n        }\n    }\n}\nfunction find(array, f) {\n    for (let val of array)\n        if (f(val))\n            return val;\n    return undefined;\n}\n// Don't scale when the document height is within the range of what\n// the DOM can handle.\nconst IdScaler = {\n    toDOM(n) { return n; },\n    fromDOM(n) { return n; },\n    scale: 1\n};\n// When the height is too big (> VP.MaxDOMHeight), scale down the\n// regions outside the viewports so that the total height is\n// VP.MaxDOMHeight.\nclass BigScaler {\n    constructor(doc, heightMap, viewports) {\n        let vpHeight = 0, base = 0, domBase = 0;\n        this.viewports = viewports.map(({ from, to }) => {\n            let top = heightMap.lineAt(from, QueryType.ByPos, doc, 0, 0).top;\n            let bottom = heightMap.lineAt(to, QueryType.ByPos, doc, 0, 0).bottom;\n            vpHeight += bottom - top;\n            return { from, to, top, bottom, domTop: 0, domBottom: 0 };\n        });\n        this.scale = (7000000 /* MaxDOMHeight */ - vpHeight) / (heightMap.height - vpHeight);\n        for (let obj of this.viewports) {\n            obj.domTop = domBase + (obj.top - base) * this.scale;\n            domBase = obj.domBottom = obj.domTop + (obj.bottom - obj.top);\n            base = obj.bottom;\n        }\n    }\n    toDOM(n) {\n        for (let i = 0, base = 0, domBase = 0;; i++) {\n            let vp = i < this.viewports.length ? this.viewports[i] : null;\n            if (!vp || n < vp.top)\n                return domBase + (n - base) * this.scale;\n            if (n <= vp.bottom)\n                return vp.domTop + (n - vp.top);\n            base = vp.bottom;\n            domBase = vp.domBottom;\n        }\n    }\n    fromDOM(n) {\n        for (let i = 0, base = 0, domBase = 0;; i++) {\n            let vp = i < this.viewports.length ? this.viewports[i] : null;\n            if (!vp || n < vp.domTop)\n                return base + (n - domBase) / this.scale;\n            if (n <= vp.domBottom)\n                return vp.top + (n - vp.domTop);\n            base = vp.bottom;\n            domBase = vp.domBottom;\n        }\n    }\n}\nfunction scaleBlock(block, scaler) {\n    if (scaler.scale == 1)\n        return block;\n    let bTop = scaler.toDOM(block.top), bBottom = scaler.toDOM(block.bottom);\n    return new BlockInfo(block.from, block.length, bTop, bBottom - bTop, Array.isArray(block.type) ? block.type.map(b => scaleBlock(b, scaler)) : block.type);\n}\n\nconst theme = /*@__PURE__*/Facet.define({ combine: strs => strs.join(\" \") });\nconst darkTheme = /*@__PURE__*/Facet.define({ combine: values => values.indexOf(true) > -1 });\nconst baseThemeID = /*@__PURE__*/StyleModule.newName(), baseLightID = /*@__PURE__*/StyleModule.newName(), baseDarkID = /*@__PURE__*/StyleModule.newName();\nconst lightDarkIDs = { \"&light\": \".\" + baseLightID, \"&dark\": \".\" + baseDarkID };\nfunction buildTheme(main, spec, scopes) {\n    return new StyleModule(spec, {\n        finish(sel) {\n            return /&/.test(sel) ? sel.replace(/&\\w*/, m => {\n                if (m == \"&\")\n                    return main;\n                if (!scopes || !scopes[m])\n                    throw new RangeError(`Unsupported selector: ${m}`);\n                return scopes[m];\n            }) : main + \" \" + sel;\n        }\n    });\n}\nconst baseTheme$1 = /*@__PURE__*/buildTheme(\".\" + baseThemeID, {\n    \"&.cm-editor\": {\n        position: \"relative !important\",\n        boxSizing: \"border-box\",\n        \"&.cm-focused\": {\n            // Provide a simple default outline to make sure a focused\n            // editor is visually distinct. Can't leave the default behavior\n            // because that will apply to the content element, which is\n            // inside the scrollable container and doesn't include the\n            // gutters. We also can't use an 'auto' outline, since those\n            // are, for some reason, drawn behind the element content, which\n            // will cause things like the active line background to cover\n            // the outline (#297).\n            outline: \"1px dotted #212121\"\n        },\n        display: \"flex !important\",\n        flexDirection: \"column\"\n    },\n    \".cm-scroller\": {\n        display: \"flex !important\",\n        alignItems: \"flex-start !important\",\n        fontFamily: \"monospace\",\n        lineHeight: 1.4,\n        height: \"100%\",\n        overflowX: \"auto\",\n        position: \"relative\",\n        zIndex: 0\n    },\n    \".cm-content\": {\n        margin: 0,\n        flexGrow: 2,\n        minHeight: \"100%\",\n        display: \"block\",\n        whiteSpace: \"pre\",\n        wordWrap: \"normal\",\n        boxSizing: \"border-box\",\n        padding: \"4px 0\",\n        outline: \"none\",\n        \"&[contenteditable=true]\": {\n            WebkitUserModify: \"read-write-plaintext-only\",\n        }\n    },\n    \".cm-lineWrapping\": {\n        whiteSpace_fallback: \"pre-wrap\",\n        whiteSpace: \"break-spaces\",\n        wordBreak: \"break-word\",\n        overflowWrap: \"anywhere\"\n    },\n    \"&light .cm-content\": { caretColor: \"black\" },\n    \"&dark .cm-content\": { caretColor: \"white\" },\n    \".cm-line\": {\n        display: \"block\",\n        padding: \"0 2px 0 4px\"\n    },\n    \".cm-selectionLayer\": {\n        zIndex: -1,\n        contain: \"size style\"\n    },\n    \".cm-selectionBackground\": {\n        position: \"absolute\",\n    },\n    \"&light .cm-selectionBackground\": {\n        background: \"#d9d9d9\"\n    },\n    \"&dark .cm-selectionBackground\": {\n        background: \"#222\"\n    },\n    \"&light.cm-focused .cm-selectionBackground\": {\n        background: \"#d7d4f0\"\n    },\n    \"&dark.cm-focused .cm-selectionBackground\": {\n        background: \"#233\"\n    },\n    \".cm-cursorLayer\": {\n        zIndex: 100,\n        contain: \"size style\",\n        pointerEvents: \"none\"\n    },\n    \"&.cm-focused .cm-cursorLayer\": {\n        animation: \"steps(1) cm-blink 1.2s infinite\"\n    },\n    // Two animations defined so that we can switch between them to\n    // restart the animation without forcing another style\n    // recomputation.\n    \"@keyframes cm-blink\": { \"0%\": {}, \"50%\": { visibility: \"hidden\" }, \"100%\": {} },\n    \"@keyframes cm-blink2\": { \"0%\": {}, \"50%\": { visibility: \"hidden\" }, \"100%\": {} },\n    \".cm-cursor, .cm-dropCursor\": {\n        position: \"absolute\",\n        borderLeft: \"1.2px solid black\",\n        marginLeft: \"-0.6px\",\n        pointerEvents: \"none\",\n    },\n    \".cm-cursor\": {\n        display: \"none\"\n    },\n    \"&dark .cm-cursor\": {\n        borderLeftColor: \"#444\"\n    },\n    \"&.cm-focused .cm-cursor\": {\n        display: \"block\"\n    },\n    \"&light .cm-activeLine\": { backgroundColor: \"#f3f9ff\" },\n    \"&dark .cm-activeLine\": { backgroundColor: \"#223039\" },\n    \"&light .cm-specialChar\": { color: \"red\" },\n    \"&dark .cm-specialChar\": { color: \"#f78\" },\n    \".cm-gutters\": {\n        display: \"flex\",\n        height: \"100%\",\n        boxSizing: \"border-box\",\n        left: 0,\n        zIndex: 200\n    },\n    \"&light .cm-gutters\": {\n        backgroundColor: \"#f5f5f5\",\n        color: \"#6c6c6c\",\n        borderRight: \"1px solid #ddd\"\n    },\n    \"&dark .cm-gutters\": {\n        backgroundColor: \"#333338\",\n        color: \"#ccc\"\n    },\n    \".cm-gutter\": {\n        display: \"flex !important\",\n        flexDirection: \"column\",\n        flexShrink: 0,\n        boxSizing: \"border-box\",\n        minHeight: \"100%\",\n        overflow: \"hidden\"\n    },\n    \".cm-gutterElement\": {\n        boxSizing: \"border-box\"\n    },\n    \".cm-lineNumbers .cm-gutterElement\": {\n        padding: \"0 3px 0 5px\",\n        minWidth: \"20px\",\n        textAlign: \"right\",\n        whiteSpace: \"nowrap\"\n    },\n    \"&light .cm-activeLineGutter\": {\n        backgroundColor: \"#e2f2ff\"\n    },\n    \"&dark .cm-activeLineGutter\": {\n        backgroundColor: \"#222227\"\n    },\n    \".cm-panels\": {\n        boxSizing: \"border-box\",\n        position: \"sticky\",\n        left: 0,\n        right: 0\n    },\n    \"&light .cm-panels\": {\n        backgroundColor: \"#f5f5f5\",\n        color: \"black\"\n    },\n    \"&light .cm-panels-top\": {\n        borderBottom: \"1px solid #ddd\"\n    },\n    \"&light .cm-panels-bottom\": {\n        borderTop: \"1px solid #ddd\"\n    },\n    \"&dark .cm-panels\": {\n        backgroundColor: \"#333338\",\n        color: \"white\"\n    },\n    \".cm-tab\": {\n        display: \"inline-block\",\n        overflow: \"hidden\",\n        verticalAlign: \"bottom\"\n    },\n    \".cm-widgetBuffer\": {\n        verticalAlign: \"text-top\",\n        height: \"1em\",\n        display: \"inline\"\n    },\n    \".cm-placeholder\": {\n        color: \"#888\",\n        display: \"inline-block\",\n        verticalAlign: \"top\",\n    },\n    \".cm-button\": {\n        verticalAlign: \"middle\",\n        color: \"inherit\",\n        fontSize: \"70%\",\n        padding: \".2em 1em\",\n        borderRadius: \"1px\"\n    },\n    \"&light .cm-button\": {\n        backgroundImage: \"linear-gradient(#eff1f5, #d9d9df)\",\n        border: \"1px solid #888\",\n        \"&:active\": {\n            backgroundImage: \"linear-gradient(#b4b4b4, #d0d3d6)\"\n        }\n    },\n    \"&dark .cm-button\": {\n        backgroundImage: \"linear-gradient(#393939, #111)\",\n        border: \"1px solid #888\",\n        \"&:active\": {\n            backgroundImage: \"linear-gradient(#111, #333)\"\n        }\n    },\n    \".cm-textfield\": {\n        verticalAlign: \"middle\",\n        color: \"inherit\",\n        fontSize: \"70%\",\n        border: \"1px solid silver\",\n        padding: \".2em .5em\"\n    },\n    \"&light .cm-textfield\": {\n        backgroundColor: \"white\"\n    },\n    \"&dark .cm-textfield\": {\n        border: \"1px solid #555\",\n        backgroundColor: \"inherit\"\n    }\n}, lightDarkIDs);\n\nconst observeOptions = {\n    childList: true,\n    characterData: true,\n    subtree: true,\n    attributes: true,\n    characterDataOldValue: true\n};\n// IE11 has very broken mutation observers, so we also listen to\n// DOMCharacterDataModified there\nconst useCharData = browser.ie && browser.ie_version <= 11;\nclass DOMObserver {\n    constructor(view, onChange, onScrollChanged) {\n        this.view = view;\n        this.onChange = onChange;\n        this.onScrollChanged = onScrollChanged;\n        this.active = false;\n        // The known selection. Kept in our own object, as opposed to just\n        // directly accessing the selection because:\n        //  - Safari doesn't report the right selection in shadow DOM\n        //  - Reading from the selection forces a DOM layout\n        //  - This way, we can ignore selectionchange events if we have\n        //    already seen the 'new' selection\n        this.selectionRange = new DOMSelectionState;\n        // Set when a selection change is detected, cleared on flush\n        this.selectionChanged = false;\n        this.delayedFlush = -1;\n        this.resizeTimeout = -1;\n        this.queue = [];\n        this.delayedAndroidKey = null;\n        this.scrollTargets = [];\n        this.intersection = null;\n        this.resize = null;\n        this.intersecting = false;\n        this.gapIntersection = null;\n        this.gaps = [];\n        // Timeout for scheduling check of the parents that need scroll handlers\n        this.parentCheck = -1;\n        this.dom = view.contentDOM;\n        this.observer = new MutationObserver(mutations => {\n            for (let mut of mutations)\n                this.queue.push(mut);\n            // IE11 will sometimes (on typing over a selection or\n            // backspacing out a single character text node) call the\n            // observer callback before actually updating the DOM.\n            //\n            // Unrelatedly, iOS Safari will, when ending a composition,\n            // sometimes first clear it, deliver the mutations, and then\n            // reinsert the finished text. CodeMirror's handling of the\n            // deletion will prevent the reinsertion from happening,\n            // breaking composition.\n            if ((browser.ie && browser.ie_version <= 11 || browser.ios && view.composing) &&\n                mutations.some(m => m.type == \"childList\" && m.removedNodes.length ||\n                    m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n                this.flushSoon();\n            else\n                this.flush();\n        });\n        if (useCharData)\n            this.onCharData = (event) => {\n                this.queue.push({ target: event.target,\n                    type: \"characterData\",\n                    oldValue: event.prevValue });\n                this.flushSoon();\n            };\n        this.onSelectionChange = this.onSelectionChange.bind(this);\n        window.addEventListener(\"resize\", this.onResize = this.onResize.bind(this));\n        if (typeof ResizeObserver == \"function\") {\n            this.resize = new ResizeObserver(() => {\n                if (this.view.docView.lastUpdate < Date.now() - 75)\n                    this.onResize();\n            });\n            this.resize.observe(view.scrollDOM);\n        }\n        window.addEventListener(\"beforeprint\", this.onPrint = this.onPrint.bind(this));\n        this.start();\n        window.addEventListener(\"scroll\", this.onScroll = this.onScroll.bind(this));\n        if (typeof IntersectionObserver == \"function\") {\n            this.intersection = new IntersectionObserver(entries => {\n                if (this.parentCheck < 0)\n                    this.parentCheck = setTimeout(this.listenForScroll.bind(this), 1000);\n                if (entries.length > 0 && (entries[entries.length - 1].intersectionRatio > 0) != this.intersecting) {\n                    this.intersecting = !this.intersecting;\n                    if (this.intersecting != this.view.inView)\n                        this.onScrollChanged(document.createEvent(\"Event\"));\n                }\n            }, {});\n            this.intersection.observe(this.dom);\n            this.gapIntersection = new IntersectionObserver(entries => {\n                if (entries.length > 0 && entries[entries.length - 1].intersectionRatio > 0)\n                    this.onScrollChanged(document.createEvent(\"Event\"));\n            }, {});\n        }\n        this.listenForScroll();\n        this.readSelectionRange();\n        this.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    onScroll(e) {\n        if (this.intersecting)\n            this.flush(false);\n        this.onScrollChanged(e);\n    }\n    onResize() {\n        if (this.resizeTimeout < 0)\n            this.resizeTimeout = setTimeout(() => {\n                this.resizeTimeout = -1;\n                this.view.requestMeasure();\n            }, 50);\n    }\n    onPrint() {\n        this.view.viewState.printing = true;\n        this.view.measure();\n        setTimeout(() => {\n            this.view.viewState.printing = false;\n            this.view.requestMeasure();\n        }, 500);\n    }\n    updateGaps(gaps) {\n        if (this.gapIntersection && (gaps.length != this.gaps.length || this.gaps.some((g, i) => g != gaps[i]))) {\n            this.gapIntersection.disconnect();\n            for (let gap of gaps)\n                this.gapIntersection.observe(gap);\n            this.gaps = gaps;\n        }\n    }\n    onSelectionChange(event) {\n        if (!this.readSelectionRange() || this.delayedAndroidKey)\n            return;\n        let { view } = this, sel = this.selectionRange;\n        if (view.state.facet(editable) ? view.root.activeElement != this.dom : !hasSelection(view.dom, sel))\n            return;\n        let context = sel.anchorNode && view.docView.nearest(sel.anchorNode);\n        if (context && context.ignoreEvent(event))\n            return;\n        // Deletions on IE11 fire their events in the wrong order, giving\n        // us a selection change event before the DOM changes are\n        // reported.\n        // Chrome Android has a similar issue when backspacing out a\n        // selection (#645).\n        if ((browser.ie && browser.ie_version <= 11 || browser.android && browser.chrome) && !view.state.selection.main.empty &&\n            // (Selection.isCollapsed isn't reliable on IE)\n            sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n            this.flushSoon();\n        else\n            this.flush(false);\n    }\n    readSelectionRange() {\n        let { root } = this.view, domSel = getSelection(root);\n        // The Selection object is broken in shadow roots in Safari. See\n        // https://github.com/codemirror/codemirror.next/issues/414\n        let range = browser.safari && root.nodeType == 11 && deepActiveElement() == this.view.contentDOM &&\n            safariSelectionRangeHack(this.view) || domSel;\n        if (this.selectionRange.eq(range))\n            return false;\n        this.selectionRange.setRange(range);\n        return this.selectionChanged = true;\n    }\n    setSelectionRange(anchor, head) {\n        this.selectionRange.set(anchor.node, anchor.offset, head.node, head.offset);\n        this.selectionChanged = false;\n    }\n    clearSelectionRange() {\n        this.selectionRange.set(null, 0, null, 0);\n    }\n    listenForScroll() {\n        this.parentCheck = -1;\n        let i = 0, changed = null;\n        for (let dom = this.dom; dom;) {\n            if (dom.nodeType == 1) {\n                if (!changed && i < this.scrollTargets.length && this.scrollTargets[i] == dom)\n                    i++;\n                else if (!changed)\n                    changed = this.scrollTargets.slice(0, i);\n                if (changed)\n                    changed.push(dom);\n                dom = dom.assignedSlot || dom.parentNode;\n            }\n            else if (dom.nodeType == 11) { // Shadow root\n                dom = dom.host;\n            }\n            else {\n                break;\n            }\n        }\n        if (i < this.scrollTargets.length && !changed)\n            changed = this.scrollTargets.slice(0, i);\n        if (changed) {\n            for (let dom of this.scrollTargets)\n                dom.removeEventListener(\"scroll\", this.onScroll);\n            for (let dom of this.scrollTargets = changed)\n                dom.addEventListener(\"scroll\", this.onScroll);\n        }\n    }\n    ignore(f) {\n        if (!this.active)\n            return f();\n        try {\n            this.stop();\n            return f();\n        }\n        finally {\n            this.start();\n            this.clear();\n        }\n    }\n    start() {\n        if (this.active)\n            return;\n        this.observer.observe(this.dom, observeOptions);\n        if (useCharData)\n            this.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.active = true;\n    }\n    stop() {\n        if (!this.active)\n            return;\n        this.active = false;\n        this.observer.disconnect();\n        if (useCharData)\n            this.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n    }\n    // Throw away any pending changes\n    clear() {\n        this.processRecords();\n        this.queue.length = 0;\n        this.selectionChanged = false;\n    }\n    // Chrome Android, especially in combination with GBoard, not only\n    // doesn't reliably fire regular key events, but also often\n    // surrounds the effect of enter or backspace with a bunch of\n    // composition events that, when interrupted, cause text duplication\n    // or other kinds of corruption. This hack makes the editor back off\n    // from handling DOM changes for a moment when such a key is\n    // detected (via beforeinput or keydown), and then tries to flush\n    // them or, if that has no effect, dispatches the given key.\n    delayAndroidKey(key, keyCode) {\n        if (!this.delayedAndroidKey)\n            requestAnimationFrame(() => {\n                let key = this.delayedAndroidKey;\n                this.delayedAndroidKey = null;\n                this.delayedFlush = -1;\n                if (!this.flush())\n                    dispatchKey(this.view.contentDOM, key.key, key.keyCode);\n            });\n        // Since backspace beforeinput is sometimes signalled spuriously,\n        // Enter always takes precedence.\n        if (!this.delayedAndroidKey || key == \"Enter\")\n            this.delayedAndroidKey = { key, keyCode };\n    }\n    flushSoon() {\n        if (this.delayedFlush < 0)\n            this.delayedFlush = window.setTimeout(() => { this.delayedFlush = -1; this.flush(); }, 20);\n    }\n    forceFlush() {\n        if (this.delayedFlush >= 0) {\n            window.clearTimeout(this.delayedFlush);\n            this.delayedFlush = -1;\n            this.flush();\n        }\n    }\n    processRecords() {\n        let records = this.queue;\n        for (let mut of this.observer.takeRecords())\n            records.push(mut);\n        if (records.length)\n            this.queue = [];\n        let from = -1, to = -1, typeOver = false;\n        for (let record of records) {\n            let range = this.readMutation(record);\n            if (!range)\n                continue;\n            if (range.typeOver)\n                typeOver = true;\n            if (from == -1) {\n                ({ from, to } = range);\n            }\n            else {\n                from = Math.min(range.from, from);\n                to = Math.max(range.to, to);\n            }\n        }\n        return { from, to, typeOver };\n    }\n    // Apply pending changes, if any\n    flush(readSelection = true) {\n        // Completely hold off flushing when pending keys are set—the code\n        // managing those will make sure processRecords is called and the\n        // view is resynchronized after\n        if (this.delayedFlush >= 0 || this.delayedAndroidKey)\n            return;\n        if (readSelection)\n            this.readSelectionRange();\n        let { from, to, typeOver } = this.processRecords();\n        let newSel = this.selectionChanged && hasSelection(this.dom, this.selectionRange);\n        if (from < 0 && !newSel)\n            return;\n        this.selectionChanged = false;\n        let startState = this.view.state;\n        let handled = this.onChange(from, to, typeOver);\n        // The view wasn't updated\n        if (this.view.state == startState)\n            this.view.update([]);\n        return handled;\n    }\n    readMutation(rec) {\n        let cView = this.view.docView.nearest(rec.target);\n        if (!cView || cView.ignoreMutation(rec))\n            return null;\n        cView.markDirty(rec.type == \"attributes\");\n        if (rec.type == \"attributes\")\n            cView.dirty |= 4 /* Attrs */;\n        if (rec.type == \"childList\") {\n            let childBefore = findChild(cView, rec.previousSibling || rec.target.previousSibling, -1);\n            let childAfter = findChild(cView, rec.nextSibling || rec.target.nextSibling, 1);\n            return { from: childBefore ? cView.posAfter(childBefore) : cView.posAtStart,\n                to: childAfter ? cView.posBefore(childAfter) : cView.posAtEnd, typeOver: false };\n        }\n        else if (rec.type == \"characterData\") {\n            return { from: cView.posAtStart, to: cView.posAtEnd, typeOver: rec.target.nodeValue == rec.oldValue };\n        }\n        else {\n            return null;\n        }\n    }\n    destroy() {\n        var _a, _b, _c;\n        this.stop();\n        (_a = this.intersection) === null || _a === void 0 ? void 0 : _a.disconnect();\n        (_b = this.gapIntersection) === null || _b === void 0 ? void 0 : _b.disconnect();\n        (_c = this.resize) === null || _c === void 0 ? void 0 : _c.disconnect();\n        for (let dom of this.scrollTargets)\n            dom.removeEventListener(\"scroll\", this.onScroll);\n        window.removeEventListener(\"scroll\", this.onScroll);\n        window.removeEventListener(\"resize\", this.onResize);\n        window.removeEventListener(\"beforeprint\", this.onPrint);\n        this.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange);\n        clearTimeout(this.parentCheck);\n        clearTimeout(this.resizeTimeout);\n    }\n}\nfunction findChild(cView, dom, dir) {\n    while (dom) {\n        let curView = ContentView.get(dom);\n        if (curView && curView.parent == cView)\n            return curView;\n        let parent = dom.parentNode;\n        dom = parent != cView.dom ? parent : dir > 0 ? dom.nextSibling : dom.previousSibling;\n    }\n    return null;\n}\n// Used to work around a Safari Selection/shadow DOM bug (#414)\nfunction safariSelectionRangeHack(view) {\n    let found = null;\n    // Because Safari (at least in 2018-2021) doesn't provide regular\n    // access to the selection inside a shadowroot, we have to perform a\n    // ridiculous hack to get at it—using `execCommand` to trigger a\n    // `beforeInput` event so that we can read the target range from the\n    // event.\n    function read(event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        found = event.getTargetRanges()[0];\n    }\n    view.contentDOM.addEventListener(\"beforeinput\", read, true);\n    document.execCommand(\"indent\");\n    view.contentDOM.removeEventListener(\"beforeinput\", read, true);\n    if (!found)\n        return null;\n    let anchorNode = found.startContainer, anchorOffset = found.startOffset;\n    let focusNode = found.endContainer, focusOffset = found.endOffset;\n    let curAnchor = view.docView.domAtPos(view.state.selection.main.anchor);\n    // Since such a range doesn't distinguish between anchor and head,\n    // use a heuristic that flips it around if its end matches the\n    // current anchor.\n    if (isEquivalentPosition(curAnchor.node, curAnchor.offset, focusNode, focusOffset))\n        [anchorNode, anchorOffset, focusNode, focusOffset] = [focusNode, focusOffset, anchorNode, anchorOffset];\n    return { anchorNode, anchorOffset, focusNode, focusOffset };\n}\n\nfunction applyDOMChange(view, start, end, typeOver) {\n    let change, newSel;\n    let sel = view.state.selection.main;\n    if (start > -1) {\n        let bounds = view.docView.domBoundsAround(start, end, 0);\n        if (!bounds || view.state.readOnly)\n            return false;\n        let { from, to } = bounds;\n        let selPoints = view.docView.impreciseHead || view.docView.impreciseAnchor ? [] : selectionPoints(view);\n        let reader = new DOMReader(selPoints, view.state);\n        reader.readRange(bounds.startDOM, bounds.endDOM);\n        let preferredPos = sel.from, preferredSide = null;\n        // Prefer anchoring to end when Backspace is pressed (or, on\n        // Android, when something was deleted)\n        if (view.inputState.lastKeyCode === 8 && view.inputState.lastKeyTime > Date.now() - 100 ||\n            browser.android && reader.text.length < to - from) {\n            preferredPos = sel.to;\n            preferredSide = \"end\";\n        }\n        let diff = findDiff(view.state.doc.sliceString(from, to, LineBreakPlaceholder), reader.text, preferredPos - from, preferredSide);\n        if (diff) {\n            // Chrome inserts two newlines when pressing shift-enter at the\n            // end of a line. This drops one of those.\n            if (browser.chrome && view.inputState.lastKeyCode == 13 &&\n                diff.toB == diff.from + 2 && reader.text.slice(diff.from, diff.toB) == LineBreakPlaceholder + LineBreakPlaceholder)\n                diff.toB--;\n            change = { from: from + diff.from, to: from + diff.toA,\n                insert: Text.of(reader.text.slice(diff.from, diff.toB).split(LineBreakPlaceholder)) };\n        }\n        newSel = selectionFromPoints(selPoints, from);\n    }\n    else if (view.hasFocus || !view.state.facet(editable)) {\n        let domSel = view.observer.selectionRange;\n        let { impreciseHead: iHead, impreciseAnchor: iAnchor } = view.docView;\n        let head = iHead && iHead.node == domSel.focusNode && iHead.offset == domSel.focusOffset ||\n            !contains(view.contentDOM, domSel.focusNode)\n            ? view.state.selection.main.head\n            : view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset);\n        let anchor = iAnchor && iAnchor.node == domSel.anchorNode && iAnchor.offset == domSel.anchorOffset ||\n            !contains(view.contentDOM, domSel.anchorNode)\n            ? view.state.selection.main.anchor\n            : view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset);\n        if (head != sel.head || anchor != sel.anchor)\n            newSel = EditorSelection.single(anchor, head);\n    }\n    if (!change && !newSel)\n        return false;\n    // Heuristic to notice typing over a selected character\n    if (!change && typeOver && !sel.empty && newSel && newSel.main.empty)\n        change = { from: sel.from, to: sel.to, insert: view.state.doc.slice(sel.from, sel.to) };\n    // If the change is inside the selection and covers most of it,\n    // assume it is a selection replace (with identical characters at\n    // the start/end not included in the diff)\n    else if (change && change.from >= sel.from && change.to <= sel.to &&\n        (change.from != sel.from || change.to != sel.to) &&\n        (sel.to - sel.from) - (change.to - change.from) <= 4)\n        change = {\n            from: sel.from, to: sel.to,\n            insert: view.state.doc.slice(sel.from, change.from).append(change.insert).append(view.state.doc.slice(change.to, sel.to))\n        };\n    // Detect insert-period-on-double-space Mac behavior, and transform\n    // it into a regular space insert.\n    else if ((browser.mac || browser.android) && change && change.from == change.to && change.from == sel.head - 1 &&\n        change.insert.toString() == \".\")\n        change = { from: sel.from, to: sel.to, insert: Text.of([\" \"]) };\n    if (change) {\n        let startState = view.state;\n        if (browser.ios && view.inputState.flushIOSKey(view))\n            return true;\n        // Android browsers don't fire reasonable key events for enter,\n        // backspace, or delete. So this detects changes that look like\n        // they're caused by those keys, and reinterprets them as key\n        // events. (Some of these keys are also handled by beforeinput\n        // events and the pendingAndroidKey mechanism, but that's not\n        // reliable in all situations.)\n        if (browser.android &&\n            ((change.from == sel.from && change.to == sel.to &&\n                change.insert.length == 1 && change.insert.lines == 2 &&\n                dispatchKey(view.contentDOM, \"Enter\", 13)) ||\n                (change.from == sel.from - 1 && change.to == sel.to && change.insert.length == 0 &&\n                    dispatchKey(view.contentDOM, \"Backspace\", 8)) ||\n                (change.from == sel.from && change.to == sel.to + 1 && change.insert.length == 0 &&\n                    dispatchKey(view.contentDOM, \"Delete\", 46))))\n            return true;\n        let text = change.insert.toString();\n        if (view.state.facet(inputHandler).some(h => h(view, change.from, change.to, text)))\n            return true;\n        if (view.inputState.composing >= 0)\n            view.inputState.composing++;\n        let tr;\n        if (change.from >= sel.from && change.to <= sel.to && change.to - change.from >= (sel.to - sel.from) / 3 &&\n            (!newSel || newSel.main.empty && newSel.main.from == change.from + change.insert.length) &&\n            view.inputState.composing < 0) {\n            let before = sel.from < change.from ? startState.sliceDoc(sel.from, change.from) : \"\";\n            let after = sel.to > change.to ? startState.sliceDoc(change.to, sel.to) : \"\";\n            tr = startState.replaceSelection(view.state.toText(before + change.insert.sliceString(0, undefined, view.state.lineBreak) + after));\n        }\n        else {\n            let changes = startState.changes(change);\n            let mainSel = newSel && !startState.selection.main.eq(newSel.main) && newSel.main.to <= changes.newLength\n                ? newSel.main : undefined;\n            // Try to apply a composition change to all cursors\n            if (startState.selection.ranges.length > 1 && view.inputState.composing >= 0 &&\n                change.to <= sel.to && change.to >= sel.to - 10) {\n                let replaced = view.state.sliceDoc(change.from, change.to);\n                let compositionRange = compositionSurroundingNode(view) || view.state.doc.lineAt(sel.head);\n                let offset = sel.to - change.to, size = sel.to - sel.from;\n                tr = startState.changeByRange(range => {\n                    if (range.from == sel.from && range.to == sel.to)\n                        return { changes, range: mainSel || range.map(changes) };\n                    let to = range.to - offset, from = to - replaced.length;\n                    if (range.to - range.from != size || view.state.sliceDoc(from, to) != replaced ||\n                        // Unfortunately, there's no way to make multiple\n                        // changes in the same node work without aborting\n                        // composition, so cursors in the composition range are\n                        // ignored.\n                        compositionRange && range.to >= compositionRange.from && range.from <= compositionRange.to)\n                        return { range };\n                    let rangeChanges = startState.changes({ from, to, insert: change.insert }), selOff = range.to - sel.to;\n                    return {\n                        changes: rangeChanges,\n                        range: !mainSel ? range.map(rangeChanges) :\n                            EditorSelection.range(Math.max(0, mainSel.anchor + selOff), Math.max(0, mainSel.head + selOff))\n                    };\n                });\n            }\n            else {\n                tr = {\n                    changes,\n                    selection: mainSel && startState.selection.replaceRange(mainSel)\n                };\n            }\n        }\n        let userEvent = \"input.type\";\n        if (view.composing) {\n            userEvent += \".compose\";\n            if (view.inputState.compositionFirstChange) {\n                userEvent += \".start\";\n                view.inputState.compositionFirstChange = false;\n            }\n        }\n        view.dispatch(tr, { scrollIntoView: true, userEvent });\n        return true;\n    }\n    else if (newSel && !newSel.main.eq(sel)) {\n        let scrollIntoView = false, userEvent = \"select\";\n        if (view.inputState.lastSelectionTime > Date.now() - 50) {\n            if (view.inputState.lastSelectionOrigin == \"select\")\n                scrollIntoView = true;\n            userEvent = view.inputState.lastSelectionOrigin;\n        }\n        view.dispatch({ selection: newSel, scrollIntoView, userEvent });\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction findDiff(a, b, preferredPos, preferredSide) {\n    let minLen = Math.min(a.length, b.length);\n    let from = 0;\n    while (from < minLen && a.charCodeAt(from) == b.charCodeAt(from))\n        from++;\n    if (from == minLen && a.length == b.length)\n        return null;\n    let toA = a.length, toB = b.length;\n    while (toA > 0 && toB > 0 && a.charCodeAt(toA - 1) == b.charCodeAt(toB - 1)) {\n        toA--;\n        toB--;\n    }\n    if (preferredSide == \"end\") {\n        let adjust = Math.max(0, from - Math.min(toA, toB));\n        preferredPos -= toA + adjust - from;\n    }\n    if (toA < from && a.length < b.length) {\n        let move = preferredPos <= from && preferredPos >= toA ? from - preferredPos : 0;\n        from -= move;\n        toB = from + (toB - toA);\n        toA = from;\n    }\n    else if (toB < from) {\n        let move = preferredPos <= from && preferredPos >= toB ? from - preferredPos : 0;\n        from -= move;\n        toA = from + (toA - toB);\n        toB = from;\n    }\n    return { from, toA, toB };\n}\nfunction selectionPoints(view) {\n    let result = [];\n    if (view.root.activeElement != view.contentDOM)\n        return result;\n    let { anchorNode, anchorOffset, focusNode, focusOffset } = view.observer.selectionRange;\n    if (anchorNode) {\n        result.push(new DOMPoint(anchorNode, anchorOffset));\n        if (focusNode != anchorNode || focusOffset != anchorOffset)\n            result.push(new DOMPoint(focusNode, focusOffset));\n    }\n    return result;\n}\nfunction selectionFromPoints(points, base) {\n    if (points.length == 0)\n        return null;\n    let anchor = points[0].pos, head = points.length == 2 ? points[1].pos : anchor;\n    return anchor > -1 && head > -1 ? EditorSelection.single(anchor + base, head + base) : null;\n}\n\n// The editor's update state machine looks something like this:\n//\n//     Idle → Updating ⇆ Idle (unchecked) → Measuring → Idle\n//                                         ↑      ↓\n//                                         Updating (measure)\n//\n// The difference between 'Idle' and 'Idle (unchecked)' lies in\n// whether a layout check has been scheduled. A regular update through\n// the `update` method updates the DOM in a write-only fashion, and\n// relies on a check (scheduled with `requestAnimationFrame`) to make\n// sure everything is where it should be and the viewport covers the\n// visible code. That check continues to measure and then optionally\n// update until it reaches a coherent state.\n/**\nAn editor view represents the editor's user interface. It holds\nthe editable DOM surface, and possibly other elements such as the\nline number gutter. It handles events and dispatches state\ntransactions for editing actions.\n*/\nclass EditorView {\n    /**\n    Construct a new view. You'll want to either provide a `parent`\n    option, or put `view.dom` into your document after creating a\n    view, so that the user can see the editor.\n    */\n    constructor(\n    /**\n    Initialization options.\n    */\n    config = {}) {\n        this.plugins = [];\n        this.pluginMap = new Map;\n        this.editorAttrs = {};\n        this.contentAttrs = {};\n        this.bidiCache = [];\n        this.destroyed = false;\n        /**\n        @internal\n        */\n        this.updateState = 2 /* Updating */;\n        /**\n        @internal\n        */\n        this.measureScheduled = -1;\n        /**\n        @internal\n        */\n        this.measureRequests = [];\n        this.contentDOM = document.createElement(\"div\");\n        this.scrollDOM = document.createElement(\"div\");\n        this.scrollDOM.tabIndex = -1;\n        this.scrollDOM.className = \"cm-scroller\";\n        this.scrollDOM.appendChild(this.contentDOM);\n        this.announceDOM = document.createElement(\"div\");\n        this.announceDOM.style.cssText = \"position: absolute; top: -10000px\";\n        this.announceDOM.setAttribute(\"aria-live\", \"polite\");\n        this.dom = document.createElement(\"div\");\n        this.dom.appendChild(this.announceDOM);\n        this.dom.appendChild(this.scrollDOM);\n        this._dispatch = config.dispatch || ((tr) => this.update([tr]));\n        this.dispatch = this.dispatch.bind(this);\n        this.root = (config.root || getRoot(config.parent) || document);\n        this.viewState = new ViewState(config.state || EditorState.create());\n        this.plugins = this.state.facet(viewPlugin).map(spec => new PluginInstance(spec));\n        for (let plugin of this.plugins)\n            plugin.update(this);\n        this.observer = new DOMObserver(this, (from, to, typeOver) => {\n            return applyDOMChange(this, from, to, typeOver);\n        }, event => {\n            this.inputState.runScrollHandlers(this, event);\n            if (this.observer.intersecting)\n                this.measure();\n        });\n        this.inputState = new InputState(this);\n        this.inputState.ensureHandlers(this, this.plugins);\n        this.docView = new DocView(this);\n        this.mountStyles();\n        this.updateAttrs();\n        this.updateState = 0 /* Idle */;\n        this.requestMeasure();\n        if (config.parent)\n            config.parent.appendChild(this.dom);\n    }\n    /**\n    The current editor state.\n    */\n    get state() { return this.viewState.state; }\n    /**\n    To be able to display large documents without consuming too much\n    memory or overloading the browser, CodeMirror only draws the\n    code that is visible (plus a margin around it) to the DOM. This\n    property tells you the extent of the current drawn viewport, in\n    document positions.\n    */\n    get viewport() { return this.viewState.viewport; }\n    /**\n    When there are, for example, large collapsed ranges in the\n    viewport, its size can be a lot bigger than the actual visible\n    content. Thus, if you are doing something like styling the\n    content in the viewport, it is preferable to only do so for\n    these ranges, which are the subset of the viewport that is\n    actually drawn.\n    */\n    get visibleRanges() { return this.viewState.visibleRanges; }\n    /**\n    Returns false when the editor is entirely scrolled out of view\n    or otherwise hidden.\n    */\n    get inView() { return this.viewState.inView; }\n    /**\n    Indicates whether the user is currently composing text via\n    [IME](https://en.wikipedia.org/wiki/Input_method), and at least\n    one change has been made in the current composition.\n    */\n    get composing() { return this.inputState.composing > 0; }\n    /**\n    Indicates whether the user is currently in composing state. Note\n    that on some platforms, like Android, this will be the case a\n    lot, since just putting the cursor on a word starts a\n    composition there.\n    */\n    get compositionStarted() { return this.inputState.composing >= 0; }\n    dispatch(...input) {\n        this._dispatch(input.length == 1 && input[0] instanceof Transaction ? input[0]\n            : this.state.update(...input));\n    }\n    /**\n    Update the view for the given array of transactions. This will\n    update the visible document and selection to match the state\n    produced by the transactions, and notify view plugins of the\n    change. You should usually call\n    [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead, which uses this\n    as a primitive.\n    */\n    update(transactions) {\n        if (this.updateState != 0 /* Idle */)\n            throw new Error(\"Calls to EditorView.update are not allowed while an update is in progress\");\n        let redrawn = false, attrsChanged = false, update;\n        let state = this.state;\n        for (let tr of transactions) {\n            if (tr.startState != state)\n                throw new RangeError(\"Trying to update state with a transaction that doesn't start from the previous state.\");\n            state = tr.state;\n        }\n        if (this.destroyed) {\n            this.viewState.state = state;\n            return;\n        }\n        this.observer.clear();\n        // When the phrases change, redraw the editor\n        if (state.facet(EditorState.phrases) != this.state.facet(EditorState.phrases))\n            return this.setState(state);\n        update = ViewUpdate.create(this, state, transactions);\n        let scrollTarget = this.viewState.scrollTarget;\n        try {\n            this.updateState = 2 /* Updating */;\n            for (let tr of transactions) {\n                if (scrollTarget)\n                    scrollTarget = scrollTarget.map(tr.changes);\n                if (tr.scrollIntoView) {\n                    let { main } = tr.state.selection;\n                    scrollTarget = new ScrollTarget(main.empty ? main : EditorSelection.cursor(main.head, main.head > main.anchor ? -1 : 1));\n                }\n                for (let e of tr.effects)\n                    if (e.is(scrollIntoView))\n                        scrollTarget = e.value;\n            }\n            this.viewState.update(update, scrollTarget);\n            this.bidiCache = CachedOrder.update(this.bidiCache, update.changes);\n            if (!update.empty) {\n                this.updatePlugins(update);\n                this.inputState.update(update);\n            }\n            redrawn = this.docView.update(update);\n            if (this.state.facet(styleModule) != this.styleModules)\n                this.mountStyles();\n            attrsChanged = this.updateAttrs();\n            this.showAnnouncements(transactions);\n            this.docView.updateSelection(redrawn, transactions.some(tr => tr.isUserEvent(\"select.pointer\")));\n        }\n        finally {\n            this.updateState = 0 /* Idle */;\n        }\n        if (update.startState.facet(theme) != update.state.facet(theme))\n            this.viewState.mustMeasureContent = true;\n        if (redrawn || attrsChanged || scrollTarget || this.viewState.mustEnforceCursorAssoc || this.viewState.mustMeasureContent)\n            this.requestMeasure();\n        if (!update.empty)\n            for (let listener of this.state.facet(updateListener))\n                listener(update);\n    }\n    /**\n    Reset the view to the given state. (This will cause the entire\n    document to be redrawn and all view plugins to be reinitialized,\n    so you should probably only use it when the new state isn't\n    derived from the old state. Otherwise, use\n    [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead.)\n    */\n    setState(newState) {\n        if (this.updateState != 0 /* Idle */)\n            throw new Error(\"Calls to EditorView.setState are not allowed while an update is in progress\");\n        if (this.destroyed) {\n            this.viewState.state = newState;\n            return;\n        }\n        this.updateState = 2 /* Updating */;\n        let hadFocus = this.hasFocus;\n        try {\n            for (let plugin of this.plugins)\n                plugin.destroy(this);\n            this.viewState = new ViewState(newState);\n            this.plugins = newState.facet(viewPlugin).map(spec => new PluginInstance(spec));\n            this.pluginMap.clear();\n            for (let plugin of this.plugins)\n                plugin.update(this);\n            this.docView = new DocView(this);\n            this.inputState.ensureHandlers(this, this.plugins);\n            this.mountStyles();\n            this.updateAttrs();\n            this.bidiCache = [];\n        }\n        finally {\n            this.updateState = 0 /* Idle */;\n        }\n        if (hadFocus)\n            this.focus();\n        this.requestMeasure();\n    }\n    updatePlugins(update) {\n        let prevSpecs = update.startState.facet(viewPlugin), specs = update.state.facet(viewPlugin);\n        if (prevSpecs != specs) {\n            let newPlugins = [];\n            for (let spec of specs) {\n                let found = prevSpecs.indexOf(spec);\n                if (found < 0) {\n                    newPlugins.push(new PluginInstance(spec));\n                }\n                else {\n                    let plugin = this.plugins[found];\n                    plugin.mustUpdate = update;\n                    newPlugins.push(plugin);\n                }\n            }\n            for (let plugin of this.plugins)\n                if (plugin.mustUpdate != update)\n                    plugin.destroy(this);\n            this.plugins = newPlugins;\n            this.pluginMap.clear();\n            this.inputState.ensureHandlers(this, this.plugins);\n        }\n        else {\n            for (let p of this.plugins)\n                p.mustUpdate = update;\n        }\n        for (let i = 0; i < this.plugins.length; i++)\n            this.plugins[i].update(this);\n    }\n    /**\n    @internal\n    */\n    measure(flush = true) {\n        if (this.destroyed)\n            return;\n        if (this.measureScheduled > -1)\n            cancelAnimationFrame(this.measureScheduled);\n        this.measureScheduled = 0; // Prevent requestMeasure calls from scheduling another animation frame\n        if (flush)\n            this.observer.flush();\n        let updated = null;\n        try {\n            for (let i = 0;; i++) {\n                this.updateState = 1 /* Measuring */;\n                let oldViewport = this.viewport;\n                let changed = this.viewState.measure(this);\n                if (!changed && !this.measureRequests.length && this.viewState.scrollTarget == null)\n                    break;\n                if (i > 5) {\n                    console.warn(this.measureRequests.length\n                        ? \"Measure loop restarted more than 5 times\"\n                        : \"Viewport failed to stabilize\");\n                    break;\n                }\n                let measuring = [];\n                // Only run measure requests in this cycle when the viewport didn't change\n                if (!(changed & 4 /* Viewport */))\n                    [this.measureRequests, measuring] = [measuring, this.measureRequests];\n                let measured = measuring.map(m => {\n                    try {\n                        return m.read(this);\n                    }\n                    catch (e) {\n                        logException(this.state, e);\n                        return BadMeasure;\n                    }\n                });\n                let update = ViewUpdate.create(this, this.state, []), redrawn = false, scrolled = false;\n                update.flags |= changed;\n                if (!updated)\n                    updated = update;\n                else\n                    updated.flags |= changed;\n                this.updateState = 2 /* Updating */;\n                if (!update.empty) {\n                    this.updatePlugins(update);\n                    this.inputState.update(update);\n                    this.updateAttrs();\n                    redrawn = this.docView.update(update);\n                }\n                for (let i = 0; i < measuring.length; i++)\n                    if (measured[i] != BadMeasure) {\n                        try {\n                            let m = measuring[i];\n                            if (m.write)\n                                m.write(measured[i], this);\n                        }\n                        catch (e) {\n                            logException(this.state, e);\n                        }\n                    }\n                if (this.viewState.scrollTarget) {\n                    this.docView.scrollIntoView(this.viewState.scrollTarget);\n                    this.viewState.scrollTarget = null;\n                    scrolled = true;\n                }\n                if (redrawn)\n                    this.docView.updateSelection(true);\n                if (this.viewport.from == oldViewport.from && this.viewport.to == oldViewport.to &&\n                    !scrolled && this.measureRequests.length == 0)\n                    break;\n            }\n        }\n        finally {\n            this.updateState = 0 /* Idle */;\n            this.measureScheduled = -1;\n        }\n        if (updated && !updated.empty)\n            for (let listener of this.state.facet(updateListener))\n                listener(updated);\n    }\n    /**\n    Get the CSS classes for the currently active editor themes.\n    */\n    get themeClasses() {\n        return baseThemeID + \" \" +\n            (this.state.facet(darkTheme) ? baseDarkID : baseLightID) + \" \" +\n            this.state.facet(theme);\n    }\n    updateAttrs() {\n        let editorAttrs = attrsFromFacet(this, editorAttributes, {\n            class: \"cm-editor\" + (this.hasFocus ? \" cm-focused \" : \" \") + this.themeClasses\n        });\n        let contentAttrs = {\n            spellcheck: \"false\",\n            autocorrect: \"off\",\n            autocapitalize: \"off\",\n            translate: \"no\",\n            contenteditable: !this.state.facet(editable) ? \"false\" : \"true\",\n            class: \"cm-content\",\n            style: `${browser.tabSize}: ${this.state.tabSize}`,\n            role: \"textbox\",\n            \"aria-multiline\": \"true\"\n        };\n        if (this.state.readOnly)\n            contentAttrs[\"aria-readonly\"] = \"true\";\n        attrsFromFacet(this, contentAttributes, contentAttrs);\n        let changed = this.observer.ignore(() => {\n            let changedContent = updateAttrs(this.contentDOM, this.contentAttrs, contentAttrs);\n            let changedEditor = updateAttrs(this.dom, this.editorAttrs, editorAttrs);\n            return changedContent || changedEditor;\n        });\n        this.editorAttrs = editorAttrs;\n        this.contentAttrs = contentAttrs;\n        return changed;\n    }\n    showAnnouncements(trs) {\n        let first = true;\n        for (let tr of trs)\n            for (let effect of tr.effects)\n                if (effect.is(EditorView.announce)) {\n                    if (first)\n                        this.announceDOM.textContent = \"\";\n                    first = false;\n                    let div = this.announceDOM.appendChild(document.createElement(\"div\"));\n                    div.textContent = effect.value;\n                }\n    }\n    mountStyles() {\n        this.styleModules = this.state.facet(styleModule);\n        StyleModule.mount(this.root, this.styleModules.concat(baseTheme$1).reverse());\n    }\n    readMeasured() {\n        if (this.updateState == 2 /* Updating */)\n            throw new Error(\"Reading the editor layout isn't allowed during an update\");\n        if (this.updateState == 0 /* Idle */ && this.measureScheduled > -1)\n            this.measure(false);\n    }\n    /**\n    Schedule a layout measurement, optionally providing callbacks to\n    do custom DOM measuring followed by a DOM write phase. Using\n    this is preferable reading DOM layout directly from, for\n    example, an event handler, because it'll make sure measuring and\n    drawing done by other components is synchronized, avoiding\n    unnecessary DOM layout computations.\n    */\n    requestMeasure(request) {\n        if (this.measureScheduled < 0)\n            this.measureScheduled = requestAnimationFrame(() => this.measure());\n        if (request) {\n            if (request.key != null)\n                for (let i = 0; i < this.measureRequests.length; i++) {\n                    if (this.measureRequests[i].key === request.key) {\n                        this.measureRequests[i] = request;\n                        return;\n                    }\n                }\n            this.measureRequests.push(request);\n        }\n    }\n    /**\n    Get the value of a specific plugin, if present. Note that\n    plugins that crash can be dropped from a view, so even when you\n    know you registered a given plugin, it is recommended to check\n    the return value of this method.\n    */\n    plugin(plugin) {\n        let known = this.pluginMap.get(plugin);\n        if (known === undefined || known && known.spec != plugin)\n            this.pluginMap.set(plugin, known = this.plugins.find(p => p.spec == plugin) || null);\n        return known && known.update(this).value;\n    }\n    /**\n    The top position of the document, in screen coordinates. This\n    may be negative when the editor is scrolled down. Points\n    directly to the top of the first line, not above the padding.\n    */\n    get documentTop() {\n        return this.contentDOM.getBoundingClientRect().top + this.viewState.paddingTop;\n    }\n    /**\n    Reports the padding above and below the document.\n    */\n    get documentPadding() {\n        return { top: this.viewState.paddingTop, bottom: this.viewState.paddingBottom };\n    }\n    /**\n    Find the text line or block widget at the given vertical\n    position (which is interpreted as relative to the [top of the\n    document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop)\n    */\n    elementAtHeight(height) {\n        this.readMeasured();\n        return this.viewState.elementAtHeight(height);\n    }\n    /**\n    Find the line block (see\n    [`lineBlockAt`](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) at the given\n    height.\n    */\n    lineBlockAtHeight(height) {\n        this.readMeasured();\n        return this.viewState.lineBlockAtHeight(height);\n    }\n    /**\n    Get the extent and vertical position of all [line\n    blocks](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) in the viewport. Positions\n    are relative to the [top of the\n    document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop);\n    */\n    get viewportLineBlocks() {\n        return this.viewState.viewportLines;\n    }\n    /**\n    Find the line block around the given document position. A line\n    block is a range delimited on both sides by either a\n    non-[hidden](https://codemirror.net/6/docs/ref/#view.Decoration^replace) line breaks, or the\n    start/end of the document. It will usually just hold a line of\n    text, but may be broken into multiple textblocks by block\n    widgets.\n    */\n    lineBlockAt(pos) {\n        return this.viewState.lineBlockAt(pos);\n    }\n    /**\n    The editor's total content height.\n    */\n    get contentHeight() {\n        return this.viewState.contentHeight;\n    }\n    /**\n    Move a cursor position by [grapheme\n    cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak). `forward` determines whether\n    the motion is away from the line start, or towards it. In\n    bidirectional text, the line is traversed in visual order, using\n    the editor's [text direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection).\n    When the start position was the last one on the line, the\n    returned position will be across the line break. If there is no\n    further line, the original position is returned.\n    \n    By default, this method moves over a single cluster. The\n    optional `by` argument can be used to move across more. It will\n    be called with the first cluster as argument, and should return\n    a predicate that determines, for each subsequent cluster,\n    whether it should also be moved over.\n    */\n    moveByChar(start, forward, by) {\n        return skipAtoms(this, start, moveByChar(this, start, forward, by));\n    }\n    /**\n    Move a cursor position across the next group of either\n    [letters](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) or non-letter\n    non-whitespace characters.\n    */\n    moveByGroup(start, forward) {\n        return skipAtoms(this, start, moveByChar(this, start, forward, initial => byGroup(this, start.head, initial)));\n    }\n    /**\n    Move to the next line boundary in the given direction. If\n    `includeWrap` is true, line wrapping is on, and there is a\n    further wrap point on the current line, the wrap point will be\n    returned. Otherwise this function will return the start or end\n    of the line.\n    */\n    moveToLineBoundary(start, forward, includeWrap = true) {\n        return moveToLineBoundary(this, start, forward, includeWrap);\n    }\n    /**\n    Move a cursor position vertically. When `distance` isn't given,\n    it defaults to moving to the next line (including wrapped\n    lines). Otherwise, `distance` should provide a positive distance\n    in pixels.\n    \n    When `start` has a\n    [`goalColumn`](https://codemirror.net/6/docs/ref/#state.SelectionRange.goalColumn), the vertical\n    motion will use that as a target horizontal position. Otherwise,\n    the cursor's own horizontal position is used. The returned\n    cursor will have its goal column set to whichever column was\n    used.\n    */\n    moveVertically(start, forward, distance) {\n        return skipAtoms(this, start, moveVertically(this, start, forward, distance));\n    }\n    /**\n    Find the DOM parent node and offset (child offset if `node` is\n    an element, character offset when it is a text node) at the\n    given document position.\n    \n    Note that for positions that aren't currently in\n    `visibleRanges`, the resulting DOM position isn't necessarily\n    meaningful (it may just point before or after a placeholder\n    element).\n    */\n    domAtPos(pos) {\n        return this.docView.domAtPos(pos);\n    }\n    /**\n    Find the document position at the given DOM node. Can be useful\n    for associating positions with DOM events. Will raise an error\n    when `node` isn't part of the editor content.\n    */\n    posAtDOM(node, offset = 0) {\n        return this.docView.posFromDOM(node, offset);\n    }\n    posAtCoords(coords, precise = true) {\n        this.readMeasured();\n        return posAtCoords(this, coords, precise);\n    }\n    /**\n    Get the screen coordinates at the given document position.\n    `side` determines whether the coordinates are based on the\n    element before (-1) or after (1) the position (if no element is\n    available on the given side, the method will transparently use\n    another strategy to get reasonable coordinates).\n    */\n    coordsAtPos(pos, side = 1) {\n        this.readMeasured();\n        let rect = this.docView.coordsAt(pos, side);\n        if (!rect || rect.left == rect.right)\n            return rect;\n        let line = this.state.doc.lineAt(pos), order = this.bidiSpans(line);\n        let span = order[BidiSpan.find(order, pos - line.from, -1, side)];\n        return flattenRect(rect, (span.dir == Direction.LTR) == (side > 0));\n    }\n    /**\n    The default width of a character in the editor. May not\n    accurately reflect the width of all characters (given variable\n    width fonts or styling of invididual ranges).\n    */\n    get defaultCharacterWidth() { return this.viewState.heightOracle.charWidth; }\n    /**\n    The default height of a line in the editor. May not be accurate\n    for all lines.\n    */\n    get defaultLineHeight() { return this.viewState.heightOracle.lineHeight; }\n    /**\n    The text direction\n    ([`direction`](https://developer.mozilla.org/en-US/docs/Web/CSS/direction)\n    CSS property) of the editor's content element.\n    */\n    get textDirection() { return this.viewState.defaultTextDirection; }\n    /**\n    Find the text direction of the block at the given position, as\n    assigned by CSS. If\n    [`perLineTextDirection`](https://codemirror.net/6/docs/ref/#view.EditorView^perLineTextDirection)\n    isn't enabled, or the given position is outside of the viewport,\n    this will always return the same as\n    [`textDirection`](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection). Note that\n    this may trigger a DOM layout.\n    */\n    textDirectionAt(pos) {\n        let perLine = this.state.facet(perLineTextDirection);\n        if (!perLine || pos < this.viewport.from || pos > this.viewport.to)\n            return this.textDirection;\n        this.readMeasured();\n        return this.docView.textDirectionAt(pos);\n    }\n    /**\n    Whether this editor [wraps lines](https://codemirror.net/6/docs/ref/#view.EditorView.lineWrapping)\n    (as determined by the\n    [`white-space`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space)\n    CSS property of its content element).\n    */\n    get lineWrapping() { return this.viewState.heightOracle.lineWrapping; }\n    /**\n    Returns the bidirectional text structure of the given line\n    (which should be in the current document) as an array of span\n    objects. The order of these spans matches the [text\n    direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection)—if that is\n    left-to-right, the leftmost spans come first, otherwise the\n    rightmost spans come first.\n    */\n    bidiSpans(line) {\n        if (line.length > MaxBidiLine)\n            return trivialOrder(line.length);\n        let dir = this.textDirectionAt(line.from);\n        for (let entry of this.bidiCache)\n            if (entry.from == line.from && entry.dir == dir)\n                return entry.order;\n        let order = computeOrder(line.text, dir);\n        this.bidiCache.push(new CachedOrder(line.from, line.to, dir, order));\n        return order;\n    }\n    /**\n    Check whether the editor has focus.\n    */\n    get hasFocus() {\n        var _a;\n        // Safari return false for hasFocus when the context menu is open\n        // or closing, which leads us to ignore selection changes from the\n        // context menu because it looks like the editor isn't focused.\n        // This kludges around that.\n        return (document.hasFocus() || browser.safari && ((_a = this.inputState) === null || _a === void 0 ? void 0 : _a.lastContextMenu) > Date.now() - 3e4) &&\n            this.root.activeElement == this.contentDOM;\n    }\n    /**\n    Put focus on the editor.\n    */\n    focus() {\n        this.observer.ignore(() => {\n            focusPreventScroll(this.contentDOM);\n            this.docView.updateSelection();\n        });\n    }\n    /**\n    Clean up this editor view, removing its element from the\n    document, unregistering event handlers, and notifying\n    plugins. The view instance can no longer be used after\n    calling this.\n    */\n    destroy() {\n        for (let plugin of this.plugins)\n            plugin.destroy(this);\n        this.plugins = [];\n        this.inputState.destroy();\n        this.dom.remove();\n        this.observer.destroy();\n        if (this.measureScheduled > -1)\n            cancelAnimationFrame(this.measureScheduled);\n        this.destroyed = true;\n    }\n    /**\n    Returns an effect that can be\n    [added](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) to a transaction to\n    cause it to scroll the given position or range into view.\n    */\n    static scrollIntoView(pos, options = {}) {\n        return scrollIntoView.of(new ScrollTarget(typeof pos == \"number\" ? EditorSelection.cursor(pos) : pos, options.y, options.x, options.yMargin, options.xMargin));\n    }\n    /**\n    Returns an extension that can be used to add DOM event handlers.\n    The value should be an object mapping event names to handler\n    functions. For any given event, such functions are ordered by\n    extension precedence, and the first handler to return true will\n    be assumed to have handled that event, and no other handlers or\n    built-in behavior will be activated for it. These are registered\n    on the [content element](https://codemirror.net/6/docs/ref/#view.EditorView.contentDOM), except\n    for `scroll` handlers, which will be called any time the\n    editor's [scroll element](https://codemirror.net/6/docs/ref/#view.EditorView.scrollDOM) or one of\n    its parent nodes is scrolled.\n    */\n    static domEventHandlers(handlers) {\n        return ViewPlugin.define(() => ({}), { eventHandlers: handlers });\n    }\n    /**\n    Create a theme extension. The first argument can be a\n    [`style-mod`](https://github.com/marijnh/style-mod#documentation)\n    style spec providing the styles for the theme. These will be\n    prefixed with a generated class for the style.\n    \n    Because the selectors will be prefixed with a scope class, rule\n    that directly match the editor's [wrapper\n    element](https://codemirror.net/6/docs/ref/#view.EditorView.dom)—to which the scope class will be\n    added—need to be explicitly differentiated by adding an `&` to\n    the selector for that element—for example\n    `&.cm-focused`.\n    \n    When `dark` is set to true, the theme will be marked as dark,\n    which will cause the `&dark` rules from [base\n    themes](https://codemirror.net/6/docs/ref/#view.EditorView^baseTheme) to be used (as opposed to\n    `&light` when a light theme is active).\n    */\n    static theme(spec, options) {\n        let prefix = StyleModule.newName();\n        let result = [theme.of(prefix), styleModule.of(buildTheme(`.${prefix}`, spec))];\n        if (options && options.dark)\n            result.push(darkTheme.of(true));\n        return result;\n    }\n    /**\n    Create an extension that adds styles to the base theme. Like\n    with [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme), use `&` to indicate the\n    place of the editor wrapper element when directly targeting\n    that. You can also use `&dark` or `&light` instead to only\n    target editors with a dark or light theme.\n    */\n    static baseTheme(spec) {\n        return Prec.lowest(styleModule.of(buildTheme(\".\" + baseThemeID, spec, lightDarkIDs)));\n    }\n}\n/**\nFacet to add a [style\nmodule](https://github.com/marijnh/style-mod#documentation) to\nan editor view. The view will ensure that the module is\nmounted in its [document\nroot](https://codemirror.net/6/docs/ref/#view.EditorView.constructor^config.root).\n*/\nEditorView.styleModule = styleModule;\n/**\nAn input handler can override the way changes to the editable\nDOM content are handled. Handlers are passed the document\npositions between which the change was found, and the new\ncontent. When one returns true, no further input handlers are\ncalled and the default behavior is prevented.\n*/\nEditorView.inputHandler = inputHandler;\n/**\nBy default, the editor assumes all its content has the same\n[text direction](https://codemirror.net/6/docs/ref/#view.Direction). Configure this with a `true`\nvalue to make it read the text direction of every (rendered)\nline separately.\n*/\nEditorView.perLineTextDirection = perLineTextDirection;\n/**\nAllows you to provide a function that should be called when the\nlibrary catches an exception from an extension (mostly from view\nplugins, but may be used by other extensions to route exceptions\nfrom user-code-provided callbacks). This is mostly useful for\ndebugging and logging. See [`logException`](https://codemirror.net/6/docs/ref/#view.logException).\n*/\nEditorView.exceptionSink = exceptionSink;\n/**\nA facet that can be used to register a function to be called\nevery time the view updates.\n*/\nEditorView.updateListener = updateListener;\n/**\nFacet that controls whether the editor content DOM is editable.\nWhen its highest-precedence value is `false`, the element will\nnot have its `contenteditable` attribute set. (Note that this\ndoesn't affect API calls that change the editor content, even\nwhen those are bound to keys or buttons. See the\n[`readOnly`](https://codemirror.net/6/docs/ref/#state.EditorState.readOnly) facet for that.)\n*/\nEditorView.editable = editable;\n/**\nAllows you to influence the way mouse selection happens. The\nfunctions in this facet will be called for a `mousedown` event\non the editor, and can return an object that overrides the way a\nselection is computed from that mouse click or drag.\n*/\nEditorView.mouseSelectionStyle = mouseSelectionStyle;\n/**\nFacet used to configure whether a given selection drag event\nshould move or copy the selection. The given predicate will be\ncalled with the `mousedown` event, and can return `true` when\nthe drag should move the content.\n*/\nEditorView.dragMovesSelection = dragMovesSelection$1;\n/**\nFacet used to configure whether a given selecting click adds a\nnew range to the existing selection or replaces it entirely. The\ndefault behavior is to check `event.metaKey` on macOS, and\n`event.ctrlKey` elsewhere.\n*/\nEditorView.clickAddsSelectionRange = clickAddsSelectionRange;\n/**\nA facet that determines which [decorations](https://codemirror.net/6/docs/ref/#view.Decoration)\nare shown in the view. Decorations can be provided in two\nways—directly, or via a function that takes an editor view.\n\nOnly decoration sets provided directly are allowed to influence\nthe editor's vertical layout structure. The ones provided as\nfunctions are called _after_ the new viewport has been computed,\nand thus **must not** introduce block widgets or replacing\ndecorations that cover line breaks.\n*/\nEditorView.decorations = decorations;\n/**\nUsed to provide ranges that should be treated as atoms as far as\ncursor motion is concerned. This causes methods like\n[`moveByChar`](https://codemirror.net/6/docs/ref/#view.EditorView.moveByChar) and\n[`moveVertically`](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) (and the\ncommands built on top of them) to skip across such regions when\na selection endpoint would enter them. This does _not_ prevent\ndirect programmatic [selection\nupdates](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) from moving into such\nregions.\n*/\nEditorView.atomicRanges = atomicRanges;\n/**\nFacet that allows extensions to provide additional scroll\nmargins (space around the sides of the scrolling element that\nshould be considered invisible). This can be useful when the\nplugin introduces elements that cover part of that element (for\nexample a horizontally fixed gutter).\n*/\nEditorView.scrollMargins = scrollMargins;\n/**\nThis facet records whether a dark theme is active. The extension\nreturned by [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme) automatically\nincludes an instance of this when the `dark` option is set to\ntrue.\n*/\nEditorView.darkTheme = darkTheme;\n/**\nFacet that provides additional DOM attributes for the editor's\neditable DOM element.\n*/\nEditorView.contentAttributes = contentAttributes;\n/**\nFacet that provides DOM attributes for the editor's outer\nelement.\n*/\nEditorView.editorAttributes = editorAttributes;\n/**\nAn extension that enables line wrapping in the editor (by\nsetting CSS `white-space` to `pre-wrap` in the content).\n*/\nEditorView.lineWrapping = /*@__PURE__*/EditorView.contentAttributes.of({ \"class\": \"cm-lineWrapping\" });\n/**\nState effect used to include screen reader announcements in a\ntransaction. These will be added to the DOM in a visually hidden\nelement with `aria-live=\"polite\"` set, and should be used to\ndescribe effects that are visually obvious but may not be\nnoticed by screen reader users (such as moving to the next\nsearch match).\n*/\nEditorView.announce = /*@__PURE__*/StateEffect.define();\n// Maximum line length for which we compute accurate bidi info\nconst MaxBidiLine = 4096;\nconst BadMeasure = {};\nclass CachedOrder {\n    constructor(from, to, dir, order) {\n        this.from = from;\n        this.to = to;\n        this.dir = dir;\n        this.order = order;\n    }\n    static update(cache, changes) {\n        if (changes.empty)\n            return cache;\n        let result = [], lastDir = cache.length ? cache[cache.length - 1].dir : Direction.LTR;\n        for (let i = Math.max(0, cache.length - 10); i < cache.length; i++) {\n            let entry = cache[i];\n            if (entry.dir == lastDir && !changes.touchesRange(entry.from, entry.to))\n                result.push(new CachedOrder(changes.mapPos(entry.from, 1), changes.mapPos(entry.to, -1), entry.dir, entry.order));\n        }\n        return result;\n    }\n}\nfunction attrsFromFacet(view, facet, base) {\n    for (let sources = view.state.facet(facet), i = sources.length - 1; i >= 0; i--) {\n        let source = sources[i], value = typeof source == \"function\" ? source(view) : source;\n        if (value)\n            combineAttrs(value, base);\n    }\n    return base;\n}\n\nconst currentPlatform = browser.mac ? \"mac\" : browser.windows ? \"win\" : browser.linux ? \"linux\" : \"key\";\nfunction normalizeKeyName(name, platform) {\n    const parts = name.split(/-(?!$)/);\n    let result = parts[parts.length - 1];\n    if (result == \"Space\")\n        result = \" \";\n    let alt, ctrl, shift, meta;\n    for (let i = 0; i < parts.length - 1; ++i) {\n        const mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod))\n            meta = true;\n        else if (/^a(lt)?$/i.test(mod))\n            alt = true;\n        else if (/^(c|ctrl|control)$/i.test(mod))\n            ctrl = true;\n        else if (/^s(hift)?$/i.test(mod))\n            shift = true;\n        else if (/^mod$/i.test(mod)) {\n            if (platform == \"mac\")\n                meta = true;\n            else\n                ctrl = true;\n        }\n        else\n            throw new Error(\"Unrecognized modifier name: \" + mod);\n    }\n    if (alt)\n        result = \"Alt-\" + result;\n    if (ctrl)\n        result = \"Ctrl-\" + result;\n    if (meta)\n        result = \"Meta-\" + result;\n    if (shift)\n        result = \"Shift-\" + result;\n    return result;\n}\nfunction modifiers(name, event, shift) {\n    if (event.altKey)\n        name = \"Alt-\" + name;\n    if (event.ctrlKey)\n        name = \"Ctrl-\" + name;\n    if (event.metaKey)\n        name = \"Meta-\" + name;\n    if (shift !== false && event.shiftKey)\n        name = \"Shift-\" + name;\n    return name;\n}\nconst handleKeyEvents = /*@__PURE__*/EditorView.domEventHandlers({\n    keydown(event, view) {\n        return runHandlers(getKeymap(view.state), event, view, \"editor\");\n    }\n});\n/**\nFacet used for registering keymaps.\n\nYou can add multiple keymaps to an editor. Their priorities\ndetermine their precedence (the ones specified early or with high\npriority get checked first). When a handler has returned `true`\nfor a given key, no further handlers are called.\n*/\nconst keymap = /*@__PURE__*/Facet.define({ enables: handleKeyEvents });\nconst Keymaps = /*@__PURE__*/new WeakMap();\n// This is hidden behind an indirection, rather than directly computed\n// by the facet, to keep internal types out of the facet's type.\nfunction getKeymap(state) {\n    let bindings = state.facet(keymap);\n    let map = Keymaps.get(bindings);\n    if (!map)\n        Keymaps.set(bindings, map = buildKeymap(bindings.reduce((a, b) => a.concat(b), [])));\n    return map;\n}\n/**\nRun the key handlers registered for a given scope. The event\nobject should be a `\"keydown\"` event. Returns true if any of the\nhandlers handled it.\n*/\nfunction runScopeHandlers(view, event, scope) {\n    return runHandlers(getKeymap(view.state), event, view, scope);\n}\nlet storedPrefix = null;\nconst PrefixTimeout = 4000;\nfunction buildKeymap(bindings, platform = currentPlatform) {\n    let bound = Object.create(null);\n    let isPrefix = Object.create(null);\n    let checkPrefix = (name, is) => {\n        let current = isPrefix[name];\n        if (current == null)\n            isPrefix[name] = is;\n        else if (current != is)\n            throw new Error(\"Key binding \" + name + \" is used both as a regular binding and as a multi-stroke prefix\");\n    };\n    let add = (scope, key, command, preventDefault) => {\n        let scopeObj = bound[scope] || (bound[scope] = Object.create(null));\n        let parts = key.split(/ (?!$)/).map(k => normalizeKeyName(k, platform));\n        for (let i = 1; i < parts.length; i++) {\n            let prefix = parts.slice(0, i).join(\" \");\n            checkPrefix(prefix, true);\n            if (!scopeObj[prefix])\n                scopeObj[prefix] = {\n                    preventDefault: true,\n                    commands: [(view) => {\n                            let ourObj = storedPrefix = { view, prefix, scope };\n                            setTimeout(() => { if (storedPrefix == ourObj)\n                                storedPrefix = null; }, PrefixTimeout);\n                            return true;\n                        }]\n                };\n        }\n        let full = parts.join(\" \");\n        checkPrefix(full, false);\n        let binding = scopeObj[full] || (scopeObj[full] = { preventDefault: false, commands: [] });\n        binding.commands.push(command);\n        if (preventDefault)\n            binding.preventDefault = true;\n    };\n    for (let b of bindings) {\n        let name = b[platform] || b.key;\n        if (!name)\n            continue;\n        for (let scope of b.scope ? b.scope.split(\" \") : [\"editor\"]) {\n            add(scope, name, b.run, b.preventDefault);\n            if (b.shift)\n                add(scope, \"Shift-\" + name, b.shift, b.preventDefault);\n        }\n    }\n    return bound;\n}\nfunction runHandlers(map, event, view, scope) {\n    let name = keyName(event), isChar = name.length == 1 && name != \" \";\n    let prefix = \"\", fallthrough = false;\n    if (storedPrefix && storedPrefix.view == view && storedPrefix.scope == scope) {\n        prefix = storedPrefix.prefix + \" \";\n        if (fallthrough = modifierCodes.indexOf(event.keyCode) < 0)\n            storedPrefix = null;\n    }\n    let runFor = (binding) => {\n        if (binding) {\n            for (let cmd of binding.commands)\n                if (cmd(view))\n                    return true;\n            if (binding.preventDefault)\n                fallthrough = true;\n        }\n        return false;\n    };\n    let scopeObj = map[scope], baseName;\n    if (scopeObj) {\n        if (runFor(scopeObj[prefix + modifiers(name, event, !isChar)]))\n            return true;\n        if (isChar && (event.shiftKey || event.altKey || event.metaKey) &&\n            (baseName = base[event.keyCode]) && baseName != name) {\n            if (runFor(scopeObj[prefix + modifiers(baseName, event, true)]))\n                return true;\n        }\n        else if (isChar && event.shiftKey) {\n            if (runFor(scopeObj[prefix + modifiers(name, event, true)]))\n                return true;\n        }\n    }\n    return fallthrough;\n}\n\nconst CanHidePrimary = !browser.ios; // FIXME test IE\nconst selectionConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            cursorBlinkRate: 1200,\n            drawRangeCursor: true\n        }, {\n            cursorBlinkRate: (a, b) => Math.min(a, b),\n            drawRangeCursor: (a, b) => a || b\n        });\n    }\n});\n/**\nReturns an extension that hides the browser's native selection and\ncursor, replacing the selection with a background behind the text\n(with the `cm-selectionBackground` class), and the\ncursors with elements overlaid over the code (using\n`cm-cursor-primary` and `cm-cursor-secondary`).\n\nThis allows the editor to display secondary selection ranges, and\ntends to produce a type of selection more in line with that users\nexpect in a text editor (the native selection styling will often\nleave gaps between lines and won't fill the horizontal space after\na line when the selection continues past it).\n\nIt does have a performance cost, in that it requires an extra DOM\nlayout cycle for many updates (the selection is drawn based on DOM\nlayout information that's only available after laying out the\ncontent).\n*/\nfunction drawSelection(config = {}) {\n    return [\n        selectionConfig.of(config),\n        drawSelectionPlugin,\n        hideNativeSelection\n    ];\n}\nclass Piece {\n    constructor(left, top, width, height, className) {\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.className = className;\n    }\n    draw() {\n        let elt = document.createElement(\"div\");\n        elt.className = this.className;\n        this.adjust(elt);\n        return elt;\n    }\n    adjust(elt) {\n        elt.style.left = this.left + \"px\";\n        elt.style.top = this.top + \"px\";\n        if (this.width >= 0)\n            elt.style.width = this.width + \"px\";\n        elt.style.height = this.height + \"px\";\n    }\n    eq(p) {\n        return this.left == p.left && this.top == p.top && this.width == p.width && this.height == p.height &&\n            this.className == p.className;\n    }\n}\nconst drawSelectionPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.rangePieces = [];\n        this.cursors = [];\n        this.measureReq = { read: this.readPos.bind(this), write: this.drawSel.bind(this) };\n        this.selectionLayer = view.scrollDOM.appendChild(document.createElement(\"div\"));\n        this.selectionLayer.className = \"cm-selectionLayer\";\n        this.selectionLayer.setAttribute(\"aria-hidden\", \"true\");\n        this.cursorLayer = view.scrollDOM.appendChild(document.createElement(\"div\"));\n        this.cursorLayer.className = \"cm-cursorLayer\";\n        this.cursorLayer.setAttribute(\"aria-hidden\", \"true\");\n        view.requestMeasure(this.measureReq);\n        this.setBlinkRate();\n    }\n    setBlinkRate() {\n        this.cursorLayer.style.animationDuration = this.view.state.facet(selectionConfig).cursorBlinkRate + \"ms\";\n    }\n    update(update) {\n        let confChanged = update.startState.facet(selectionConfig) != update.state.facet(selectionConfig);\n        if (confChanged || update.selectionSet || update.geometryChanged || update.viewportChanged)\n            this.view.requestMeasure(this.measureReq);\n        if (update.transactions.some(tr => tr.scrollIntoView))\n            this.cursorLayer.style.animationName = this.cursorLayer.style.animationName == \"cm-blink\" ? \"cm-blink2\" : \"cm-blink\";\n        if (confChanged)\n            this.setBlinkRate();\n    }\n    readPos() {\n        let { state } = this.view, conf = state.facet(selectionConfig);\n        let rangePieces = state.selection.ranges.map(r => r.empty ? [] : measureRange(this.view, r)).reduce((a, b) => a.concat(b));\n        let cursors = [];\n        for (let r of state.selection.ranges) {\n            let prim = r == state.selection.main;\n            if (r.empty ? !prim || CanHidePrimary : conf.drawRangeCursor) {\n                let piece = measureCursor(this.view, r, prim);\n                if (piece)\n                    cursors.push(piece);\n            }\n        }\n        return { rangePieces, cursors };\n    }\n    drawSel({ rangePieces, cursors }) {\n        if (rangePieces.length != this.rangePieces.length || rangePieces.some((p, i) => !p.eq(this.rangePieces[i]))) {\n            this.selectionLayer.textContent = \"\";\n            for (let p of rangePieces)\n                this.selectionLayer.appendChild(p.draw());\n            this.rangePieces = rangePieces;\n        }\n        if (cursors.length != this.cursors.length || cursors.some((c, i) => !c.eq(this.cursors[i]))) {\n            let oldCursors = this.cursorLayer.children;\n            if (oldCursors.length !== cursors.length) {\n                this.cursorLayer.textContent = \"\";\n                for (const c of cursors)\n                    this.cursorLayer.appendChild(c.draw());\n            }\n            else {\n                cursors.forEach((c, idx) => c.adjust(oldCursors[idx]));\n            }\n            this.cursors = cursors;\n        }\n    }\n    destroy() {\n        this.selectionLayer.remove();\n        this.cursorLayer.remove();\n    }\n});\nconst themeSpec = {\n    \".cm-line\": {\n        \"& ::selection\": { backgroundColor: \"transparent !important\" },\n        \"&::selection\": { backgroundColor: \"transparent !important\" }\n    }\n};\nif (CanHidePrimary)\n    themeSpec[\".cm-line\"].caretColor = \"transparent !important\";\nconst hideNativeSelection = /*@__PURE__*/Prec.highest(/*@__PURE__*/EditorView.theme(themeSpec));\nfunction getBase(view) {\n    let rect = view.scrollDOM.getBoundingClientRect();\n    let left = view.textDirection == Direction.LTR ? rect.left : rect.right - view.scrollDOM.clientWidth;\n    return { left: left - view.scrollDOM.scrollLeft, top: rect.top - view.scrollDOM.scrollTop };\n}\nfunction wrappedLine(view, pos, inside) {\n    let range = EditorSelection.cursor(pos);\n    return { from: Math.max(inside.from, view.moveToLineBoundary(range, false, true).from),\n        to: Math.min(inside.to, view.moveToLineBoundary(range, true, true).from),\n        type: BlockType.Text };\n}\nfunction blockAt(view, pos) {\n    let line = view.lineBlockAt(pos);\n    if (Array.isArray(line.type))\n        for (let l of line.type) {\n            if (l.to > pos || l.to == pos && (l.to == line.to || l.type == BlockType.Text))\n                return l;\n        }\n    return line;\n}\nfunction measureRange(view, range) {\n    if (range.to <= view.viewport.from || range.from >= view.viewport.to)\n        return [];\n    let from = Math.max(range.from, view.viewport.from), to = Math.min(range.to, view.viewport.to);\n    let ltr = view.textDirection == Direction.LTR;\n    let content = view.contentDOM, contentRect = content.getBoundingClientRect(), base = getBase(view);\n    let lineStyle = window.getComputedStyle(content.firstChild);\n    let leftSide = contentRect.left + parseInt(lineStyle.paddingLeft) + Math.min(0, parseInt(lineStyle.textIndent));\n    let rightSide = contentRect.right - parseInt(lineStyle.paddingRight);\n    let startBlock = blockAt(view, from), endBlock = blockAt(view, to);\n    let visualStart = startBlock.type == BlockType.Text ? startBlock : null;\n    let visualEnd = endBlock.type == BlockType.Text ? endBlock : null;\n    if (view.lineWrapping) {\n        if (visualStart)\n            visualStart = wrappedLine(view, from, visualStart);\n        if (visualEnd)\n            visualEnd = wrappedLine(view, to, visualEnd);\n    }\n    if (visualStart && visualEnd && visualStart.from == visualEnd.from) {\n        return pieces(drawForLine(range.from, range.to, visualStart));\n    }\n    else {\n        let top = visualStart ? drawForLine(range.from, null, visualStart) : drawForWidget(startBlock, false);\n        let bottom = visualEnd ? drawForLine(null, range.to, visualEnd) : drawForWidget(endBlock, true);\n        let between = [];\n        if ((visualStart || startBlock).to < (visualEnd || endBlock).from - 1)\n            between.push(piece(leftSide, top.bottom, rightSide, bottom.top));\n        else if (top.bottom < bottom.top && view.elementAtHeight((top.bottom + bottom.top) / 2).type == BlockType.Text)\n            top.bottom = bottom.top = (top.bottom + bottom.top) / 2;\n        return pieces(top).concat(between).concat(pieces(bottom));\n    }\n    function piece(left, top, right, bottom) {\n        return new Piece(left - base.left, top - base.top - 0.01 /* Epsilon */, right - left, bottom - top + 0.01 /* Epsilon */, \"cm-selectionBackground\");\n    }\n    function pieces({ top, bottom, horizontal }) {\n        let pieces = [];\n        for (let i = 0; i < horizontal.length; i += 2)\n            pieces.push(piece(horizontal[i], top, horizontal[i + 1], bottom));\n        return pieces;\n    }\n    // Gets passed from/to in line-local positions\n    function drawForLine(from, to, line) {\n        let top = 1e9, bottom = -1e9, horizontal = [];\n        function addSpan(from, fromOpen, to, toOpen, dir) {\n            // Passing 2/-2 is a kludge to force the view to return\n            // coordinates on the proper side of block widgets, since\n            // normalizing the side there, though appropriate for most\n            // coordsAtPos queries, would break selection drawing.\n            let fromCoords = view.coordsAtPos(from, (from == line.to ? -2 : 2));\n            let toCoords = view.coordsAtPos(to, (to == line.from ? 2 : -2));\n            top = Math.min(fromCoords.top, toCoords.top, top);\n            bottom = Math.max(fromCoords.bottom, toCoords.bottom, bottom);\n            if (dir == Direction.LTR)\n                horizontal.push(ltr && fromOpen ? leftSide : fromCoords.left, ltr && toOpen ? rightSide : toCoords.right);\n            else\n                horizontal.push(!ltr && toOpen ? leftSide : toCoords.left, !ltr && fromOpen ? rightSide : fromCoords.right);\n        }\n        let start = from !== null && from !== void 0 ? from : line.from, end = to !== null && to !== void 0 ? to : line.to;\n        // Split the range by visible range and document line\n        for (let r of view.visibleRanges)\n            if (r.to > start && r.from < end) {\n                for (let pos = Math.max(r.from, start), endPos = Math.min(r.to, end);;) {\n                    let docLine = view.state.doc.lineAt(pos);\n                    for (let span of view.bidiSpans(docLine)) {\n                        let spanFrom = span.from + docLine.from, spanTo = span.to + docLine.from;\n                        if (spanFrom >= endPos)\n                            break;\n                        if (spanTo > pos)\n                            addSpan(Math.max(spanFrom, pos), from == null && spanFrom <= start, Math.min(spanTo, endPos), to == null && spanTo >= end, span.dir);\n                    }\n                    pos = docLine.to + 1;\n                    if (pos >= endPos)\n                        break;\n                }\n            }\n        if (horizontal.length == 0)\n            addSpan(start, from == null, end, to == null, view.textDirection);\n        return { top, bottom, horizontal };\n    }\n    function drawForWidget(block, top) {\n        let y = contentRect.top + (top ? block.top : block.bottom);\n        return { top: y, bottom: y, horizontal: [] };\n    }\n}\nfunction measureCursor(view, cursor, primary) {\n    let pos = view.coordsAtPos(cursor.head, cursor.assoc || 1);\n    if (!pos)\n        return null;\n    let base = getBase(view);\n    return new Piece(pos.left - base.left, pos.top - base.top, -1, pos.bottom - pos.top, primary ? \"cm-cursor cm-cursor-primary\" : \"cm-cursor cm-cursor-secondary\");\n}\n\nconst setDropCursorPos = /*@__PURE__*/StateEffect.define({\n    map(pos, mapping) { return pos == null ? null : mapping.mapPos(pos); }\n});\nconst dropCursorPos = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(pos, tr) {\n        if (pos != null)\n            pos = tr.changes.mapPos(pos);\n        return tr.effects.reduce((pos, e) => e.is(setDropCursorPos) ? e.value : pos, pos);\n    }\n});\nconst drawDropCursor = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.cursor = null;\n        this.measureReq = { read: this.readPos.bind(this), write: this.drawCursor.bind(this) };\n    }\n    update(update) {\n        var _a;\n        let cursorPos = update.state.field(dropCursorPos);\n        if (cursorPos == null) {\n            if (this.cursor != null) {\n                (_a = this.cursor) === null || _a === void 0 ? void 0 : _a.remove();\n                this.cursor = null;\n            }\n        }\n        else {\n            if (!this.cursor) {\n                this.cursor = this.view.scrollDOM.appendChild(document.createElement(\"div\"));\n                this.cursor.className = \"cm-dropCursor\";\n            }\n            if (update.startState.field(dropCursorPos) != cursorPos || update.docChanged || update.geometryChanged)\n                this.view.requestMeasure(this.measureReq);\n        }\n    }\n    readPos() {\n        let pos = this.view.state.field(dropCursorPos);\n        let rect = pos != null && this.view.coordsAtPos(pos);\n        if (!rect)\n            return null;\n        let outer = this.view.scrollDOM.getBoundingClientRect();\n        return {\n            left: rect.left - outer.left + this.view.scrollDOM.scrollLeft,\n            top: rect.top - outer.top + this.view.scrollDOM.scrollTop,\n            height: rect.bottom - rect.top\n        };\n    }\n    drawCursor(pos) {\n        if (this.cursor) {\n            if (pos) {\n                this.cursor.style.left = pos.left + \"px\";\n                this.cursor.style.top = pos.top + \"px\";\n                this.cursor.style.height = pos.height + \"px\";\n            }\n            else {\n                this.cursor.style.left = \"-100000px\";\n            }\n        }\n    }\n    destroy() {\n        if (this.cursor)\n            this.cursor.remove();\n    }\n    setDropPos(pos) {\n        if (this.view.state.field(dropCursorPos) != pos)\n            this.view.dispatch({ effects: setDropCursorPos.of(pos) });\n    }\n}, {\n    eventHandlers: {\n        dragover(event) {\n            this.setDropPos(this.view.posAtCoords({ x: event.clientX, y: event.clientY }));\n        },\n        dragleave(event) {\n            if (event.target == this.view.contentDOM || !this.view.contentDOM.contains(event.relatedTarget))\n                this.setDropPos(null);\n        },\n        dragend() {\n            this.setDropPos(null);\n        },\n        drop() {\n            this.setDropPos(null);\n        }\n    }\n});\n/**\nDraws a cursor at the current drop position when something is\ndragged over the editor.\n*/\nfunction dropCursor() {\n    return [dropCursorPos, drawDropCursor];\n}\n\nfunction iterMatches(doc, re, from, to, f) {\n    re.lastIndex = 0;\n    for (let cursor = doc.iterRange(from, to), pos = from, m; !cursor.next().done; pos += cursor.value.length) {\n        if (!cursor.lineBreak)\n            while (m = re.exec(cursor.value))\n                f(pos + m.index, pos + m.index + m[0].length, m);\n    }\n}\nfunction matchRanges(view, maxLength) {\n    let visible = view.visibleRanges;\n    if (visible.length == 1 && visible[0].from == view.viewport.from &&\n        visible[0].to == view.viewport.to)\n        return visible;\n    let result = [];\n    for (let { from, to } of visible) {\n        from = Math.max(view.state.doc.lineAt(from).from, from - maxLength);\n        to = Math.min(view.state.doc.lineAt(to).to, to + maxLength);\n        if (result.length && result[result.length - 1].to >= from)\n            result[result.length - 1].to = to;\n        else\n            result.push({ from, to });\n    }\n    return result;\n}\n/**\nHelper class used to make it easier to maintain decorations on\nvisible code that matches a given regular expression. To be used\nin a [view plugin](https://codemirror.net/6/docs/ref/#view.ViewPlugin). Instances of this object\nrepresent a matching configuration.\n*/\nclass MatchDecorator {\n    /**\n    Create a decorator.\n    */\n    constructor(config) {\n        let { regexp, decoration, boundary, maxLength = 1000 } = config;\n        if (!regexp.global)\n            throw new RangeError(\"The regular expression given to MatchDecorator should have its 'g' flag set\");\n        this.regexp = regexp;\n        this.getDeco = typeof decoration == \"function\" ? decoration : () => decoration;\n        this.boundary = boundary;\n        this.maxLength = maxLength;\n    }\n    /**\n    Compute the full set of decorations for matches in the given\n    view's viewport. You'll want to call this when initializing your\n    plugin.\n    */\n    createDeco(view) {\n        let build = new RangeSetBuilder();\n        for (let { from, to } of matchRanges(view, this.maxLength))\n            iterMatches(view.state.doc, this.regexp, from, to, (a, b, m) => build.add(a, b, this.getDeco(m, view, a)));\n        return build.finish();\n    }\n    /**\n    Update a set of decorations for a view update. `deco` _must_ be\n    the set of decorations produced by _this_ `MatchDecorator` for\n    the view state before the update.\n    */\n    updateDeco(update, deco) {\n        let changeFrom = 1e9, changeTo = -1;\n        if (update.docChanged)\n            update.changes.iterChanges((_f, _t, from, to) => {\n                if (to > update.view.viewport.from && from < update.view.viewport.to) {\n                    changeFrom = Math.min(from, changeFrom);\n                    changeTo = Math.max(to, changeTo);\n                }\n            });\n        if (update.viewportChanged || changeTo - changeFrom > 1000)\n            return this.createDeco(update.view);\n        if (changeTo > -1)\n            return this.updateRange(update.view, deco.map(update.changes), changeFrom, changeTo);\n        return deco;\n    }\n    updateRange(view, deco, updateFrom, updateTo) {\n        for (let r of view.visibleRanges) {\n            let from = Math.max(r.from, updateFrom), to = Math.min(r.to, updateTo);\n            if (to > from) {\n                let fromLine = view.state.doc.lineAt(from), toLine = fromLine.to < to ? view.state.doc.lineAt(to) : fromLine;\n                let start = Math.max(r.from, fromLine.from), end = Math.min(r.to, toLine.to);\n                if (this.boundary) {\n                    for (; from > fromLine.from; from--)\n                        if (this.boundary.test(fromLine.text[from - 1 - fromLine.from])) {\n                            start = from;\n                            break;\n                        }\n                    for (; to < toLine.to; to++)\n                        if (this.boundary.test(toLine.text[to - toLine.from])) {\n                            end = to;\n                            break;\n                        }\n                }\n                let ranges = [], m;\n                if (fromLine == toLine) {\n                    this.regexp.lastIndex = start - fromLine.from;\n                    while ((m = this.regexp.exec(fromLine.text)) && m.index < end - fromLine.from) {\n                        let pos = m.index + fromLine.from;\n                        ranges.push(this.getDeco(m, view, pos).range(pos, pos + m[0].length));\n                    }\n                }\n                else {\n                    iterMatches(view.state.doc, this.regexp, start, end, (from, to, m) => ranges.push(this.getDeco(m, view, from).range(from, to)));\n                }\n                deco = deco.update({ filterFrom: start, filterTo: end, filter: (from, to) => from < start || to > end, add: ranges });\n            }\n        }\n        return deco;\n    }\n}\n\nconst UnicodeRegexpSupport = /x/.unicode != null ? \"gu\" : \"g\";\nconst Specials = /*@__PURE__*/new RegExp(\"[\\u0000-\\u0008\\u000a-\\u001f\\u007f-\\u009f\\u00ad\\u061c\\u200b\\u200e\\u200f\\u2028\\u2029\\u202d\\u202e\\ufeff\\ufff9-\\ufffc]\", UnicodeRegexpSupport);\nconst Names = {\n    0: \"null\",\n    7: \"bell\",\n    8: \"backspace\",\n    10: \"newline\",\n    11: \"vertical tab\",\n    13: \"carriage return\",\n    27: \"escape\",\n    8203: \"zero width space\",\n    8204: \"zero width non-joiner\",\n    8205: \"zero width joiner\",\n    8206: \"left-to-right mark\",\n    8207: \"right-to-left mark\",\n    8232: \"line separator\",\n    8237: \"left-to-right override\",\n    8238: \"right-to-left override\",\n    8233: \"paragraph separator\",\n    65279: \"zero width no-break space\",\n    65532: \"object replacement\"\n};\nlet _supportsTabSize = null;\nfunction supportsTabSize() {\n    var _a;\n    if (_supportsTabSize == null && typeof document != \"undefined\" && document.body) {\n        let styles = document.body.style;\n        _supportsTabSize = ((_a = styles.tabSize) !== null && _a !== void 0 ? _a : styles.MozTabSize) != null;\n    }\n    return _supportsTabSize || false;\n}\nconst specialCharConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        let config = combineConfig(configs, {\n            render: null,\n            specialChars: Specials,\n            addSpecialChars: null\n        });\n        if (config.replaceTabs = !supportsTabSize())\n            config.specialChars = new RegExp(\"\\t|\" + config.specialChars.source, UnicodeRegexpSupport);\n        if (config.addSpecialChars)\n            config.specialChars = new RegExp(config.specialChars.source + \"|\" + config.addSpecialChars.source, UnicodeRegexpSupport);\n        return config;\n    }\n});\n/**\nReturns an extension that installs highlighting of special\ncharacters.\n*/\nfunction highlightSpecialChars(\n/**\nConfiguration options.\n*/\nconfig = {}) {\n    return [specialCharConfig.of(config), specialCharPlugin()];\n}\nlet _plugin = null;\nfunction specialCharPlugin() {\n    return _plugin || (_plugin = ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.decorations = Decoration.none;\n            this.decorationCache = Object.create(null);\n            this.decorator = this.makeDecorator(view.state.facet(specialCharConfig));\n            this.decorations = this.decorator.createDeco(view);\n        }\n        makeDecorator(conf) {\n            return new MatchDecorator({\n                regexp: conf.specialChars,\n                decoration: (m, view, pos) => {\n                    let { doc } = view.state;\n                    let code = codePointAt(m[0], 0);\n                    if (code == 9) {\n                        let line = doc.lineAt(pos);\n                        let size = view.state.tabSize, col = countColumn(line.text, size, pos - line.from);\n                        return Decoration.replace({ widget: new TabWidget((size - (col % size)) * this.view.defaultCharacterWidth) });\n                    }\n                    return this.decorationCache[code] ||\n                        (this.decorationCache[code] = Decoration.replace({ widget: new SpecialCharWidget(conf, code) }));\n                },\n                boundary: conf.replaceTabs ? undefined : /[^]/\n            });\n        }\n        update(update) {\n            let conf = update.state.facet(specialCharConfig);\n            if (update.startState.facet(specialCharConfig) != conf) {\n                this.decorator = this.makeDecorator(conf);\n                this.decorations = this.decorator.createDeco(update.view);\n            }\n            else {\n                this.decorations = this.decorator.updateDeco(update, this.decorations);\n            }\n        }\n    }, {\n        decorations: v => v.decorations\n    }));\n}\nconst DefaultPlaceholder = \"\\u2022\";\n// Assigns placeholder characters from the Control Pictures block to\n// ASCII control characters\nfunction placeholder$1(code) {\n    if (code >= 32)\n        return DefaultPlaceholder;\n    if (code == 10)\n        return \"\\u2424\";\n    return String.fromCharCode(9216 + code);\n}\nclass SpecialCharWidget extends WidgetType {\n    constructor(options, code) {\n        super();\n        this.options = options;\n        this.code = code;\n    }\n    eq(other) { return other.code == this.code; }\n    toDOM(view) {\n        let ph = placeholder$1(this.code);\n        let desc = view.state.phrase(\"Control character\") + \" \" + (Names[this.code] || \"0x\" + this.code.toString(16));\n        let custom = this.options.render && this.options.render(this.code, desc, ph);\n        if (custom)\n            return custom;\n        let span = document.createElement(\"span\");\n        span.textContent = ph;\n        span.title = desc;\n        span.setAttribute(\"aria-label\", desc);\n        span.className = \"cm-specialChar\";\n        return span;\n    }\n    ignoreEvent() { return false; }\n}\nclass TabWidget extends WidgetType {\n    constructor(width) {\n        super();\n        this.width = width;\n    }\n    eq(other) { return other.width == this.width; }\n    toDOM() {\n        let span = document.createElement(\"span\");\n        span.textContent = \"\\t\";\n        span.className = \"cm-tab\";\n        span.style.width = this.width + \"px\";\n        return span;\n    }\n    ignoreEvent() { return false; }\n}\n\nconst plugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor() {\n        this.height = 1000;\n        this.attrs = { style: \"padding-bottom: 1000px\" };\n    }\n    update(update) {\n        let height = update.view.viewState.editorHeight - update.view.defaultLineHeight;\n        if (height != this.height) {\n            this.height = height;\n            this.attrs = { style: `padding-bottom: ${height}px` };\n        }\n    }\n});\n/**\nReturns an extension that makes sure the content has a bottom\nmargin equivalent to the height of the editor, minus one line\nheight, so that every line in the document can be scrolled to the\ntop of the editor.\n\nThis is only meaningful when the editor is scrollable, and should\nnot be enabled in editors that take the size of their content.\n*/\nfunction scrollPastEnd() {\n    return [plugin, contentAttributes.of(view => { var _a; return ((_a = view.plugin(plugin)) === null || _a === void 0 ? void 0 : _a.attrs) || null; })];\n}\n\n/**\nMark lines that have a cursor on them with the `\"cm-activeLine\"`\nDOM class.\n*/\nfunction highlightActiveLine() {\n    return activeLineHighlighter;\n}\nconst lineDeco = /*@__PURE__*/Decoration.line({ class: \"cm-activeLine\" });\nconst activeLineHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.decorations = this.getDeco(view);\n    }\n    update(update) {\n        if (update.docChanged || update.selectionSet)\n            this.decorations = this.getDeco(update.view);\n    }\n    getDeco(view) {\n        let lastLineStart = -1, deco = [];\n        for (let r of view.state.selection.ranges) {\n            if (!r.empty)\n                return Decoration.none;\n            let line = view.lineBlockAt(r.head);\n            if (line.from > lastLineStart) {\n                deco.push(lineDeco.range(line.from));\n                lastLineStart = line.from;\n            }\n        }\n        return Decoration.set(deco);\n    }\n}, {\n    decorations: v => v.decorations\n});\n\nclass Placeholder extends WidgetType {\n    constructor(content) {\n        super();\n        this.content = content;\n    }\n    toDOM() {\n        let wrap = document.createElement(\"span\");\n        wrap.className = \"cm-placeholder\";\n        wrap.style.pointerEvents = \"none\";\n        wrap.appendChild(typeof this.content == \"string\" ? document.createTextNode(this.content) : this.content);\n        if (typeof this.content == \"string\")\n            wrap.setAttribute(\"aria-label\", \"placeholder \" + this.content);\n        else\n            wrap.setAttribute(\"aria-hidden\", \"true\");\n        return wrap;\n    }\n    ignoreEvent() { return false; }\n}\n/**\nExtension that enables a placeholder—a piece of example content\nto show when the editor is empty.\n*/\nfunction placeholder(content) {\n    return ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.placeholder = Decoration.set([Decoration.widget({ widget: new Placeholder(content), side: 1 }).range(0)]);\n        }\n        get decorations() { return this.view.state.doc.length ? Decoration.none : this.placeholder; }\n    }, { decorations: v => v.decorations });\n}\n\n// Don't compute precise column positions for line offsets above this\n// (since it could get expensive). Assume offset==column for them.\nconst MaxOff = 2000;\nfunction rectangleFor(state, a, b) {\n    let startLine = Math.min(a.line, b.line), endLine = Math.max(a.line, b.line);\n    let ranges = [];\n    if (a.off > MaxOff || b.off > MaxOff || a.col < 0 || b.col < 0) {\n        let startOff = Math.min(a.off, b.off), endOff = Math.max(a.off, b.off);\n        for (let i = startLine; i <= endLine; i++) {\n            let line = state.doc.line(i);\n            if (line.length <= endOff)\n                ranges.push(EditorSelection.range(line.from + startOff, line.to + endOff));\n        }\n    }\n    else {\n        let startCol = Math.min(a.col, b.col), endCol = Math.max(a.col, b.col);\n        for (let i = startLine; i <= endLine; i++) {\n            let line = state.doc.line(i);\n            let start = findColumn(line.text, startCol, state.tabSize, true);\n            if (start > -1) {\n                let end = findColumn(line.text, endCol, state.tabSize);\n                ranges.push(EditorSelection.range(line.from + start, line.from + end));\n            }\n        }\n    }\n    return ranges;\n}\nfunction absoluteColumn(view, x) {\n    let ref = view.coordsAtPos(view.viewport.from);\n    return ref ? Math.round(Math.abs((ref.left - x) / view.defaultCharacterWidth)) : -1;\n}\nfunction getPos(view, event) {\n    let offset = view.posAtCoords({ x: event.clientX, y: event.clientY }, false);\n    let line = view.state.doc.lineAt(offset), off = offset - line.from;\n    let col = off > MaxOff ? -1\n        : off == line.length ? absoluteColumn(view, event.clientX)\n            : countColumn(line.text, view.state.tabSize, offset - line.from);\n    return { line: line.number, col, off };\n}\nfunction rectangleSelectionStyle(view, event) {\n    let start = getPos(view, event), startSel = view.state.selection;\n    if (!start)\n        return null;\n    return {\n        update(update) {\n            if (update.docChanged) {\n                let newStart = update.changes.mapPos(update.startState.doc.line(start.line).from);\n                let newLine = update.state.doc.lineAt(newStart);\n                start = { line: newLine.number, col: start.col, off: Math.min(start.off, newLine.length) };\n                startSel = startSel.map(update.changes);\n            }\n        },\n        get(event, _extend, multiple) {\n            let cur = getPos(view, event);\n            if (!cur)\n                return startSel;\n            let ranges = rectangleFor(view.state, start, cur);\n            if (!ranges.length)\n                return startSel;\n            if (multiple)\n                return EditorSelection.create(ranges.concat(startSel.ranges));\n            else\n                return EditorSelection.create(ranges);\n        }\n    };\n}\n/**\nCreate an extension that enables rectangular selections. By\ndefault, it will react to left mouse drag with the Alt key held\ndown. When such a selection occurs, the text within the rectangle\nthat was dragged over will be selected, as one selection\n[range](https://codemirror.net/6/docs/ref/#state.SelectionRange) per line.\n*/\nfunction rectangularSelection(options) {\n    let filter = (options === null || options === void 0 ? void 0 : options.eventFilter) || (e => e.altKey && e.button == 0);\n    return EditorView.mouseSelectionStyle.of((view, event) => filter(event) ? rectangleSelectionStyle(view, event) : null);\n}\nconst keys = {\n    Alt: [18, e => e.altKey],\n    Control: [17, e => e.ctrlKey],\n    Shift: [16, e => e.shiftKey],\n    Meta: [91, e => e.metaKey]\n};\nconst showCrosshair = { style: \"cursor: crosshair\" };\n/**\nReturns an extension that turns the pointer cursor into a\ncrosshair when a given modifier key, defaulting to Alt, is held\ndown. Can serve as a visual hint that rectangular selection is\ngoing to happen when paired with\n[`rectangularSelection`](https://codemirror.net/6/docs/ref/#view.rectangularSelection).\n*/\nfunction crosshairCursor(options = {}) {\n    let [code, getter] = keys[options.key || \"Alt\"];\n    let plugin = ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.isDown = false;\n        }\n        set(isDown) {\n            if (this.isDown != isDown) {\n                this.isDown = isDown;\n                this.view.update([]);\n            }\n        }\n    }, {\n        eventHandlers: {\n            keydown(e) {\n                this.set(e.keyCode == code || getter(e));\n            },\n            keyup(e) {\n                if (e.keyCode == code || !getter(e))\n                    this.set(false);\n            }\n        }\n    });\n    return [\n        plugin,\n        EditorView.contentAttributes.of(view => { var _a; return ((_a = view.plugin(plugin)) === null || _a === void 0 ? void 0 : _a.isDown) ? showCrosshair : null; })\n    ];\n}\n\nconst Outside = \"-10000px\";\nclass TooltipViewManager {\n    constructor(view, facet, createTooltipView) {\n        this.facet = facet;\n        this.createTooltipView = createTooltipView;\n        this.input = view.state.facet(facet);\n        this.tooltips = this.input.filter(t => t);\n        this.tooltipViews = this.tooltips.map(createTooltipView);\n    }\n    update(update) {\n        let input = update.state.facet(this.facet);\n        let tooltips = input.filter(x => x);\n        if (input === this.input) {\n            for (let t of this.tooltipViews)\n                if (t.update)\n                    t.update(update);\n            return false;\n        }\n        let tooltipViews = [];\n        for (let i = 0; i < tooltips.length; i++) {\n            let tip = tooltips[i], known = -1;\n            if (!tip)\n                continue;\n            for (let i = 0; i < this.tooltips.length; i++) {\n                let other = this.tooltips[i];\n                if (other && other.create == tip.create)\n                    known = i;\n            }\n            if (known < 0) {\n                tooltipViews[i] = this.createTooltipView(tip);\n            }\n            else {\n                let tooltipView = tooltipViews[i] = this.tooltipViews[known];\n                if (tooltipView.update)\n                    tooltipView.update(update);\n            }\n        }\n        for (let t of this.tooltipViews)\n            if (tooltipViews.indexOf(t) < 0)\n                t.dom.remove();\n        this.input = input;\n        this.tooltips = tooltips;\n        this.tooltipViews = tooltipViews;\n        return true;\n    }\n}\n/**\nCreates an extension that configures tooltip behavior.\n*/\nfunction tooltips(config = {}) {\n    return tooltipConfig.of(config);\n}\nfunction windowSpace() {\n    return { top: 0, left: 0, bottom: innerHeight, right: innerWidth };\n}\nconst tooltipConfig = /*@__PURE__*/Facet.define({\n    combine: values => {\n        var _a, _b, _c;\n        return ({\n            position: browser.ios ? \"absolute\" : ((_a = values.find(conf => conf.position)) === null || _a === void 0 ? void 0 : _a.position) || \"fixed\",\n            parent: ((_b = values.find(conf => conf.parent)) === null || _b === void 0 ? void 0 : _b.parent) || null,\n            tooltipSpace: ((_c = values.find(conf => conf.tooltipSpace)) === null || _c === void 0 ? void 0 : _c.tooltipSpace) || windowSpace,\n        });\n    }\n});\nconst tooltipPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        var _a;\n        this.view = view;\n        this.inView = true;\n        this.lastTransaction = 0;\n        this.measureTimeout = -1;\n        let config = view.state.facet(tooltipConfig);\n        this.position = config.position;\n        this.parent = config.parent;\n        this.classes = view.themeClasses;\n        this.createContainer();\n        this.measureReq = { read: this.readMeasure.bind(this), write: this.writeMeasure.bind(this), key: this };\n        this.manager = new TooltipViewManager(view, showTooltip, t => this.createTooltip(t));\n        this.intersectionObserver = typeof IntersectionObserver == \"function\" ? new IntersectionObserver(entries => {\n            if (Date.now() > this.lastTransaction - 50 &&\n                entries.length > 0 && entries[entries.length - 1].intersectionRatio < 1)\n                this.measureSoon();\n        }, { threshold: [1] }) : null;\n        this.observeIntersection();\n        (_a = view.dom.ownerDocument.defaultView) === null || _a === void 0 ? void 0 : _a.addEventListener(\"resize\", this.measureSoon = this.measureSoon.bind(this));\n        this.maybeMeasure();\n    }\n    createContainer() {\n        if (this.parent) {\n            this.container = document.createElement(\"div\");\n            this.container.style.position = \"relative\";\n            this.container.className = this.view.themeClasses;\n            this.parent.appendChild(this.container);\n        }\n        else {\n            this.container = this.view.dom;\n        }\n    }\n    observeIntersection() {\n        if (this.intersectionObserver) {\n            this.intersectionObserver.disconnect();\n            for (let tooltip of this.manager.tooltipViews)\n                this.intersectionObserver.observe(tooltip.dom);\n        }\n    }\n    measureSoon() {\n        if (this.measureTimeout < 0)\n            this.measureTimeout = setTimeout(() => {\n                this.measureTimeout = -1;\n                this.maybeMeasure();\n            }, 50);\n    }\n    update(update) {\n        if (update.transactions.length)\n            this.lastTransaction = Date.now();\n        let updated = this.manager.update(update);\n        if (updated)\n            this.observeIntersection();\n        let shouldMeasure = updated || update.geometryChanged;\n        let newConfig = update.state.facet(tooltipConfig);\n        if (newConfig.position != this.position) {\n            this.position = newConfig.position;\n            for (let t of this.manager.tooltipViews)\n                t.dom.style.position = this.position;\n            shouldMeasure = true;\n        }\n        if (newConfig.parent != this.parent) {\n            if (this.parent)\n                this.container.remove();\n            this.parent = newConfig.parent;\n            this.createContainer();\n            for (let t of this.manager.tooltipViews)\n                this.container.appendChild(t.dom);\n            shouldMeasure = true;\n        }\n        else if (this.parent && this.view.themeClasses != this.classes) {\n            this.classes = this.container.className = this.view.themeClasses;\n        }\n        if (shouldMeasure)\n            this.maybeMeasure();\n    }\n    createTooltip(tooltip) {\n        let tooltipView = tooltip.create(this.view);\n        tooltipView.dom.classList.add(\"cm-tooltip\");\n        if (tooltip.arrow && !tooltipView.dom.querySelector(\".cm-tooltip > .cm-tooltip-arrow\")) {\n            let arrow = document.createElement(\"div\");\n            arrow.className = \"cm-tooltip-arrow\";\n            tooltipView.dom.appendChild(arrow);\n        }\n        tooltipView.dom.style.position = this.position;\n        tooltipView.dom.style.top = Outside;\n        this.container.appendChild(tooltipView.dom);\n        if (tooltipView.mount)\n            tooltipView.mount(this.view);\n        return tooltipView;\n    }\n    destroy() {\n        var _a, _b;\n        (_a = this.view.dom.ownerDocument.defaultView) === null || _a === void 0 ? void 0 : _a.removeEventListener(\"resize\", this.measureSoon);\n        for (let { dom } of this.manager.tooltipViews)\n            dom.remove();\n        (_b = this.intersectionObserver) === null || _b === void 0 ? void 0 : _b.disconnect();\n        clearTimeout(this.measureTimeout);\n    }\n    readMeasure() {\n        let editor = this.view.dom.getBoundingClientRect();\n        return {\n            editor,\n            parent: this.parent ? this.container.getBoundingClientRect() : editor,\n            pos: this.manager.tooltips.map((t, i) => {\n                let tv = this.manager.tooltipViews[i];\n                return tv.getCoords ? tv.getCoords(t.pos) : this.view.coordsAtPos(t.pos);\n            }),\n            size: this.manager.tooltipViews.map(({ dom }) => dom.getBoundingClientRect()),\n            space: this.view.state.facet(tooltipConfig).tooltipSpace(this.view),\n        };\n    }\n    writeMeasure(measured) {\n        let { editor, space } = measured;\n        let others = [];\n        for (let i = 0; i < this.manager.tooltips.length; i++) {\n            let tooltip = this.manager.tooltips[i], tView = this.manager.tooltipViews[i], { dom } = tView;\n            let pos = measured.pos[i], size = measured.size[i];\n            // Hide tooltips that are outside of the editor.\n            if (!pos || pos.bottom <= Math.max(editor.top, space.top) ||\n                pos.top >= Math.min(editor.bottom, space.bottom) ||\n                pos.right < Math.max(editor.left, space.left) - .1 ||\n                pos.left > Math.min(editor.right, space.right) + .1) {\n                dom.style.top = Outside;\n                continue;\n            }\n            let arrow = tooltip.arrow ? tView.dom.querySelector(\".cm-tooltip-arrow\") : null;\n            let arrowHeight = arrow ? 7 /* Size */ : 0;\n            let width = size.right - size.left, height = size.bottom - size.top;\n            let offset = tView.offset || noOffset, ltr = this.view.textDirection == Direction.LTR;\n            let left = size.width > space.right - space.left ? (ltr ? space.left : space.right - size.width)\n                : ltr ? Math.min(pos.left - (arrow ? 14 /* Offset */ : 0) + offset.x, space.right - width)\n                    : Math.max(space.left, pos.left - width + (arrow ? 14 /* Offset */ : 0) - offset.x);\n            let above = !!tooltip.above;\n            if (!tooltip.strictSide && (above\n                ? pos.top - (size.bottom - size.top) - offset.y < space.top\n                : pos.bottom + (size.bottom - size.top) + offset.y > space.bottom) &&\n                above == (space.bottom - pos.bottom > pos.top - space.top))\n                above = !above;\n            let top = above ? pos.top - height - arrowHeight - offset.y : pos.bottom + arrowHeight + offset.y;\n            let right = left + width;\n            if (tView.overlap !== true)\n                for (let r of others)\n                    if (r.left < right && r.right > left && r.top < top + height && r.bottom > top)\n                        top = above ? r.top - height - 2 - arrowHeight : r.bottom + arrowHeight + 2;\n            if (this.position == \"absolute\") {\n                dom.style.top = (top - measured.parent.top) + \"px\";\n                dom.style.left = (left - measured.parent.left) + \"px\";\n            }\n            else {\n                dom.style.top = top + \"px\";\n                dom.style.left = left + \"px\";\n            }\n            if (arrow)\n                arrow.style.left = `${pos.left + (ltr ? offset.x : -offset.x) - (left + 14 /* Offset */ - 7 /* Size */)}px`;\n            if (tView.overlap !== true)\n                others.push({ left, top, right, bottom: top + height });\n            dom.classList.toggle(\"cm-tooltip-above\", above);\n            dom.classList.toggle(\"cm-tooltip-below\", !above);\n            if (tView.positioned)\n                tView.positioned();\n        }\n    }\n    maybeMeasure() {\n        if (this.manager.tooltips.length) {\n            if (this.view.inView)\n                this.view.requestMeasure(this.measureReq);\n            if (this.inView != this.view.inView) {\n                this.inView = this.view.inView;\n                if (!this.inView)\n                    for (let tv of this.manager.tooltipViews)\n                        tv.dom.style.top = Outside;\n            }\n        }\n    }\n}, {\n    eventHandlers: {\n        scroll() { this.maybeMeasure(); }\n    }\n});\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-tooltip\": {\n        zIndex: 100\n    },\n    \"&light .cm-tooltip\": {\n        border: \"1px solid #bbb\",\n        backgroundColor: \"#f5f5f5\"\n    },\n    \"&light .cm-tooltip-section:not(:first-child)\": {\n        borderTop: \"1px solid #bbb\",\n    },\n    \"&dark .cm-tooltip\": {\n        backgroundColor: \"#333338\",\n        color: \"white\"\n    },\n    \".cm-tooltip-arrow\": {\n        height: `${7 /* Size */}px`,\n        width: `${7 /* Size */ * 2}px`,\n        position: \"absolute\",\n        zIndex: -1,\n        overflow: \"hidden\",\n        \"&:before, &:after\": {\n            content: \"''\",\n            position: \"absolute\",\n            width: 0,\n            height: 0,\n            borderLeft: `${7 /* Size */}px solid transparent`,\n            borderRight: `${7 /* Size */}px solid transparent`,\n        },\n        \".cm-tooltip-above &\": {\n            bottom: `-${7 /* Size */}px`,\n            \"&:before\": {\n                borderTop: `${7 /* Size */}px solid #bbb`,\n            },\n            \"&:after\": {\n                borderTop: `${7 /* Size */}px solid #f5f5f5`,\n                bottom: \"1px\"\n            }\n        },\n        \".cm-tooltip-below &\": {\n            top: `-${7 /* Size */}px`,\n            \"&:before\": {\n                borderBottom: `${7 /* Size */}px solid #bbb`,\n            },\n            \"&:after\": {\n                borderBottom: `${7 /* Size */}px solid #f5f5f5`,\n                top: \"1px\"\n            }\n        },\n    },\n    \"&dark .cm-tooltip .cm-tooltip-arrow\": {\n        \"&:before\": {\n            borderTopColor: \"#333338\",\n            borderBottomColor: \"#333338\"\n        },\n        \"&:after\": {\n            borderTopColor: \"transparent\",\n            borderBottomColor: \"transparent\"\n        }\n    }\n});\nconst noOffset = { x: 0, y: 0 };\n/**\nFacet to which an extension can add a value to show a tooltip.\n*/\nconst showTooltip = /*@__PURE__*/Facet.define({\n    enables: [tooltipPlugin, baseTheme]\n});\nconst showHoverTooltip = /*@__PURE__*/Facet.define();\nclass HoverTooltipHost {\n    constructor(view) {\n        this.view = view;\n        this.mounted = false;\n        this.dom = document.createElement(\"div\");\n        this.dom.classList.add(\"cm-tooltip-hover\");\n        this.manager = new TooltipViewManager(view, showHoverTooltip, t => this.createHostedView(t));\n    }\n    // Needs to be static so that host tooltip instances always match\n    static create(view) {\n        return new HoverTooltipHost(view);\n    }\n    createHostedView(tooltip) {\n        let hostedView = tooltip.create(this.view);\n        hostedView.dom.classList.add(\"cm-tooltip-section\");\n        this.dom.appendChild(hostedView.dom);\n        if (this.mounted && hostedView.mount)\n            hostedView.mount(this.view);\n        return hostedView;\n    }\n    mount(view) {\n        for (let hostedView of this.manager.tooltipViews) {\n            if (hostedView.mount)\n                hostedView.mount(view);\n        }\n        this.mounted = true;\n    }\n    positioned() {\n        for (let hostedView of this.manager.tooltipViews) {\n            if (hostedView.positioned)\n                hostedView.positioned();\n        }\n    }\n    update(update) {\n        this.manager.update(update);\n    }\n}\nconst showHoverTooltipHost = /*@__PURE__*/showTooltip.compute([showHoverTooltip], state => {\n    let tooltips = state.facet(showHoverTooltip).filter(t => t);\n    if (tooltips.length === 0)\n        return null;\n    return {\n        pos: Math.min(...tooltips.map(t => t.pos)),\n        end: Math.max(...tooltips.filter(t => t.end != null).map(t => t.end)),\n        create: HoverTooltipHost.create,\n        above: tooltips[0].above,\n        arrow: tooltips.some(t => t.arrow),\n    };\n});\nclass HoverPlugin {\n    constructor(view, source, field, setHover, hoverTime) {\n        this.view = view;\n        this.source = source;\n        this.field = field;\n        this.setHover = setHover;\n        this.hoverTime = hoverTime;\n        this.hoverTimeout = -1;\n        this.restartTimeout = -1;\n        this.pending = null;\n        this.lastMove = { x: 0, y: 0, target: view.dom, time: 0 };\n        this.checkHover = this.checkHover.bind(this);\n        view.dom.addEventListener(\"mouseleave\", this.mouseleave = this.mouseleave.bind(this));\n        view.dom.addEventListener(\"mousemove\", this.mousemove = this.mousemove.bind(this));\n    }\n    update() {\n        if (this.pending) {\n            this.pending = null;\n            clearTimeout(this.restartTimeout);\n            this.restartTimeout = setTimeout(() => this.startHover(), 20);\n        }\n    }\n    get active() {\n        return this.view.state.field(this.field);\n    }\n    checkHover() {\n        this.hoverTimeout = -1;\n        if (this.active)\n            return;\n        let hovered = Date.now() - this.lastMove.time;\n        if (hovered < this.hoverTime)\n            this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime - hovered);\n        else\n            this.startHover();\n    }\n    startHover() {\n        clearTimeout(this.restartTimeout);\n        let { lastMove } = this;\n        let pos = this.view.contentDOM.contains(lastMove.target) ? this.view.posAtCoords(lastMove) : null;\n        if (pos == null)\n            return;\n        let posCoords = this.view.coordsAtPos(pos);\n        if (posCoords == null || lastMove.y < posCoords.top || lastMove.y > posCoords.bottom ||\n            lastMove.x < posCoords.left - this.view.defaultCharacterWidth ||\n            lastMove.x > posCoords.right + this.view.defaultCharacterWidth)\n            return;\n        let bidi = this.view.bidiSpans(this.view.state.doc.lineAt(pos)).find(s => s.from <= pos && s.to >= pos);\n        let rtl = bidi && bidi.dir == Direction.RTL ? -1 : 1;\n        let open = this.source(this.view, pos, (lastMove.x < posCoords.left ? -rtl : rtl));\n        if (open === null || open === void 0 ? void 0 : open.then) {\n            let pending = this.pending = { pos };\n            open.then(result => {\n                if (this.pending == pending) {\n                    this.pending = null;\n                    if (result)\n                        this.view.dispatch({ effects: this.setHover.of(result) });\n                }\n            }, e => logException(this.view.state, e, \"hover tooltip\"));\n        }\n        else if (open) {\n            this.view.dispatch({ effects: this.setHover.of(open) });\n        }\n    }\n    mousemove(event) {\n        var _a;\n        this.lastMove = { x: event.clientX, y: event.clientY, target: event.target, time: Date.now() };\n        if (this.hoverTimeout < 0)\n            this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime);\n        let tooltip = this.active;\n        if (tooltip && !isInTooltip(this.lastMove.target) || this.pending) {\n            let { pos } = tooltip || this.pending, end = (_a = tooltip === null || tooltip === void 0 ? void 0 : tooltip.end) !== null && _a !== void 0 ? _a : pos;\n            if ((pos == end ? this.view.posAtCoords(this.lastMove) != pos\n                : !isOverRange(this.view, pos, end, event.clientX, event.clientY, 6 /* MaxDist */))) {\n                this.view.dispatch({ effects: this.setHover.of(null) });\n                this.pending = null;\n            }\n        }\n    }\n    mouseleave() {\n        clearTimeout(this.hoverTimeout);\n        this.hoverTimeout = -1;\n        if (this.active)\n            this.view.dispatch({ effects: this.setHover.of(null) });\n    }\n    destroy() {\n        clearTimeout(this.hoverTimeout);\n        this.view.dom.removeEventListener(\"mouseleave\", this.mouseleave);\n        this.view.dom.removeEventListener(\"mousemove\", this.mousemove);\n    }\n}\nfunction isInTooltip(elt) {\n    for (let cur = elt; cur; cur = cur.parentNode)\n        if (cur.nodeType == 1 && cur.classList.contains(\"cm-tooltip\"))\n            return true;\n    return false;\n}\nfunction isOverRange(view, from, to, x, y, margin) {\n    let range = document.createRange();\n    let fromDOM = view.domAtPos(from), toDOM = view.domAtPos(to);\n    range.setEnd(toDOM.node, toDOM.offset);\n    range.setStart(fromDOM.node, fromDOM.offset);\n    let rects = range.getClientRects();\n    range.detach();\n    for (let i = 0; i < rects.length; i++) {\n        let rect = rects[i];\n        let dist = Math.max(rect.top - y, y - rect.bottom, rect.left - x, x - rect.right);\n        if (dist <= margin)\n            return true;\n    }\n    return false;\n}\n/**\nSet up a hover tooltip, which shows up when the pointer hovers\nover ranges of text. The callback is called when the mouse hovers\nover the document text. It should, if there is a tooltip\nassociated with position `pos`, return the tooltip description\n(either directly or in a promise). The `side` argument indicates\non which side of the position the pointer is—it will be -1 if the\npointer is before the position, 1 if after the position.\n\nNote that all hover tooltips are hosted within a single tooltip\ncontainer element. This allows multiple tooltips over the same\nrange to be \"merged\" together without overlapping.\n*/\nfunction hoverTooltip(source, options = {}) {\n    let setHover = StateEffect.define();\n    let hoverState = StateField.define({\n        create() { return null; },\n        update(value, tr) {\n            if (value && (options.hideOnChange && (tr.docChanged || tr.selection) ||\n                options.hideOn && options.hideOn(tr, value)))\n                return null;\n            if (value && tr.docChanged) {\n                let newPos = tr.changes.mapPos(value.pos, -1, MapMode.TrackDel);\n                if (newPos == null)\n                    return null;\n                let copy = Object.assign(Object.create(null), value);\n                copy.pos = newPos;\n                if (value.end != null)\n                    copy.end = tr.changes.mapPos(value.end);\n                value = copy;\n            }\n            for (let effect of tr.effects) {\n                if (effect.is(setHover))\n                    value = effect.value;\n                if (effect.is(closeHoverTooltipEffect))\n                    value = null;\n            }\n            return value;\n        },\n        provide: f => showHoverTooltip.from(f)\n    });\n    return [\n        hoverState,\n        ViewPlugin.define(view => new HoverPlugin(view, source, hoverState, setHover, options.hoverTime || 300 /* Time */)),\n        showHoverTooltipHost\n    ];\n}\n/**\nGet the active tooltip view for a given tooltip, if available.\n*/\nfunction getTooltip(view, tooltip) {\n    let plugin = view.plugin(tooltipPlugin);\n    if (!plugin)\n        return null;\n    let found = plugin.manager.tooltips.indexOf(tooltip);\n    return found < 0 ? null : plugin.manager.tooltipViews[found];\n}\n/**\nReturns true if any hover tooltips are currently active.\n*/\nfunction hasHoverTooltips(state) {\n    return state.facet(showHoverTooltip).some(x => x);\n}\nconst closeHoverTooltipEffect = /*@__PURE__*/StateEffect.define();\n/**\nTransaction effect that closes all hover tooltips.\n*/\nconst closeHoverTooltips = /*@__PURE__*/closeHoverTooltipEffect.of(null);\n/**\nTell the tooltip extension to recompute the position of the active\ntooltips. This can be useful when something happens (such as a\nre-positioning or CSS change affecting the editor) that could\ninvalidate the existing tooltip positions.\n*/\nfunction repositionTooltips(view) {\n    var _a;\n    (_a = view.plugin(tooltipPlugin)) === null || _a === void 0 ? void 0 : _a.maybeMeasure();\n}\n\nconst panelConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        let topContainer, bottomContainer;\n        for (let c of configs) {\n            topContainer = topContainer || c.topContainer;\n            bottomContainer = bottomContainer || c.bottomContainer;\n        }\n        return { topContainer, bottomContainer };\n    }\n});\n/**\nConfigures the panel-managing extension.\n*/\nfunction panels(config) {\n    return config ? [panelConfig.of(config)] : [];\n}\n/**\nGet the active panel created by the given constructor, if any.\nThis can be useful when you need access to your panels' DOM\nstructure.\n*/\nfunction getPanel(view, panel) {\n    let plugin = view.plugin(panelPlugin);\n    let index = plugin ? plugin.specs.indexOf(panel) : -1;\n    return index > -1 ? plugin.panels[index] : null;\n}\nconst panelPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.input = view.state.facet(showPanel);\n        this.specs = this.input.filter(s => s);\n        this.panels = this.specs.map(spec => spec(view));\n        let conf = view.state.facet(panelConfig);\n        this.top = new PanelGroup(view, true, conf.topContainer);\n        this.bottom = new PanelGroup(view, false, conf.bottomContainer);\n        this.top.sync(this.panels.filter(p => p.top));\n        this.bottom.sync(this.panels.filter(p => !p.top));\n        for (let p of this.panels) {\n            p.dom.classList.add(\"cm-panel\");\n            if (p.mount)\n                p.mount();\n        }\n    }\n    update(update) {\n        let conf = update.state.facet(panelConfig);\n        if (this.top.container != conf.topContainer) {\n            this.top.sync([]);\n            this.top = new PanelGroup(update.view, true, conf.topContainer);\n        }\n        if (this.bottom.container != conf.bottomContainer) {\n            this.bottom.sync([]);\n            this.bottom = new PanelGroup(update.view, false, conf.bottomContainer);\n        }\n        this.top.syncClasses();\n        this.bottom.syncClasses();\n        let input = update.state.facet(showPanel);\n        if (input != this.input) {\n            let specs = input.filter(x => x);\n            let panels = [], top = [], bottom = [], mount = [];\n            for (let spec of specs) {\n                let known = this.specs.indexOf(spec), panel;\n                if (known < 0) {\n                    panel = spec(update.view);\n                    mount.push(panel);\n                }\n                else {\n                    panel = this.panels[known];\n                    if (panel.update)\n                        panel.update(update);\n                }\n                panels.push(panel);\n                (panel.top ? top : bottom).push(panel);\n            }\n            this.specs = specs;\n            this.panels = panels;\n            this.top.sync(top);\n            this.bottom.sync(bottom);\n            for (let p of mount) {\n                p.dom.classList.add(\"cm-panel\");\n                if (p.mount)\n                    p.mount();\n            }\n        }\n        else {\n            for (let p of this.panels)\n                if (p.update)\n                    p.update(update);\n        }\n    }\n    destroy() {\n        this.top.sync([]);\n        this.bottom.sync([]);\n    }\n}, {\n    provide: plugin => EditorView.scrollMargins.of(view => {\n        let value = view.plugin(plugin);\n        return value && { top: value.top.scrollMargin(), bottom: value.bottom.scrollMargin() };\n    })\n});\nclass PanelGroup {\n    constructor(view, top, container) {\n        this.view = view;\n        this.top = top;\n        this.container = container;\n        this.dom = undefined;\n        this.classes = \"\";\n        this.panels = [];\n        this.syncClasses();\n    }\n    sync(panels) {\n        for (let p of this.panels)\n            if (p.destroy && panels.indexOf(p) < 0)\n                p.destroy();\n        this.panels = panels;\n        this.syncDOM();\n    }\n    syncDOM() {\n        if (this.panels.length == 0) {\n            if (this.dom) {\n                this.dom.remove();\n                this.dom = undefined;\n            }\n            return;\n        }\n        if (!this.dom) {\n            this.dom = document.createElement(\"div\");\n            this.dom.className = this.top ? \"cm-panels cm-panels-top\" : \"cm-panels cm-panels-bottom\";\n            this.dom.style[this.top ? \"top\" : \"bottom\"] = \"0\";\n            let parent = this.container || this.view.dom;\n            parent.insertBefore(this.dom, this.top ? parent.firstChild : null);\n        }\n        let curDOM = this.dom.firstChild;\n        for (let panel of this.panels) {\n            if (panel.dom.parentNode == this.dom) {\n                while (curDOM != panel.dom)\n                    curDOM = rm(curDOM);\n                curDOM = curDOM.nextSibling;\n            }\n            else {\n                this.dom.insertBefore(panel.dom, curDOM);\n            }\n        }\n        while (curDOM)\n            curDOM = rm(curDOM);\n    }\n    scrollMargin() {\n        return !this.dom || this.container ? 0\n            : Math.max(0, this.top ?\n                this.dom.getBoundingClientRect().bottom - Math.max(0, this.view.scrollDOM.getBoundingClientRect().top) :\n                Math.min(innerHeight, this.view.scrollDOM.getBoundingClientRect().bottom) - this.dom.getBoundingClientRect().top);\n    }\n    syncClasses() {\n        if (!this.container || this.classes == this.view.themeClasses)\n            return;\n        for (let cls of this.classes.split(\" \"))\n            if (cls)\n                this.container.classList.remove(cls);\n        for (let cls of (this.classes = this.view.themeClasses).split(\" \"))\n            if (cls)\n                this.container.classList.add(cls);\n    }\n}\nfunction rm(node) {\n    let next = node.nextSibling;\n    node.remove();\n    return next;\n}\n/**\nOpening a panel is done by providing a constructor function for\nthe panel through this facet. (The panel is closed again when its\nconstructor is no longer provided.) Values of `null` are ignored.\n*/\nconst showPanel = /*@__PURE__*/Facet.define({\n    enables: panelPlugin\n});\n\n/**\nA gutter marker represents a bit of information attached to a line\nin a specific gutter. Your own custom markers have to extend this\nclass.\n*/\nclass GutterMarker extends RangeValue {\n    /**\n    @internal\n    */\n    compare(other) {\n        return this == other || this.constructor == other.constructor && this.eq(other);\n    }\n    /**\n    Compare this marker to another marker of the same type.\n    */\n    eq(other) { return false; }\n    /**\n    Called if the marker has a `toDOM` method and its representation\n    was removed from a gutter.\n    */\n    destroy(dom) { }\n}\nGutterMarker.prototype.elementClass = \"\";\nGutterMarker.prototype.toDOM = undefined;\nGutterMarker.prototype.mapMode = MapMode.TrackBefore;\nGutterMarker.prototype.startSide = GutterMarker.prototype.endSide = -1;\nGutterMarker.prototype.point = true;\n/**\nFacet used to add a class to all gutter elements for a given line.\nMarkers given to this facet should _only_ define an\n[`elementclass`](https://codemirror.net/6/docs/ref/#view.GutterMarker.elementClass), not a\n[`toDOM`](https://codemirror.net/6/docs/ref/#view.GutterMarker.toDOM) (or the marker will appear\nin all gutters for the line).\n*/\nconst gutterLineClass = /*@__PURE__*/Facet.define();\nconst defaults = {\n    class: \"\",\n    renderEmptyElements: false,\n    elementStyle: \"\",\n    markers: () => RangeSet.empty,\n    lineMarker: () => null,\n    lineMarkerChange: null,\n    initialSpacer: null,\n    updateSpacer: null,\n    domEventHandlers: {}\n};\nconst activeGutters = /*@__PURE__*/Facet.define();\n/**\nDefine an editor gutter. The order in which the gutters appear is\ndetermined by their extension priority.\n*/\nfunction gutter(config) {\n    return [gutters(), activeGutters.of(Object.assign(Object.assign({}, defaults), config))];\n}\nconst unfixGutters = /*@__PURE__*/Facet.define({\n    combine: values => values.some(x => x)\n});\n/**\nThe gutter-drawing plugin is automatically enabled when you add a\ngutter, but you can use this function to explicitly configure it.\n\nUnless `fixed` is explicitly set to `false`, the gutters are\nfixed, meaning they don't scroll along with the content\nhorizontally (except on Internet Explorer, which doesn't support\nCSS [`position:\nsticky`](https://developer.mozilla.org/en-US/docs/Web/CSS/position#sticky)).\n*/\nfunction gutters(config) {\n    let result = [\n        gutterView,\n    ];\n    if (config && config.fixed === false)\n        result.push(unfixGutters.of(true));\n    return result;\n}\nconst gutterView = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.prevViewport = view.viewport;\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-gutters\";\n        this.dom.setAttribute(\"aria-hidden\", \"true\");\n        this.dom.style.minHeight = this.view.contentHeight + \"px\";\n        this.gutters = view.state.facet(activeGutters).map(conf => new SingleGutterView(view, conf));\n        for (let gutter of this.gutters)\n            this.dom.appendChild(gutter.dom);\n        this.fixed = !view.state.facet(unfixGutters);\n        if (this.fixed) {\n            // FIXME IE11 fallback, which doesn't support position: sticky,\n            // by using position: relative + event handlers that realign the\n            // gutter (or just force fixed=false on IE11?)\n            this.dom.style.position = \"sticky\";\n        }\n        this.syncGutters(false);\n        view.scrollDOM.insertBefore(this.dom, view.contentDOM);\n    }\n    update(update) {\n        if (this.updateGutters(update)) {\n            // Detach during sync when the viewport changed significantly\n            // (such as during scrolling), since for large updates that is\n            // faster.\n            let vpA = this.prevViewport, vpB = update.view.viewport;\n            let vpOverlap = Math.min(vpA.to, vpB.to) - Math.max(vpA.from, vpB.from);\n            this.syncGutters(vpOverlap < (vpB.to - vpB.from) * 0.8);\n        }\n        if (update.geometryChanged)\n            this.dom.style.minHeight = this.view.contentHeight + \"px\";\n        if (this.view.state.facet(unfixGutters) != !this.fixed) {\n            this.fixed = !this.fixed;\n            this.dom.style.position = this.fixed ? \"sticky\" : \"\";\n        }\n        this.prevViewport = update.view.viewport;\n    }\n    syncGutters(detach) {\n        let after = this.dom.nextSibling;\n        if (detach)\n            this.dom.remove();\n        let lineClasses = RangeSet.iter(this.view.state.facet(gutterLineClass), this.view.viewport.from);\n        let classSet = [];\n        let contexts = this.gutters.map(gutter => new UpdateContext(gutter, this.view.viewport, -this.view.documentPadding.top));\n        for (let line of this.view.viewportLineBlocks) {\n            let text;\n            if (Array.isArray(line.type)) {\n                for (let b of line.type)\n                    if (b.type == BlockType.Text) {\n                        text = b;\n                        break;\n                    }\n            }\n            else {\n                text = line.type == BlockType.Text ? line : undefined;\n            }\n            if (!text)\n                continue;\n            if (classSet.length)\n                classSet = [];\n            advanceCursor(lineClasses, classSet, line.from);\n            for (let cx of contexts)\n                cx.line(this.view, text, classSet);\n        }\n        for (let cx of contexts)\n            cx.finish();\n        if (detach)\n            this.view.scrollDOM.insertBefore(this.dom, after);\n    }\n    updateGutters(update) {\n        let prev = update.startState.facet(activeGutters), cur = update.state.facet(activeGutters);\n        let change = update.docChanged || update.heightChanged || update.viewportChanged ||\n            !RangeSet.eq(update.startState.facet(gutterLineClass), update.state.facet(gutterLineClass), update.view.viewport.from, update.view.viewport.to);\n        if (prev == cur) {\n            for (let gutter of this.gutters)\n                if (gutter.update(update))\n                    change = true;\n        }\n        else {\n            change = true;\n            let gutters = [];\n            for (let conf of cur) {\n                let known = prev.indexOf(conf);\n                if (known < 0) {\n                    gutters.push(new SingleGutterView(this.view, conf));\n                }\n                else {\n                    this.gutters[known].update(update);\n                    gutters.push(this.gutters[known]);\n                }\n            }\n            for (let g of this.gutters) {\n                g.dom.remove();\n                if (gutters.indexOf(g) < 0)\n                    g.destroy();\n            }\n            for (let g of gutters)\n                this.dom.appendChild(g.dom);\n            this.gutters = gutters;\n        }\n        return change;\n    }\n    destroy() {\n        for (let view of this.gutters)\n            view.destroy();\n        this.dom.remove();\n    }\n}, {\n    provide: plugin => EditorView.scrollMargins.of(view => {\n        let value = view.plugin(plugin);\n        if (!value || value.gutters.length == 0 || !value.fixed)\n            return null;\n        return view.textDirection == Direction.LTR ? { left: value.dom.offsetWidth } : { right: value.dom.offsetWidth };\n    })\n});\nfunction asArray(val) { return (Array.isArray(val) ? val : [val]); }\nfunction advanceCursor(cursor, collect, pos) {\n    while (cursor.value && cursor.from <= pos) {\n        if (cursor.from == pos)\n            collect.push(cursor.value);\n        cursor.next();\n    }\n}\nclass UpdateContext {\n    constructor(gutter, viewport, height) {\n        this.gutter = gutter;\n        this.height = height;\n        this.localMarkers = [];\n        this.i = 0;\n        this.cursor = RangeSet.iter(gutter.markers, viewport.from);\n    }\n    line(view, line, extraMarkers) {\n        if (this.localMarkers.length)\n            this.localMarkers = [];\n        advanceCursor(this.cursor, this.localMarkers, line.from);\n        let localMarkers = extraMarkers.length ? this.localMarkers.concat(extraMarkers) : this.localMarkers;\n        let forLine = this.gutter.config.lineMarker(view, line, localMarkers);\n        if (forLine)\n            localMarkers.unshift(forLine);\n        let gutter = this.gutter;\n        if (localMarkers.length == 0 && !gutter.config.renderEmptyElements)\n            return;\n        let above = line.top - this.height;\n        if (this.i == gutter.elements.length) {\n            let newElt = new GutterElement(view, line.height, above, localMarkers);\n            gutter.elements.push(newElt);\n            gutter.dom.appendChild(newElt.dom);\n        }\n        else {\n            gutter.elements[this.i].update(view, line.height, above, localMarkers);\n        }\n        this.height = line.bottom;\n        this.i++;\n    }\n    finish() {\n        let gutter = this.gutter;\n        while (gutter.elements.length > this.i) {\n            let last = gutter.elements.pop();\n            gutter.dom.removeChild(last.dom);\n            last.destroy();\n        }\n    }\n}\nclass SingleGutterView {\n    constructor(view, config) {\n        this.view = view;\n        this.config = config;\n        this.elements = [];\n        this.spacer = null;\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-gutter\" + (this.config.class ? \" \" + this.config.class : \"\");\n        for (let prop in config.domEventHandlers) {\n            this.dom.addEventListener(prop, (event) => {\n                let line = view.lineBlockAtHeight(event.clientY - view.documentTop);\n                if (config.domEventHandlers[prop](view, line, event))\n                    event.preventDefault();\n            });\n        }\n        this.markers = asArray(config.markers(view));\n        if (config.initialSpacer) {\n            this.spacer = new GutterElement(view, 0, 0, [config.initialSpacer(view)]);\n            this.dom.appendChild(this.spacer.dom);\n            this.spacer.dom.style.cssText += \"visibility: hidden; pointer-events: none\";\n        }\n    }\n    update(update) {\n        let prevMarkers = this.markers;\n        this.markers = asArray(this.config.markers(update.view));\n        if (this.spacer && this.config.updateSpacer) {\n            let updated = this.config.updateSpacer(this.spacer.markers[0], update);\n            if (updated != this.spacer.markers[0])\n                this.spacer.update(update.view, 0, 0, [updated]);\n        }\n        let vp = update.view.viewport;\n        return !RangeSet.eq(this.markers, prevMarkers, vp.from, vp.to) ||\n            (this.config.lineMarkerChange ? this.config.lineMarkerChange(update) : false);\n    }\n    destroy() {\n        for (let elt of this.elements)\n            elt.destroy();\n    }\n}\nclass GutterElement {\n    constructor(view, height, above, markers) {\n        this.height = -1;\n        this.above = 0;\n        this.markers = [];\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-gutterElement\";\n        this.update(view, height, above, markers);\n    }\n    update(view, height, above, markers) {\n        if (this.height != height)\n            this.dom.style.height = (this.height = height) + \"px\";\n        if (this.above != above)\n            this.dom.style.marginTop = (this.above = above) ? above + \"px\" : \"\";\n        if (!sameMarkers(this.markers, markers))\n            this.setMarkers(view, markers);\n    }\n    setMarkers(view, markers) {\n        let cls = \"cm-gutterElement\", domPos = this.dom.firstChild;\n        for (let iNew = 0, iOld = 0;;) {\n            let skipTo = iOld, marker = iNew < markers.length ? markers[iNew++] : null, matched = false;\n            if (marker) {\n                let c = marker.elementClass;\n                if (c)\n                    cls += \" \" + c;\n                for (let i = iOld; i < this.markers.length; i++)\n                    if (this.markers[i].compare(marker)) {\n                        skipTo = i;\n                        matched = true;\n                        break;\n                    }\n            }\n            else {\n                skipTo = this.markers.length;\n            }\n            while (iOld < skipTo) {\n                let next = this.markers[iOld++];\n                if (next.toDOM) {\n                    next.destroy(domPos);\n                    let after = domPos.nextSibling;\n                    domPos.remove();\n                    domPos = after;\n                }\n            }\n            if (!marker)\n                break;\n            if (marker.toDOM) {\n                if (matched)\n                    domPos = domPos.nextSibling;\n                else\n                    this.dom.insertBefore(marker.toDOM(view), domPos);\n            }\n            if (matched)\n                iOld++;\n        }\n        this.dom.className = cls;\n        this.markers = markers;\n    }\n    destroy() {\n        this.setMarkers(null, []); // First argument not used unless creating markers\n    }\n}\nfunction sameMarkers(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].compare(b[i]))\n            return false;\n    return true;\n}\n/**\nFacet used to provide markers to the line number gutter.\n*/\nconst lineNumberMarkers = /*@__PURE__*/Facet.define();\nconst lineNumberConfig = /*@__PURE__*/Facet.define({\n    combine(values) {\n        return combineConfig(values, { formatNumber: String, domEventHandlers: {} }, {\n            domEventHandlers(a, b) {\n                let result = Object.assign({}, a);\n                for (let event in b) {\n                    let exists = result[event], add = b[event];\n                    result[event] = exists ? (view, line, event) => exists(view, line, event) || add(view, line, event) : add;\n                }\n                return result;\n            }\n        });\n    }\n});\nclass NumberMarker extends GutterMarker {\n    constructor(number) {\n        super();\n        this.number = number;\n    }\n    eq(other) { return this.number == other.number; }\n    toDOM() { return document.createTextNode(this.number); }\n}\nfunction formatNumber(view, number) {\n    return view.state.facet(lineNumberConfig).formatNumber(number, view.state);\n}\nconst lineNumberGutter = /*@__PURE__*/activeGutters.compute([lineNumberConfig], state => ({\n    class: \"cm-lineNumbers\",\n    renderEmptyElements: false,\n    markers(view) { return view.state.facet(lineNumberMarkers); },\n    lineMarker(view, line, others) {\n        if (others.some(m => m.toDOM))\n            return null;\n        return new NumberMarker(formatNumber(view, view.state.doc.lineAt(line.from).number));\n    },\n    lineMarkerChange: update => update.startState.facet(lineNumberConfig) != update.state.facet(lineNumberConfig),\n    initialSpacer(view) {\n        return new NumberMarker(formatNumber(view, maxLineNumber(view.state.doc.lines)));\n    },\n    updateSpacer(spacer, update) {\n        let max = formatNumber(update.view, maxLineNumber(update.view.state.doc.lines));\n        return max == spacer.number ? spacer : new NumberMarker(max);\n    },\n    domEventHandlers: state.facet(lineNumberConfig).domEventHandlers\n}));\n/**\nCreate a line number gutter extension.\n*/\nfunction lineNumbers(config = {}) {\n    return [\n        lineNumberConfig.of(config),\n        gutters(),\n        lineNumberGutter\n    ];\n}\nfunction maxLineNumber(lines) {\n    let last = 9;\n    while (last < lines)\n        last = last * 10 + 9;\n    return last;\n}\nconst activeLineGutterMarker = /*@__PURE__*/new class extends GutterMarker {\n    constructor() {\n        super(...arguments);\n        this.elementClass = \"cm-activeLineGutter\";\n    }\n};\nconst activeLineGutterHighlighter = /*@__PURE__*/gutterLineClass.compute([\"selection\"], state => {\n    let marks = [], last = -1;\n    for (let range of state.selection.ranges)\n        if (range.empty) {\n            let linePos = state.doc.lineAt(range.head).from;\n            if (linePos > last) {\n                last = linePos;\n                marks.push(activeLineGutterMarker.range(linePos));\n            }\n        }\n    return RangeSet.of(marks);\n});\n/**\nReturns an extension that adds a `cm-activeLineGutter` class to\nall gutter elements on the [active\nline](https://codemirror.net/6/docs/ref/#view.highlightActiveLine).\n*/\nfunction highlightActiveLineGutter() {\n    return activeLineGutterHighlighter;\n}\n\n/**\n@internal\n*/\nconst __test = { HeightMap, HeightOracle, MeasuredHeights, QueryType, ChangedRange, computeOrder, moveVisually };\n\nexport { BidiSpan, BlockInfo, BlockType, Decoration, Direction, EditorView, GutterMarker, MatchDecorator, ViewPlugin, ViewUpdate, WidgetType, __test, closeHoverTooltips, crosshairCursor, drawSelection, dropCursor, getPanel, getTooltip, gutter, gutterLineClass, gutters, hasHoverTooltips, highlightActiveLine, highlightActiveLineGutter, highlightSpecialChars, hoverTooltip, keymap, lineNumberMarkers, lineNumbers, logException, panels, placeholder, rectangularSelection, repositionTooltips, runScopeHandlers, scrollPastEnd, showPanel, showTooltip, tooltips };\n","import { showPanel, EditorView, getPanel, Decoration, ViewPlugin, runScopeHandlers } from '@codemirror/view';\nimport { codePointAt, fromCodePoint, codePointSize, StateEffect, StateField, EditorSelection, Facet, combineConfig, CharCategory, RangeSetBuilder, Prec } from '@codemirror/state';\nimport elt from 'crelt';\n\nconst basicNormalize = typeof String.prototype.normalize == \"function\"\n    ? x => x.normalize(\"NFKD\") : x => x;\n/**\nA search cursor provides an iterator over text matches in a\ndocument.\n*/\nclass SearchCursor {\n    /**\n    Create a text cursor. The query is the search string, `from` to\n    `to` provides the region to search.\n    \n    When `normalize` is given, it will be called, on both the query\n    string and the content it is matched against, before comparing.\n    You can, for example, create a case-insensitive search by\n    passing `s => s.toLowerCase()`.\n    \n    Text is always normalized with\n    [`.normalize(\"NFKD\")`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize)\n    (when supported).\n    */\n    constructor(text, query, from = 0, to = text.length, normalize) {\n        /**\n        The current match (only holds a meaningful value after\n        [`next`](https://codemirror.net/6/docs/ref/#search.SearchCursor.next) has been called and when\n        `done` is false).\n        */\n        this.value = { from: 0, to: 0 };\n        /**\n        Whether the end of the iterated region has been reached.\n        */\n        this.done = false;\n        this.matches = [];\n        this.buffer = \"\";\n        this.bufferPos = 0;\n        this.iter = text.iterRange(from, to);\n        this.bufferStart = from;\n        this.normalize = normalize ? x => normalize(basicNormalize(x)) : basicNormalize;\n        this.query = this.normalize(query);\n    }\n    peek() {\n        if (this.bufferPos == this.buffer.length) {\n            this.bufferStart += this.buffer.length;\n            this.iter.next();\n            if (this.iter.done)\n                return -1;\n            this.bufferPos = 0;\n            this.buffer = this.iter.value;\n        }\n        return codePointAt(this.buffer, this.bufferPos);\n    }\n    /**\n    Look for the next match. Updates the iterator's\n    [`value`](https://codemirror.net/6/docs/ref/#search.SearchCursor.value) and\n    [`done`](https://codemirror.net/6/docs/ref/#search.SearchCursor.done) properties. Should be called\n    at least once before using the cursor.\n    */\n    next() {\n        while (this.matches.length)\n            this.matches.pop();\n        return this.nextOverlapping();\n    }\n    /**\n    The `next` method will ignore matches that partially overlap a\n    previous match. This method behaves like `next`, but includes\n    such matches.\n    */\n    nextOverlapping() {\n        for (;;) {\n            let next = this.peek();\n            if (next < 0) {\n                this.done = true;\n                return this;\n            }\n            let str = fromCodePoint(next), start = this.bufferStart + this.bufferPos;\n            this.bufferPos += codePointSize(next);\n            let norm = this.normalize(str);\n            for (let i = 0, pos = start;; i++) {\n                let code = norm.charCodeAt(i);\n                let match = this.match(code, pos);\n                if (match) {\n                    this.value = match;\n                    return this;\n                }\n                if (i == norm.length - 1)\n                    break;\n                if (pos == start && i < str.length && str.charCodeAt(i) == code)\n                    pos++;\n            }\n        }\n    }\n    match(code, pos) {\n        let match = null;\n        for (let i = 0; i < this.matches.length; i += 2) {\n            let index = this.matches[i], keep = false;\n            if (this.query.charCodeAt(index) == code) {\n                if (index == this.query.length - 1) {\n                    match = { from: this.matches[i + 1], to: pos + 1 };\n                }\n                else {\n                    this.matches[i]++;\n                    keep = true;\n                }\n            }\n            if (!keep) {\n                this.matches.splice(i, 2);\n                i -= 2;\n            }\n        }\n        if (this.query.charCodeAt(0) == code) {\n            if (this.query.length == 1)\n                match = { from: pos, to: pos + 1 };\n            else\n                this.matches.push(1, pos);\n        }\n        return match;\n    }\n}\nif (typeof Symbol != \"undefined\")\n    SearchCursor.prototype[Symbol.iterator] = function () { return this; };\n\nconst empty = { from: -1, to: -1, match: /*@__PURE__*//.*/.exec(\"\") };\nconst baseFlags = \"gm\" + (/x/.unicode == null ? \"\" : \"u\");\n/**\nThis class is similar to [`SearchCursor`](https://codemirror.net/6/docs/ref/#search.SearchCursor)\nbut searches for a regular expression pattern instead of a plain\nstring.\n*/\nclass RegExpCursor {\n    /**\n    Create a cursor that will search the given range in the given\n    document. `query` should be the raw pattern (as you'd pass it to\n    `new RegExp`).\n    */\n    constructor(text, query, options, from = 0, to = text.length) {\n        this.to = to;\n        this.curLine = \"\";\n        /**\n        Set to `true` when the cursor has reached the end of the search\n        range.\n        */\n        this.done = false;\n        /**\n        Will contain an object with the extent of the match and the\n        match object when [`next`](https://codemirror.net/6/docs/ref/#search.RegExpCursor.next)\n        sucessfully finds a match.\n        */\n        this.value = empty;\n        if (/\\\\[sWDnr]|\\n|\\r|\\[\\^/.test(query))\n            return new MultilineRegExpCursor(text, query, options, from, to);\n        this.re = new RegExp(query, baseFlags + ((options === null || options === void 0 ? void 0 : options.ignoreCase) ? \"i\" : \"\"));\n        this.iter = text.iter();\n        let startLine = text.lineAt(from);\n        this.curLineStart = startLine.from;\n        this.matchPos = from;\n        this.getLine(this.curLineStart);\n    }\n    getLine(skip) {\n        this.iter.next(skip);\n        if (this.iter.lineBreak) {\n            this.curLine = \"\";\n        }\n        else {\n            this.curLine = this.iter.value;\n            if (this.curLineStart + this.curLine.length > this.to)\n                this.curLine = this.curLine.slice(0, this.to - this.curLineStart);\n            this.iter.next();\n        }\n    }\n    nextLine() {\n        this.curLineStart = this.curLineStart + this.curLine.length + 1;\n        if (this.curLineStart > this.to)\n            this.curLine = \"\";\n        else\n            this.getLine(0);\n    }\n    /**\n    Move to the next match, if there is one.\n    */\n    next() {\n        for (let off = this.matchPos - this.curLineStart;;) {\n            this.re.lastIndex = off;\n            let match = this.matchPos <= this.to && this.re.exec(this.curLine);\n            if (match) {\n                let from = this.curLineStart + match.index, to = from + match[0].length;\n                this.matchPos = to + (from == to ? 1 : 0);\n                if (from == this.curLine.length)\n                    this.nextLine();\n                if (from < to || from > this.value.to) {\n                    this.value = { from, to, match };\n                    return this;\n                }\n                off = this.matchPos - this.curLineStart;\n            }\n            else if (this.curLineStart + this.curLine.length < this.to) {\n                this.nextLine();\n                off = 0;\n            }\n            else {\n                this.done = true;\n                return this;\n            }\n        }\n    }\n}\nconst flattened = /*@__PURE__*/new WeakMap();\n// Reusable (partially) flattened document strings\nclass FlattenedDoc {\n    constructor(from, text) {\n        this.from = from;\n        this.text = text;\n    }\n    get to() { return this.from + this.text.length; }\n    static get(doc, from, to) {\n        let cached = flattened.get(doc);\n        if (!cached || cached.from >= to || cached.to <= from) {\n            let flat = new FlattenedDoc(from, doc.sliceString(from, to));\n            flattened.set(doc, flat);\n            return flat;\n        }\n        if (cached.from == from && cached.to == to)\n            return cached;\n        let { text, from: cachedFrom } = cached;\n        if (cachedFrom > from) {\n            text = doc.sliceString(from, cachedFrom) + text;\n            cachedFrom = from;\n        }\n        if (cached.to < to)\n            text += doc.sliceString(cached.to, to);\n        flattened.set(doc, new FlattenedDoc(cachedFrom, text));\n        return new FlattenedDoc(from, text.slice(from - cachedFrom, to - cachedFrom));\n    }\n}\nclass MultilineRegExpCursor {\n    constructor(text, query, options, from, to) {\n        this.text = text;\n        this.to = to;\n        this.done = false;\n        this.value = empty;\n        this.matchPos = from;\n        this.re = new RegExp(query, baseFlags + ((options === null || options === void 0 ? void 0 : options.ignoreCase) ? \"i\" : \"\"));\n        this.flat = FlattenedDoc.get(text, from, this.chunkEnd(from + 5000 /* Base */));\n    }\n    chunkEnd(pos) {\n        return pos >= this.to ? this.to : this.text.lineAt(pos).to;\n    }\n    next() {\n        for (;;) {\n            let off = this.re.lastIndex = this.matchPos - this.flat.from;\n            let match = this.re.exec(this.flat.text);\n            // Skip empty matches directly after the last match\n            if (match && !match[0] && match.index == off) {\n                this.re.lastIndex = off + 1;\n                match = this.re.exec(this.flat.text);\n            }\n            // If a match goes almost to the end of a noncomplete chunk, try\n            // again, since it'll likely be able to match more\n            if (match && this.flat.to < this.to && match.index + match[0].length > this.flat.text.length - 10)\n                match = null;\n            if (match) {\n                let from = this.flat.from + match.index, to = from + match[0].length;\n                this.value = { from, to, match };\n                this.matchPos = to + (from == to ? 1 : 0);\n                return this;\n            }\n            else {\n                if (this.flat.to == this.to) {\n                    this.done = true;\n                    return this;\n                }\n                // Grow the flattened doc\n                this.flat = FlattenedDoc.get(this.text, this.flat.from, this.chunkEnd(this.flat.from + this.flat.text.length * 2));\n            }\n        }\n    }\n}\nif (typeof Symbol != \"undefined\") {\n    RegExpCursor.prototype[Symbol.iterator] = MultilineRegExpCursor.prototype[Symbol.iterator] =\n        function () { return this; };\n}\nfunction validRegExp(source) {\n    try {\n        new RegExp(source, baseFlags);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n\nfunction createLineDialog(view) {\n    let input = elt(\"input\", { class: \"cm-textfield\", name: \"line\" });\n    let dom = elt(\"form\", {\n        class: \"cm-gotoLine\",\n        onkeydown: (event) => {\n            if (event.keyCode == 27) { // Escape\n                event.preventDefault();\n                view.dispatch({ effects: dialogEffect.of(false) });\n                view.focus();\n            }\n            else if (event.keyCode == 13) { // Enter\n                event.preventDefault();\n                go();\n            }\n        },\n        onsubmit: (event) => {\n            event.preventDefault();\n            go();\n        }\n    }, elt(\"label\", view.state.phrase(\"Go to line\"), \": \", input), \" \", elt(\"button\", { class: \"cm-button\", type: \"submit\" }, view.state.phrase(\"go\")));\n    function go() {\n        let match = /^([+-])?(\\d+)?(:\\d+)?(%)?$/.exec(input.value);\n        if (!match)\n            return;\n        let { state } = view, startLine = state.doc.lineAt(state.selection.main.head);\n        let [, sign, ln, cl, percent] = match;\n        let col = cl ? +cl.slice(1) : 0;\n        let line = ln ? +ln : startLine.number;\n        if (ln && percent) {\n            let pc = line / 100;\n            if (sign)\n                pc = pc * (sign == \"-\" ? -1 : 1) + (startLine.number / state.doc.lines);\n            line = Math.round(state.doc.lines * pc);\n        }\n        else if (ln && sign) {\n            line = line * (sign == \"-\" ? -1 : 1) + startLine.number;\n        }\n        let docLine = state.doc.line(Math.max(1, Math.min(state.doc.lines, line)));\n        view.dispatch({\n            effects: dialogEffect.of(false),\n            selection: EditorSelection.cursor(docLine.from + Math.max(0, Math.min(col, docLine.length))),\n            scrollIntoView: true\n        });\n        view.focus();\n    }\n    return { dom };\n}\nconst dialogEffect = /*@__PURE__*/StateEffect.define();\nconst dialogField = /*@__PURE__*/StateField.define({\n    create() { return true; },\n    update(value, tr) {\n        for (let e of tr.effects)\n            if (e.is(dialogEffect))\n                value = e.value;\n        return value;\n    },\n    provide: f => showPanel.from(f, val => val ? createLineDialog : null)\n});\n/**\nCommand that shows a dialog asking the user for a line number, and\nwhen a valid position is provided, moves the cursor to that line.\n\nSupports line numbers, relative line offsets prefixed with `+` or\n`-`, document percentages suffixed with `%`, and an optional\ncolumn position by adding `:` and a second number after the line\nnumber.\n\nThe dialog can be styled with the `panel.gotoLine` theme\nselector.\n*/\nconst gotoLine = view => {\n    let panel = getPanel(view, createLineDialog);\n    if (!panel) {\n        let effects = [dialogEffect.of(true)];\n        if (view.state.field(dialogField, false) == null)\n            effects.push(StateEffect.appendConfig.of([dialogField, baseTheme$1]));\n        view.dispatch({ effects });\n        panel = getPanel(view, createLineDialog);\n    }\n    if (panel)\n        panel.dom.querySelector(\"input\").focus();\n    return true;\n};\nconst baseTheme$1 = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-panel.cm-gotoLine\": {\n        padding: \"2px 6px 4px\",\n        \"& label\": { fontSize: \"80%\" }\n    }\n});\n\nconst defaultHighlightOptions = {\n    highlightWordAroundCursor: false,\n    minSelectionLength: 1,\n    maxMatches: 100,\n    wholeWords: false\n};\nconst highlightConfig = /*@__PURE__*/Facet.define({\n    combine(options) {\n        return combineConfig(options, defaultHighlightOptions, {\n            highlightWordAroundCursor: (a, b) => a || b,\n            minSelectionLength: Math.min,\n            maxMatches: Math.min\n        });\n    }\n});\n/**\nThis extension highlights text that matches the selection. It uses\nthe `\"cm-selectionMatch\"` class for the highlighting. When\n`highlightWordAroundCursor` is enabled, the word at the cursor\nitself will be highlighted with `\"cm-selectionMatch-main\"`.\n*/\nfunction highlightSelectionMatches(options) {\n    let ext = [defaultTheme, matchHighlighter];\n    if (options)\n        ext.push(highlightConfig.of(options));\n    return ext;\n}\nconst matchDeco = /*@__PURE__*/Decoration.mark({ class: \"cm-selectionMatch\" });\nconst mainMatchDeco = /*@__PURE__*/Decoration.mark({ class: \"cm-selectionMatch cm-selectionMatch-main\" });\n// Whether the characters directly outside the given positions are non-word characters\nfunction insideWordBoundaries(check, state, from, to) {\n    return (from == 0 || check(state.sliceDoc(from - 1, from)) != CharCategory.Word) &&\n        (to == state.doc.length || check(state.sliceDoc(to, to + 1)) != CharCategory.Word);\n}\n// Whether the characters directly at the given positions are word characters\nfunction insideWord(check, state, from, to) {\n    return check(state.sliceDoc(from, from + 1)) == CharCategory.Word\n        && check(state.sliceDoc(to - 1, to)) == CharCategory.Word;\n}\nconst matchHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.decorations = this.getDeco(view);\n    }\n    update(update) {\n        if (update.selectionSet || update.docChanged || update.viewportChanged)\n            this.decorations = this.getDeco(update.view);\n    }\n    getDeco(view) {\n        let conf = view.state.facet(highlightConfig);\n        let { state } = view, sel = state.selection;\n        if (sel.ranges.length > 1)\n            return Decoration.none;\n        let range = sel.main, query, check = null;\n        if (range.empty) {\n            if (!conf.highlightWordAroundCursor)\n                return Decoration.none;\n            let word = state.wordAt(range.head);\n            if (!word)\n                return Decoration.none;\n            check = state.charCategorizer(range.head);\n            query = state.sliceDoc(word.from, word.to);\n        }\n        else {\n            let len = range.to - range.from;\n            if (len < conf.minSelectionLength || len > 200)\n                return Decoration.none;\n            if (conf.wholeWords) {\n                query = state.sliceDoc(range.from, range.to); // TODO: allow and include leading/trailing space?\n                check = state.charCategorizer(range.head);\n                if (!(insideWordBoundaries(check, state, range.from, range.to)\n                    && insideWord(check, state, range.from, range.to)))\n                    return Decoration.none;\n            }\n            else {\n                query = state.sliceDoc(range.from, range.to).trim();\n                if (!query)\n                    return Decoration.none;\n            }\n        }\n        let deco = [];\n        for (let part of view.visibleRanges) {\n            let cursor = new SearchCursor(state.doc, query, part.from, part.to);\n            while (!cursor.next().done) {\n                let { from, to } = cursor.value;\n                if (!check || insideWordBoundaries(check, state, from, to)) {\n                    if (range.empty && from <= range.from && to >= range.to)\n                        deco.push(mainMatchDeco.range(from, to));\n                    else if (from >= range.to || to <= range.from)\n                        deco.push(matchDeco.range(from, to));\n                    if (deco.length > conf.maxMatches)\n                        return Decoration.none;\n                }\n            }\n        }\n        return Decoration.set(deco);\n    }\n}, {\n    decorations: v => v.decorations\n});\nconst defaultTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-selectionMatch\": { backgroundColor: \"#99ff7780\" },\n    \".cm-searchMatch .cm-selectionMatch\": { backgroundColor: \"transparent\" }\n});\n// Select the words around the cursors.\nconst selectWord = ({ state, dispatch }) => {\n    let { selection } = state;\n    let newSel = EditorSelection.create(selection.ranges.map(range => state.wordAt(range.head) || EditorSelection.cursor(range.head)), selection.mainIndex);\n    if (newSel.eq(selection))\n        return false;\n    dispatch(state.update({ selection: newSel }));\n    return true;\n};\n// Find next occurrence of query relative to last cursor. Wrap around\n// the document if there are no more matches.\nfunction findNextOccurrence(state, query) {\n    let { main, ranges } = state.selection;\n    let word = state.wordAt(main.head), fullWord = word && word.from == main.from && word.to == main.to;\n    for (let cycled = false, cursor = new SearchCursor(state.doc, query, ranges[ranges.length - 1].to);;) {\n        cursor.next();\n        if (cursor.done) {\n            if (cycled)\n                return null;\n            cursor = new SearchCursor(state.doc, query, 0, Math.max(0, ranges[ranges.length - 1].from - 1));\n            cycled = true;\n        }\n        else {\n            if (cycled && ranges.some(r => r.from == cursor.value.from))\n                continue;\n            if (fullWord) {\n                let word = state.wordAt(cursor.value.from);\n                if (!word || word.from != cursor.value.from || word.to != cursor.value.to)\n                    continue;\n            }\n            return cursor.value;\n        }\n    }\n}\n/**\nSelect next occurrence of the current selection. Expand selection\nto the surrounding word when the selection is empty.\n*/\nconst selectNextOccurrence = ({ state, dispatch }) => {\n    let { ranges } = state.selection;\n    if (ranges.some(sel => sel.from === sel.to))\n        return selectWord({ state, dispatch });\n    let searchedText = state.sliceDoc(ranges[0].from, ranges[0].to);\n    if (state.selection.ranges.some(r => state.sliceDoc(r.from, r.to) != searchedText))\n        return false;\n    let range = findNextOccurrence(state, searchedText);\n    if (!range)\n        return false;\n    dispatch(state.update({\n        selection: state.selection.addRange(EditorSelection.range(range.from, range.to), false),\n        effects: EditorView.scrollIntoView(range.to)\n    }));\n    return true;\n};\n\nconst searchConfigFacet = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        var _a;\n        return {\n            top: configs.reduce((val, conf) => val !== null && val !== void 0 ? val : conf.top, undefined) || false,\n            caseSensitive: configs.reduce((val, conf) => val !== null && val !== void 0 ? val : conf.caseSensitive, undefined) || false,\n            createPanel: ((_a = configs.find(c => c.createPanel)) === null || _a === void 0 ? void 0 : _a.createPanel) || (view => new SearchPanel(view))\n        };\n    }\n});\n/**\nAdd search state to the editor configuration, and optionally\nconfigure the search extension.\n([`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel) will automatically\nenable this if it isn't already on).\n*/\nfunction search(config) {\n    return config ? [searchConfigFacet.of(config), searchExtensions] : searchExtensions;\n}\n/**\nA search query. Part of the editor's search state.\n*/\nclass SearchQuery {\n    /**\n    Create a query object.\n    */\n    constructor(config) {\n        this.search = config.search;\n        this.caseSensitive = !!config.caseSensitive;\n        this.regexp = !!config.regexp;\n        this.replace = config.replace || \"\";\n        this.valid = !!this.search && (!this.regexp || validRegExp(this.search));\n        this.unquoted = config.literal ? this.search : this.search.replace(/\\\\([nrt\\\\])/g, (_, ch) => ch == \"n\" ? \"\\n\" : ch == \"r\" ? \"\\r\" : ch == \"t\" ? \"\\t\" : \"\\\\\");\n    }\n    /**\n    Compare this query to another query.\n    */\n    eq(other) {\n        return this.search == other.search && this.replace == other.replace &&\n            this.caseSensitive == other.caseSensitive && this.regexp == other.regexp;\n    }\n    /**\n    @internal\n    */\n    create() {\n        return this.regexp ? new RegExpQuery(this) : new StringQuery(this);\n    }\n    /**\n    Get a search cursor for this query, searching through the given\n    range in the given document.\n    */\n    getCursor(doc, from = 0, to = doc.length) {\n        return this.regexp ? regexpCursor(this, doc, from, to) : stringCursor(this, doc, from, to);\n    }\n}\nclass QueryType {\n    constructor(spec) {\n        this.spec = spec;\n    }\n}\nfunction stringCursor(spec, doc, from, to) {\n    return new SearchCursor(doc, spec.unquoted, from, to, spec.caseSensitive ? undefined : x => x.toLowerCase());\n}\nclass StringQuery extends QueryType {\n    constructor(spec) {\n        super(spec);\n    }\n    nextMatch(doc, curFrom, curTo) {\n        let cursor = stringCursor(this.spec, doc, curTo, doc.length).nextOverlapping();\n        if (cursor.done)\n            cursor = stringCursor(this.spec, doc, 0, curFrom).nextOverlapping();\n        return cursor.done ? null : cursor.value;\n    }\n    // Searching in reverse is, rather than implementing inverted search\n    // cursor, done by scanning chunk after chunk forward.\n    prevMatchInRange(doc, from, to) {\n        for (let pos = to;;) {\n            let start = Math.max(from, pos - 10000 /* ChunkSize */ - this.spec.unquoted.length);\n            let cursor = stringCursor(this.spec, doc, start, pos), range = null;\n            while (!cursor.nextOverlapping().done)\n                range = cursor.value;\n            if (range)\n                return range;\n            if (start == from)\n                return null;\n            pos -= 10000 /* ChunkSize */;\n        }\n    }\n    prevMatch(doc, curFrom, curTo) {\n        return this.prevMatchInRange(doc, 0, curFrom) ||\n            this.prevMatchInRange(doc, curTo, doc.length);\n    }\n    getReplacement(_result) { return this.spec.replace; }\n    matchAll(doc, limit) {\n        let cursor = stringCursor(this.spec, doc, 0, doc.length), ranges = [];\n        while (!cursor.next().done) {\n            if (ranges.length >= limit)\n                return null;\n            ranges.push(cursor.value);\n        }\n        return ranges;\n    }\n    highlight(doc, from, to, add) {\n        let cursor = stringCursor(this.spec, doc, Math.max(0, from - this.spec.unquoted.length), Math.min(to + this.spec.unquoted.length, doc.length));\n        while (!cursor.next().done)\n            add(cursor.value.from, cursor.value.to);\n    }\n}\nfunction regexpCursor(spec, doc, from, to) {\n    return new RegExpCursor(doc, spec.search, spec.caseSensitive ? undefined : { ignoreCase: true }, from, to);\n}\nclass RegExpQuery extends QueryType {\n    nextMatch(doc, curFrom, curTo) {\n        let cursor = regexpCursor(this.spec, doc, curTo, doc.length).next();\n        if (cursor.done)\n            cursor = regexpCursor(this.spec, doc, 0, curFrom).next();\n        return cursor.done ? null : cursor.value;\n    }\n    prevMatchInRange(doc, from, to) {\n        for (let size = 1;; size++) {\n            let start = Math.max(from, to - size * 10000 /* ChunkSize */);\n            let cursor = regexpCursor(this.spec, doc, start, to), range = null;\n            while (!cursor.next().done)\n                range = cursor.value;\n            if (range && (start == from || range.from > start + 10))\n                return range;\n            if (start == from)\n                return null;\n        }\n    }\n    prevMatch(doc, curFrom, curTo) {\n        return this.prevMatchInRange(doc, 0, curFrom) ||\n            this.prevMatchInRange(doc, curTo, doc.length);\n    }\n    getReplacement(result) {\n        return this.spec.replace.replace(/\\$([$&\\d+])/g, (m, i) => i == \"$\" ? \"$\"\n            : i == \"&\" ? result.match[0]\n                : i != \"0\" && +i < result.match.length ? result.match[i]\n                    : m);\n    }\n    matchAll(doc, limit) {\n        let cursor = regexpCursor(this.spec, doc, 0, doc.length), ranges = [];\n        while (!cursor.next().done) {\n            if (ranges.length >= limit)\n                return null;\n            ranges.push(cursor.value);\n        }\n        return ranges;\n    }\n    highlight(doc, from, to, add) {\n        let cursor = regexpCursor(this.spec, doc, Math.max(0, from - 250 /* HighlightMargin */), Math.min(to + 250 /* HighlightMargin */, doc.length));\n        while (!cursor.next().done)\n            add(cursor.value.from, cursor.value.to);\n    }\n}\n/**\nA state effect that updates the current search query. Note that\nthis only has an effect if the search state has been initialized\n(by including [`search`](https://codemirror.net/6/docs/ref/#search.search) in your configuration or\nby running [`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel) at least\nonce).\n*/\nconst setSearchQuery = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst searchState = /*@__PURE__*/StateField.define({\n    create(state) {\n        return new SearchState(defaultQuery(state).create(), null);\n    },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setSearchQuery))\n                value = new SearchState(effect.value.create(), value.panel);\n            else if (effect.is(togglePanel))\n                value = new SearchState(value.query, effect.value ? createSearchPanel : null);\n        }\n        return value;\n    },\n    provide: f => showPanel.from(f, val => val.panel)\n});\n/**\nGet the current search query from an editor state.\n*/\nfunction getSearchQuery(state) {\n    let curState = state.field(searchState, false);\n    return curState ? curState.query.spec : defaultQuery(state);\n}\nclass SearchState {\n    constructor(query, panel) {\n        this.query = query;\n        this.panel = panel;\n    }\n}\nconst matchMark = /*@__PURE__*/Decoration.mark({ class: \"cm-searchMatch\" }), selectedMatchMark = /*@__PURE__*/Decoration.mark({ class: \"cm-searchMatch cm-searchMatch-selected\" });\nconst searchHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.decorations = this.highlight(view.state.field(searchState));\n    }\n    update(update) {\n        let state = update.state.field(searchState);\n        if (state != update.startState.field(searchState) || update.docChanged || update.selectionSet || update.viewportChanged)\n            this.decorations = this.highlight(state);\n    }\n    highlight({ query, panel }) {\n        if (!panel || !query.spec.valid)\n            return Decoration.none;\n        let { view } = this;\n        let builder = new RangeSetBuilder();\n        for (let i = 0, ranges = view.visibleRanges, l = ranges.length; i < l; i++) {\n            let { from, to } = ranges[i];\n            while (i < l - 1 && to > ranges[i + 1].from - 2 * 250 /* HighlightMargin */)\n                to = ranges[++i].to;\n            query.highlight(view.state.doc, from, to, (from, to) => {\n                let selected = view.state.selection.ranges.some(r => r.from == from && r.to == to);\n                builder.add(from, to, selected ? selectedMatchMark : matchMark);\n            });\n        }\n        return builder.finish();\n    }\n}, {\n    decorations: v => v.decorations\n});\nfunction searchCommand(f) {\n    return view => {\n        let state = view.state.field(searchState, false);\n        return state && state.query.spec.valid ? f(view, state) : openSearchPanel(view);\n    };\n}\n/**\nOpen the search panel if it isn't already open, and move the\nselection to the first match after the current main selection.\nWill wrap around to the start of the document when it reaches the\nend.\n*/\nconst findNext = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { from, to } = view.state.selection.main;\n    let next = query.nextMatch(view.state.doc, from, to);\n    if (!next || next.from == from && next.to == to)\n        return false;\n    view.dispatch({\n        selection: { anchor: next.from, head: next.to },\n        scrollIntoView: true,\n        effects: announceMatch(view, next),\n        userEvent: \"select.search\"\n    });\n    return true;\n});\n/**\nMove the selection to the previous instance of the search query,\nbefore the current main selection. Will wrap past the start\nof the document to start searching at the end again.\n*/\nconst findPrevious = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { state } = view, { from, to } = state.selection.main;\n    let range = query.prevMatch(state.doc, from, to);\n    if (!range)\n        return false;\n    view.dispatch({\n        selection: { anchor: range.from, head: range.to },\n        scrollIntoView: true,\n        effects: announceMatch(view, range),\n        userEvent: \"select.search\"\n    });\n    return true;\n});\n/**\nSelect all instances of the search query.\n*/\nconst selectMatches = /*@__PURE__*/searchCommand((view, { query }) => {\n    let ranges = query.matchAll(view.state.doc, 1000);\n    if (!ranges || !ranges.length)\n        return false;\n    view.dispatch({\n        selection: EditorSelection.create(ranges.map(r => EditorSelection.range(r.from, r.to))),\n        userEvent: \"select.search.matches\"\n    });\n    return true;\n});\n/**\nSelect all instances of the currently selected text.\n*/\nconst selectSelectionMatches = ({ state, dispatch }) => {\n    let sel = state.selection;\n    if (sel.ranges.length > 1 || sel.main.empty)\n        return false;\n    let { from, to } = sel.main;\n    let ranges = [], main = 0;\n    for (let cur = new SearchCursor(state.doc, state.sliceDoc(from, to)); !cur.next().done;) {\n        if (ranges.length > 1000)\n            return false;\n        if (cur.value.from == from)\n            main = ranges.length;\n        ranges.push(EditorSelection.range(cur.value.from, cur.value.to));\n    }\n    dispatch(state.update({\n        selection: EditorSelection.create(ranges, main),\n        userEvent: \"select.search.matches\"\n    }));\n    return true;\n};\n/**\nReplace the current match of the search query.\n*/\nconst replaceNext = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { state } = view, { from, to } = state.selection.main;\n    if (state.readOnly)\n        return false;\n    let next = query.nextMatch(state.doc, from, from);\n    if (!next)\n        return false;\n    let changes = [], selection, replacement;\n    if (next.from == from && next.to == to) {\n        replacement = state.toText(query.getReplacement(next));\n        changes.push({ from: next.from, to: next.to, insert: replacement });\n        next = query.nextMatch(state.doc, next.from, next.to);\n    }\n    if (next) {\n        let off = changes.length == 0 || changes[0].from >= next.to ? 0 : next.to - next.from - replacement.length;\n        selection = { anchor: next.from - off, head: next.to - off };\n    }\n    view.dispatch({\n        changes, selection,\n        scrollIntoView: !!selection,\n        effects: next ? announceMatch(view, next) : undefined,\n        userEvent: \"input.replace\"\n    });\n    return true;\n});\n/**\nReplace all instances of the search query with the given\nreplacement.\n*/\nconst replaceAll = /*@__PURE__*/searchCommand((view, { query }) => {\n    if (view.state.readOnly)\n        return false;\n    let changes = query.matchAll(view.state.doc, 1e9).map(match => {\n        let { from, to } = match;\n        return { from, to, insert: query.getReplacement(match) };\n    });\n    if (!changes.length)\n        return false;\n    view.dispatch({\n        changes,\n        userEvent: \"input.replace.all\"\n    });\n    return true;\n});\nfunction createSearchPanel(view) {\n    return view.state.facet(searchConfigFacet).createPanel(view);\n}\nfunction defaultQuery(state, fallback) {\n    var _a;\n    let sel = state.selection.main;\n    let selText = sel.empty || sel.to > sel.from + 100 ? \"\" : state.sliceDoc(sel.from, sel.to);\n    let caseSensitive = (_a = fallback === null || fallback === void 0 ? void 0 : fallback.caseSensitive) !== null && _a !== void 0 ? _a : state.facet(searchConfigFacet).caseSensitive;\n    return fallback && !selText ? fallback : new SearchQuery({ search: selText.replace(/\\n/g, \"\\\\n\"), caseSensitive });\n}\n/**\nMake sure the search panel is open and focused.\n*/\nconst openSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (state && state.panel) {\n        let panel = getPanel(view, createSearchPanel);\n        if (!panel)\n            return false;\n        let searchInput = panel.dom.querySelector(\"[name=search]\");\n        if (searchInput != view.root.activeElement) {\n            let query = defaultQuery(view.state, state.query.spec);\n            if (query.valid)\n                view.dispatch({ effects: setSearchQuery.of(query) });\n            searchInput.focus();\n            searchInput.select();\n        }\n    }\n    else {\n        view.dispatch({ effects: [\n                togglePanel.of(true),\n                state ? setSearchQuery.of(defaultQuery(view.state, state.query.spec)) : StateEffect.appendConfig.of(searchExtensions)\n            ] });\n    }\n    return true;\n};\n/**\nClose the search panel.\n*/\nconst closeSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (!state || !state.panel)\n        return false;\n    let panel = getPanel(view, createSearchPanel);\n    if (panel && panel.dom.contains(view.root.activeElement))\n        view.focus();\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/**\nDefault search-related key bindings.\n\n - Mod-f: [`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel)\n - F3, Mod-g: [`findNext`](https://codemirror.net/6/docs/ref/#search.findNext)\n - Shift-F3, Shift-Mod-g: [`findPrevious`](https://codemirror.net/6/docs/ref/#search.findPrevious)\n - Alt-g: [`gotoLine`](https://codemirror.net/6/docs/ref/#search.gotoLine)\n - Mod-d: [`selectNextOccurrence`](https://codemirror.net/6/docs/ref/#search.selectNextOccurrence)\n*/\nconst searchKeymap = [\n    { key: \"Mod-f\", run: openSearchPanel, scope: \"editor search-panel\" },\n    { key: \"F3\", run: findNext, shift: findPrevious, scope: \"editor search-panel\", preventDefault: true },\n    { key: \"Mod-g\", run: findNext, shift: findPrevious, scope: \"editor search-panel\", preventDefault: true },\n    { key: \"Escape\", run: closeSearchPanel, scope: \"editor search-panel\" },\n    { key: \"Mod-Shift-l\", run: selectSelectionMatches },\n    { key: \"Alt-g\", run: gotoLine },\n    { key: \"Mod-d\", run: selectNextOccurrence, preventDefault: true },\n];\nclass SearchPanel {\n    constructor(view) {\n        this.view = view;\n        let query = this.query = view.state.field(searchState).query.spec;\n        this.commit = this.commit.bind(this);\n        this.searchField = elt(\"input\", {\n            value: query.search,\n            placeholder: phrase(view, \"Find\"),\n            \"aria-label\": phrase(view, \"Find\"),\n            class: \"cm-textfield\",\n            name: \"search\",\n            onchange: this.commit,\n            onkeyup: this.commit\n        });\n        this.replaceField = elt(\"input\", {\n            value: query.replace,\n            placeholder: phrase(view, \"Replace\"),\n            \"aria-label\": phrase(view, \"Replace\"),\n            class: \"cm-textfield\",\n            name: \"replace\",\n            onchange: this.commit,\n            onkeyup: this.commit\n        });\n        this.caseField = elt(\"input\", {\n            type: \"checkbox\",\n            name: \"case\",\n            checked: query.caseSensitive,\n            onchange: this.commit\n        });\n        this.reField = elt(\"input\", {\n            type: \"checkbox\",\n            name: \"re\",\n            checked: query.regexp,\n            onchange: this.commit\n        });\n        function button(name, onclick, content) {\n            return elt(\"button\", { class: \"cm-button\", name, onclick, type: \"button\" }, content);\n        }\n        this.dom = elt(\"div\", { onkeydown: (e) => this.keydown(e), class: \"cm-search\" }, [\n            this.searchField,\n            button(\"next\", () => findNext(view), [phrase(view, \"next\")]),\n            button(\"prev\", () => findPrevious(view), [phrase(view, \"previous\")]),\n            button(\"select\", () => selectMatches(view), [phrase(view, \"all\")]),\n            elt(\"label\", null, [this.caseField, phrase(view, \"match case\")]),\n            elt(\"label\", null, [this.reField, phrase(view, \"regexp\")]),\n            ...view.state.readOnly ? [] : [\n                elt(\"br\"),\n                this.replaceField,\n                button(\"replace\", () => replaceNext(view), [phrase(view, \"replace\")]),\n                button(\"replaceAll\", () => replaceAll(view), [phrase(view, \"replace all\")]),\n                elt(\"button\", {\n                    name: \"close\",\n                    onclick: () => closeSearchPanel(view),\n                    \"aria-label\": phrase(view, \"close\"),\n                    type: \"button\"\n                }, [\"×\"])\n            ]\n        ]);\n    }\n    commit() {\n        let query = new SearchQuery({\n            search: this.searchField.value,\n            caseSensitive: this.caseField.checked,\n            regexp: this.reField.checked,\n            replace: this.replaceField.value\n        });\n        if (!query.eq(this.query)) {\n            this.query = query;\n            this.view.dispatch({ effects: setSearchQuery.of(query) });\n        }\n    }\n    keydown(e) {\n        if (runScopeHandlers(this.view, e, \"search-panel\")) {\n            e.preventDefault();\n        }\n        else if (e.keyCode == 13 && e.target == this.searchField) {\n            e.preventDefault();\n            (e.shiftKey ? findPrevious : findNext)(this.view);\n        }\n        else if (e.keyCode == 13 && e.target == this.replaceField) {\n            e.preventDefault();\n            replaceNext(this.view);\n        }\n    }\n    update(update) {\n        for (let tr of update.transactions)\n            for (let effect of tr.effects) {\n                if (effect.is(setSearchQuery) && !effect.value.eq(this.query))\n                    this.setQuery(effect.value);\n            }\n    }\n    setQuery(query) {\n        this.query = query;\n        this.searchField.value = query.search;\n        this.replaceField.value = query.replace;\n        this.caseField.checked = query.caseSensitive;\n        this.reField.checked = query.regexp;\n    }\n    mount() {\n        this.searchField.select();\n    }\n    get pos() { return 80; }\n    get top() { return this.view.state.facet(searchConfigFacet).top; }\n}\nfunction phrase(view, phrase) { return view.state.phrase(phrase); }\nconst AnnounceMargin = 30;\nconst Break = /[\\s\\.,:;?!]/;\nfunction announceMatch(view, { from, to }) {\n    let lineStart = view.state.doc.lineAt(from).from, lineEnd = view.state.doc.lineAt(to).to;\n    let start = Math.max(lineStart, from - AnnounceMargin), end = Math.min(lineEnd, to + AnnounceMargin);\n    let text = view.state.sliceDoc(start, end);\n    if (start != lineStart) {\n        for (let i = 0; i < AnnounceMargin; i++)\n            if (!Break.test(text[i + 1]) && Break.test(text[i])) {\n                text = text.slice(i);\n                break;\n            }\n    }\n    if (end != lineEnd) {\n        for (let i = text.length - 1; i > text.length - AnnounceMargin; i--)\n            if (!Break.test(text[i - 1]) && Break.test(text[i])) {\n                text = text.slice(0, i);\n                break;\n            }\n    }\n    return EditorView.announce.of(`${view.state.phrase(\"current match\")}. ${text} ${view.state.phrase(\"on line\")} ${view.state.doc.lineAt(from).number}`);\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-panel.cm-search\": {\n        padding: \"2px 6px 4px\",\n        position: \"relative\",\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"4px\",\n            backgroundColor: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        },\n        \"& input, & button, & label\": {\n            margin: \".2em .6em .2em 0\"\n        },\n        \"& input[type=checkbox]\": {\n            marginRight: \".2em\"\n        },\n        \"& label\": {\n            fontSize: \"80%\",\n            whiteSpace: \"pre\"\n        }\n    },\n    \"&light .cm-searchMatch\": { backgroundColor: \"#ffff0054\" },\n    \"&dark .cm-searchMatch\": { backgroundColor: \"#00ffff8a\" },\n    \"&light .cm-searchMatch-selected\": { backgroundColor: \"#ff6a0054\" },\n    \"&dark .cm-searchMatch-selected\": { backgroundColor: \"#ff00ff8a\" }\n});\nconst searchExtensions = [\n    searchState,\n    /*@__PURE__*/Prec.lowest(searchHighlighter),\n    baseTheme\n];\n\nexport { RegExpCursor, SearchCursor, SearchQuery, closeSearchPanel, findNext, findPrevious, getSearchQuery, gotoLine, highlightSelectionMatches, openSearchPanel, replaceAll, replaceNext, search, searchKeymap, selectMatches, selectNextOccurrence, selectSelectionMatches, setSearchQuery };\n","<template>\n  <div ref=\"editorContainer\" class=\"template-code-editor\"></div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted, watch } from 'vue'\nimport { EditorView, keymap, lineNumbers, highlightActiveLine, highlightActiveLineGutter, drawSelection } from '@codemirror/view'\nimport { EditorState } from '@codemirror/state'\nimport { StreamLanguage, defaultHighlightStyle, syntaxHighlighting } from '@codemirror/language'\nimport { autocompletion, completionKeymap, closeBrackets, startCompletion } from '@codemirror/autocomplete'\nimport { history, historyKeymap } from '@codemirror/commands'\nimport { searchKeymap } from '@codemirror/search'\n\nconst props = defineProps({\n  modelValue: {\n    type: String,\n    default: ''\n  },\n  placeholder: {\n    type: String,\n    default: ''\n  },\n  stage: {\n    type: String,\n    default: ''\n  }\n})\n\nconst emit = defineEmits(['update:modelValue'])\n\nconst editorContainer = ref(null)\nlet editorView = null\n\n// Simple .env syntax highlighting\nconst envLanguage = StreamLanguage.define({\n  token(stream, state) {\n    // Comments\n    if (stream.match(/^\\s*#.*/)) {\n      return 'comment'\n    }\n    \n    // Placeholders {vault:key}\n    if (stream.match(/\\{[^}]+\\}/)) {\n      return 'string'\n    }\n    \n    // Environment variable key\n    if (stream.match(/^[A-Z_][A-Z0-9_]*(?==)/)) {\n      return 'variableName'\n    }\n    \n    // Equals sign\n    if (stream.match(/=/)) {\n      return 'operator'\n    }\n    \n    // Values (everything after =)\n    if (stream.match(/[^\\n]*/)) {\n      return 'string'\n    }\n    \n    stream.next()\n    return null\n  }\n})\n\n// Store for vault secrets (populated by parent)\nconst vaultSecrets = ref([])\n\n// Autocomplete for {vault:key} placeholders\nfunction placeholderCompletions(context) {\n  // Match when typing after { or anywhere in a placeholder\n  let word = context.matchBefore(/\\{[^}]*/)\n  \n  // If no match, check if we just typed {\n  if (!word) {\n    word = context.matchBefore(/\\{/)\n    if (!word) return null\n  }\n  \n  const text = word.text.slice(1) // Remove the leading {\n  \n  // Build options from all available secrets\n  const options = []\n  \n  // Group secrets by vault for better UX\n  const secretsByVault = {}\n  for (const secret of vaultSecrets.value) {\n    if (!secretsByVault[secret.vault]) {\n      secretsByVault[secret.vault] = []\n    }\n    secretsByVault[secret.vault].push(secret)\n  }\n  \n  // If user hasn't typed a colon yet, we're matching vault:key combinations\n  if (!text.includes(':')) {\n    // Add all vault:key combinations that match the typed text\n    for (const [vault, secrets] of Object.entries(secretsByVault)) {\n      for (const secret of secrets) {\n        const fullPlaceholder = `{${vault}:${secret.key}}`\n        const matchText = `${vault}:${secret.key}`.toLowerCase()\n        \n        // Match if text is empty or if the vault:key contains the typed text\n        if (!text || matchText.includes(text.toLowerCase())) {\n          options.push({\n            label: `${vault}:${secret.key}`,\n            apply: `{${vault}:${secret.key}`,  // Include opening brace, but not closing (CodeMirror adds it)\n            type: 'variable',\n            detail: secret.description || vault\n          })\n        }\n      }\n    }\n  } else {\n    // User typed vault: so filter by that vault\n    const [vaultPart, keyPart = ''] = text.split(':')\n    const vaultSecrets = secretsByVault[vaultPart] || []\n    \n    for (const secret of vaultSecrets) {\n      if (!keyPart || secret.key.toLowerCase().includes(keyPart.toLowerCase())) {\n        options.push({\n          label: secret.key,\n          apply: `{${vaultPart}:${secret.key}`,  // Include opening brace since we replace from {\n          type: 'variable',\n          detail: secret.description || ''\n        })\n      }\n    }\n  }\n  \n  // If no options and no secrets, show a help message\n  if (options.length === 0 && vaultSecrets.value.length === 0) {\n    options.push(\n      { label: 'No secrets loaded', apply: '', type: 'text', detail: 'Loading...' }\n    )\n  }\n  \n  return {\n    from: word.from,\n    options,\n    filter: false\n  }\n}\n\n// Method to update available secrets (called by parent)\nfunction updateSecrets(secrets) {\n  vaultSecrets.value = secrets || []\n}\n\n// Custom theme matching the app's dark mode\nconst customTheme = EditorView.theme({\n  '&': {\n    fontSize: '14px',\n    backgroundColor: 'hsl(var(--muted) / 0.3)',\n    color: 'hsl(var(--foreground))',\n    height: '384px' // h-96 equivalent\n  },\n  '.cm-content': {\n    padding: '12px 16px',\n    fontFamily: 'ui-monospace, SFMono-Regular, SF Mono, Consolas, Liberation Mono, Menlo, monospace',\n    caretColor: '#ffffff !important'\n  },\n  '.cm-line': {\n    padding: '0',\n    lineHeight: '1.5'\n  },\n  '.cm-activeLine': {\n    backgroundColor: 'hsl(var(--muted))' // Reduced opacity for better text readability\n  },\n  '&.cm-focused': {\n    outline: '2px solid hsl(var(--ring))',\n    outlineOffset: '0'\n  },\n  '&.cm-focused .cm-cursor, &.cm-focused .cm-cursor-primary': {\n    borderLeftColor: '#ffffff !important'\n  },\n  '.cm-cursor, .cm-cursor-primary': {\n    borderLeftColor: '#ffffff !important',\n    borderLeftWidth: '2px !important'\n  },\n  '.cm-placeholder': {\n    color: 'hsl(var(--muted-foreground))',\n    fontStyle: 'normal'\n  },\n  '.cm-gutters': {\n    backgroundColor: 'hsl(var(--muted) / 0.5)',\n    borderRight: '1px solid hsl(var(--border))',\n    color: 'hsl(var(--muted-foreground))'\n  },\n  '.cm-activeLineGutter': {\n    backgroundColor: 'hsl(var(--muted) / 0.7)'\n  }\n})\n\n// Syntax highlighting styles  \nconst highlightStyle = EditorView.theme({\n  // Comments (lines starting with #)\n  '.tok-comment': { \n    color: '#94a3b8',  // slate-400 - Change this for comment color\n    fontStyle: 'italic' \n  },\n  \n  // Environment variable names (KEY in KEY=value)\n  '.tok-variableName': { \n    color: '#7dd3fc'   // sky-300 - Change this for variable names\n  },\n  \n  // Placeholders ({vault:key}) and values\n  '.tok-string': { \n    color: '#86efac'   // green-300 - Change this for placeholders & values\n  },\n  \n  // Equals sign\n  '.tok-operator': { \n    color: 'hsl(var(--muted-foreground))' \n  },\n  \n  // Additional CodeMirror default token colors\n  '.ͼm': { color: '#7b7b7b' }, // Comments: light gray\n  '.ͼe': { color: '#fbbf24' }, // Placeholders: yellow\n  '.ͼd': { color: '#f87171' }, // red-400\n  '.ͼ2': { color: '#fb923c' }, // orange-400\n  '.ͼ4': { color: '#fbbf24' }, // amber-400\n  '.ͼ6': { color: '#a3e635' }, // lime-400\n})\n\nonMounted(() => {\n  const startState = EditorState.create({\n    doc: props.modelValue,\n    extensions: [\n      lineNumbers(),\n      highlightActiveLine(),\n      highlightActiveLineGutter(),\n      drawSelection(),\n      history(),\n      closeBrackets(),\n      envLanguage,\n      syntaxHighlighting(defaultHighlightStyle),\n      customTheme,\n      highlightStyle,\n      EditorView.lineWrapping,\n      EditorView.updateListener.of((update) => {\n        if (update.docChanged) {\n          const value = update.state.doc.toString()\n          emit('update:modelValue', value)\n        }\n      }),\n      autocompletion({\n        override: [placeholderCompletions],\n        tooltipClass: () => \"cm-autocomplete-tooltip\"\n      }),\n      keymap.of([\n        ...completionKeymap,\n        ...historyKeymap,\n        ...searchKeymap,\n        {\n          key: 'Ctrl-Space',\n          run: startCompletion\n        }\n      ]),\n      EditorView.domEventHandlers({\n        blur: () => {\n          // Emit final value on blur to ensure parent gets update\n          if (editorView) {\n            emit('update:modelValue', editorView.state.doc.toString())\n          }\n        },\n        keydown: (e) => {\n          // Trigger autocomplete on { key\n          if (e.key === '{') {\n            setTimeout(() => {\n              startCompletion(editorView)\n            }, 10)\n          }\n        }\n      })\n    ]\n  })\n  \n  editorView = new EditorView({\n    state: startState,\n    parent: editorContainer.value\n  })\n  \n  // Set placeholder if provided\n  if (props.placeholder) {\n    editorView.contentDOM.setAttribute('data-placeholder', props.placeholder)\n  }\n})\n\nonUnmounted(() => {\n  if (editorView) {\n    editorView.destroy()\n  }\n})\n\n// Watch for external changes to modelValue\nwatch(() => props.modelValue, (newValue) => {\n  if (editorView && newValue !== editorView.state.doc.toString()) {\n    editorView.dispatch({\n      changes: {\n        from: 0,\n        to: editorView.state.doc.length,\n        insert: newValue\n      }\n    })\n  }\n})\n\n// Expose methods for parent component\ndefineExpose({\n  focus() {\n    editorView?.focus()\n  },\n  getSelection() {\n    if (!editorView) return { start: 0, end: 0 }\n    const { from, to } = editorView.state.selection.main\n    return { start: from, end: to }\n  },\n  setSelection(start, end) {\n    if (!editorView) return\n    editorView.dispatch({\n      selection: { anchor: start, head: end }\n    })\n  },\n  insertText(text) {\n    if (!editorView) return\n    const { from, to } = editorView.state.selection.main\n    editorView.dispatch({\n      changes: { from, to, insert: text }\n    })\n  },\n  updateSecrets\n})\n</script>\n\n<style scoped>\n.template-code-editor {\n  border: 1px solid hsl(var(--border));\n  border-radius: 0.375rem;\n  overflow: visible;\n  position: relative;\n}\n\n.template-code-editor :deep(.cm-editor) {\n  border-radius: 0.375rem;\n}\n\n.template-code-editor :deep(.cm-editor.cm-focused) {\n  border-color: transparent;\n}\n\n.template-code-editor :deep(.cm-scroller) {\n  font-family: ui-monospace, SFMono-Regular, SF Mono, Consolas, Liberation Mono, Menlo, monospace;\n  overflow-x: auto;\n  overflow-y: auto;\n  min-height: 384px;\n}\n\n/* Keep tooltips positioned relative to cursor */\n.template-code-editor :deep(.cm-tooltip) {\n  position: absolute !important;\n}\n\n/* Ensure autocomplete dropdown is visible */\n.template-code-editor :deep(.cm-tooltip-autocomplete) {\n  z-index: 9999 !important;\n  background: hsl(var(--background)) !important;\n  border: 1px solid hsl(var(--border)) !important;\n  border-radius: 0.375rem !important;\n  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05) !important;\n  max-height: min(300px, 40vh) !important;\n  overflow: visible !important;\n}\n\n.template-code-editor :deep(.cm-tooltip-autocomplete ul) {\n  font-family: ui-monospace, SFMono-Regular, SF Mono, Consolas, Liberation Mono, Menlo, monospace;\n  max-height: min(280px, 38vh) !important;\n  font-size: 14px;\n  overflow-y: auto !important;\n  overflow-x: hidden !important;\n}\n\n.template-code-editor :deep(.cm-tooltip-autocomplete ul li) {\n  padding: 4px 8px;\n}\n\n.template-code-editor :deep(.cm-tooltip-autocomplete ul li[aria-selected]) {\n  background: hsl(var(--primary)) !important;\n  color: hsl(var(--primary-foreground)) !important;\n}\n\n/* Force cursor to be white */\n.template-code-editor :deep(.cm-cursor),\n.template-code-editor :deep(.cm-cursor-primary),\n.template-code-editor :deep(.cm-editor.cm-focused .cm-cursor),\n.template-code-editor :deep(.cm-editor.cm-focused .cm-cursor-primary),\n.template-code-editor :deep(.cm-content .cm-cursor),\n.template-code-editor :deep(.cm-content .cm-cursor-primary) {\n  border-left-color: #ffffff !important;\n  border-left-width: 2px !important;\n  border-left-style: solid !important;\n}\n\n/* Set caret color for the content area */\n.template-code-editor :deep(.cm-content),\n.template-code-editor :deep(.cm-line) {\n  caret-color: #ffffff !important;\n}\n\n/* Also handle the drop cursor */\n.template-code-editor :deep(.cm-dropCursor) {\n  border-left-color: #ffffff !important;\n}\n</style>","<template>\n  <div class=\"fixed inset-0 z-50 overflow-y-auto\">\n    <div class=\"flex items-center justify-center min-h-screen px-4 pt-4 pb-40 text-center sm:p-0\">\n      <!-- Background overlay -->\n      <div class=\"fixed inset-0 transition-opacity\">\n        <div class=\"absolute inset-0 bg-black opacity-75\"></div>\n      </div>\n\n      <!-- Modal content -->\n      <div class=\"relative inline-block w-full max-w-4xl px-6 py-5 overflow-visible text-left align-middle transition-all transform bg-background rounded-lg shadow-xl\">\n        <!-- Header -->\n        <div class=\"flex items-center justify-between mb-4\">\n          <div>\n            <h2 class=\"text-xl font-semibold\">Edit Template</h2>\n            <p class=\"text-sm text-muted-foreground\">{{ template.filename }}</p>\n          </div>\n          <button\n              @click=\"$emit('close')\"\n              class=\"p-1 rounded hover:bg-muted transition-colors\"\n          >\n            <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n            </svg>\n          </button>\n        </div>\n\n        <!-- Loading State -->\n        <div v-if=\"loading\" class=\"flex justify-center py-12\">\n          <div class=\"animate-spin rounded-full h-8 w-8 border-2 border-primary border-t-transparent\"></div>\n        </div>\n\n        <!-- Editor Content -->\n        <div v-else class=\"space-y-4\">\n          <!-- Toolbar -->\n          <div class=\"flex items-center justify-between bg-muted/50 rounded-md p-2\">\n            <div class=\"flex items-center gap-2\">\n              <span class=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-primary/10 text-primary\">\n                Stage: {{ templateData.stage }}\n              </span>\n            </div>\n            <div class=\"flex items-center gap-2\">\n              <button\n                  @click=\"formatContent\"\n                  class=\"px-3 py-1 text-xs bg-background border border-border rounded hover:bg-muted transition-colors\"\n              >\n                Format\n              </button>\n            </div>\n          </div>\n\n          <!-- Editor -->\n          <div class=\"relative mb-8\" style=\"overflow: visible;\">\n            <TemplateCodeEditor\n                ref=\"editorRef\"\n                v-model=\"content\"\n                :stage=\"templateData.stage\"\n                placeholder=\"# Enter your template content here...&#10;# Use {vault:key} syntax for placeholders\"\n            />\n          </div>\n\n          <!-- Validation Messages -->\n          <div v-if=\"validationErrors.length > 0\" class=\"bg-destructive/10 border border-destructive/20 rounded-md p-3\">\n            <h3 class=\"text-sm font-medium mb-2 text-destructive\">Validation Errors</h3>\n            <ul class=\"space-y-1\">\n              <li v-for=\"error in validationErrors\" :key=\"error\" class=\"text-sm text-destructive flex items-start gap-2\">\n                <svg class=\"w-4 h-4 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                </svg>\n                {{ error }}\n              </li>\n            </ul>\n          </div>\n\n          <!-- Modified indicator -->\n          <div v-if=\"isModified\" class=\"flex items-center gap-2 text-sm text-warning\">\n            <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n            </svg>\n            Unsaved changes\n          </div>\n        </div>\n\n        <!-- Footer -->\n        <div class=\"flex justify-between items-center mt-6\">\n          <div class=\"flex items-center gap-3\">\n            <button\n                @click=\"validateTemplate\"\n                :disabled=\"validating\"\n                class=\"px-4 py-2 text-sm border border-border rounded-md hover:bg-muted transition-colors disabled:opacity-50\"\n            >\n              {{ validating ? 'Validating...' : 'Validate' }}\n            </button>\n            <!-- Inline validation status -->\n            <div v-if=\"validationStatus\" class=\"flex items-center gap-2\">\n              <svg v-if=\"validationStatus === 'valid'\" class=\"w-4 h-4 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n              </svg>\n              <svg v-else-if=\"validationStatus === 'invalid'\" class=\"w-4 h-4 text-destructive\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n              </svg>\n              <svg v-else-if=\"validationStatus === 'warning'\" class=\"w-4 h-4 text-warning\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"></path>\n              </svg>\n              <span :class=\"[\n                'text-sm',\n                validationStatus === 'valid' ? 'text-green-600' : \n                validationStatus === 'invalid' ? 'text-destructive' : \n                'text-warning'\n              ]\">\n                {{ validationMessage }}\n              </span>\n            </div>\n          </div>\n          <div class=\"flex gap-3\">\n            <button\n                @click=\"$emit('close')\"\n                class=\"px-4 py-2 text-sm border border-border rounded-md hover:bg-muted transition-colors\"\n            >\n              Cancel\n            </button>\n            <button\n                @click=\"saveTemplate\"\n                :disabled=\"saving || !isModified\"\n                class=\"px-4 py-2 text-sm bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors disabled:opacity-50\"\n            >\n              {{ saving ? 'Saving...' : 'Save Template' }}\n            </button>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport {ref, computed, onMounted, watch, nextTick} from 'vue'\nimport {useToast} from '../composables/useToast'\nimport TemplateCodeEditor from './TemplateCodeEditor.vue'\n\nconst props = defineProps({\n  template: {\n    type: Object,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['close', 'saved'])\nconst {showToast} = useToast()\n\nconst editorRef = ref(null)\nconst loading = ref(true)\nconst saving = ref(false)\nconst validating = ref(false)\nconst content = ref('')\nconst originalContent = ref('')\nconst templateData = ref({})\nconst placeholders = ref([])\nconst validationErrors = ref([])\nconst validationStatus = ref('')\nconst validationMessage = ref('')\nconst secretsForEditor = ref([])\n\nconst isModified = computed(() => content.value !== originalContent.value)\n\nonMounted(async () => {\n  await loadTemplate()\n})\n\nasync function loadTemplate() {\n  loading.value = true\n\n  try {\n    const response = await window.$api.get(`/templates/${encodeURIComponent(props.template.filename)}`)\n    templateData.value = response\n    content.value = response.content || ''\n    originalContent.value = response.content || ''\n    placeholders.value = response.placeholders || []\n    \n    // Load secrets after template data is available\n    await loadSecrets()\n  } catch (error) {\n    // Error is shown to user via UI\n  } finally {\n    loading.value = false\n  }\n}\n\nasync function loadSecrets() {\n  try {\n    // Use stage from props.template or templateData\n    const stage = templateData.value?.stage || props.template?.stage\n    \n    if (!stage) {\n      return\n    }\n    \n    // Load vaults first to get all available vault names\n    const vaultsResponse = await window.$api.listVaults()\n    \n    // Extract vaults array from response\n    const vaults = vaultsResponse.vaults || vaultsResponse || []\n    \n    // Load secrets from all vaults for this stage\n    const allSecrets = []\n    \n    // Ensure vaults is an array\n    if (!Array.isArray(vaults)) {\n      return\n    }\n    \n    for (const vault of vaults) {\n      try {\n        const vaultSlug = vault.slug || vault.name || vault\n        const response = await window.$api.listSecrets(vaultSlug, stage, false)\n        \n        const secrets = response.secrets || response || []\n        \n        if (Array.isArray(secrets)) {\n          for (const secret of secrets) {\n            allSecrets.push({\n              vault: vaultSlug,\n              key: secret.key || secret,\n              description: secret.description || ''\n            })\n          }\n        }\n      } catch (error) {\n        // Skip vault if loading fails\n      }\n    }\n    \n    // Store secrets for editor\n    secretsForEditor.value = allSecrets\n    \n    // Try to update editor if it's ready\n    await nextTick()\n    if (editorRef.value) {\n      editorRef.value.updateSecrets(allSecrets)\n    }\n  } catch (error) {\n    // Failed to load secrets - autocomplete will not be available\n  }\n}\n\nasync function saveTemplate() {\n  if (!isModified.value) return\n\n  saving.value = true\n  validationErrors.value = []\n\n  try {\n    await window.$api.put(`/templates/${encodeURIComponent(props.template.filename)}`, {\n      content: content.value\n    })\n\n    originalContent.value = content.value\n    showToast('Template saved successfully', 'success')\n    emit('saved')\n  } catch (error) {\n    showToast('Failed to save template', 'error')\n  } finally {\n    saving.value = false\n  }\n}\n\nasync function validateTemplate() {\n  validating.value = true\n  validationErrors.value = []\n  validationStatus.value = ''\n  validationMessage.value = ''\n\n  try {\n    const response = await window.$api.post('/templates/validate', {\n      content: content.value,\n      stage: templateData.value.stage\n    })\n\n    if (!response.valid) {\n      validationErrors.value = response.errors.map(e =>\n          `Line ${e.line}: ${e.key} - ${e.error}`\n      )\n      validationStatus.value = 'invalid'\n      validationMessage.value = `${response.errors.length} error${response.errors.length !== 1 ? 's' : ''} found`\n    } else {\n      validationErrors.value = []\n      \n      if (response.warnings && response.warnings.length > 0) {\n        const unusedCount = response.warnings.filter(w => w.type === 'unused').length\n        if (unusedCount > 0) {\n          validationStatus.value = 'warning'\n          validationMessage.value = `Valid with ${unusedCount} unused secret${unusedCount !== 1 ? 's' : ''}`\n        } else {\n          validationStatus.value = 'valid'\n          validationMessage.value = 'Template is valid'\n        }\n      } else {\n        validationStatus.value = 'valid'\n        validationMessage.value = 'Template is valid'\n      }\n    }\n  } catch (error) {\n    validationStatus.value = 'invalid'\n    validationMessage.value = 'Validation failed'\n  } finally {\n    validating.value = false\n    \n    // Clear success status after 5 seconds, keep errors visible\n    if (validationStatus.value === 'valid') {\n      setTimeout(() => {\n        validationStatus.value = ''\n        validationMessage.value = ''\n      }, 5000)\n    }\n  }\n}\n\n\nfunction formatContent() {\n  // Basic formatting: ensure consistent spacing and organization\n  const lines = content.value.split('\\n')\n  const formatted = []\n  let lastWasEmpty = false\n\n  for (const line of lines) {\n    const trimmed = line.trim()\n\n    // Skip multiple empty lines\n    if (trimmed === '') {\n      if (!lastWasEmpty) {\n        formatted.push('')\n        lastWasEmpty = true\n      }\n      continue\n    }\n\n    lastWasEmpty = false\n\n    // Format based on content type\n    if (trimmed.startsWith('#')) {\n      // Comment line - preserve as is\n      formatted.push(line)\n    } else if (trimmed.includes('=')) {\n      // Environment variable line\n      const [key, ...valueParts] = trimmed.split('=')\n      const value = valueParts.join('=')\n      formatted.push(`${key.trim()}=${value.trim()}`)\n    } else {\n      formatted.push(line)\n    }\n  }\n\n  content.value = formatted.join('\\n').trim() + '\\n'\n  showToast('Template formatted', 'success')\n}\n\nfunction updatePlaceholders() {\n  // Extract placeholders from content\n  const regex = /\\{([^:}]+):([^}]+)\\}/g\n  const found = new Set()\n  let match\n\n  while ((match = regex.exec(content.value)) !== null) {\n    found.add(match[0])\n  }\n\n  placeholders.value = Array.from(found).sort()\n}\n\n// Watch for content changes to update placeholders and clear validation\nwatch(content, () => {\n  updatePlaceholders()\n  // Clear validation status when content changes\n  if (validationStatus.value) {\n    validationStatus.value = ''\n    validationMessage.value = ''\n    validationErrors.value = []\n  }\n})\n\n// Watch for editor to be ready and update secrets\nwatch(editorRef, (newRef) => {\n  if (newRef && secretsForEditor.value.length > 0) {\n    newRef.updateSecrets(secretsForEditor.value)\n  }\n})\n</script>\n\n<style scoped>\ntextarea {\n  padding-left: 3.5rem; /* Space for line numbers */\n}\n</style>","<template>\n  <div class=\"fixed inset-0 z-50 overflow-y-auto\">\n    <div class=\"flex items-center justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:p-0\">\n      <!-- Background overlay -->\n      <div class=\"fixed inset-0 transition-opacity\">\n        <div class=\"absolute inset-0 bg-black opacity-75\"></div>\n      </div>\n\n      <!-- Modal content -->\n      <div class=\"relative inline-block w-full max-w-3xl px-6 py-5 overflow-hidden text-left align-middle transition-all transform bg-background rounded-lg shadow-xl\">\n        <!-- Header -->\n        <div class=\"flex items-center justify-between mb-4\">\n          <div>\n            <h2 class=\"text-xl font-semibold\">Test Template</h2>\n            <p class=\"text-sm text-muted-foreground\">{{ template.filename }}</p>\n          </div>\n          <button\n            @click=\"$emit('close')\"\n            class=\"p-1 rounded hover:bg-muted transition-colors\"\n          >\n            <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n            </svg>\n          </button>\n        </div>\n\n        <!-- Test Configuration -->\n        <div v-if=\"!hasRun\" class=\"space-y-4 mb-6\">\n          <div>\n            <label class=\"block text-sm font-medium mb-2\">Test Against Stage</label>\n            <select\n              v-model=\"selectedStage\"\n              class=\"w-full px-3 py-2 border border-border rounded-md bg-background focus:ring-2 focus:ring-primary focus:border-transparent\"\n            >\n              <option :value=\"template.stage\">{{ template.stage }} (template stage)</option>\n              <option v-for=\"stage in otherStages\" :key=\"stage\" :value=\"stage\">\n                {{ stage }}\n              </option>\n            </select>\n          </div>\n        </div>\n\n        <!-- Results -->\n        <div v-if=\"hasRun\" class=\"space-y-6\">\n          <!-- Overall Status -->\n          <div :class=\"[\n            'rounded-lg p-4 border',\n            validationResult.valid \n              ? 'bg-green-500/10 border-green-500/20' \n              : 'bg-destructive/10 border-destructive/20'\n          ]\">\n            <div class=\"flex items-center gap-3\">\n              <svg v-if=\"validationResult.valid\" class=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n              </svg>\n              <svg v-else class=\"w-6 h-6 text-destructive\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n              </svg>\n              <div>\n                <h3 class=\"font-semibold\">\n                  {{ validationResult.valid ? 'Template is Valid' : 'Template Has Issues' }}\n                </h3>\n                <p class=\"text-sm text-muted-foreground\">\n                  {{ validationResult.placeholderCount }} placeholder{{ validationResult.placeholderCount !== 1 ? 's' : '' }} checked\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <!-- Errors -->\n          <div v-if=\"validationResult.errors && validationResult.errors.length > 0\" class=\"space-y-4\">\n            <h3 class=\"font-medium text-destructive\">Errors ({{ validationResult.errors.length }})</h3>\n            <div class=\"space-y-2\">\n              <div \n                v-for=\"error in validationResult.errors\" \n                :key=\"`${error.line}-${error.key}`\"\n                class=\"bg-destructive/5 border border-destructive/20 rounded-md p-3\"\n              >\n                <div class=\"flex items-start gap-2\">\n                  <svg class=\"w-4 h-4 mt-0.5 text-destructive flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                  </svg>\n                  <div class=\"flex-1\">\n                    <p class=\"text-sm font-medium\">\n                      Line {{ error.line }}: <span class=\"font-mono\">{{ error.key }}</span>\n                    </p>\n                    <p class=\"text-sm text-muted-foreground mt-1\">\n                      {{ error.error }}\n                    </p>\n                    <p class=\"text-xs text-muted-foreground mt-1\">\n                      Vault: {{ error.vault || 'Unknown' }}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Warnings -->\n          <div v-if=\"validationResult.warnings && validationResult.warnings.length > 0\" class=\"space-y-4\">\n            <h3 class=\"font-medium text-warning\">Warnings ({{ validationResult.warnings.length }})</h3>\n            <div class=\"space-y-2\">\n              <div \n                v-for=\"warning in validationResult.warnings\" \n                :key=\"`${warning.vault}-${warning.key}`\"\n                class=\"bg-warning/5 border border-warning/20 rounded-md p-3\"\n              >\n                <div class=\"flex items-start gap-2\">\n                  <svg class=\"w-4 h-4 mt-0.5 text-warning flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"></path>\n                  </svg>\n                  <div class=\"flex-1\">\n                    <p class=\"text-sm font-medium\">\n                      {{ warning.message }}\n                    </p>\n                    <p class=\"text-sm text-muted-foreground mt-1\">\n                      <span class=\"font-mono\">{{ warning.vault }}:{{ warning.key }}</span>\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Unused Secrets -->\n          <div v-if=\"validationResult.unusedSecrets && validationResult.unusedSecrets.length > 0\" class=\"space-y-4\">\n            <h3 class=\"font-medium\">Unused Secrets ({{ validationResult.unusedSecrets.length }})</h3>\n            <div class=\"bg-muted/30 rounded-md p-3\">\n              <p class=\"text-sm text-muted-foreground mb-3\">\n                These secrets exist in the vaults but are not referenced in the template:\n              </p>\n              <div class=\"flex flex-wrap gap-2\">\n                <span \n                  v-for=\"secret in validationResult.unusedSecrets\" \n                  :key=\"`${secret.vault}-${secret.key}`\"\n                  class=\"inline-flex items-center px-2 py-1 text-xs font-mono bg-background border border-border rounded\"\n                >\n                  {{ secret.vault }}:{{ secret.key }}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <!-- Success Message -->\n          <div v-if=\"validationResult.valid && (!validationResult.warnings || validationResult.warnings.length === 0)\" class=\"text-center py-4\">\n            <svg class=\"w-12 h-12 mx-auto text-green-600 mb-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n            </svg>\n            <p class=\"text-green-600 font-medium\">All placeholders are valid!</p>\n            <p class=\"text-sm text-muted-foreground mt-1\">\n              The template can be successfully processed for the {{ selectedStage }} stage.\n            </p>\n          </div>\n        </div>\n\n        <!-- Footer -->\n        <div class=\"flex justify-end mt-6 gap-3\">\n          <button\n            @click=\"$emit('close')\"\n            class=\"px-4 py-2 text-sm border border-border rounded-md hover:bg-muted transition-colors\"\n          >\n            Cancel\n          </button>\n          <div class=\"flex gap-3\">\n            <button\n              v-if=\"hasRun\"\n              @click=\"resetTest\"\n              class=\"px-4 py-2 text-sm border border-border rounded-md hover:bg-muted transition-colors\"\n            >\n              Test Again\n            </button>\n            <button\n              v-if=\"!hasRun\"\n              @click=\"runValidation\"\n              :disabled=\"validating || !selectedStage\"\n              class=\"px-4 py-2 text-sm bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors disabled:opacity-50\"\n            >\n              {{ validating ? 'Validating...' : 'Run Validation' }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue'\nimport { useToast } from '../composables/useToast'\n\nconst props = defineProps({\n  template: {\n    type: Object,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['close'])\nconst { showToast } = useToast()\n\nconst validating = ref(false)\nconst hasRun = ref(false)\nconst selectedStage = ref('')\nconst stages = ref([])\nconst validationResult = ref({\n  valid: false,\n  errors: [],\n  warnings: [],\n  unusedSecrets: [],\n  placeholderCount: 0\n})\n\nconst otherStages = computed(() => {\n  return stages.value.filter(s => s !== props.template.stage)\n})\n\nonMounted(async () => {\n  selectedStage.value = props.template.stage\n  await loadStages()\n})\n\nasync function loadStages() {\n  try {\n    const settings = await window.$api.getSettings()\n    stages.value = settings.stages || []\n  } catch (error) {\n    // Failed to load stages\n  }\n}\n\nasync function runValidation() {\n  if (!selectedStage.value) {\n    showToast('Please select a stage', 'warning')\n    return\n  }\n\n  validating.value = true\n  try {\n    const response = await window.$api.post('/templates/validate', {\n      filename: props.template.filename,\n      stage: selectedStage.value\n    })\n\n    validationResult.value = response\n    hasRun.value = true\n\n    if (response.valid) {\n      if (response.warnings && response.warnings.length > 0) {\n        showToast('Template is valid with warnings', 'warning')\n      } else {\n        showToast('Template is fully valid!', 'success')\n      }\n    } else {\n      showToast(`Found ${response.errors.length} error${response.errors.length !== 1 ? 's' : ''}`, 'error')\n    }\n  } catch (error) {\n    showToast('Failed to validate template', 'error')\n  } finally {\n    validating.value = false\n  }\n}\n\nfunction resetTest() {\n  hasRun.value = false\n  validationResult.value = {\n    valid: false,\n    errors: [],\n    warnings: [],\n    unusedSecrets: [],\n    placeholderCount: 0\n  }\n}\n</script>","<template>\n  <div class=\"fixed inset-0 z-50 overflow-y-auto\">\n    <div class=\"flex items-center justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:p-0\">\n      <!-- Background overlay -->\n      <div class=\"fixed inset-0 transition-opacity\">\n        <div class=\"absolute inset-0 bg-black opacity-75\"></div>\n      </div>\n\n      <!-- Modal content -->\n      <div class=\"relative inline-block w-full max-w-4xl px-6 py-5 overflow-hidden text-left align-middle transition-all transform bg-background rounded-lg shadow-xl\">\n        <!-- Header -->\n        <div class=\"flex items-center justify-between mb-4\">\n          <div>\n            <h2 class=\"text-xl font-semibold\">Process Template</h2>\n            <p class=\"text-sm text-muted-foreground\">{{ template.filename }}</p>\n          </div>\n          <button\n            @click=\"$emit('close')\"\n            class=\"p-1 rounded hover:bg-muted transition-colors\"\n          >\n            <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n            </svg>\n          </button>\n        </div>\n\n        <!-- Configuration -->\n        <div v-if=\"!hasProcessed\" class=\"space-y-4 mb-6\">\n          <div class=\"grid grid-cols-2 gap-4\">\n            <div>\n              <label class=\"block text-sm font-medium mb-2\">Stage</label>\n              <select\n                v-model=\"selectedStage\"\n                class=\"w-full px-3 py-2 border border-border rounded-md bg-background focus:ring-2 focus:ring-primary focus:border-transparent\"\n              >\n                <option :value=\"template.stage\">{{ template.stage }} (template stage)</option>\n                <option v-for=\"stage in otherStages\" :key=\"stage\" :value=\"stage\">\n                  {{ stage }}\n                </option>\n              </select>\n            </div>\n            \n            <div>\n              <label class=\"block text-sm font-medium mb-2\">Missing Secret Strategy</label>\n              <select\n                v-model=\"missingStrategy\"\n                class=\"w-full px-3 py-2 border border-border rounded-md bg-background focus:ring-2 focus:ring-primary focus:border-transparent\"\n              >\n                <option value=\"skip\">Skip (leave placeholder)</option>\n                <option value=\"empty\">Empty string</option>\n                <option value=\"error\">Error</option>\n              </select>\n            </div>\n          </div>\n\n          <div class=\"bg-muted/30 rounded-md p-3\">\n            <p class=\"text-sm text-muted-foreground\">\n              <strong>Skip:</strong> Leaves placeholders as-is for missing secrets<br>\n              <strong>Empty:</strong> Replaces missing secrets with empty strings<br>\n              <strong>Error:</strong> Stops processing if any secret is missing\n            </p>\n          </div>\n        </div>\n\n        <!-- Results -->\n        <div v-if=\"hasProcessed\" class=\"space-y-4\">\n          <!-- Validation Status -->\n          <div v-if=\"!result.validation.valid\" class=\"bg-destructive/10 border border-destructive/20 rounded-md p-3\">\n            <div class=\"flex items-center gap-2\">\n              <svg class=\"w-5 h-5 text-destructive flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"></path>\n              </svg>\n              <p class=\"text-sm\">\n                Template has {{ result.validation.errorCount }} validation error{{ result.validation.errorCount !== 1 ? 's' : '' }}. \n                Output may be incomplete.\n              </p>\n            </div>\n          </div>\n\n          <!-- Output -->\n          <div>\n            <div class=\"flex items-center justify-between mb-2\">\n              <label class=\"block text-sm font-medium\">Processed Output</label>\n              <div class=\"flex items-center gap-2\">\n                <button\n                  @click=\"downloadOutput\"\n                  class=\"px-3 py-1 text-xs bg-background border border-border rounded hover:bg-muted transition-colors\"\n                >\n                  Download .env\n                </button>\n                <button\n                  @click=\"copyOutput\"\n                  class=\"px-3 py-1 text-xs bg-background border border-border rounded hover:bg-muted transition-colors\"\n                >\n                  {{ copied ? 'Copied!' : 'Copy' }}\n                </button>\n              </div>\n            </div>\n            <div class=\"relative\">\n              <pre class=\"bg-muted/50 rounded-md p-4 text-sm font-mono overflow-x-auto max-h-96 overflow-y-auto\">{{ result.output }}</pre>\n            </div>\n          </div>\n\n          <!-- Statistics -->\n          <div class=\"grid grid-cols-3 gap-4\">\n            <div class=\"bg-muted/30 rounded-md p-3 text-center\">\n              <p class=\"text-2xl font-semibold\">{{ result.placeholders?.length || 0 }}</p>\n              <p class=\"text-xs text-muted-foreground\">Total Placeholders</p>\n            </div>\n            <div class=\"bg-muted/30 rounded-md p-3 text-center\">\n              <p class=\"text-2xl font-semibold text-green-600\">{{ processedCount }}</p>\n              <p class=\"text-xs text-muted-foreground\">Processed</p>\n            </div>\n            <div class=\"bg-muted/30 rounded-md p-3 text-center\">\n              <p class=\"text-2xl font-semibold text-warning\">{{ skippedCount }}</p>\n              <p class=\"text-xs text-muted-foreground\">Skipped</p>\n            </div>\n          </div>\n        </div>\n\n        <!-- Error Display -->\n        <div v-if=\"error\" class=\"bg-destructive/10 border border-destructive/20 rounded-md p-3\">\n          <div class=\"flex items-center gap-2\">\n            <svg class=\"w-5 h-5 text-destructive flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n            </svg>\n            <p class=\"text-sm\">{{ error }}</p>\n          </div>\n        </div>\n\n        <!-- Footer -->\n        <div class=\"flex justify-end mt-6 gap-3\">\n          <button\n            @click=\"$emit('close')\"\n            class=\"px-4 py-2 text-sm border border-border rounded-md hover:bg-muted transition-colors\"\n          >\n            Cancel\n          </button>\n          <div class=\"flex gap-3\">\n            <button\n              v-if=\"hasProcessed\"\n              @click=\"resetProcess\"\n              class=\"px-4 py-2 text-sm border border-border rounded-md hover:bg-muted transition-colors\"\n            >\n              Process Again\n            </button>\n            <button\n              v-if=\"!hasProcessed\"\n              @click=\"processTemplate\"\n              :disabled=\"processing || !selectedStage\"\n              class=\"px-4 py-2 text-sm bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors disabled:opacity-50\"\n            >\n              {{ processing ? 'Processing...' : 'Process Template' }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue'\nimport { useToast } from '../composables/useToast'\n\nconst props = defineProps({\n  template: {\n    type: Object,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['close'])\nconst { showToast } = useToast()\n\nconst processing = ref(false)\nconst hasProcessed = ref(false)\nconst selectedStage = ref('')\nconst missingStrategy = ref('skip')\nconst stages = ref([])\nconst result = ref({})\nconst error = ref('')\nconst copied = ref(false)\n\nconst otherStages = computed(() => {\n  return stages.value.filter(s => s !== props.template.stage)\n})\n\nconst processedCount = computed(() => {\n  if (!result.value.output || !result.value.placeholders) return 0\n  \n  // Count placeholders that were replaced (not still in output)\n  let count = 0\n  for (const placeholder of result.value.placeholders) {\n    if (!result.value.output.includes(placeholder)) {\n      count++\n    }\n  }\n  return count\n})\n\nconst skippedCount = computed(() => {\n  if (!result.value.placeholders) return 0\n  return result.value.placeholders.length - processedCount.value\n})\n\nonMounted(async () => {\n  selectedStage.value = props.template.stage\n  await loadStages()\n})\n\nasync function loadStages() {\n  try {\n    const settings = await window.$api.getSettings()\n    stages.value = settings.stages || []\n  } catch (err) {\n    // Failed to load stages\n  }\n}\n\nasync function processTemplate() {\n  if (!selectedStage.value) {\n    showToast('Please select a stage', 'warning')\n    return\n  }\n\n  processing.value = true\n  error.value = ''\n\n  try {\n    const response = await window.$api.post('/templates/process', {\n      filename: props.template.filename,\n      stage: selectedStage.value,\n      strategy: missingStrategy.value\n    })\n\n    result.value = response\n    hasProcessed.value = true\n\n    if (response.validation && !response.validation.valid) {\n      showToast('Template processed with validation errors', 'warning')\n    } else {\n      showToast('Template processed successfully', 'success')\n    }\n  } catch (err) {\n    error.value = err.message || 'Failed to process template'\n    showToast('Failed to process template', 'error')\n  } finally {\n    processing.value = false\n  }\n}\n\nfunction resetProcess() {\n  hasProcessed.value = false\n  result.value = {}\n  error.value = ''\n  copied.value = false\n}\n\nasync function copyOutput() {\n  try {\n    await navigator.clipboard.writeText(result.value.output)\n    copied.value = true\n    showToast('Copied to clipboard', 'success')\n    setTimeout(() => {\n      copied.value = false\n    }, 2000)\n  } catch (err) {\n    showToast('Failed to copy to clipboard', 'error')\n  }\n}\n\nfunction downloadOutput() {\n  const blob = new Blob([result.value.output], { type: 'text/plain' })\n  const url = URL.createObjectURL(blob)\n  const a = document.createElement('a')\n  a.href = url\n  a.download = `${selectedStage.value}.env`\n  document.body.appendChild(a)\n  a.click()\n  document.body.removeChild(a)\n  URL.revokeObjectURL(url)\n  showToast('Downloaded .env file', 'success')\n}\n</script>","<template>\n  <div class=\"space-y-6\">\n    <!-- Header -->\n    <div class=\"flex justify-between items-center\">\n      <div>\n        <h1 class=\"text-2xl font-bold\">Environment Templates</h1>\n        <p class=\"text-muted-foreground mt-1\">\n          Manage .env templates for different stages\n        </p>\n      </div>\n      <button \n        @click=\"showCreateModal = true\"\n        class=\"flex items-center space-x-2 px-4 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors text-sm font-medium\"\n      >\n        <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v16m8-8H4\"></path>\n        </svg>\n        <span>Add Template</span>\n      </button>\n    </div>\n\n    <!-- Template Path Display -->\n    <div class=\"bg-muted/50 rounded-lg p-4\">\n      <div class=\"flex items-center gap-2\">\n        <svg class=\"w-4 h-4 text-muted-foreground\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z\"></path>\n        </svg>\n        <span class=\"text-sm text-muted-foreground\">Template Directory:</span>\n        <span class=\"text-sm font-mono\">{{ templatePath }}</span>\n      </div>\n    </div>\n\n    <!-- Templates Table -->\n    <div v-if=\"loading\" class=\"flex justify-center py-12\">\n      <div class=\"animate-spin rounded-full h-8 w-8 border-2 border-primary border-t-transparent\"></div>\n    </div>\n\n    <div v-else-if=\"templates.length === 0\" class=\"text-center py-12 bg-muted/30 rounded-lg\">\n      <svg class=\"w-12 h-12 mx-auto text-muted-foreground mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\n      </svg>\n      <p class=\"text-muted-foreground mb-2\">No templates found</p>\n      <p class=\"text-sm text-muted-foreground\">Create your first template to get started</p>\n    </div>\n\n    <div v-else class=\"bg-background border border-border rounded-lg overflow-hidden\">\n      <table class=\"w-full\">\n        <thead class=\"bg-muted/50\">\n          <tr>\n            <th class=\"px-4 py-3 text-left text-sm font-medium text-muted-foreground\">Template</th>\n            <th class=\"px-4 py-3 text-left text-sm font-medium text-muted-foreground\">Stage</th>\n            <th class=\"px-4 py-3 text-left text-sm font-medium text-muted-foreground\">Size</th>\n            <th class=\"px-4 py-3 text-left text-sm font-medium text-muted-foreground\">Last Modified</th>\n            <th class=\"px-4 py-3 text-right text-sm font-medium text-muted-foreground\"></th>\n          </tr>\n        </thead>\n        <tbody class=\"divide-y divide-border\">\n          <tr v-for=\"template in templates\" :key=\"template.filename\" class=\"group hover:bg-muted/30 transition-colors\">\n            <td class=\"px-4 py-3\">\n              <div class=\"flex items-center gap-2\">\n                <svg class=\"w-4 h-4 text-muted-foreground\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\n                </svg>\n                <span class=\"font-mono text-sm\">{{ template.filename }}</span>\n              </div>\n            </td>\n            <td class=\"px-4 py-3\">\n              <span class=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-primary/10 text-primary\">\n                {{ template.stageDisplay || template.stage }}\n              </span>\n            </td>\n            <td class=\"px-4 py-3 text-sm text-muted-foreground\">\n              {{ formatSize(template.size) }}\n            </td>\n            <td class=\"px-4 py-3 text-sm text-muted-foreground\">\n              {{ formatDate(template.lastModified) }}\n            </td>\n            <td class=\"px-4 py-3\">\n              <div class=\"flex items-center justify-end opacity-30 group-hover:opacity-100 transition-opacity\">\n                <Tooltip content=\"Edit Template\" :delay-duration=\"200\">\n                  <button\n                    @click=\"editTemplate(template)\"\n                    class=\"p-1.5 text-muted-foreground hover:text-foreground hover:bg-muted rounded transition-colors\"\n                  >\n                    <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"></path>\n                    </svg>\n                  </button>\n                </Tooltip>\n                <Tooltip content=\"Validate Template\" :delay-duration=\"200\">\n                  <button\n                    @click=\"testTemplate(template)\"\n                    class=\"p-1.5 text-muted-foreground hover:text-foreground hover:bg-muted rounded transition-colors\"\n                  >\n                    <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                    </svg>\n                  </button>\n                </Tooltip>\n                <Tooltip content=\"Process Template\" :delay-duration=\"200\">\n                  <button\n                    @click=\"processTemplate(template)\"\n                    class=\"p-1.5 text-muted-foreground hover:text-foreground hover:bg-muted rounded transition-colors\"\n                  >\n                    <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"></path>\n                    </svg>\n                  </button>\n                </Tooltip>\n                <Tooltip content=\"Delete Template\" :delay-duration=\"200\">\n                  <button\n                    @click=\"deleteTemplate(template)\"\n                    class=\"p-1.5 text-muted-foreground hover:text-destructive hover:bg-destructive/10 rounded transition-colors\"\n                  >\n                    <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\n                    </svg>\n                  </button>\n                </Tooltip>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <!-- Modals -->\n    <CreateTemplateModal \n      v-if=\"showCreateModal\"\n      @close=\"showCreateModal = false\"\n      @created=\"handleTemplateCreated\"\n    />\n\n    <TemplateEditorModal\n      v-if=\"showEditModal\"\n      :template=\"selectedTemplate\"\n      @close=\"showEditModal = false\"\n      @saved=\"handleTemplateSaved\"\n    />\n\n    <TemplateTesterModal\n      v-if=\"showTestModal\"\n      :template=\"selectedTemplate\"\n      @close=\"showTestModal = false\"\n    />\n\n    <TemplateProcessorModal\n      v-if=\"showProcessModal\"\n      :template=\"selectedTemplate\"\n      @close=\"showProcessModal = false\"\n    />\n\n    <!-- Delete Template Confirmation Modal -->\n    <DeleteConfirmationModal\n      ref=\"deleteTemplateModal\"\n      title=\"Delete Template\"\n      :message=\"`Are you sure you want to delete '${templateToDelete?.filename}'? This action cannot be undone.`\"\n      confirmText=\"Delete Template\"\n      @confirm=\"confirmDeleteTemplate\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { useToast } from '../composables/useToast'\nimport CreateTemplateModal from './CreateTemplateModal.vue'\nimport TemplateEditorModal from './TemplateEditorModal.vue'\nimport TemplateTesterModal from './TemplateTesterModal.vue'\nimport TemplateProcessorModal from './TemplateProcessorModal.vue'\nimport DeleteConfirmationModal from './DeleteConfirmationModal.vue'\nimport Tooltip from './ui/Tooltip.vue'\n\nconst { showToast } = useToast()\n\nconst loading = ref(true)\nconst templates = ref([])\nconst templatePath = ref('')\nconst showCreateModal = ref(false)\nconst showEditModal = ref(false)\nconst showTestModal = ref(false)\nconst showProcessModal = ref(false)\nconst selectedTemplate = ref(null)\nconst templateToDelete = ref(null)\nconst deleteTemplateModal = ref(null)\n\nonMounted(async () => {\n  await loadSettings()\n  loadTemplates()\n})\n\nasync function loadSettings() {\n  try {\n    const settings = await window.$api.getSettings()\n    templatePath.value = settings.template_path || 'env'\n  } catch (error) {\n    templatePath.value = 'env' // fallback\n  }\n}\n\nasync function loadTemplates() {\n  loading.value = true\n  try {\n    const response = await window.$api.get('/templates')\n    templates.value = response.templates || []\n  } catch (error) {\n    showToast('Failed to load templates', 'error')\n  } finally {\n    loading.value = false\n  }\n}\n\nfunction editTemplate(template) {\n  console.log(\"Editing template:\", template)\n  selectedTemplate.value = { ...template }\n  showEditModal.value = true\n}\n\nfunction testTemplate(template) {\n  selectedTemplate.value = { ...template }\n  showTestModal.value = true\n}\n\nfunction processTemplate(template) {\n  selectedTemplate.value = { ...template }\n  showProcessModal.value = true\n}\n\nfunction deleteTemplate(template) {\n  templateToDelete.value = template\n  deleteTemplateModal.value.open()\n}\n\nasync function confirmDeleteTemplate() {\n  if (!templateToDelete.value) return\n  \n  try {\n    await window.$api.delete(`/templates/${encodeURIComponent(templateToDelete.value.filename)}`)\n    showToast('Template deleted successfully', 'success')\n    await loadTemplates()\n  } catch (error) {\n    showToast('Failed to delete template', 'error')\n  } finally {\n    templateToDelete.value = null\n  }\n}\n\nfunction handleTemplateCreated() {\n  showCreateModal.value = false\n  loadTemplates()\n}\n\nfunction handleTemplateSaved() {\n  showEditModal.value = false\n  loadTemplates()\n}\n\nfunction formatSize(bytes) {\n  if (bytes === 0) return '0 B'\n  const k = 1024\n  const sizes = ['B', 'KB', 'MB']\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  return Math.round(bytes / Math.pow(k, i) * 10) / 10 + ' ' + sizes[i]\n}\n\nfunction formatDate(timestamp) {\n  if (!timestamp) return 'Unknown'\n  const date = new Date(timestamp * 1000)\n  const now = new Date()\n  const diff = now - date\n  \n  // Less than a minute\n  if (diff < 60000) return 'Just now'\n  \n  // Less than an hour\n  if (diff < 3600000) {\n    const minutes = Math.floor(diff / 60000)\n    return `${minutes} minute${minutes === 1 ? '' : 's'} ago`\n  }\n  \n  // Less than a day\n  if (diff < 86400000) {\n    const hours = Math.floor(diff / 3600000)\n    return `${hours} hour${hours === 1 ? '' : 's'} ago`\n  }\n  \n  // Less than a week\n  if (diff < 604800000) {\n    const days = Math.floor(diff / 86400000)\n    return `${days} day${days === 1 ? '' : 's'} ago`\n  }\n  \n  // Default to date string\n  return date.toLocaleDateString()\n}\n</script>","import { createRouter, createWebHashHistory } from 'vue-router'\nimport SecretsTable from './components/SecretsTable.vue'\nimport DiffView from './components/DiffView.vue'\nimport SettingsView from './components/SettingsView.vue'\nimport TemplatesView from './components/TemplatesView.vue'\n\nconst routes = [\n  {\n    path: '/',\n    redirect: '/secrets'\n  },\n  {\n    path: '/secrets',\n    name: 'secrets',\n    component: SecretsTable\n  },\n  {\n    path: '/templates',\n    name: 'templates',\n    component: TemplatesView\n  },\n  {\n    path: '/diff',\n    name: 'diff',\n    component: DiffView\n  },\n  {\n    path: '/settings',\n    name: 'settings',\n    component: SettingsView\n  }\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n})\n\nexport default router","import { createApp } from 'vue'\nimport './style.css'\nimport App from './App.vue'\nimport router from './router'\nimport { api } from './services/api'\n\n// Make API available globally\nwindow.$api = api\n\ncreateApp(App)\n  .use(router)\n  .mount('#app')"],"names":["props","__props","variantClasses","computed","variants","default","success","destructive","toast","variant","icon","template","_createElementBlock","class","_normalizeClass","value","_createElementVNode","_hoisted_1","_openBlock","_hoisted_2","_createBlock","_resolveDynamicComponent","_hoisted_3","title","_hoisted_4","_toDisplayString","description","_hoisted_5","onClick","_cache","$event","$emit","id","fill","stroke","viewBox","d","toasts","dismiss","useToast","_createVNode","_TransitionGroup","name","tag","_Fragment","_renderList","_unref","Toast","key","onDismiss","handlers","ref","search","closeModal","toggleMask","useKeyboardShortcuts","handleKeydown","event","isInCodeMirror","target","closest","tagName","preventDefault","forEach","handler","metaKey","ctrlKey","isListenerSetup","registerSearchHandler","registerModalCloseHandler","push","index","indexOf","splice","registerMaskToggleHandler","setupGlobalListener","document","addEventListener","teardownGlobalListener","removeEventListener","tabs","label","path","appName","keepVersion","onMounted","async","settings","window","$api","getSettings","app_name","keep_version","error","console","loadSettings","onUnmounted","ToastContainer","height","width","xmlns","_hoisted_6","_hoisted_7","tab","_component_router_link","to","custom","_withCtx","isActive","$router","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_component_router_view","emit","__emit","vaultOpen","stageOpen","vaultDisplay","vault","vaultObj","_a","vaults","find","v","slug","display","e","length","selectVault","stage","stages","s","selectStage","isVisible","tooltipRef","tooltipStyle","triggerElement","showTimeout","hideTimeout","arrowClass","classes","top","bottom","left","right","side","showTooltip","clearTimeout","currentTarget","setTimeout","nextTick","trigger","getBoundingClientRect","tooltip","sideOffset","margin","Math","max","min","innerWidth","innerHeight","positionTooltip","delayDuration","hideTooltip","onMouseenter","onMouseleave","onFocus","onBlur","_renderSlot","_ctx","$slots","_Teleport","_Transition","style","_createTextVNode","content","displayValue","masked","maskValue","Tooltip","data","secret","navigator","clipboard","writeText","api","constructor","this","baseUrl","token","KEEP_AUTH_TOKEN","request","options","response","fetch","headers","ok","json","catch","Error","status","get","post","body","method","JSON","stringify","put","listSecrets","unmask","getSecret","encodeURIComponent","createSecret","updateSecret","deleteSecret","renameSecret","oldKey","newKey","copySecretToStage","targetStage","targetVault","sourceStage","sourceVault","searchSecrets","query","getSecretHistory","limit","updateSettings","listVaults","addVault","updateVault","deleteVault","listStages","addStage","removeStage","verifyVaults","getDiff","join","exportSecrets","format","analyzeImport","only","except","executeImport","strategy","dry_run","getWorkspace","updateWorkspace","activeVaults","activeStages","active_vaults","active_stages","verifyWorkspace","useSecrets","secrets","loading","loadSecrets","err","message","clearError","form","reactive","keyError","saveError","validateKey","includes","test","save","watch","newSecret","initialKey","immediate","onSubmit","type","disabled","placeholder","required","_vModelText","rows","_hoisted_12","currentKey","trim","isValid","handleRename","onKeyup","targetCombination","availableCombinations","combinations","vaultSlug","handleCopy","split","secretKey","currentVault","currentStage","combo","history","unmasked","toggleUnmask","loadHistory","_hoisted_15","_hoisted_14","_hoisted_16","entry","version","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","dataType","_hoisted_21","_hoisted_22","formatDate","timestamp","modifiedDate","_hoisted_23","modifiedBy","_hoisted_24","_hoisted_25","handleDelete","step","fileName","envContent","isDragging","filters","analyzing","analysis","total","new","existing","invalid","empty","conflictStrategy","dryRun","importing","importResults","imported","skipped","failed","results","errors","analysisSecrets","handleFileUpload","file","files","processFile","handleDrop","dataTransfer","match","reader","FileReader","onload","result","onerror","readAsText","closeWizard","getStatusClass","getStatusLabel","getResultStatusClass","getResultStatusLabel","info","reason","onDrop","onDragover","onDragenter","onDragleave","onChange","accept","$refs","fileInput","click","_hoisted_13","for","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","revision","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","selectedFormat","filename","formats","secretCount","defaultFilename","Date","toISOString","downloadSecrets","jsonData","escapeCsvField","modified","String","replace","formatEnvValue","blob","Blob","url","URL","createObjectURL","link","createElement","href","download","appendChild","removeChild","revokeObjectURL","field","fmt","menuOpen","showImportWizard","showExportModal","handleImported","handleClickOutside","button","menu","isOpen","onBeforeUnmount","permissions","read","write","stopPropagation","ImportWizard","onImported","onClose","ExportModal","useVault","defaultVault","isDefault","_b","defaultStage","default_stage","loadVaults","loadStages","loadAll","vaultsRes","stagesRes","settingsRes","Promise","all","loadVaultData","allSecrets","fetchSecrets","localStorage","getItem","searchQuery","searchInput","unmaskAll","unmaskedKeys","Set","showAddDialog","editingSecret","renamingSecret","copyingSecret","historySecret","deletingSecret","toLowerCase","filter","keyMatches","valueMatches","list","delete","stagePerms","cleanupModalHandler","handleSecretSaveSuccess","closeDialog","handleDeleteSuccess","handleRenameSuccess","handleCopyToStage","default_vault","setItem","loadVaultsAndStages","focus","VaultStageSelector","TableActionsMenu","SecretValue","has","onToggle","add","editSecret","showRenameDialog","showCopyToStageDialog","showHistoryDialog","showDeleteDialog","SecretDialog","onSuccess","RenameDialog","CopyToStageDialog","onCopy","HistoryDialog","onRefresh","DeleteConfirmDialog","menuStyle","buttonRef","toggleMenu","dispatchEvent","CustomEvent","rect","menuWidth","menuHeight","showEdit","showRename","showCreate","showCopyValue","showCopyTo","showHistory","showDelete","Boolean","scrollY","handleEdit","secretValue","handleCreate","handleCopyValue","handleCopyTo","handleHistory","contains","handleCloseAllMenus","handleScroll","buttonClass","availableVaults","availableStages","selectedCombinations","fullDiffMatrix","unmaskedRows","showCombinationsDropdown","activeCellMenu","menuPosition","activeMenuData","copyingSecretStage","copyTarget","showRowColors","toggleRowColors","toString","activeColumns","map","newVal","deep","diffMatrix","filteredDiff","vaultData","Object","entries","hasSelectedCombination","filteredVaultData","matchesSearch","stageData","filteredStageData","keys","sortedKeys","sort","a","b","localeCompare","getRowClass","values","totalExpected","totalFound","column","getSecretValue","size","getRowStatus","loadDiff","diff","getCellClass","getMaskedValue","isNew","executeCopy","selectAll","c","selectNone","savedSelections","saved","parse","some","loadInitialData","toggleRowMask","SecretActionsMenu","onEdit","onCopyValue","onCopyTo","onHistory","onDelete","onCreate","_c","confirm","cancel","__expose","open","close","confirmText","activeTab","namespace","templatePath","showVaultModal","editingVault","vaultForm","driver","scope","verifying","showVerificationModal","verificationResults","vaultToDelete","deleteVaultModal","newStage","stageToDelete","deleteStageModal","serverUrl","location","origin","workspaceForm","workspaceCreatedAt","workspaceUpdatedAt","verifyingWorkspace","getVaultDisplayName","getDriverDefaults","secretsmanager","ssm","onDriverChange","defaults","saveGeneralSettings","template_path","confirmDeleteVault","closeVaultModal","saveVault","findIndex","verifyAllVaults","failedVaults","vaultName","stageResults","stageName","confirmDeleteStage","saveWorkspace","workspace","updated_at","resetWorkspace","failedCombos","warning","dateString","date","toLocaleDateString","toLocaleTimeString","available_vaults","available_stages","created_at","loadWorkspace","_vModelSelect","editVault","_vModelCheckbox","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_62","_hoisted_63","_hoisted_65","_hoisted_67","_hoisted_68","_hoisted_69","_hoisted_70","_hoisted_71","_hoisted_72","_hoisted_73","_hoisted_74","_hoisted_75","_hoisted_76","_hoisted_77","permission","_hoisted_78","_hoisted_79","_hoisted_80","_hoisted_81","_hoisted_82","DeleteConfirmationModal","onConfirm","showToast","selectedStage","preview","generatingPreview","creating","templateExists","copied","checkExistingTemplate","templates","t","generatePreview","createTemplate","copyPreview","rangeFrom","rangeTo","isExtendingChar","code","from","mid","isRegionalIndicator","numbers","parseInt","i","n","findClusterBreak","str","pos","forward","includeExtending","nextClusterBreak","prevClusterBreak","surrogateLow","charCodeAt","surrogateHigh","prev","codePointAt","codePointSize","next","countBefore","found","code0","code1","ch","Text$1","Text","lineAt","RangeError","lineInner","line","lines","text","clip","parts","decompose","TextNode","append","other","slice","eq","start","scanIdentical","end","RawTextCursor","skip","lineBreak","done","iter","dir","iterRange","PartialTextCursor","iterLines","inner","LineCursor","sliceString","toJSON","flatten","of","TextLeaf","textLength","super","children","isLine","offset","string","Line","sliceText","pop","joined","appendText","newLen","lineSep","part","len","child","endLine","childOpen","updated","totalLines","copy","iA","iB","eA","eB","chA","chB","reduce","l","flat","chunk","maxChunk","minChunk","chunked","currentLines","currentLen","currentChunk","last","node","flush","concat","first","RawTextCursor$1","nodes","offsets","nextInner","offsetValue","PartialTextCursor$1","cursor","LineCursor$1","afterBreak","Symbol","prototype","iterator","Line$1","number","findClusterBreak$1","fromCodePoint","fromCharCode","DefaultSplit","MapMode","ChangeDesc$1","ChangeDesc","sections","newLength","ins","iterGaps","f","posA","posB","iterChangedRanges","individual","iterChanges","invertedDesc","composeDesc","composeSets","mapDesc","before","mapSet","mapPos","assoc","mode","Simple","endA","TrackDel","TrackBefore","TrackAfter","touchesRange","fromJSON","Array","isArray","create","ChangeSet","inserted","apply","doc","fromA","toA","fromB","_toB","invert","compose","desc","ranges","resultSections","resultInserted","filteredSections","SectionIter","addSection","off","addInsert","changes","filtered","force","set","process","spec","sub","insert","insText","insLen","createSet","forceJoin","endB","setA","setB","mkSet","piece","len2","sectionLen","insB","textBit","forward2","SectionIter$1","SelectionRange$1","SelectionRange","flags","anchor","head","bidiLevel","level","goalColumn","change","extend","EditorSelection","range","abs","includeAssoc","EditorSelection$1","mainIndex","r","main","asSingle","addRange","replaceRange","which","single","normalized","checkSelection","selection","docLength","nextID","Facet$1","Facet","combine","compareInput","compare","isStatic","enables","extensions","define","config","sameArray","static","FacetProvider","compute","deps","computeN","x","state","every","FacetProvider$1","dependencies","facet","dynamicSlot","addresses","getter","idx","multi","depDoc","depSel","depAddrs","dep","update","tr","docChanged","ensureAll","compareArray","reconfigure","oldState","oldAddr","address","oldVal","getAddr","StateField","addrs","changed","addr","ensureAddr","dynamicFacetSlot","providers","providerAddrs","p","providerTypes","dynamic","val","depChanged","oldProviders","facets","oldValue","initField","StateField$1","createF","updateF","compareF","provides","provide","init","slot","reInit","oldInit","extension","Prec_","prec","ext","PrecExtension","Prec","highest","high","low","lowest","PrecExtension$1","Compartment$1","Compartment","CompartmentInstance","compartment","compartments","CompartmentInstance$1","Configuration$1","Configuration","base","dynamicSlots","staticValues","statusTemplate","staticFacet","resolve","fields","newCompartments","Map","seen","known","oldFacets","computeSlot","languageData","allowMultipleSelections","lineSeparator","changeFilter","transactionFilter","transactionExtender","readOnly","Annotation$1","AnnotationType","AnnotationType$1","Annotation","StateEffectType$1","StateEffect","StateEffect$1","mapping","mapped","is","StateEffectType","mapEffects","effects","effect","appendConfig","Transaction$1","Transaction","startState","annotations","scrollIntoView","_doc","_state","time","now","newDoc","newSelection","applyTransaction","annotation","ann","reconfigured","isUserEvent","userEvent","joinRanges","mergeTransaction","sequential","mapForA","mapForB","resolveTransactionInner","docSize","sel","asArray","resolveTransaction","specs","seq","extenders","extendTransaction","back","filterTransaction","addToHistory","remote","none","CharCategory","nonASCIISingleCaseWordChar","wordChar","RegExp","_","makeCategorizer","wordChars","char","Space","toUpperCase","hasWordChar","Word","Other","EditorState$1","EditorState","require","startValues","conf","replaceSelection","toText","changeByRange","result1","newChanges","newMapped","j","mapBy","sliceDoc","prop","fieldInit","hasOwnProperty","call","configuration","tabSize","phrase","phrases","m","languageDataAt","provider","charCategorizer","at","wordAt","cat","combineConfig","configs","current","kA","kB","k","RangeValue$1","Range","RangeValue","startSide","endSide","point","mapMode","Range$2","cmpRange","Chunk$1","Chunk","maxPoint","startAt","arr","lo","hi","between","newPos","newFrom","newTo","curFrom","curTo","RangeSet$1","RangeSet","chunkPos","nextLayer","chunkEnd","isEmpty","updateSpec","filterFrom","filterTo","cur","LayerCursor","goto","spill","builder","RangeSetBuilder","addInner","rangeIndex","chunkIndex","addChunk","nextChunk","finishInner","chunks","touch","HeapCursor","sets","oldSets","newSets","textDiff","comparator","minPointSize","sharedChunks","findSharedChunks","sideA","SpanCursor","sideB","sameValues","active","spans","openRanges","openStart","activeForPoint","openCount","pointFrom","pointRank","openEnd","span","build","lazySort","finish","layer","RangeSetBuilder$1","finishChunk","newArrays","chunkStart","setMaxPoint","lastFrom","lastTo","inA","shared","LayerCursor$1","minPoint","rank","gotoInner","setRangeIndex","HeapCursor$1","heap","heapBubble","childIndex","SpanCursor$1","activeTo","activeRank","minActive","removeActive","remove","findMinIndex","addActive","trackOpen","wasPoint","nextVal","reverse","startA","startB","dPos","dEnd","clipEnd","comparePoint","compareRange","boundChange","array","foundPos","COUNT","SET","floor","random","globalThis","StyleModule","rules","splitSelector","selector","render","selectors","isKeyframes","local","isAt","exec","keyframes","getRules","newName","mount","root","modules","nonce","setNonce","StyleSet","adoptedSet","ownerDocument","win","defaultView","adoptedStyleSheets","CSSStyleSheet","adopted","sheet","styleTag","setAttribute","mod","insertRule","textContent","parentNode","insertBefore","firstChild","getAttribute","shift","mac","platform","ie","userAgent","keyName","shiftKey","altKey","keyCode","crelt","elt","arguments","nodeType","createTextNode","getSelection","dom","hasSelection","anchorNode","clientRectsFor","textRange","nodeValue","getClientRects","isEquivalentPosition","targetNode","targetOff","scanFor","domIndex","previousSibling","isBlockElement","nodeName","maxOffset","parent","childNodes","contentEditable","flattenRect","windowRect","vp","visualViewport","getScale","scaleX","offsetWidth","scaleY","offsetHeight","isFinite","scratchRange","DOMSelectionState$1","anchorOffset","focusNode","focusOffset","domSel","setRange","preventScrollSupported","focusPreventScroll","setActive","stack","scrollTop","scrollLeft","preventScroll","createRange","setEnd","setStart","dispatchKey","mods","cancelable","down","KeyboardEvent","synthetic","up","defaultPrevented","clearAttributes","attributes","removeAttributeNode","isScrolledToBottom","scrollHeight","clientHeight","textNodeBefore","startNode","startOffset","textNodeAfter","DOMPos$1","DOMPos","precise","after","noChildren","ContentView$1","ContentView","overrideDOMText","posAtStart","posBefore","posAtEnd","view","breakAfter","posAfter","sync","track","nextSibling","contentView","canReuseDOM","reuseDOM","written","rm$1","_dom","localPosFromDOM","bias","lastChild","domBoundsAround","fromI","fromStart","toI","toEnd","prevEnd","startDOM","endDOM","markDirty","andParent","markParentsDirty","childList","setParent","setDOM","cmView","rootView","replaceChildren","destroy","ignoreMutation","_rec","ignoreEvent","_event","childCursor","ChildCursor","childPos","findPos","isEditable","isWidget","isHidden","merge","source","hasStart","become","getSide","ChildCursor$1","fromOff","toOff","breakAtStart","breakAtEnd","mergeChildrenInto","dLen","nav","vendor","documentElement","ie_edge","ie_upto10","ie_11up","gecko","chrome","webkit","safari","ios","maxTouchPoints","browser","windows","linux","ie_version","documentMode","gecko_version","chrome_version","android","webkit_version","TextView","createDOM","textDOM","domAtPos","_from","_to","coordsAt","rects","textCoords","MarkView","mark","setAttrs","className","attrs","_hasStart","detachFrom","inlineDOMAtPos","coordsInChildren","WidgetView","widget","prevWidget","updateDOM","toDOM","editable","fromBack","WidgetBufferView","joinInlineInto","beforePos","afterPos","scan","onSameLine","fallbackRect","combineAttrs","noAttrs","attrsEq","ignore","keysA","keysB","updateAttrs","cssText","removeAttribute","getAttrs","attr","WidgetType$1","estimatedHeight","lineBreaks","BlockType","heightRelevant","MarkDecoration","block","inlineOrder","PointDecoration","isBlockGap","getInclusive","LineDecoration","hasHeight","Decoration","isReplace","WidgetRange","WidgetBefore","WidgetAfter","inclusiveStart","inclusiveEnd","inclusive","LineView","prevAttrs","transferDOM","setDeco","addLineDeco","deco","cls","classList","hack","cmIgnore","measureTextSize","textHeight","totalWidth","lineHeight","charWidth","heightOracle","viewState","dist","covers","docView","BlockWidgetView","_takeDeco","BlockGapWidget","WidgetType","ContentBuilder$1","ContentBuilder","disallowBlockEffectsFor","curLine","pendingBuffer","bufferMarks","atCursorPos","textOff","posCovered","getLine","flushBuffer","wrapMarks","addBlockWidget","buildText","take","NullWidget","inline","cursorBefore","cursorAfter","decorations","dynamicDecorationMap","Direction","LTR","RTL","dec","LowTypes","ArabicTypes","Brackets","BracketStack","charType","BidiRE","BidiSpan$1","order","maybe","isolatesEq","direction","types","emitSpans","baseLevel","isolates","ourType","iCh","iI","sameDir","isNum","recurse","localLevel","iScan","run","iso","upto","jI","BidiSpan","computeSectionOrder","outerType","rFrom","rTo","prevType","prevStrong","computeCharTypes","oppositeType","sI","context","br","sJ","embed","processBracketPairs","beforeL","fromJ","processNeutrals","trivialOrder","movedOver","moveVisually","startIndex","spanI","spanEnd","nextI","nextIndex","nextSpan","autoDirection","clickAddsSelectionRange","dragMovesSelection$1","mouseSelectionStyle","exceptionSink","updateListener","inputHandler","focusChangeEffect","clipboardInputFilter","clipboardOutputFilter","perLineTextDirection","nativeSelectionHidden","scrollHandler","ScrollTarget$1","ScrollTarget","y","yMargin","xMargin","isSnapshot","setEditContextFormatting","logException","exception","nextPluginID","viewPlugin","plugins","plugin","ViewPlugin$1","ViewPlugin","domEventHandlers","domEventObservers","buildExtensions","baseExtensions","arg","eventHandlers","eventObservers","pluginInst","fromClass","PluginInstance$1","mustUpdate","deactivate","editorAttributes","contentAttributes","outerDecorations","atomicRanges","bidiIsolatedRanges","getIsolatedRanges","Function","fromDoc","toDoc","bidiIsolate","scrollMargins","getScrollMargins","styleModule","ChangedRange$1","ChangedRange","toB","addToSet","me","extendWithRanges","dI","rI","ViewUpdate$1","ViewUpdate","transactions","changedRanges","viewportChanged","viewportMoved","heightChanged","geometryChanged","focusChanged","selectionSet","domChanged","hasComposition","markedForComposition","editContextFormatting","lastCompositionAfterCursor","minWidth","minWidthFrom","minWidthTo","impreciseAnchor","impreciseHead","forceSelection","lastUpdate","contentDOM","updateDeco","updateInner","updateEditContextFormatting","readCompositionAt","inputState","composing","observer","editContext","newSel","composition","touched","touchesComposition","headPos","findCompositionNode","textNode","inv","marks","parentView","findCompositionRange","clear","decoDiff","comp","DecorationComparator$1","findChangedDeco","oldLength","mustMeasureContent","updateChildren","contentHeight","flexBasis","selectionRange","cView","gaps","viewport","updateGaps","compLine","compositionView","fixCompositionDOM","fix","updateSelection","mustRead","fromPointer","readSelectionRange","activeElt","activeElement","focused","selectionNotFocus","tabIndex","moveToLine","dummy","suppressWidgetCursorChange","inside","assignedSlot","inUneditable","blur","rawSel","nextTo","collapse","caretBidiLevel","removeAllRanges","setSelectionRange","posFromDOM","enforceCursorAssoc","modify","lineStart","newRange","nearest","domView","best","bestPos","coordsForChar","childOff","measureVisibleLineHeights","contentWidth","clientWidth","isWider","scrollDOM","widest","ltr","textDirection","childRect","textDirectionAt","getComputedStyle","measure","position","computeBlockGapDeco","vs","viewports","lineBlockAt","allDeco","dynamicOuter","outerDeco","lineGapDeco","margins","targetRect","stop","bounding","scrollWidth","moveX","moveY","rectHeight","boundingHeight","scrollBy","movedX","movedY","host","scrollRectIntoView","textBefore","textAfter","descAfter","descBefore","getdx","getdy","yOverlap","upTop","upBot","domPosAtCoords","closestRect","closestX","closestY","above","below","aboveRect","belowRect","closestOverlap","dx","dy","domPosInText","clipX","closestOffset","closestDY","generalSide","posAtCoords","coords","docTop","paddingTop","docHeight","yOffset","halfLine","bounced","elementAtHeight","posAtCoordsImprecise","elementFromPoint","element","caretPositionFromPoint","offsetNode","caretRangeFromPoint","startContainer","isSuspiciousSafariCaretResult","isSuspiciousChromeCaretResult","contentRect","into","round","defaultCharacterWidth","lineWrapping","defaultLineHeight","lineLength","col","findColumn","blockAt","moveByChar","by","bidiSpans","check","visualLineSide","skipAtomicRanges","atoms","moved","skipAtomsForSelection","skipAtoms","oldPos","LineBreakPlaceholder","DOMReader$1","points","readRange","findPointBefore","oldLen","readNode","nextView","readTextNode","re","nextBreak","breakSize","fromView","findPointInside","isAtEnd","DOMPoint$1","DOMChange","typeOver","bounds","iHead","iAnchor","selPoints","DOMPoint","selectionPoints","DOMReader","selectionFromPoints","offFrom","offTo","applyDOMChange","domChange","lastKey","lastKeyTime","lastKeyCode","preferredPos","preferredSide","minLen","findDiff","hasFocus","applyDOMChangeInner","lastSelectionTime","lastSelectionOrigin","dispatch","flushIOSKey","defaultTr","defaultInsert","mainSel","compositionRange","replaced","rangeChanges","selOff","compositionPendingChange","compositionEndedAt","compositionFirstChange","applyDefaultInsert","h","InputState$1","setSelectionOrigin","lastTouchTime","lastFocusTime","lastScrollTop","lastScrollLeft","pendingIOSKey","tabFocusMode","lastContextMenu","scrollHandlers","compositionPendingKey","mouseSelection","draggedContent","handleEvent","bind","notifiedFocused","appliedFirefoxHack","bubbles","eventBelongsToEditor","ignoreDuringComposition","keydown","updateState","then","runHandlers","observers","ensureHandlers","record","bindHandler","computeHandlers","passive","exists","modifierCodes","delayAndroidKey","pending","PendingKeys","EmacsyPendingKeys","forceFlush","startMouseSelection","inputType","dragScrollSpeed","MouseSelection$1","startEvent","mustSelect","scrollSpeed","scrolling","lastEvent","scrollParents","scrollableParents","move","multiple","addsSelectionRange","dragging","rangeCount","getRangeAt","clientX","clientY","isInPrimarySelection","getClickType","select","buttons","sx","sy","setScrollSpeed","setInterval","scroll","clearInterval","brokenClipboardAPI","textFilter","doPaste","input","byLine","lastLinewiseCopy","lastLine","rangeForClick","categorize","linePos","groupAt","visual","touchstart","touchmove","mousedown","makeStyle","queryPos","startSel","removed","startRange","removeRangeAround","basicMouseSelection","mustFocus","MouseSelection","mouseSel","findPositionSide","BadMouseDetail","lastMouseDown","lastMouseDownCount","lastMouseDownTime","detail","lastTime","dropText","direct","dropPos","del","dragMovesSelection","dragstart","draggable","setData","effectAllowed","dragend","drop","finishFile","getData","paste","clipboardData","capturePaste","cut","linewise","copiedRange","clearData","selectionEnd","selectionStart","captureCopy","isFocusChange","focusChangeTransaction","getEffect","updateForFocusChange","clearSelectionRange","compositionstart","compositionupdate","compositionend","pendingRecords","flushSoon","contextmenu","beforeinput","getTargetRanges","posAtDOM","endContainer","endOffset","startViewHeight","wrappingWhiteSpace","heightChangeFlag","clearHeightChangeFlag","HeightOracle$1","heightSamples","heightForGap","ceil","heightForLine","setDoc","mustRefreshForWrapping","whiteSpace","mustRefreshForHeights","lineHeights","newHeight","refresh","knownHeights","MeasuredHeights$1","heights","more","BlockInfo$1","BlockInfo","_content","widgetLineBreaks","QueryType","Epsilon","HeightMap$1","HeightMap","outdated","setHeight","decomposeLeft","decomposeRight","applyChanges","oldDoc","oracle","ByPosNoHeight","NodeBuilder","updateHeight","HeightMapText","break","brk","HeightMapBranch","old","_height","_oracle","_value","_type","forEachLine","_force","measured","HeightMapBlock","collapsed","widgetHeight","breaks","HeightMapGap","heightMetrics","perLine","firstLine","perChar","totalPerLine","guess","lineTop","ByHeight","linesAbove","unshift","singleHeight","rightTop","rightOffset","subQuery","ByPos","rightStart","balanced","mergeGaps","rebalance","around","NodeBuilder$1","lineEnd","covering","writtenTo","isCovered","addBlock","enterLine","blankContent","gap","ensureLine","DecorationComparator$2","visiblePixelRange","overflow","parentRect","offsetParent","fullPixelRange","LineGap$1","displaySize","same","gA","gB","draw","wrapping","LineGapWidget","vertical","ViewState$1","pixelViewport","inView","paddingBottom","contentDOMWidth","contentDOMHeight","editorHeight","editorWidth","scrolledToBottom","scrollAnchorPos","scrollAnchorHeight","scaler","IdScaler","scrollTarget","printing","defaultTextDirection","visibleRanges","mustEnforceCursorAssoc","guessWrapping","HeightOracle","stateDeco","heightMap","getViewport","updateForViewport","updateViewportLines","lineGaps","ensureLineGaps","computeVisibleRanges","Viewport","updateScaler","BigScaler","viewportLines","scaleBlock","prevDeco","contentChanges","heightChanges","DecorationComparator","heightRelevantDecoChanges","prevHeight","scrollAnchor","scrollAnchorAt","mapViewport","viewportIsAppropriate","viewportChange","updateLineGaps","mapLineGaps","domRect","measureContent","dTop","dBottom","inWindow","MeasuredHeights","visibleTop","fromDOM","visibleBottom","marginTop","topPos","viewHeight","LineGap","mayMeasure","halfMargin","doubleMargin","addGap","structure","avoid","moveToLineBoundary","gapSize","checkLine","lineStructure","viewFrom","viewTo","bot","marginHeight","targetFrac","findFraction","spaceFrac","findPosition","marginWidth","horizOffset","pxLeft","pxRight","fraction","nw","lineBlockAtHeight","Viewport$1","ratio","counted","scale","BigScaler$1","vpHeight","domBase","domTop","domBottom","obj","bTop","bBottom","theme","strs","darkTheme","baseThemeID","baseLightID","baseDarkID","lightDarkIDs","buildTheme","scopes","baseTheme$1","boxSizing","outline","flexDirection","alignItems","fontFamily","overflowX","zIndex","overflowAnchor","flexGrow","flexShrink","wordWrap","minHeight","padding","WebkitUserModify","whiteSpace_fallback","wordBreak","overflowWrap","caretColor","contain","background","pointerEvents","animation","opacity","borderLeft","marginLeft","borderLeftColor","unicodeBidi","backgroundColor","color","insetInlineStart","insetInlineEnd","border","borderRightWidth","borderLeftWidth","textAlign","borderBottom","borderTop","fontSize","font","verticalAlign","userSelect","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","borderRadius","observeOptions","characterData","subtree","characterDataOldValue","useCharData","DOMObserver$1","DOMSelectionState","selectionChanged","delayedFlush","resizeTimeout","queue","delayedAndroidKey","flushingAndroidKey","lastChange","scrollTargets","intersection","resizeScroll","intersecting","gapIntersection","printQuery","parentCheck","MutationObserver","mutations","mut","removedNodes","EditContext","EDIT_CONTEXT","EditContextManager","onCharData","prevValue","onSelectionChange","onResize","onPrint","onScroll","matchMedia","ResizeObserver","observe","addWindowListeners","IntersectionObserver","listenForScroll","intersectionRatio","onScrollChanged","createEvent","threshold","requestMeasure","measureReq","matches","g","disconnect","wasChanged","getComposedRanges","buildSelectionRangeFromRange","stopImmediatePropagation","execCommand","safariSelectionRangeHack","atElementStart","processRecords","clearDelayedAndroidKey","requestAnimationFrame","cancelAnimationFrame","takeRecords","records","readMutation","readChange","readSelection","handled","rec","childBefore","findChild","childAfter","setWindow","removeWindowListeners","addListener","removeListener","curView","curAnchor","pendingContextChange","resetRange","toContextPos","textupdate","toEditorPos","updateRangeStart","updateRangeEnd","contextBase","editorBase","drifted","revertPending","setSelection","characterboundsupdate","rangeStart","rangeEnd","DOMRect","updateCharacterBounds","textformatupdate","getTextFormats","lineStyle","underlineStyle","thickness","underlineThickness","reset","updateControlBounds","updateSelectionBounds","applyEdits","abort","_fromB","updateText","reverted","rangeIsValid","contextPos","clipLen","editorPos","EditorView$1","EditorView","compositionStarted","_root","pluginMap","editorAttrs","contentAttrs","bidiCache","destroyed","measureScheduled","measureRequests","announceDOM","dispatchTransactions","trs","getRoot","ViewState","scrollTo","PluginInstance","DOMObserver","InputState","DocView","mountStyles","fonts","ready","redrawn","attrsChanged","focusFlag","dispatchFocus","pendingKey","setState","CachedOrder","updatePlugins","styleModules","showAnnouncements","docViewUpdate","listener","newState","hadFocus","prevSpecs","newPlugins","sDOM","warn","measuring","BadMeasure","themeClasses","attrsFromFacet","spellcheck","autocorrect","autocapitalize","writingsuggestions","translate","contenteditable","role","changedContent","changedEditor","announce","cspNonce","readMeasured","documentTop","documentPadding","viewportLineBlocks","moveByGroup","initial","nextCat","byGroup","includeWrap","coordsAtPos","editorRect","moveVertically","distance","startPos","startY","goal","startCoords","resolvedGoal","extra","curY","charRect","MaxBidiLine","fresh","computeOrder","setRoot","scrollSnapshot","setTabFocusMode","prefix","dark","baseTheme","findFromDOM","querySelector","CachedOrder$1","cache","lastDir","sources","currentPlatform","modifiers","handleKeyEvents","currentKeyEvent","isChar","prevented","storedPrefix","baseName","shiftName","ran","runFor","binding","cmd","scopeObj","_any","bindings","keymap","Keymaps","bound","isPrefix","checkPrefix","command","alt","ctrl","meta","normalizeKeyName","ourObj","PrefixTimeout","full","any","buildKeymap","getKeymap","WeakMap","RectangleMarker","adjust","forRange","getBase","lineElt","leftSide","paddingLeft","textIndent","rightSide","paddingRight","startBlock","endBlock","visualStart","visualEnd","wrappedLine","pieces","drawForLine","drawForWidget","horizontal","addSpan","fromOpen","toOpen","fromCoords","toCoords","endPos","docLine","spanFrom","spanTo","rectanglesForRange","LayerView","drawn","setOrder","layerOrder","updateOnDocViewUpdate","markers","transform","oldI","marker","selectionConfig","cursorBlinkRate","drawRangeCursor","drawSelection","cursorLayer","selectionLayer","hideNativeSelection","configChanged","cursors","prim","animationName","confChange","setBlinkRate","animationDuration","lineDeco","activeLineHighlighter","getDeco","lastLineStart","Outside","TooltipViewManager","createTooltipView","removeTooltipView","tooltips","tooltipViews","newAbove","tip","tooltipView","windowSpace","docElt","tooltipConfig","tooltipSpace","knownHeight","tooltipPlugin","madeAbsolute","lastTransaction","measureTimeout","createContainer","readMeasure","writeMeasure","resizeObserver","measureSoon","manager","createTooltip","unobserve","intersectionObserver","observeIntersection","maybeMeasure","container","shouldMeasure","newConfig","arrow","makeAbsolute","visible","tv","getCoords","space","others","tView","arrowHeight","noOffset","strictSide","spaceVert","resize","overlap","setLeftStyle","arrowLeft","toggle","positioned","isNaN","borderRight","borderTopColor","borderBottomColor","getTooltip","GutterMarker","elementClass","gutterLineClass","gutterWidgetClass","activeGutters","unfixGutters","gutterView","domAfter","prevViewport","gutters","SingleGutterView","fixed","gutter","getDOMAfter","syncGutters","updateGutters","vpA","vpB","vpOverlap","detach","lineClasses","classSet","contexts","UpdateContext","advanceCursor","cx","collect","addElement","elements","newElt","GutterElement","extraMarkers","localMarkers","forLine","lineMarker","renderEmptyElements","widgetMarker","spacer","initialSpacer","prevMarkers","updateSpacer","lineMarkerChange","sameMarkers","setMarkers","domPos","iNew","iOld","skipTo","matched","lineNumberMarkers","lineNumberWidgetMarker","lineNumberConfig","formatNumber","assign","NumberMarker","lineNumberGutter","maxLineNumber","lineNumbers","activeLineGutterMarker","activeLineGutterHighlighter","DefaultBufferLength","nextPropID","Range$1","NodeProp","perNode","deserialize","NodeType","closedBy","openedBy","group","isolate","contextHash","lookAhead","mounted","MountedTree","tree","overlay","parser","noProps","src","isTop","isSkipped","isError","isAnonymous","groups","NodeSet","newTypes","newProps","CachedNode","CachedInnerNode","IterMode","Tree","positions","TreeCursor","topNode","cursorAt","moveTo","_tree","TreeNode","resolveNode","resolveInner","resolveStack","layers","iterStack","stackIterator","iterate","enter","leave","anon","IncludeAnonymous","entered","propValues","balance","balanceRange","makeTree","buffer","nodeSet","maxBufferLength","reused","minRepeatType","FlatBufferCursor","takeNode","parentStart","minPos","inRepeat","depth","lookAheadAtStart","contextAtStart","findBufferSize","Uint16Array","copyToBuffer","TreeBuffer","localChildren","localPositions","localInRepeat","lastGroup","lastEnd","makeRepeatLeaf","takeFlatNode","make","makeBalanced","nodeCount","stopAt","lookAheadProp","lastI","pair","maxSize","fork","minStart","nodeSize","localSkipped","nodeStart","bufferStart","topID","buildTree","childString","endIndex","pick","checkSide","startI","endI","overlays","IgnoreOverlays","BaseNode","getChild","getChildren","matchContext","matchNodeContext","enterUnfinishedNodesBefore","prevSibling","_parent","nextChild","ExcludeBuffers","BufferNode","BufferContext","hasChild","IgnoreMounts","rPos","nextSignificantParent","toTree","externalSibling","heads","picked","newHeads","StackIterator","bufferNode","yieldNode","yieldBuf","yield","enterChild","sibling","atLastNode","mustLeave","nodeSizeCache","balanceType","mkTop","mkTree","maxChild","divide","groupFrom","groupStart","groupSize","nextSize","TreeFragment","addTree","fragments","partial","minGap","fI","nextF","cI","nextC","nextPos","fFrom","fTo","Parser","startParse","StringInput","createParse","advance","lineChunks","nextTagID","Tag","nameOrParent","defineModifier","Modifier","nextModifierID","instances","powerSet","styleTags","byName","tags","rest","rule","Rule","ruleNodeProp","opaque","inherit","tagHighlighter","tagClass","highlightTree","highlighter","putStyle","HighlightBuilder","highlightRange","highlighters","startSpan","inheritedClass","getStyleTags","tagCls","highlightTags","innerHighlighters","comment","typeName","propertyName","literal","heading","keyword","operator","punctuation","bracket","lineComment","blockComment","docComment","variableName","attributeName","labelName","macroName","docString","character","attributeValue","integer","float","bool","regexp","escape","self","null","atom","unit","modifier","operatorKeyword","controlKeyword","definitionKeyword","moduleKeyword","derefOperator","arithmeticOperator","logicOperator","bitwiseOperator","compareOperator","updateOperator","definitionOperator","typeOperator","controlOperator","separator","angleBracket","squareBracket","paren","brace","heading1","heading2","heading3","heading4","heading5","heading6","contentSeparator","quote","emphasis","strong","monospace","strikethrough","deleted","documentMeta","processingInstruction","definition","constant","function","standard","special","languageDataProp","sublanguageProp","Language","extraExtensions","defineProperty","syntaxTree","language","topNodeAt","innerNode","sublang","isActiveAt","findRegions","lang","allowsNesting","explore","topLang","DocInput","cursorPos","syncTo","stringStart","currentContext","ParseContext","treeLen","scheduleOn","tempSkipped","work","until","isDone","takeTree","withContext","endTime","stoppedAt","withoutTempSkipped","parsedPos","cutFragments","updateViewport","startLen","skipUntilInView","getSkippingParser","frags","LanguageState","newCx","vpTo","parseState","requestIdle","callback","timeout","requestIdleCallback","idle","cancelIdleCallback","isInputPending","scheduling","parseWorker","working","workScheduled","chunkBudget","scheduleWork","checkAsyncSchedule","deadline","timeRemaining","viewportFirst","isWorking","languages","indentUnit","getIndentUnit","indentNodeProp","HighlightStyle","modSpec","def","scopeOpt","module","themeType","highlighterFacet","fallbackHighlighter","getHighlighters","syntaxHighlighting","treeHighlighter","TreeHighlighter","markCache","buildDeco","decoratedTo","styleChange","decoratedToMapped","defaultHighlightStyle","textDecoration","fontWeight","fontStyle","countCol","startValue","StringStream","overrideIndent","lastColumnPos","lastColumnValue","eol","sol","peek","charAt","eat","eatWhile","eatSpace","skipToEnd","backUp","indentation","pattern","consume","caseInsensitive","cased","substr","defaultCopyState","IndentedFrom","StreamLanguage","baseData","blankLine","copyState","indent","tokenTable","noTokens","mergeTokens","Parse","typeArray","getIndent","docID","streamParser","stateAfter","TokenTable","defaultTokenTable","overrideIndentation","statePos","findState","stream","readToken","cutTree","chunkReused","editorState","findStartInFragments","moveRangeIndex","parseEnd","parseLine","lineAfter","nextLine","skipGapsTo","offPos","emitToken","len0","warned","byTag","defaultTable","legacyName","createTokenType","table","warnForPart","msg","tagStr","tags$1","name2","CompletionContext","explicit","abortListeners","abortOnDocChange","tokenBefore","matchBefore","expr","ensureAnchor","aborted","onDocChange","toSet","chars","words","completeFromList","o","validFor","prefixMatch","Option","completion","score","addStart","addEnd","ignoreCase","pickedCompletion","insertCompletionText","SourceCache","asSource","startCompletionEffect","closeCompletionEffect","FuzzyMatcher","folded","byWord","upper","astral","ret","word","firstSize","anyTo","preciseTo","byWordTo","byWordFolded","adjacentTo","adjacentStart","adjacentEnd","hasLower","wordAdjacent","StrictMatcher","completionConfig","activateOnTyping","activateOnCompletion","activateOnTypingDelay","selectOnOpen","override","closeOnBlur","maxRenderedOptions","defaultKeymap","tooltipClass","optionClass","aboveCursor","icons","addToOptions","positionInfo","defaultPositionInfo","filterStrict","compareCompletions","interactionDelay","updateSyncTime","joinClass","option","maxWidth","rtl","narrow","spaceLeft","spaceRight","infoWidth","infoHeight","spaceBelow","rangeAroundSelected","selected","CompletionTooltip","stateField","applyCompletion","infoDestroy","placeInfoReq","measureInfo","placeInfo","currentClass","cState","optionContent","_s","_v","labelElt","displayLabel","detailElt","updateTooltipClass","relatedTarget","showOptions","updateSel","createListBox","prevState","updateSelectedOption","destroyInfo","infoResult","addInfoPane","wrap","opt","hasAttribute","listRect","infoRect","selRect","ul","curSection","section","header","li","completionTooltip","boost","CompletionDialog","setSelected","makeAttrs","didSetActive","isPending","setDisabled","addOption","hasResult","getMatch","matcher","sectionOrder","cmp","sortOptions","selectedValue","CompletionState","ActiveSource","didSet","setActiveEffect","sameResults","setSelectedEffect","baseAttrs","getUpdateType","typing","touches","updateFor","ActiveResult","checkValid","completionState","moveCompletionSelection","startCompletion","RunningQuery","updates","completionPlugin","debounceUpdate","running","debounceAccept","pendingStart","startQuery","doesReset","delay","q","startUpdate","scheduleAccept","dialog","commitCharacters","commitChars","maxWidth_fallback","maxHeight","listStyle","textOverflow","brackets","stringPrefixes","closeBracketEffect","closedBracket","bracketState","definedClosing","closing","tokens","tok","closed","handleSame","handleOpen","closedBracketAt","handleClose","insertBracket","nextChar","closeBefore","dont","_open","allowTriple","canStartStringAt","quoteToken","prefixes","maxPrefix","quotePos","probablyInString","charCat","autocompletion","completionKeymapExt","completionKeymap","fromHistory","isolateHistory","invertedEffects","historyConfig","minDepth","newGroupDelay","joinToEvent","_t","isAdjacent","adj","historyField_","HistoryState","fromHist","item","HistEvent","fromTransaction","undone","updateBranch","addSelection","addMapping","addChanges","undo","redo","historyState","undoSelection","redoSelection","startSelection","selectionsAfter","setSelAfter","selections","branch","maxLen","newEvent","newBranch","conc","MaxSelectionsPerEvent","sels","popSelection","addMappingToBranch","mapEvent","extraSelections","mappedChanges","fullMapping","joinableUserEvent","prevTime","prevUserEvent","_f","onlySelection","historyKeymap","trackExtra","Rect0","dirty","editorView","_pos","_side","customView","CompositionView","topView","scanCompositionTree","posFromDOMInCompositionTree","enterView","fromText","hasComp","imgRect","siblingRect","nextRect","inlineSiblingRect","_other","indexForward","compositionDeco","surrounding","compositionSurroundingNode","CompositionWidget","computeCompositionDeco","mayControlSelection","rapidCompositionStart","nearbyTextNode","cursorBidiLevel","mLeft","mRight","mTop","mBottom","isSuspiciousCaretResult","chromeScrollHack","lastEscPress","registeredEvents","customHandlers","mustFlushObserver","runCustomHandlers","runScrollHandlers","dragMove","lastTouch","insideY","forceClearComposition","rapid","updateLines","outside","cutRange","visibility","shadowRoot","deepActiveElement","_dispatch","oldViewport","scrolled","lineView","commands","fallthrough","panelConfig","topContainer","bottomContainer","getPanel","panel","panelPlugin","panels","showPanel","PanelGroup","syncClasses","scrollMargin","syncDOM","curDOM","rm","basicNormalize","normalize","SearchCursor","bufferPos","nextOverlapping","norm","keep","baseFlags","unicode","RegExpCursor","MultilineRegExpCursor","startLine","curLineStart","matchPos","lastIndex","flattened","FlattenedDoc","cached","cachedFrom","createLineDialog","go","sign","ln","cl","percent","pc","dialogEffect","onkeydown","onsubmit","dialogField","searchConfigFacet","caseSensitive","createPanel","SearchPanel","SearchQuery","valid","validRegExp","unquoted","RegExpQuery","StringQuery","getCursor","regexpCursor","stringCursor","nextMatch","prevMatchInRange","prevMatch","getReplacement","_result","matchAll","highlight","setSearchQuery","togglePanel","searchState","SearchState","defaultQuery","createSearchPanel","matchMark","selectedMatchMark","searchHighlighter","searchCommand","openSearchPanel","findNext","announceMatch","findPrevious","selectMatches","replaceNext","replacement","replaceAll","fallback","selText","searchExtensions","closeSearchPanel","searchKeymap","selectWord","searchedText","fullWord","cycled","findNextOccurrence","onclick","commit","searchField","onchange","onkeyup","replaceField","caseField","checked","reField","setQuery","AnnounceMargin","Break","marginRight","editorContainer","envLanguage","vaultSecrets","placeholderCompletions","secretsByVault","vaultPart","keyPart","matchText","customTheme","outlineOffset","highlightStyle","modelValue","newValue","insertText","updateSecrets","editorRef","saving","validating","originalContent","templateData","placeholders","validationErrors","validationStatus","validationMessage","secretsForEditor","isModified","saveTemplate","validateTemplate","warnings","unusedCount","w","formatContent","formatted","lastWasEmpty","trimmed","startsWith","valueParts","vaultsResponse","loadTemplate","regex","updatePlaceholders","newRef","TemplateCodeEditor","hasRun","validationResult","unusedSecrets","placeholderCount","otherStages","runValidation","resetTest","processing","hasProcessed","missingStrategy","processedCount","output","count","skippedCount","processTemplate","validation","resetProcess","copyOutput","downloadOutput","errorCount","showCreateModal","showEditModal","showTestModal","showProcessModal","selectedTemplate","templateToDelete","deleteTemplateModal","loadTemplates","confirmDeleteTemplate","handleTemplateCreated","handleTemplateSaved","formatSize","bytes","log","pow","minutes","hours","days","stageDisplay","lastModified","editTemplate","testTemplate","deleteTemplate","CreateTemplateModal","onCreated","TemplateEditorModal","onSaved","TemplateTesterModal","TemplateProcessorModal","routes","redirect","component","SecretsTable","TemplatesView","DiffView","SettingsView","router","createRouter","createWebHashHistory","createApp","App","use"],"mappings":"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","x_google_ignoreList":[24,25,26,27,28,29,30,31,32,33,34,35,36,37]}